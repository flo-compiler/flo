; ModuleID = 'main.flo'
source_filename = "main.flo"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%string_vtable_ty.560218 = type { %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, i64)*, i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)*, i64 (%string.560217*, %string.560217*, i64)*, i1 (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, i64, i64)*, i8 (%string.560217*, i64)*, i8* (%string.560217*)*, %string.560217* (%string.560217*, %string.560217*, %string.560217*)*, i8* (%string.560217*)*, i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)* }
%string.560217 = type { %string_vtable_ty.560218*, i8*, i64, i64 }
%StringBuilder_vtable_ty.560220 = type { void (%StringBuilder.560219*)*, void (%StringBuilder.560219*, i8*, i64)*, void (%StringBuilder.560219*, %string.560217*)*, void (%StringBuilder.560219*, i8)*, %string.560217* (%StringBuilder.560219*)* }
%StringBuilder.560219 = type { %StringBuilder_vtable_ty.560220*, i8*, i64, i8*, i64 }
%Range_vtable_ty.560222 = type { i1 (%Range.560221*, i64)* }
%Range.560221 = type { %Range_vtable_ty.560222*, i64, i64 }
%FloRange_vtable_ty.560224 = type {}
%FloError_vtable_ty.560226 = type {}
%File_vtable_ty.560228 = type { %string.560217* (%File.560227*)*, void (%File.560227*)* }
%File.560227 = type { %File_vtable_ty.560228*, i64 }
%Path_vtable_ty.560230 = type {}
%FileId_vtable_ty.560232 = type {}
%FloFile_vtable_ty.560234 = type {}
%"Array<FloFile>_vtable_ty.560240" = type { void (%"Array<FloFile>.560237"*)*, void (%"Array<FloFile>.560237"*, i64, i64)*, void (%"Array<FloFile>.560237"*, %FloFile.560233*)*, void (%"Array<FloFile>.560237"*, i64, %FloFile.560233*)*, void (%"Array<FloFile>.560237"*, %FloFile.560233*)*, %FloFile.560233* (%"Array<FloFile>.560237"*, i64)*, i1 (%"Array<FloFile>.560237"*, %"Array<FloFile>.560237"*)*, i1 (%"Array<FloFile>.560237"*, %FloFile.560233*)*, i64 (%"Array<FloFile>.560237"*, %FloFile.560233*)* }
%"Array<FloFile>.560237" = type { %"Array<FloFile>_vtable_ty.560240"*, %FloFile.560233**, i64, i64 }
%FloFile.560233 = type { %FloFile_vtable_ty.560234*, %string.560217*, %string.560217* }
%"Array<FloError>_vtable_ty.560241" = type { void (%"Array<FloError>.560238"*)*, void (%"Array<FloError>.560238"*, i64, i64)*, void (%"Array<FloError>.560238"*, %FloError.560225*)*, void (%"Array<FloError>.560238"*, i64, %FloError.560225*)*, void (%"Array<FloError>.560238"*, %FloError.560225*)*, %FloError.560225* (%"Array<FloError>.560238"*, i64)*, i1 (%"Array<FloError>.560238"*, %"Array<FloError>.560238"*)*, i1 (%"Array<FloError>.560238"*, %FloError.560225*)*, i64 (%"Array<FloError>.560238"*, %FloError.560225*)* }
%"Array<FloError>.560238" = type { %"Array<FloError>_vtable_ty.560241"*, %FloError.560225**, i64, i64 }
%FloError.560225 = type { %FloError_vtable_ty.560226*, i64, %string.560217*, %FloRange.560223* }
%FloRange.560223 = type { %FloRange_vtable_ty.560224*, i64, i64, i64, i64 }
%"Bucket<string, FileId>_vtable_ty.560244" = type { void (%"Bucket<string, FileId>.560243"*, %string.560217*, %FileId.560231*)* }
%"Bucket<string, FileId>.560243" = type { %"Bucket<string, FileId>_vtable_ty.560244"*, %string.560217*, %FileId.560231*, i1 }
%FileId.560231 = type { %FileId_vtable_ty.560232*, i64 }
%"Array<Bucket<string, FileId>>_vtable_ty.560246" = type { void (%"Array<Bucket<string, FileId>>.560245"*)*, void (%"Array<Bucket<string, FileId>>.560245"*, i64, i64)*, void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)*, void (%"Array<Bucket<string, FileId>>.560245"*, i64, %"Bucket<string, FileId>.560243"*)*, void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)*, %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)*, i1 (%"Array<Bucket<string, FileId>>.560245"*, %"Array<Bucket<string, FileId>>.560245"*)*, i1 (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)*, i64 (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)* }
%"Array<Bucket<string, FileId>>.560245" = type { %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Bucket<string, FileId>.560243"**, i64, i64 }
%"Map<string, FileId>_vtable_ty.560242" = type { i64 (%"Map<string, FileId>.560239"*, %string.560217*)*, void (%"Map<string, FileId>.560239"*)*, void (%"Map<string, FileId>.560239"*, %string.560217*, %FileId.560231*)*, %FileId.560231* (%"Map<string, FileId>.560239"*, %string.560217*)*, %"Array<Bucket<string, FileId>>.560245"* (%"Map<string, FileId>.560239"*)* }
%"Map<string, FileId>.560239" = type { %"Map<string, FileId>_vtable_ty.560242"*, %"Bucket<string, FileId>.560243"**, i64, i64 }
%Compiler_vtable_ty.560236 = type { void (%Compiler.560235*, %string.560217*)*, %string.560217* (%Compiler.560235*, %string.560217*)*, %FileId.560231* (%Compiler.560235*, %string.560217*)*, i1 (%Compiler.560235*, %FileId.560231*)*, i1 (%Compiler.560235*)*, %FileId.560231* (%Compiler.560235*)* }
%Compiler.560235 = type { %Compiler_vtable_ty.560236*, %FileId.560231*, %string.560217*, %string.560217*, %string.560217*, %"Array<FloFile>.560237"*, %"Array<FloError>.560238"*, %"Map<string, FileId>.560239"* }
%Token_vtable_ty.560248 = type {}
%IntToken_vtable_ty.560250 = type {}
%FloatToken_vtable_ty.560252 = type {}
%CharToken_vtable_ty.560254 = type {}
%"Array<int>_vtable_ty.560262" = type { void (%"Array<int>.560257"*)*, void (%"Array<int>.560257"*, i64, i64)*, void (%"Array<int>.560257"*, i64)*, void (%"Array<int>.560257"*, i64, i64)*, void (%"Array<int>.560257"*, i64)*, i64 (%"Array<int>.560257"*, i64)*, i1 (%"Array<int>.560257"*, %"Array<int>.560257"*)*, i1 (%"Array<int>.560257"*, i64)*, i64 (%"Array<int>.560257"*, i64)* }
%"Array<int>.560257" = type { %"Array<int>_vtable_ty.560262"*, i64*, i64, i64 }
%"Array<Token>_vtable_ty.560260" = type { void (%"Array<Token>.560259"*)*, void (%"Array<Token>.560259"*, i64, i64)*, void (%"Array<Token>.560259"*, %Token.560247*)*, void (%"Array<Token>.560259"*, i64, %Token.560247*)*, void (%"Array<Token>.560259"*, %Token.560247*)*, %Token.560247* (%"Array<Token>.560259"*, i64)*, i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)*, i1 (%"Array<Token>.560259"*, %Token.560247*)*, i64 (%"Array<Token>.560259"*, %Token.560247*)* }
%"Array<Token>.560259" = type { %"Array<Token>_vtable_ty.560260"*, %Token.560247**, i64, i64 }
%Token.560247 = type { %Token_vtable_ty.560248*, i64, %FloRange.560223* }
%"Array<Array<Token>>_vtable_ty.560261" = type { void (%"Array<Array<Token>>.560258"*)*, void (%"Array<Array<Token>>.560258"*, i64, i64)*, void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)*, void (%"Array<Array<Token>>.560258"*, i64, %"Array<Token>.560259"*)*, void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)*, %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)*, i1 (%"Array<Array<Token>>.560258"*, %"Array<Array<Token>>.560258"*)*, i1 (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)*, i64 (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)* }
%"Array<Array<Token>>.560258" = type { %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Token>.560259"**, i64, i64 }
%StrToken_vtable_ty.560256 = type {}
%IdentifierToken_vtable_ty.560264 = type {}
%Lexer_vtable_ty.560266 = type { i1 (%Lexer.560265*)*, i8 (%Lexer.560265*, i64)*, void (%Lexer.560265*)*, %FloRange.560223* (%Lexer.560265*, i64)*, %Token.560247* (%Lexer.560265*)*, i1 (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %IntToken.560249* (%Lexer.560265*, i64)*, %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %StrToken.560255* (%Lexer.560265*)*, %CharToken.560253* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)*, %"Array<Token>.560259"* (%Lexer.560265*, %string.560217*, %"Array<FloError>.560238"*)* }
%Lexer.560265 = type { %Lexer_vtable_ty.560266*, i8, %string.560217*, %"Array<FloError>.560238"*, i64, i64, i64 }
%IntToken.560249 = type { %IntToken_vtable_ty.560250*, i64, %FloRange.560223*, i64 }
%StrToken.560255 = type { %StrToken_vtable_ty.560256*, i64, %FloRange.560223*, %string.560217*, %"Array<int>.560257"*, %"Array<Array<Token>>.560258"* }
%CharToken.560253 = type { %CharToken_vtable_ty.560254*, i64, %FloRange.560223*, i8 }
%Node_vtable_ty.560268 = type {}
%TypeNode_vtable_ty.560270 = type {}
%"Array<TypeNode>_vtable_ty.560274" = type { void (%"Array<TypeNode>.560273"*)*, void (%"Array<TypeNode>.560273"*, i64, i64)*, void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)*, void (%"Array<TypeNode>.560273"*, i64, %TypeNode.560269*)*, void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)*, %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)*, i1 (%"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"*)*, i1 (%"Array<TypeNode>.560273"*, %TypeNode.560269*)*, i64 (%"Array<TypeNode>.560273"*, %TypeNode.560269*)* }
%"Array<TypeNode>.560273" = type { %"Array<TypeNode>_vtable_ty.560274"*, %TypeNode.560269**, i64, i64 }
%TypeNode.560269 = type { %TypeNode_vtable_ty.560270*, %FloRange.560223*, i64 }
%RecordTypeNode_vtable_ty.560272 = type {}
%FunctionTypeNode_vtable_ty.560276 = type {}
%PointerTypeNode_vtable_ty.560278 = type {}
%StatementNode_vtable_ty.560280 = type {}
%"Array<StatementNode>_vtable_ty.560284" = type { void (%"Array<StatementNode>.560283"*)*, void (%"Array<StatementNode>.560283"*, i64, i64)*, void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)*, void (%"Array<StatementNode>.560283"*, i64, %StatementNode.560279*)*, void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)*, %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)*, i1 (%"Array<StatementNode>.560283"*, %"Array<StatementNode>.560283"*)*, i1 (%"Array<StatementNode>.560283"*, %StatementNode.560279*)*, i64 (%"Array<StatementNode>.560283"*, %StatementNode.560279*)* }
%"Array<StatementNode>.560283" = type { %"Array<StatementNode>_vtable_ty.560284"*, %StatementNode.560279**, i64, i64 }
%StatementNode.560279 = type { %StatementNode_vtable_ty.560280*, %FloRange.560223*, i64 }
%BlockNode_vtable_ty.560282 = type {}
%ExpressionNode_vtable_ty.560286 = type {}
%ArrayTypeNode_vtable_ty.560288 = type {}
%IntExpressionNode_vtable_ty.560290 = type {}
%FloatExpressionNode_vtable_ty.560292 = type {}
%CharExpressionNode_vtable_ty.560294 = type {}
%"Array<ExpressionNode>_vtable_ty.560298" = type { void (%"Array<ExpressionNode>.560297"*)*, void (%"Array<ExpressionNode>.560297"*, i64, i64)*, void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)*, void (%"Array<ExpressionNode>.560297"*, i64, %ExpressionNode.560285*)*, void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, i1 (%"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"*)*, i1 (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)*, i64 (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)* }
%"Array<ExpressionNode>.560297" = type { %"Array<ExpressionNode>_vtable_ty.560298"*, %ExpressionNode.560285**, i64, i64 }
%ExpressionNode.560285 = type { %ExpressionNode_vtable_ty.560286*, %FloRange.560223*, i64, i64 }
%StringExpressionNode_vtable_ty.560296 = type {}
%VarAccessExpressionNode_vtable_ty.560300 = type {}
%ArrayExpressionNode_vtable_ty.560302 = type {}
%NewExpressionNode_vtable_ty.560304 = type {}
%ExpressionIndexNode_vtable_ty.560306 = type {}
%MemberExpressionNode_vtable_ty.560308 = type {}
%CallExpressionNode_vtable_ty.560310 = type {}
%TypeCastExpressionNode_vtable_ty.560312 = type {}
%BinaryExpressionNode_vtable_ty.560314 = type {}
%TernaryExpressionNode_vtable_ty.560316 = type {}
%UnaryExpressionNode_vtable_ty.560318 = type {}
%IfStatementNode_vtable_ty.560320 = type {}
%WhileStatementNode_vtable_ty.560322 = type {}
%ForStatementNode_vtable_ty.560324 = type {}
%ReturnStatementNode_vtable_ty.560326 = type {}
%VarDeclarationStatement_vtable_ty.560328 = type {}
%ConstDeclarationStatement_vtable_ty.560330 = type {}
%ArgNode_vtable_ty.560332 = type {}
%"Array<ArgNode>_vtable_ty.560336" = type { void (%"Array<ArgNode>.560335"*)*, void (%"Array<ArgNode>.560335"*, i64, i64)*, void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)*, void (%"Array<ArgNode>.560335"*, i64, %ArgNode.560331*)*, void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)*, %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)*, i1 (%"Array<ArgNode>.560335"*, %"Array<ArgNode>.560335"*)*, i1 (%"Array<ArgNode>.560335"*, %ArgNode.560331*)*, i64 (%"Array<ArgNode>.560335"*, %ArgNode.560331*)* }
%"Array<ArgNode>.560335" = type { %"Array<ArgNode>_vtable_ty.560336"*, %ArgNode.560331**, i64, i64 }
%ArgNode.560331 = type { %ArgNode_vtable_ty.560332*, %IdentifierToken.560263*, %TypeNode.560269*, %ExpressionNode.560285* }
%IdentifierToken.560263 = type { %IdentifierToken_vtable_ty.560264*, i64, %FloRange.560223*, %string.560217* }
%FunctionDeclarationNode_vtable_ty.560334 = type {}
%MethodNode_vtable_ty.560338 = type {}
%FieldNode_vtable_ty.560340 = type {}
%GenericParameterNode_vtable_ty.560342 = type {}
%"Array<GenericParameterNode>_vtable_ty.560348" = type { void (%"Array<GenericParameterNode>.560345"*)*, void (%"Array<GenericParameterNode>.560345"*, i64, i64)*, void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)*, void (%"Array<GenericParameterNode>.560345"*, i64, %GenericParameterNode.560341*)*, void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)*, %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)*, i1 (%"Array<GenericParameterNode>.560345"*, %"Array<GenericParameterNode>.560345"*)*, i1 (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)*, i64 (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)* }
%"Array<GenericParameterNode>.560345" = type { %"Array<GenericParameterNode>_vtable_ty.560348"*, %GenericParameterNode.560341**, i64, i64 }
%GenericParameterNode.560341 = type { %GenericParameterNode_vtable_ty.560342*, %IdentifierToken.560263* }
%"Array<FieldNode>_vtable_ty.560349" = type { void (%"Array<FieldNode>.560346"*)*, void (%"Array<FieldNode>.560346"*, i64, i64)*, void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)*, void (%"Array<FieldNode>.560346"*, i64, %FieldNode.560339*)*, void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)*, %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)*, i1 (%"Array<FieldNode>.560346"*, %"Array<FieldNode>.560346"*)*, i1 (%"Array<FieldNode>.560346"*, %FieldNode.560339*)*, i64 (%"Array<FieldNode>.560346"*, %FieldNode.560339*)* }
%"Array<FieldNode>.560346" = type { %"Array<FieldNode>_vtable_ty.560349"*, %FieldNode.560339**, i64, i64 }
%FieldNode.560339 = type { %FieldNode_vtable_ty.560340*, %IdentifierToken.560263*, i64, %ExpressionNode.560285*, %TypeNode.560269* }
%"Array<MethodNode>_vtable_ty.560350" = type { void (%"Array<MethodNode>.560347"*)*, void (%"Array<MethodNode>.560347"*, i64, i64)*, void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)*, void (%"Array<MethodNode>.560347"*, i64, %MethodNode.560337*)*, void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)*, %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)*, i1 (%"Array<MethodNode>.560347"*, %"Array<MethodNode>.560347"*)*, i1 (%"Array<MethodNode>.560347"*, %MethodNode.560337*)*, i64 (%"Array<MethodNode>.560347"*, %MethodNode.560337*)* }
%"Array<MethodNode>.560347" = type { %"Array<MethodNode>_vtable_ty.560350"*, %MethodNode.560337**, i64, i64 }
%MethodNode.560337 = type { %MethodNode_vtable_ty.560338*, %IdentifierToken.560263*, %"Array<ArgNode>.560335"*, %BlockNode.560281*, i64, %TypeNode.560269*, i1, i1 }
%BlockNode.560281 = type { %BlockNode_vtable_ty.560282*, %FloRange.560223*, %"Array<StatementNode>.560283"* }
%ClassDeclarationNode_vtable_ty.560344 = type {}
%EnumNodeField_vtable_ty.560352 = type {}
%"Array<EnumNodeField>_vtable_ty.560356" = type { void (%"Array<EnumNodeField>.560355"*)*, void (%"Array<EnumNodeField>.560355"*, i64, i64)*, void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)*, void (%"Array<EnumNodeField>.560355"*, i64, %EnumNodeField.560351*)*, void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)*, %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)*, i1 (%"Array<EnumNodeField>.560355"*, %"Array<EnumNodeField>.560355"*)*, i1 (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)*, i64 (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)* }
%"Array<EnumNodeField>.560355" = type { %"Array<EnumNodeField>_vtable_ty.560356"*, %EnumNodeField.560351**, i64, i64 }
%EnumNodeField.560351 = type { %EnumNodeField_vtable_ty.560352*, %IdentifierToken.560263*, %ExpressionNode.560285* }
%EnumNode_vtable_ty.560354 = type {}
%"Array<IdentifierToken>_vtable_ty.560360" = type { void (%"Array<IdentifierToken>.560359"*)*, void (%"Array<IdentifierToken>.560359"*, i64, i64)*, void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)*, void (%"Array<IdentifierToken>.560359"*, i64, %IdentifierToken.560263*)*, void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)*, %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)*, i1 (%"Array<IdentifierToken>.560359"*, %"Array<IdentifierToken>.560359"*)*, i1 (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)*, i64 (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)* }
%"Array<IdentifierToken>.560359" = type { %"Array<IdentifierToken>_vtable_ty.560360"*, %IdentifierToken.560263**, i64, i64 }
%ImportNode_vtable_ty.560358 = type {}
%TypeAliasNode_vtable_ty.560362 = type {}
%"Array<FunctionDeclarationNode>_vtable_ty.560372" = type { void (%"Array<FunctionDeclarationNode>.560365"*)*, void (%"Array<FunctionDeclarationNode>.560365"*, i64, i64)*, void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)*, void (%"Array<FunctionDeclarationNode>.560365"*, i64, %FunctionDeclarationNode.560333*)*, void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)*, %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)*, i1 (%"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"*)*, i1 (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)*, i64 (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)* }
%"Array<FunctionDeclarationNode>.560365" = type { %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %FunctionDeclarationNode.560333**, i64, i64 }
%FunctionDeclarationNode.560333 = type { %FunctionDeclarationNode_vtable_ty.560334*, %IdentifierToken.560263*, %"Array<ArgNode>.560335"*, %BlockNode.560281*, %TypeNode.560269*, i1 }
%"Array<ClassDeclarationNode>_vtable_ty.560373" = type { void (%"Array<ClassDeclarationNode>.560366"*)*, void (%"Array<ClassDeclarationNode>.560366"*, i64, i64)*, void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)*, void (%"Array<ClassDeclarationNode>.560366"*, i64, %ClassDeclarationNode.560343*)*, void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)*, %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)*, i1 (%"Array<ClassDeclarationNode>.560366"*, %"Array<ClassDeclarationNode>.560366"*)*, i1 (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)*, i64 (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)* }
%"Array<ClassDeclarationNode>.560366" = type { %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %ClassDeclarationNode.560343**, i64, i64 }
%ClassDeclarationNode.560343 = type { %ClassDeclarationNode_vtable_ty.560344*, %IdentifierToken.560263*, %"Array<GenericParameterNode>.560345"*, %RecordTypeNode.560271*, %"Array<FieldNode>.560346"*, %"Array<MethodNode>.560347"* }
%RecordTypeNode.560271 = type { %RecordTypeNode_vtable_ty.560272*, %FloRange.560223*, i64, %IdentifierToken.560263*, %"Array<TypeNode>.560273"* }
%"Array<EnumNode>_vtable_ty.560374" = type { void (%"Array<EnumNode>.560367"*)*, void (%"Array<EnumNode>.560367"*, i64, i64)*, void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)*, void (%"Array<EnumNode>.560367"*, i64, %EnumNode.560353*)*, void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)*, %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)*, i1 (%"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"*)*, i1 (%"Array<EnumNode>.560367"*, %EnumNode.560353*)*, i64 (%"Array<EnumNode>.560367"*, %EnumNode.560353*)* }
%"Array<EnumNode>.560367" = type { %"Array<EnumNode>_vtable_ty.560374"*, %EnumNode.560353**, i64, i64 }
%EnumNode.560353 = type { %EnumNode_vtable_ty.560354*, %IdentifierToken.560263*, %"Array<EnumNodeField>.560355"*, %TypeNode.560269* }
%"Array<ImportNode>_vtable_ty.560375" = type { void (%"Array<ImportNode>.560368"*)*, void (%"Array<ImportNode>.560368"*, i64, i64)*, void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)*, void (%"Array<ImportNode>.560368"*, i64, %ImportNode.560357*)*, void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)*, %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)*, i1 (%"Array<ImportNode>.560368"*, %"Array<ImportNode>.560368"*)*, i1 (%"Array<ImportNode>.560368"*, %ImportNode.560357*)*, i64 (%"Array<ImportNode>.560368"*, %ImportNode.560357*)* }
%"Array<ImportNode>.560368" = type { %"Array<ImportNode>_vtable_ty.560375"*, %ImportNode.560357**, i64, i64 }
%ImportNode.560357 = type { %ImportNode_vtable_ty.560358*, %"Array<IdentifierToken>.560359"*, %StrToken.560255* }
%"Array<ConstDeclarationStatement>_vtable_ty.560376" = type { void (%"Array<ConstDeclarationStatement>.560369"*)*, void (%"Array<ConstDeclarationStatement>.560369"*, i64, i64)*, void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)*, void (%"Array<ConstDeclarationStatement>.560369"*, i64, %ConstDeclarationStatement.560329*)*, void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)*, %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)*, i1 (%"Array<ConstDeclarationStatement>.560369"*, %"Array<ConstDeclarationStatement>.560369"*)*, i1 (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)*, i64 (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)* }
%"Array<ConstDeclarationStatement>.560369" = type { %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %ConstDeclarationStatement.560329**, i64, i64 }
%ConstDeclarationStatement.560329 = type { %ConstDeclarationStatement_vtable_ty.560330*, %FloRange.560223*, i64, %IdentifierToken.560263*, %TypeNode.560269*, %ExpressionNode.560285* }
%"Array<VarDeclarationStatement>_vtable_ty.560377" = type { void (%"Array<VarDeclarationStatement>.560370"*)*, void (%"Array<VarDeclarationStatement>.560370"*, i64, i64)*, void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)*, void (%"Array<VarDeclarationStatement>.560370"*, i64, %VarDeclarationStatement.560327*)*, void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)*, %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)*, i1 (%"Array<VarDeclarationStatement>.560370"*, %"Array<VarDeclarationStatement>.560370"*)*, i1 (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)*, i64 (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)* }
%"Array<VarDeclarationStatement>.560370" = type { %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %VarDeclarationStatement.560327**, i64, i64 }
%VarDeclarationStatement.560327 = type { %VarDeclarationStatement_vtable_ty.560328*, %FloRange.560223*, i64, %IdentifierToken.560263*, %TypeNode.560269*, %ExpressionNode.560285* }
%"Array<TypeAliasNode>_vtable_ty.560378" = type { void (%"Array<TypeAliasNode>.560371"*)*, void (%"Array<TypeAliasNode>.560371"*, i64, i64)*, void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)*, void (%"Array<TypeAliasNode>.560371"*, i64, %TypeAliasNode.560361*)*, void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)*, %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)*, i1 (%"Array<TypeAliasNode>.560371"*, %"Array<TypeAliasNode>.560371"*)*, i1 (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)*, i64 (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)* }
%"Array<TypeAliasNode>.560371" = type { %"Array<TypeAliasNode>_vtable_ty.560378"*, %TypeAliasNode.560361**, i64, i64 }
%TypeAliasNode.560361 = type { %TypeAliasNode_vtable_ty.560362*, %IdentifierToken.560263*, %TypeNode.560269* }
%ModuleAST_vtable_ty.560364 = type {}
%Parser_vtable_ty.560380 = type { i1 (%Parser.560379*)*, void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*)*, %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)*, void (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)*, void (%Parser.560379*, %"Array<TypeNode>.560273"*)*, %RecordTypeNode.560271* (%Parser.560379*)*, %FunctionTypeNode.560275* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)*, void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)*, %ArrayExpressionNode.560301* (%Parser.560379*)*, %NewExpressionNode.560303* (%Parser.560379*)*, %StringExpressionNode.560295* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionIndexNode.560305* (%Parser.560379*, %ExpressionNode.560285*)*, %CallExpressionNode.560309* (%Parser.560379*, %ExpressionNode.560285*)*, %MemberExpressionNode.560307* (%Parser.560379*, %ExpressionNode.560285*)*, %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, i64 (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, i64 (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, i64 (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, i64 (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, i64 (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, i64 (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, i64 (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)*, %IfStatementNode.560319* (%Parser.560379*)*, %WhileStatementNode.560321* (%Parser.560379*)*, %ForStatementNode.560323* (%Parser.560379*)*, %VarDeclarationStatement.560327* (%Parser.560379*)*, %ReturnStatementNode.560325* (%Parser.560379*)*, %StatementNode.560279* (%Parser.560379*)*, %BlockNode.560281* (%Parser.560379*)*, %TypeAliasNode.560361* (%Parser.560379*)*, %ArgNode.560331* (%Parser.560379*)*, void (%Parser.560379*, %"Array<ArgNode>.560335"*)*, %FunctionDeclarationNode.560333* (%Parser.560379*)*, %MethodNode.560337* (%Parser.560379*)*, i64 (%Parser.560379*)*, void (%Parser.560379*, %ClassDeclarationNode.560343*)*, void (%Parser.560379*, %"Array<GenericParameterNode>.560345"*)*, %ClassDeclarationNode.560343* (%Parser.560379*)*, %ConstDeclarationStatement.560329* (%Parser.560379*)*, %ImportNode.560357* (%Parser.560379*)*, %EnumNode.560353* (%Parser.560379*)*, %ModuleAST.560363* (%Parser.560379*, %"Array<Token>.560259"*, %"Array<FloError>.560238"*)* }
%Parser.560379 = type { %Parser_vtable_ty.560380*, %"Array<Token>.560259"*, %"Array<FloError>.560238"*, %Token.560247*, i64 }
%FunctionTypeNode.560275 = type { %FunctionTypeNode_vtable_ty.560276*, %FloRange.560223*, i64, %"Array<TypeNode>.560273"*, %TypeNode.560269* }
%ArrayExpressionNode.560301 = type { %ArrayExpressionNode_vtable_ty.560302*, %FloRange.560223*, i64, i64, %"Array<ExpressionNode>.560297"* }
%NewExpressionNode.560303 = type { %NewExpressionNode_vtable_ty.560304*, %FloRange.560223*, i64, i64, %TypeNode.560269*, i1, %"Array<ExpressionNode>.560297"* }
%StringExpressionNode.560295 = type { %StringExpressionNode_vtable_ty.560296*, %FloRange.560223*, i64, i64, %StrToken.560255*, %"Array<ExpressionNode>.560297"* }
%ExpressionIndexNode.560305 = type { %ExpressionIndexNode_vtable_ty.560306*, %FloRange.560223*, i64, i64, %ExpressionNode.560285*, %ExpressionNode.560285* }
%CallExpressionNode.560309 = type { %CallExpressionNode_vtable_ty.560310*, %FloRange.560223*, i64, i64, %ExpressionNode.560285*, %"Array<ExpressionNode>.560297"* }
%MemberExpressionNode.560307 = type { %MemberExpressionNode_vtable_ty.560308*, %FloRange.560223*, i64, i64, %ExpressionNode.560285*, %IdentifierToken.560263* }
%IfStatementNode.560319 = type { %IfStatementNode_vtable_ty.560320*, %FloRange.560223*, i64, %ExpressionNode.560285*, %BlockNode.560281*, %BlockNode.560281* }
%WhileStatementNode.560321 = type { %WhileStatementNode_vtable_ty.560322*, %FloRange.560223*, i64, %ExpressionNode.560285*, %BlockNode.560281* }
%ForStatementNode.560323 = type { %ForStatementNode_vtable_ty.560324*, %FloRange.560223*, i64, %StatementNode.560279*, %ExpressionNode.560285*, %ExpressionNode.560285*, %ExpressionNode.560285*, i64, %IdentifierToken.560263*, %BlockNode.560281* }
%ReturnStatementNode.560325 = type { %ReturnStatementNode_vtable_ty.560326*, %FloRange.560223*, i64, %ExpressionNode.560285* }
%ModuleAST.560363 = type { %ModuleAST_vtable_ty.560364*, %"Array<FunctionDeclarationNode>.560365"*, %"Array<ClassDeclarationNode>.560366"*, %"Array<EnumNode>.560367"*, %"Array<ImportNode>.560368"*, %"Array<ConstDeclarationStatement>.560369"*, %"Array<VarDeclarationStatement>.560370"*, %"Array<TypeAliasNode>.560371"* }
%Type_vtable_ty.560382 = type {}
%BooleanType_vtable_ty.560384 = type {}
%PointerType_vtable_ty.560386 = type {}
%"Array<Type>_vtable_ty.560390" = type { void (%"Array<Type>.560389"*)*, void (%"Array<Type>.560389"*, i64, i64)*, void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, i64, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)*, %Type.560381* (%"Array<Type>.560389"*, i64)*, i1 (%"Array<Type>.560389"*, %"Array<Type>.560389"*)*, i1 (%"Array<Type>.560389"*, %Type.560381*)*, i64 (%"Array<Type>.560389"*, %Type.560381*)* }
%"Array<Type>.560389" = type { %"Array<Type>_vtable_ty.560390"*, %Type.560381**, i64, i64 }
%Type.560381 = type { %Type_vtable_ty.560382*, i64 }
%FunctionType_vtable_ty.560388 = type {}
%Value_vtable_ty.560392 = type {}
%Statement_vtable_ty.560394 = type {}
%TypeId_vtable_ty.560396 = type {}
%ClassId_vtable_ty.560398 = type {}
%EnumId_vtable_ty.560400 = type {}
%Expression_vtable_ty.560402 = type {}
%ArrayType_vtable_ty.560404 = type {}
%GenericType_vtable_ty.560406 = type {}
%ObjectType_vtable_ty.560408 = type {}
%EnumType_vtable_ty.560410 = type {}
%IntExpression_vtable_ty.560412 = type {}
%BooleanExpression_vtable_ty.560414 = type {}
%FloatExpression_vtable_ty.560416 = type {}
%"Array<Expression>_vtable_ty.560420" = type { void (%"Array<Expression>.560419"*)*, void (%"Array<Expression>.560419"*, i64, i64)*, void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, i64, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)*, i1 (%"Array<Expression>.560419"*, %"Array<Expression>.560419"*)*, i1 (%"Array<Expression>.560419"*, %Expression.560401*)*, i64 (%"Array<Expression>.560419"*, %Expression.560401*)* }
%"Array<Expression>.560419" = type { %"Array<Expression>_vtable_ty.560420"*, %Expression.560401**, i64, i64 }
%Expression.560401 = type { %Expression_vtable_ty.560402*, i64, i1, i64, %Type.560381* }
%StringExpression_vtable_ty.560418 = type {}
%NullExpression_vtable_ty.560422 = type {}
%ArrayExpression_vtable_ty.560424 = type {}
%BinaryExpression_vtable_ty.560426 = type {}
%UnaryExpression_vtable_ty.560428 = type {}
%TernaryExpression_vtable_ty.560430 = type {}
%TypeCastExpression_vtable_ty.560432 = type {}
%NewExpression_vtable_ty.560434 = type {}
%IndexExpression_vtable_ty.560436 = type {}
%CallExpression_vtable_ty.560438 = type {}
%IntrinsicCall_vtable_ty.560440 = type {}
%VarId_vtable_ty.560442 = type {}
%ClassVarId_vtable_ty.560444 = type { %ClassId.560397* (%ClassVarId.560443*)* }
%ClassId.560397 = type { %ClassId_vtable_ty.560398*, i64, i64, i64 }
%ClassVarId.560443 = type { %ClassVarId_vtable_ty.560444*, i64, i64, i64 }
%EnumVarId_vtable_ty.560446 = type { %EnumId.560399* (%EnumVarId.560445*)* }
%EnumId.560399 = type { %EnumId_vtable_ty.560400*, i64, i64, i64 }
%EnumVarId.560445 = type { %EnumVarId_vtable_ty.560446*, i64, i64, i64 }
%ConstId_vtable_ty.560448 = type {}
%PropId_vtable_ty.560450 = type {}
%MemberExpression_vtable_ty.560452 = type {}
%VarAccessExpression_vtable_ty.560454 = type {}
%"Array<Statement>_vtable_ty.560458" = type { void (%"Array<Statement>.560457"*)*, void (%"Array<Statement>.560457"*, i64, i64)*, void (%"Array<Statement>.560457"*, %Statement.560393*)*, void (%"Array<Statement>.560457"*, i64, %Statement.560393*)*, void (%"Array<Statement>.560457"*, %Statement.560393*)*, %Statement.560393* (%"Array<Statement>.560457"*, i64)*, i1 (%"Array<Statement>.560457"*, %"Array<Statement>.560457"*)*, i1 (%"Array<Statement>.560457"*, %Statement.560393*)*, i64 (%"Array<Statement>.560457"*, %Statement.560393*)* }
%"Array<Statement>.560457" = type { %"Array<Statement>_vtable_ty.560458"*, %Statement.560393**, i64, i64 }
%Statement.560393 = type { %Statement_vtable_ty.560394*, i64 }
%Block_vtable_ty.560456 = type {}
%IfStatement_vtable_ty.560460 = type {}
%VarDeclaration_vtable_ty.560462 = type {}
%ConstDeclaration_vtable_ty.560464 = type {}
%ForStatement_vtable_ty.560466 = type {}
%WhileStatement_vtable_ty.560468 = type {}
%ReturnStatement_vtable_ty.560470 = type {}
%ScopeId_vtable_ty.560472 = type {}
%"Bucket<string, VarId>_vtable_ty.560481" = type { void (%"Bucket<string, VarId>.560480"*, %string.560217*, %VarId.560441*)* }
%"Bucket<string, VarId>.560480" = type { %"Bucket<string, VarId>_vtable_ty.560481"*, %string.560217*, %VarId.560441*, i1 }
%VarId.560441 = type { %VarId_vtable_ty.560442*, i64, i64, i64 }
%"Array<Bucket<string, VarId>>_vtable_ty.560483" = type { void (%"Array<Bucket<string, VarId>>.560482"*)*, void (%"Array<Bucket<string, VarId>>.560482"*, i64, i64)*, void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)*, void (%"Array<Bucket<string, VarId>>.560482"*, i64, %"Bucket<string, VarId>.560480"*)*, void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)*, %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)*, i1 (%"Array<Bucket<string, VarId>>.560482"*, %"Array<Bucket<string, VarId>>.560482"*)*, i1 (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)*, i64 (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)* }
%"Array<Bucket<string, VarId>>.560482" = type { %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Bucket<string, VarId>.560480"**, i64, i64 }
%"Map<string, VarId>_vtable_ty.560479" = type { i64 (%"Map<string, VarId>.560475"*, %string.560217*)*, void (%"Map<string, VarId>.560475"*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %"Array<Bucket<string, VarId>>.560482"* (%"Map<string, VarId>.560475"*)* }
%"Map<string, VarId>.560475" = type { %"Map<string, VarId>_vtable_ty.560479"*, %"Bucket<string, VarId>.560480"**, i64, i64 }
%"Bucket<string, ClassId>_vtable_ty.560486" = type { void (%"Bucket<string, ClassId>.560485"*, %string.560217*, %ClassId.560397*)* }
%"Bucket<string, ClassId>.560485" = type { %"Bucket<string, ClassId>_vtable_ty.560486"*, %string.560217*, %ClassId.560397*, i1 }
%"Array<Bucket<string, ClassId>>_vtable_ty.560488" = type { void (%"Array<Bucket<string, ClassId>>.560487"*)*, void (%"Array<Bucket<string, ClassId>>.560487"*, i64, i64)*, void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)*, void (%"Array<Bucket<string, ClassId>>.560487"*, i64, %"Bucket<string, ClassId>.560485"*)*, void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)*, %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)*, i1 (%"Array<Bucket<string, ClassId>>.560487"*, %"Array<Bucket<string, ClassId>>.560487"*)*, i1 (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)*, i64 (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)* }
%"Array<Bucket<string, ClassId>>.560487" = type { %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Bucket<string, ClassId>.560485"**, i64, i64 }
%"Map<string, ClassId>_vtable_ty.560484" = type { i64 (%"Map<string, ClassId>.560476"*, %string.560217*)*, void (%"Map<string, ClassId>.560476"*)*, void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)*, %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)*, %"Array<Bucket<string, ClassId>>.560487"* (%"Map<string, ClassId>.560476"*)* }
%"Map<string, ClassId>.560476" = type { %"Map<string, ClassId>_vtable_ty.560484"*, %"Bucket<string, ClassId>.560485"**, i64, i64 }
%"Bucket<string, EnumId>_vtable_ty.560491" = type { void (%"Bucket<string, EnumId>.560490"*, %string.560217*, %EnumId.560399*)* }
%"Bucket<string, EnumId>.560490" = type { %"Bucket<string, EnumId>_vtable_ty.560491"*, %string.560217*, %EnumId.560399*, i1 }
%"Array<Bucket<string, EnumId>>_vtable_ty.560493" = type { void (%"Array<Bucket<string, EnumId>>.560492"*)*, void (%"Array<Bucket<string, EnumId>>.560492"*, i64, i64)*, void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)*, void (%"Array<Bucket<string, EnumId>>.560492"*, i64, %"Bucket<string, EnumId>.560490"*)*, void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)*, %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)*, i1 (%"Array<Bucket<string, EnumId>>.560492"*, %"Array<Bucket<string, EnumId>>.560492"*)*, i1 (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)*, i64 (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)* }
%"Array<Bucket<string, EnumId>>.560492" = type { %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Bucket<string, EnumId>.560490"**, i64, i64 }
%"Map<string, EnumId>_vtable_ty.560489" = type { i64 (%"Map<string, EnumId>.560477"*, %string.560217*)*, void (%"Map<string, EnumId>.560477"*)*, void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)*, %EnumId.560399* (%"Map<string, EnumId>.560477"*, %string.560217*)*, %"Array<Bucket<string, EnumId>>.560492"* (%"Map<string, EnumId>.560477"*)* }
%"Map<string, EnumId>.560477" = type { %"Map<string, EnumId>_vtable_ty.560489"*, %"Bucket<string, EnumId>.560490"**, i64, i64 }
%"Bucket<string, Type>_vtable_ty.560496" = type { void (%"Bucket<string, Type>.560495"*, %string.560217*, %Type.560381*)* }
%"Bucket<string, Type>.560495" = type { %"Bucket<string, Type>_vtable_ty.560496"*, %string.560217*, %Type.560381*, i1 }
%"Array<Bucket<string, Type>>_vtable_ty.560498" = type { void (%"Array<Bucket<string, Type>>.560497"*)*, void (%"Array<Bucket<string, Type>>.560497"*, i64, i64)*, void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)*, void (%"Array<Bucket<string, Type>>.560497"*, i64, %"Bucket<string, Type>.560495"*)*, void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)*, %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)*, i1 (%"Array<Bucket<string, Type>>.560497"*, %"Array<Bucket<string, Type>>.560497"*)*, i1 (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)*, i64 (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)* }
%"Array<Bucket<string, Type>>.560497" = type { %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Bucket<string, Type>.560495"**, i64, i64 }
%"Map<string, Type>_vtable_ty.560494" = type { i64 (%"Map<string, Type>.560478"*, %string.560217*)*, void (%"Map<string, Type>.560478"*)*, void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)*, %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)*, %"Array<Bucket<string, Type>>.560497"* (%"Map<string, Type>.560478"*)* }
%"Map<string, Type>.560478" = type { %"Map<string, Type>_vtable_ty.560494"*, %"Bucket<string, Type>.560495"**, i64, i64 }
%Scope_vtable_ty.560474 = type {}
%FunctionArg_vtable_ty.560500 = type {}
%"Array<FunctionArg>_vtable_ty.560504" = type { void (%"Array<FunctionArg>.560503"*)*, void (%"Array<FunctionArg>.560503"*, i64, i64)*, void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)*, void (%"Array<FunctionArg>.560503"*, i64, %FunctionArg.560499*)*, void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)*, %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)*, i1 (%"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"*)*, i1 (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)*, i64 (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)* }
%"Array<FunctionArg>.560503" = type { %"Array<FunctionArg>_vtable_ty.560504"*, %FunctionArg.560499**, i64, i64 }
%FunctionArg.560499 = type { %FunctionArg_vtable_ty.560500*, i64, i1, i64, %Type.560381*, %VarId.560441*, %string.560217*, %Expression.560401* }
%Function_vtable_ty.560502 = type {}
%Var_vtable_ty.560506 = type {}
%Const_vtable_ty.560508 = type {}
%ClassField_vtable_ty.560510 = type {}
%ClassMethod_vtable_ty.560512 = type {}
%"Array<ClassField>_vtable_ty.560518" = type { void (%"Array<ClassField>.560515"*)*, void (%"Array<ClassField>.560515"*, i64, i64)*, void (%"Array<ClassField>.560515"*, %ClassField.560509*)*, void (%"Array<ClassField>.560515"*, i64, %ClassField.560509*)*, void (%"Array<ClassField>.560515"*, %ClassField.560509*)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, i1 (%"Array<ClassField>.560515"*, %"Array<ClassField>.560515"*)*, i1 (%"Array<ClassField>.560515"*, %ClassField.560509*)*, i64 (%"Array<ClassField>.560515"*, %ClassField.560509*)* }
%"Array<ClassField>.560515" = type { %"Array<ClassField>_vtable_ty.560518"*, %ClassField.560509**, i64, i64 }
%ClassField.560509 = type { %ClassField_vtable_ty.560510*, %PropId.560449*, i1, i64, %string.560217*, %Type.560381*, %Expression.560401*, i64 }
%PropId.560449 = type { %PropId_vtable_ty.560450*, i64, %TypeId.560395*, i64 }
%TypeId.560395 = type { %TypeId_vtable_ty.560396*, i64, i64, i64 }
%"Array<ClassMethod>_vtable_ty.560519" = type { void (%"Array<ClassMethod>.560516"*)*, void (%"Array<ClassMethod>.560516"*, i64, i64)*, void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)*, void (%"Array<ClassMethod>.560516"*, i64, %ClassMethod.560511*)*, void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, i1 (%"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"*)*, i1 (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)*, i64 (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)* }
%"Array<ClassMethod>.560516" = type { %"Array<ClassMethod>_vtable_ty.560519"*, %ClassMethod.560511**, i64, i64 }
%ClassMethod.560511 = type { %ClassMethod_vtable_ty.560512*, %PropId.560449*, i1, i64, %string.560217*, %FunctionType.560387*, %Block.560455*, %"Array<FunctionArg>.560503"*, i1, %ScopeId.560471*, i64 }
%FunctionType.560387 = type { %FunctionType_vtable_ty.560388*, i64, %"Array<Type>.560389"*, %Type.560381*, i1 }
%Block.560455 = type { %Block_vtable_ty.560456*, %"Array<Statement>.560457"*, i1, i1, i1 }
%ScopeId.560471 = type { %ScopeId_vtable_ty.560472*, i64, i64 }
%"Bucket<string, PropId>_vtable_ty.560522" = type { void (%"Bucket<string, PropId>.560521"*, %string.560217*, %PropId.560449*)* }
%"Bucket<string, PropId>.560521" = type { %"Bucket<string, PropId>_vtable_ty.560522"*, %string.560217*, %PropId.560449*, i1 }
%"Array<Bucket<string, PropId>>_vtable_ty.560524" = type { void (%"Array<Bucket<string, PropId>>.560523"*)*, void (%"Array<Bucket<string, PropId>>.560523"*, i64, i64)*, void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)*, void (%"Array<Bucket<string, PropId>>.560523"*, i64, %"Bucket<string, PropId>.560521"*)*, void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, i1 (%"Array<Bucket<string, PropId>>.560523"*, %"Array<Bucket<string, PropId>>.560523"*)*, i1 (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)*, i64 (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)* }
%"Array<Bucket<string, PropId>>.560523" = type { %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Bucket<string, PropId>.560521"**, i64, i64 }
%"Map<string, PropId>_vtable_ty.560520" = type { i64 (%"Map<string, PropId>.560517"*, %string.560217*)*, void (%"Map<string, PropId>.560517"*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)* }
%"Map<string, PropId>.560517" = type { %"Map<string, PropId>_vtable_ty.560520"*, %"Bucket<string, PropId>.560521"**, i64, i64 }
%Class_vtable_ty.560514 = type {}
%EnumField_vtable_ty.560526 = type {}
%"Array<EnumField>_vtable_ty.560530" = type { void (%"Array<EnumField>.560529"*)*, void (%"Array<EnumField>.560529"*, i64, i64)*, void (%"Array<EnumField>.560529"*, %EnumField.560525*)*, void (%"Array<EnumField>.560529"*, i64, %EnumField.560525*)*, void (%"Array<EnumField>.560529"*, %EnumField.560525*)*, %EnumField.560525* (%"Array<EnumField>.560529"*, i64)*, i1 (%"Array<EnumField>.560529"*, %"Array<EnumField>.560529"*)*, i1 (%"Array<EnumField>.560529"*, %EnumField.560525*)*, i64 (%"Array<EnumField>.560529"*, %EnumField.560525*)* }
%"Array<EnumField>.560529" = type { %"Array<EnumField>_vtable_ty.560530"*, %EnumField.560525**, i64, i64 }
%EnumField.560525 = type { %EnumField_vtable_ty.560526*, %PropId.560449*, %string.560217*, %Expression.560401* }
%Enum_vtable_ty.560528 = type {}
%"Array<Var>_vtable_ty.560541" = type { void (%"Array<Var>.560533"*)*, void (%"Array<Var>.560533"*, i64, i64)*, void (%"Array<Var>.560533"*, %Var.560505*)*, void (%"Array<Var>.560533"*, i64, %Var.560505*)*, void (%"Array<Var>.560533"*, %Var.560505*)*, %Var.560505* (%"Array<Var>.560533"*, i64)*, i1 (%"Array<Var>.560533"*, %"Array<Var>.560533"*)*, i1 (%"Array<Var>.560533"*, %Var.560505*)*, i64 (%"Array<Var>.560533"*, %Var.560505*)* }
%"Array<Var>.560533" = type { %"Array<Var>_vtable_ty.560541"*, %Var.560505**, i64, i64 }
%Var.560505 = type { %Var_vtable_ty.560506*, %Type.560381*, %VarId.560441*, %Expression.560401* }
%"Array<Const>_vtable_ty.560542" = type { void (%"Array<Const>.560534"*)*, void (%"Array<Const>.560534"*, i64, i64)*, void (%"Array<Const>.560534"*, %Const.560507*)*, void (%"Array<Const>.560534"*, i64, %Const.560507*)*, void (%"Array<Const>.560534"*, %Const.560507*)*, %Const.560507* (%"Array<Const>.560534"*, i64)*, i1 (%"Array<Const>.560534"*, %"Array<Const>.560534"*)*, i1 (%"Array<Const>.560534"*, %Const.560507*)*, i64 (%"Array<Const>.560534"*, %Const.560507*)* }
%"Array<Const>.560534" = type { %"Array<Const>_vtable_ty.560542"*, %Const.560507**, i64, i64 }
%Const.560507 = type { %Const_vtable_ty.560508*, %Type.560381*, %ConstId.560447*, %Expression.560401* }
%ConstId.560447 = type { %ConstId_vtable_ty.560448*, i64, i64, i64 }
%"Array<Class>_vtable_ty.560543" = type { void (%"Array<Class>.560535"*)*, void (%"Array<Class>.560535"*, i64, i64)*, void (%"Array<Class>.560535"*, %Class.560513*)*, void (%"Array<Class>.560535"*, i64, %Class.560513*)*, void (%"Array<Class>.560535"*, %Class.560513*)*, %Class.560513* (%"Array<Class>.560535"*, i64)*, i1 (%"Array<Class>.560535"*, %"Array<Class>.560535"*)*, i1 (%"Array<Class>.560535"*, %Class.560513*)*, i64 (%"Array<Class>.560535"*, %Class.560513*)* }
%"Array<Class>.560535" = type { %"Array<Class>_vtable_ty.560543"*, %Class.560513**, i64, i64 }
%Class.560513 = type { %Class_vtable_ty.560514*, %ClassId.560397*, %string.560217*, %Type.560381*, %PropId.560449*, %"Array<ClassField>.560515"*, %"Array<ClassMethod>.560516"*, %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"*, i64, i64, i1 }
%"Array<Function>_vtable_ty.560544" = type { void (%"Array<Function>.560536"*)*, void (%"Array<Function>.560536"*, i64, i64)*, void (%"Array<Function>.560536"*, %Function.560501*)*, void (%"Array<Function>.560536"*, i64, %Function.560501*)*, void (%"Array<Function>.560536"*, %Function.560501*)*, %Function.560501* (%"Array<Function>.560536"*, i64)*, i1 (%"Array<Function>.560536"*, %"Array<Function>.560536"*)*, i1 (%"Array<Function>.560536"*, %Function.560501*)*, i64 (%"Array<Function>.560536"*, %Function.560501*)* }
%"Array<Function>.560536" = type { %"Array<Function>_vtable_ty.560544"*, %Function.560501**, i64, i64 }
%Function.560501 = type { %Function_vtable_ty.560502*, %VarId.560441*, %string.560217*, %"Array<FunctionArg>.560503"*, %Block.560455*, %FunctionType.560387*, %ScopeId.560471*, i1 }
%"Array<Enum>_vtable_ty.560545" = type { void (%"Array<Enum>.560537"*)*, void (%"Array<Enum>.560537"*, i64, i64)*, void (%"Array<Enum>.560537"*, %Enum.560527*)*, void (%"Array<Enum>.560537"*, i64, %Enum.560527*)*, void (%"Array<Enum>.560537"*, %Enum.560527*)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)*, i1 (%"Array<Enum>.560537"*, %"Array<Enum>.560537"*)*, i1 (%"Array<Enum>.560537"*, %Enum.560527*)*, i64 (%"Array<Enum>.560537"*, %Enum.560527*)* }
%"Array<Enum>.560537" = type { %"Array<Enum>_vtable_ty.560545"*, %Enum.560527**, i64, i64 }
%Enum.560527 = type { %Enum_vtable_ty.560528*, %EnumId.560399*, %string.560217*, %"Array<EnumField>.560529"*, %"Map<string, PropId>.560517"* }
%"Array<Scope>_vtable_ty.560546" = type { void (%"Array<Scope>.560538"*)*, void (%"Array<Scope>.560538"*, i64, i64)*, void (%"Array<Scope>.560538"*, %Scope.560473*)*, void (%"Array<Scope>.560538"*, i64, %Scope.560473*)*, void (%"Array<Scope>.560538"*, %Scope.560473*)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)*, i1 (%"Array<Scope>.560538"*, %"Array<Scope>.560538"*)*, i1 (%"Array<Scope>.560538"*, %Scope.560473*)*, i64 (%"Array<Scope>.560538"*, %Scope.560473*)* }
%"Array<Scope>.560538" = type { %"Array<Scope>_vtable_ty.560546"*, %Scope.560473**, i64, i64 }
%Scope.560473 = type { %Scope_vtable_ty.560474*, %ScopeId.560471*, %"Map<string, VarId>.560475"*, %"Map<string, ClassId>.560476"*, %"Map<string, VarId>.560475"*, %"Map<string, EnumId>.560477"*, %ScopeId.560471*, %"Map<string, Type>.560478"* }
%"Array<ConstDeclaration>_vtable_ty.560547" = type { void (%"Array<ConstDeclaration>.560539"*)*, void (%"Array<ConstDeclaration>.560539"*, i64, i64)*, void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)*, void (%"Array<ConstDeclaration>.560539"*, i64, %ConstDeclaration.560463*)*, void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)*, %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)*, i1 (%"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"*)*, i1 (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)*, i64 (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)* }
%"Array<ConstDeclaration>.560539" = type { %"Array<ConstDeclaration>_vtable_ty.560547"*, %ConstDeclaration.560463**, i64, i64 }
%ConstDeclaration.560463 = type { %ConstDeclaration_vtable_ty.560464*, i64, %string.560217*, %ConstId.560447*, i1 }
%"Array<VarDeclaration>_vtable_ty.560548" = type { void (%"Array<VarDeclaration>.560540"*)*, void (%"Array<VarDeclaration>.560540"*, i64, i64)*, void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)*, void (%"Array<VarDeclaration>.560540"*, i64, %VarDeclaration.560461*)*, void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)*, %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)*, i1 (%"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"*)*, i1 (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)*, i64 (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)* }
%"Array<VarDeclaration>.560540" = type { %"Array<VarDeclaration>_vtable_ty.560548"*, %VarDeclaration.560461**, i64, i64 }
%VarDeclaration.560461 = type { %VarDeclaration_vtable_ty.560462*, i64, %string.560217*, %VarId.560441*, i1 }
%Module_vtable_ty.560532 = type {}
%"Array<Module>_vtable_ty.560552" = type { void (%"Array<Module>.560551"*)*, void (%"Array<Module>.560551"*, i64, i64)*, void (%"Array<Module>.560551"*, %Module.560531*)*, void (%"Array<Module>.560551"*, i64, %Module.560531*)*, void (%"Array<Module>.560551"*, %Module.560531*)*, %Module.560531* (%"Array<Module>.560551"*, i64)*, i1 (%"Array<Module>.560551"*, %"Array<Module>.560551"*)*, i1 (%"Array<Module>.560551"*, %Module.560531*)*, i64 (%"Array<Module>.560551"*, %Module.560531*)* }
%"Array<Module>.560551" = type { %"Array<Module>_vtable_ty.560552"*, %Module.560531**, i64, i64 }
%Module.560531 = type { %Module_vtable_ty.560532*, i64, %string.560217*, %"Array<Var>.560533"*, %"Array<Const>.560534"*, %"Array<Class>.560535"*, %"Array<Function>.560536"*, %"Array<Enum>.560537"*, %"Array<Scope>.560538"*, %"Array<ConstDeclaration>.560539"*, %"Array<VarDeclaration>.560540"* }
%Program_vtable_ty.560550 = type {}
%Generic_vtable_ty.560554 = type {}
%"Bucket<string, Generic>_vtable_ty.560560" = type { void (%"Bucket<string, Generic>.560559"*, %string.560217*, %Generic.560553*)* }
%"Bucket<string, Generic>.560559" = type { %"Bucket<string, Generic>_vtable_ty.560560"*, %string.560217*, %Generic.560553*, i1 }
%Generic.560553 = type { %Generic_vtable_ty.560554*, i64, %ClassDeclarationNode.560343* }
%"Array<Bucket<string, Generic>>_vtable_ty.560562" = type { void (%"Array<Bucket<string, Generic>>.560561"*)*, void (%"Array<Bucket<string, Generic>>.560561"*, i64, i64)*, void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)*, void (%"Array<Bucket<string, Generic>>.560561"*, i64, %"Bucket<string, Generic>.560559"*)*, void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)*, %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)*, i1 (%"Array<Bucket<string, Generic>>.560561"*, %"Array<Bucket<string, Generic>>.560561"*)*, i1 (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)*, i64 (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)* }
%"Array<Bucket<string, Generic>>.560561" = type { %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Bucket<string, Generic>.560559"**, i64, i64 }
%"Map<string, Generic>_vtable_ty.560558" = type { i64 (%"Map<string, Generic>.560557"*, %string.560217*)*, void (%"Map<string, Generic>.560557"*)*, void (%"Map<string, Generic>.560557"*, %string.560217*, %Generic.560553*)*, %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)*, %"Array<Bucket<string, Generic>>.560561"* (%"Map<string, Generic>.560557"*)* }
%"Map<string, Generic>.560557" = type { %"Map<string, Generic>_vtable_ty.560558"*, %"Bucket<string, Generic>.560559"**, i64, i64 }
%TypeChecker_vtable_ty.560556 = type { %Module.560531* (%TypeChecker.560555*, i64)*, %Module.560531* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)*, %Function.560501* (%TypeChecker.560555*)*, %FunctionType.560387* (%TypeChecker.560555*)*, %Class.560513* (%TypeChecker.560555*)*, %Class.560513* (%TypeChecker.560555*, %VarId.560441*)*, %Enum.560527* (%TypeChecker.560555*, %VarId.560441*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %Scope.560473* (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*, %string.560217*)*, %VarId.560441* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Scope.560473* (%TypeChecker.560555*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, i1 (%TypeChecker.560555*)*, %Program.560549* (%TypeChecker.560555*, %ModuleAST.560363*, %Compiler.560235*, %string.560217*)*, void (%TypeChecker.560555*)*, void (%TypeChecker.560555*)*, void (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)*, %GenericType.560405* (%TypeChecker.560555*, %string.560217*, %"Array<Type>.560389"*)*, %Var.560505* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)*, %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)*, void (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)*, void (%TypeChecker.560555*, %VarDeclarationStatement.560327*)*, void (%TypeChecker.560555*, %string.560217*, %Type.560381*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)*, void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)*, %FunctionType.560387* (%TypeChecker.560555*, %"Array<ArgNode>.560335"*, %TypeNode.560269*, %"Array<FunctionArg>.560503"*)*, void (%TypeChecker.560555*, %Module.560531*)*, void (%TypeChecker.560555*, %ImportNode.560357*)*, %Module.560531* (%TypeChecker.560555*, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, %EnumNode.560353*)*, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %FunctionDeclarationNode.560333*)*, void (%TypeChecker.560555*, %Enum.560527*, %EnumNode.560353*)*, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %Function.560501*, %FunctionDeclarationNode.560333*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %ArrayExpression.560423* (%TypeChecker.560555*, %Type.560381*, %ArrayExpressionNode.560301*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %VarAccessExpressionNode.560299*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %Expression.560401*, %BinaryExpressionNode.560313*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*, %Expression.560401*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)*, %BinaryExpression.560425* (%TypeChecker.560555*, %Type.560381*, %BinaryExpressionNode.560313*)*, %UnaryExpression.560427* (%TypeChecker.560555*, %Type.560381*, %UnaryExpressionNode.560317*)*, %Expression.560401* (%TypeChecker.560555*, %TypeCastExpressionNode.560311*)*, %string.560217* (%TypeChecker.560555*, %ClassId.560397*, %"Array<ExpressionNode>.560297"*, %"Array<Expression>.560419"**)*, %NewExpression.560433* (%TypeChecker.560555*, %NewExpressionNode.560303*)*, %string.560217* (%TypeChecker.560555*, %PropId.560449*)*, %MemberExpression.560451* (%TypeChecker.560555*, %Type.560381*, %MemberExpressionNode.560307*)*, %TernaryExpression.560429* (%TypeChecker.560555*, %Type.560381*, %TernaryExpressionNode.560315*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %ExpressionIndexNode.560305*)*, %IndexExpression.560435* (%TypeChecker.560555*, %Type.560381*, %ExpressionIndexNode.560305*)*, %"Array<FunctionArg>.560503"* (%TypeChecker.560555*, %Expression.560401*)*, %"Array<Expression>.560419"* (%TypeChecker.560555*, %FunctionType.560387*, %"Array<FunctionArg>.560503"*, %"Array<ExpressionNode>.560297"*)*, i64 (%TypeChecker.560555*, %FunctionType.560387*, %"Array<Expression>.560419"*)*, %CallExpression.560437* (%TypeChecker.560555*, %Type.560381*, %CallExpressionNode.560309*)*, %IntrinsicCall.560439* (%TypeChecker.560555*, %IntrinsicCall.560439*, %CallExpressionNode.560309*)*, %IntExpression.560411* (%TypeChecker.560555*, %Type.560381*, %IntExpressionNode.560289*)*, %FloatExpression.560415* (%TypeChecker.560555*, %Type.560381*, %FloatExpressionNode.560291*)*, %IntExpression.560411* (%TypeChecker.560555*, %CharExpressionNode.560293*)*, %StringExpression.560417* (%TypeChecker.560555*, %Type.560381*, %StringExpressionNode.560295*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)*, %IfStatement.560459* (%TypeChecker.560555*, %IfStatementNode.560319*)*, %VarDeclaration.560461* (%TypeChecker.560555*, %VarDeclarationStatement.560327*)*, %ConstDeclaration.560463* (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)*, %ForStatement.560465* (%TypeChecker.560555*, %ForStatementNode.560323*)*, %WhileStatement.560467* (%TypeChecker.560555*, %WhileStatementNode.560321*)*, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)*, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)*, %ReturnStatement.560469* (%TypeChecker.560555*, %ReturnStatementNode.560325*)*, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)*, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)* }
%TypeChecker.560555 = type { %TypeChecker_vtable_ty.560556*, %Program.560549*, i64, %ClassId.560397*, %VarId.560441*, %PropId.560449*, %ScopeId.560471*, %Compiler.560235*, i1, i1, %"Map<string, Generic>.560557"* }
%Program.560549 = type { %Program_vtable_ty.560550*, i1, %"Array<Module>.560551"* }
%GenericType.560405 = type { %GenericType_vtable_ty.560406*, i64, %string.560217*, %"Array<Type>.560389"*, %Type.560381* }
%ArrayExpression.560423 = type { %ArrayExpression_vtable_ty.560424*, i64, i1, i64, %Type.560381*, %"Array<Expression>.560419"* }
%VarAccessExpressionNode.560299 = type { %VarAccessExpressionNode_vtable_ty.560300*, %FloRange.560223*, i64, i64, %IdentifierToken.560263* }
%BinaryExpressionNode.560313 = type { %BinaryExpressionNode_vtable_ty.560314*, %FloRange.560223*, i64, i64, %ExpressionNode.560285*, i64, %ExpressionNode.560285* }
%BinaryExpression.560425 = type { %BinaryExpression_vtable_ty.560426*, i64, i1, i64, %Type.560381*, %Expression.560401*, i64, %Expression.560401* }
%UnaryExpression.560427 = type { %UnaryExpression_vtable_ty.560428*, i64, i1, i64, %Type.560381*, i64, %Expression.560401* }
%UnaryExpressionNode.560317 = type { %UnaryExpressionNode_vtable_ty.560318*, %FloRange.560223*, i64, i64, i64, %ExpressionNode.560285* }
%TypeCastExpressionNode.560311 = type { %TypeCastExpressionNode_vtable_ty.560312*, %FloRange.560223*, i64, i64, %ExpressionNode.560285*, %TypeNode.560269* }
%NewExpression.560433 = type { %NewExpression_vtable_ty.560434*, i64, i1, i64, %Type.560381*, %"Array<Expression>.560419"*, i1, %Type.560381* }
%MemberExpression.560451 = type { %MemberExpression_vtable_ty.560452*, i64, i1, i64, %Type.560381*, %Expression.560401*, %PropId.560449* }
%TernaryExpression.560429 = type { %TernaryExpression_vtable_ty.560430*, i64, i1, i64, %Type.560381*, %Expression.560401*, %Expression.560401*, %Expression.560401* }
%TernaryExpressionNode.560315 = type { %TernaryExpressionNode_vtable_ty.560316*, %FloRange.560223*, i64, i64, %ExpressionNode.560285*, %ExpressionNode.560285*, %ExpressionNode.560285* }
%IndexExpression.560435 = type { %IndexExpression_vtable_ty.560436*, i64, i1, i64, %Type.560381*, %Expression.560401*, %Expression.560401* }
%CallExpression.560437 = type { %CallExpression_vtable_ty.560438*, i64, i1, i64, %Type.560381*, %Expression.560401*, %"Array<Expression>.560419"* }
%IntrinsicCall.560439 = type { %IntrinsicCall_vtable_ty.560440*, i64, i1, i64, %Type.560381*, i64, %"Array<Expression>.560419"* }
%IntExpression.560411 = type { %IntExpression_vtable_ty.560412*, i64, i1, i64, %Type.560381*, i64 }
%IntExpressionNode.560289 = type { %IntExpressionNode_vtable_ty.560290*, %FloRange.560223*, i64, i64, %IntToken.560249* }
%FloatExpression.560415 = type { %FloatExpression_vtable_ty.560416*, i64, i1, i64, %Type.560381*, double }
%FloatExpressionNode.560291 = type { %FloatExpressionNode_vtable_ty.560292*, %FloRange.560223*, i64, i64, %FloatToken.560251* }
%FloatToken.560251 = type { %FloatToken_vtable_ty.560252*, i64, %FloRange.560223*, double }
%CharExpressionNode.560293 = type { %CharExpressionNode_vtable_ty.560294*, %FloRange.560223*, i64, i64, %CharToken.560253* }
%StringExpression.560417 = type { %StringExpression_vtable_ty.560418*, i64, i1, i64, %Type.560381*, %string.560217*, %"Array<int>.560257"*, %"Array<Expression>.560419"* }
%IfStatement.560459 = type { %IfStatement_vtable_ty.560460*, i64, %Expression.560401*, %Block.560455*, %Block.560455* }
%ForStatement.560465 = type { %ForStatement_vtable_ty.560466*, i64, %Statement.560393*, %Expression.560401*, %Expression.560401*, %Block.560455* }
%WhileStatement.560467 = type { %WhileStatement_vtable_ty.560468*, i64, %Expression.560401*, %Block.560455* }
%ReturnStatement.560469 = type { %ReturnStatement_vtable_ty.560470*, i64, %Expression.560401* }
%GeneratedModule_vtable_ty.560592 = type { void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*, i64)*, i64 (%GeneratedModule.560591*)*, %LLVMTargetMachineRef.560585* (%GeneratedModule.560591*, %string.560217*)*, void (%GeneratedModule.560591*, %string.560217*, %string.560217*)*, void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)* }
%GeneratedModule.560591 = type { %GeneratedModule_vtable_ty.560592*, %LLVMModuleRef.560565*, i8* }
%LLVMModuleRef.560565 = type opaque
%LLVMTargetMachineRef.560585 = type opaque
%IntrinsicResult_vtable_ty.560594 = type {}
%"Bucket<string, int>_vtable_ty.560601" = type { void (%"Bucket<string, int>.560600"*, %string.560217*, i64)* }
%"Bucket<string, int>.560600" = type { %"Bucket<string, int>_vtable_ty.560601"*, %string.560217*, i64, i1 }
%"Array<Bucket<string, int>>_vtable_ty.560603" = type { void (%"Array<Bucket<string, int>>.560602"*)*, void (%"Array<Bucket<string, int>>.560602"*, i64, i64)*, void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)*, void (%"Array<Bucket<string, int>>.560602"*, i64, %"Bucket<string, int>.560600"*)*, void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)*, %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)*, i1 (%"Array<Bucket<string, int>>.560602"*, %"Array<Bucket<string, int>>.560602"*)*, i1 (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)*, i64 (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)* }
%"Array<Bucket<string, int>>.560602" = type { %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Bucket<string, int>.560600"**, i64, i64 }
%"Map<string, int>_vtable_ty.560599" = type { i64 (%"Map<string, int>.560597"*, %string.560217*)*, void (%"Map<string, int>.560597"*)*, void (%"Map<string, int>.560597"*, %string.560217*, i64)*, i64 (%"Map<string, int>.560597"*, %string.560217*)*, %"Array<Bucket<string, int>>.560602"* (%"Map<string, int>.560597"*)* }
%"Map<string, int>.560597" = type { %"Map<string, int>_vtable_ty.560599"*, %"Bucket<string, int>.560600"**, i64, i64 }
%"Bucket<string, LLVMValueRef>_vtable_ty.560606" = type { void (%"Bucket<string, LLVMValueRef>.560605"*, %string.560217*, %LLVMValueRef.560567*)* }
%"Bucket<string, LLVMValueRef>.560605" = type { %"Bucket<string, LLVMValueRef>_vtable_ty.560606"*, %string.560217*, %LLVMValueRef.560567*, i1 }
%LLVMValueRef.560567 = type opaque
%"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608" = type { void (%"Array<Bucket<string, LLVMValueRef>>.560607"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64, i64)*, void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64, %"Bucket<string, LLVMValueRef>.560605"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)*, %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)*, i1 (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Array<Bucket<string, LLVMValueRef>>.560607"*)*, i1 (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)*, i64 (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)* }
%"Array<Bucket<string, LLVMValueRef>>.560607" = type { %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Bucket<string, LLVMValueRef>.560605"**, i64, i64 }
%"Map<string, LLVMValueRef>_vtable_ty.560604" = type { i64 (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, void (%"Map<string, LLVMValueRef>.560598"*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %"Array<Bucket<string, LLVMValueRef>>.560607"* (%"Map<string, LLVMValueRef>.560598"*)* }
%"Map<string, LLVMValueRef>.560598" = type { %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Bucket<string, LLVMValueRef>.560605"**, i64, i64 }
%CGClassType_vtable_ty.560596 = type {}
%CGEnumType_vtable_ty.560610 = type {}
%"Array<LLVMTypeRef>_vtable_ty.560612" = type { void (%"Array<LLVMTypeRef>.560611"*)*, void (%"Array<LLVMTypeRef>.560611"*, i64, i64)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, i64, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)*, i1 (%"Array<LLVMTypeRef>.560611"*, %"Array<LLVMTypeRef>.560611"*)*, i1 (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, i64 (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)* }
%"Array<LLVMTypeRef>.560611" = type { %"Array<LLVMTypeRef>_vtable_ty.560612"*, %LLVMTypeRef.560566**, i64, i64 }
%LLVMTypeRef.560566 = type opaque
%"Array<LLVMValueRef>_vtable_ty.560614" = type { void (%"Array<LLVMValueRef>.560613"*)*, void (%"Array<LLVMValueRef>.560613"*, i64, i64)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, i1 (%"Array<LLVMValueRef>.560613"*, %"Array<LLVMValueRef>.560613"*)*, i1 (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, i64 (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)* }
%"Array<LLVMValueRef>.560613" = type { %"Array<LLVMValueRef>_vtable_ty.560614"*, %LLVMValueRef.560567**, i64, i64 }
%"Bucket<string, CGClassType>_vtable_ty.560621" = type { void (%"Bucket<string, CGClassType>.560620"*, %string.560217*, %CGClassType.560595*)* }
%"Bucket<string, CGClassType>.560620" = type { %"Bucket<string, CGClassType>_vtable_ty.560621"*, %string.560217*, %CGClassType.560595*, i1 }
%CGClassType.560595 = type { %CGClassType_vtable_ty.560596*, %LLVMTypeRef.560566*, %"Map<string, int>.560597"*, %"Map<string, int>.560597"*, %"Map<string, LLVMValueRef>.560598"*, %LLVMValueRef.560567*, %LLVMTypeRef.560566*, %LLVMValueRef.560567* }
%"Array<Bucket<string, CGClassType>>_vtable_ty.560623" = type { void (%"Array<Bucket<string, CGClassType>>.560622"*)*, void (%"Array<Bucket<string, CGClassType>>.560622"*, i64, i64)*, void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)*, void (%"Array<Bucket<string, CGClassType>>.560622"*, i64, %"Bucket<string, CGClassType>.560620"*)*, void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)*, %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)*, i1 (%"Array<Bucket<string, CGClassType>>.560622"*, %"Array<Bucket<string, CGClassType>>.560622"*)*, i1 (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)*, i64 (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)* }
%"Array<Bucket<string, CGClassType>>.560622" = type { %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Bucket<string, CGClassType>.560620"**, i64, i64 }
%"Map<string, CGClassType>_vtable_ty.560619" = type { i64 (%"Map<string, CGClassType>.560617"*, %string.560217*)*, void (%"Map<string, CGClassType>.560617"*)*, void (%"Map<string, CGClassType>.560617"*, %string.560217*, %CGClassType.560595*)*, %CGClassType.560595* (%"Map<string, CGClassType>.560617"*, %string.560217*)*, %"Array<Bucket<string, CGClassType>>.560622"* (%"Map<string, CGClassType>.560617"*)* }
%"Map<string, CGClassType>.560617" = type { %"Map<string, CGClassType>_vtable_ty.560619"*, %"Bucket<string, CGClassType>.560620"**, i64, i64 }
%"Bucket<string, CGEnumType>_vtable_ty.560626" = type { void (%"Bucket<string, CGEnumType>.560625"*, %string.560217*, %CGEnumType.560609*)* }
%"Bucket<string, CGEnumType>.560625" = type { %"Bucket<string, CGEnumType>_vtable_ty.560626"*, %string.560217*, %CGEnumType.560609*, i1 }
%CGEnumType.560609 = type { %CGEnumType_vtable_ty.560610*, %LLVMTypeRef.560566*, %"Map<string, LLVMValueRef>.560598"* }
%"Array<Bucket<string, CGEnumType>>_vtable_ty.560628" = type { void (%"Array<Bucket<string, CGEnumType>>.560627"*)*, void (%"Array<Bucket<string, CGEnumType>>.560627"*, i64, i64)*, void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)*, void (%"Array<Bucket<string, CGEnumType>>.560627"*, i64, %"Bucket<string, CGEnumType>.560625"*)*, void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)*, %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)*, i1 (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Array<Bucket<string, CGEnumType>>.560627"*)*, i1 (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)*, i64 (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)* }
%"Array<Bucket<string, CGEnumType>>.560627" = type { %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Bucket<string, CGEnumType>.560625"**, i64, i64 }
%"Map<string, CGEnumType>_vtable_ty.560624" = type { i64 (%"Map<string, CGEnumType>.560618"*, %string.560217*)*, void (%"Map<string, CGEnumType>.560618"*)*, void (%"Map<string, CGEnumType>.560618"*, %string.560217*, %CGEnumType.560609*)*, %CGEnumType.560609* (%"Map<string, CGEnumType>.560618"*, %string.560217*)*, %"Array<Bucket<string, CGEnumType>>.560627"* (%"Map<string, CGEnumType>.560618"*)* }
%"Map<string, CGEnumType>.560618" = type { %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Bucket<string, CGEnumType>.560625"**, i64, i64 }
%CodeGen_vtable_ty.560616 = type { %GeneratedModule.560591* (%CodeGen.560615*, %Program.560549*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)*, void (%CodeGen.560615*, %TypeId.560395*, %CGClassType.560595*)*, void (%CodeGen.560615*, %TypeId.560395*, %CGEnumType.560609*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, i1)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ReturnStatement.560469*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %IntExpression.560411*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %FloatExpression.560415*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %BooleanExpression.560413*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*, %"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567**)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Type.560381*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %StringExpression.560417*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %CGClassType.560595* (%CodeGen.560615*, %Class.560513*)*, %CGEnumType.560609* (%CodeGen.560615*, %Enum.560527*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %GenericType.560405*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Type.560381*, %LLVMValueRef.560567*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TypeCastExpression.560431*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %UnaryExpression.560427*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %NullExpression.560421*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TernaryExpression.560429*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %CallExpression.560437*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %NewExpression.560433*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IntrinsicCall.560439*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IfStatement.560459*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ForStatement.560465*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %WhileStatement.560467*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Statement.560393*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)*, void (%CodeGen.560615*, %Function.560501*)*, void (%CodeGen.560615*, %Class.560513*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)*, void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*)*, void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*, %"Array<LLVMTypeRef>.560611"*)*, void (%CodeGen.560615*, %Class.560513*)*, void (%CodeGen.560615*, %Enum.560527*)* }
%CodeGen.560615 = type { %CodeGen_vtable_ty.560616*, %LLVMModuleRef.560565*, %LLVMValueRef.560567*, %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"*, %"Map<string, CGClassType>.560617"*, %"Map<string, CGEnumType>.560618"*, %LLVMBasicBlockRef.560568*, %LLVMBasicBlockRef.560568*, %Program.560549*, i1, %"Map<string, LLVMValueRef>.560598"*, %LLVMContextRef.560564* }
%LLVMBasicBlockRef.560568 = type opaque
%LLVMContextRef.560564 = type opaque
%LLVMBuilderRef.560572 = type opaque
%BooleanExpression.560413 = type { %BooleanExpression_vtable_ty.560414*, i64, i1, i64, %Type.560381*, i1 }
%ObjectType.560407 = type { %ObjectType_vtable_ty.560408*, i64, %ClassId.560397* }
%TypeCastExpression.560431 = type { %TypeCastExpression_vtable_ty.560432*, i64, i1, i64, %Type.560381*, %Expression.560401* }
%VarAccessExpression.560453 = type { %VarAccessExpression_vtable_ty.560454*, i64, i1, i64, %Type.560381*, %VarId.560441* }
%NullExpression.560421 = type { %NullExpression_vtable_ty.560422*, i64, i1, i64, %Type.560381* }
%"Arraymain.flo_vtable_ty.560630" = type { void (%"Arraymain.flo.560629"*)*, void (%"Arraymain.flo.560629"*, i64, i64)*, void (%"Arraymain.flo.560629"*, %string.560217*)*, void (%"Arraymain.flo.560629"*, i64, %string.560217*)*, void (%"Arraymain.flo.560629"*, %string.560217*)*, %string.560217* (%"Arraymain.flo.560629"*, i64)*, i1 (%"Arraymain.flo.560629"*, %"Arraymain.flo.560629"*)*, i1 (%"Arraymain.flo.560629"*, %string.560217*)*, i64 (%"Arraymain.flo.560629"*, %string.560217*)* }
%"Arraymain.flo.560629" = type { %"Arraymain.flo_vtable_ty.560630"*, %string.560217**, i64, i64 }
%Node.560267 = type { %Node_vtable_ty.560268*, %FloRange.560223* }
%PointerTypeNode.560277 = type { %PointerTypeNode_vtable_ty.560278*, %FloRange.560223*, i64, %TypeNode.560269* }
%ArrayTypeNode.560287 = type { %ArrayTypeNode_vtable_ty.560288*, %FloRange.560223*, i64, %TypeNode.560269*, %ExpressionNode.560285* }
%BooleanType.560383 = type { %BooleanType_vtable_ty.560384*, i64 }
%PointerType.560385 = type { %PointerType_vtable_ty.560386*, i64, %Type.560381* }
%ArrayType.560403 = type { %ArrayType_vtable_ty.560404*, i64, %Type.560381*, i64 }
%EnumType.560409 = type { %EnumType_vtable_ty.560410*, i64, %EnumId.560399* }
%LLVMPassManagerRef.560575 = type opaque
%LLVMExecutionEngineRef.560588 = type opaque
%LLVMPassManagerBuilderRef.560586 = type opaque
%LLVMTargetRef.560584 = type opaque
%IntrinsicResult.560593 = type { %IntrinsicResult_vtable_ty.560594*, %LLVMValueRef.560567*, %LLVMTypeRef.560566* }

@string_vtable_data = global %string_vtable_ty.560218 { %string.560217* (%string.560217*, %string.560217*)* @string___add__, %string.560217* (%string.560217*, %string.560217*)* @string___adda__, %string.560217* (%string.560217*, i64)* @string___getitem__, i1 (%string.560217*, %string.560217*)* @string___ne__, i1 (%string.560217*, %string.560217*)* @string___eq__, i64 (%string.560217*, %string.560217*, i64)* @string_find, i1 (%string.560217*, %string.560217*)* @string___in__, %string.560217* (%string.560217*, i64, i64)* @string_substring, i8 (%string.560217*, i64)* @string_get_byte, i8* (%string.560217*)* @string_get_bytes, %string.560217* (%string.560217*, %string.560217*, %string.560217*)* @string_replace, i8* (%string.560217*)* @string_to_cstring, i1 (%string.560217*, %string.560217*)* @string_ends_with, i1 (%string.560217*, %string.560217*)* @string_starts_with }
@StringBuilder_vtable_data = global %StringBuilder_vtable_ty.560220 { void (%StringBuilder.560219*)* @StringBuilder_resize, void (%StringBuilder.560219*, i8*, i64)* @StringBuilder_add_bytes_length, void (%StringBuilder.560219*, %string.560217*)* @StringBuilder_append_string, void (%StringBuilder.560219*, i8)* @StringBuilder_add_byte, %string.560217* (%StringBuilder.560219*)* @StringBuilder_get_string }
@Range_vtable_data = global %Range_vtable_ty.560222 { i1 (%Range.560221*, i64)* @Range___in__ }
@str.0 = private unnamed_addr constant [2 x i8] c"\0A\00"
@FloRange_vtable_data = global %FloRange_vtable_ty.560224 zeroinitializer
@str.1 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00"
@str.2 = private unnamed_addr constant [5 x i8] c"\1B[0m\00"
@str.3 = private unnamed_addr constant [10 x i8] c"Panic: %s\00"
@FloError_vtable_data = global %FloError_vtable_ty.560226 zeroinitializer
@str.4 = private unnamed_addr constant [2 x i8] c" \00"
@str.5 = private unnamed_addr constant [2 x i8] c"^\00"
@str.6 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00"
@str.7 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00"
@str.8 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00"
@str.9 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00"
@str.10 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00"
@str.11 = private unnamed_addr constant [10 x i8] c"[Error]: \00"
@str.12 = private unnamed_addr constant [19 x i8] c"File '%s', line %d\00"
@File_vtable_data = global %File_vtable_ty.560228 { %string.560217* (%File.560227*)* @File_read_all, void (%File.560227*)* @File_close }
@str.13 = private unnamed_addr constant [2 x i8] c"r\00"
@Path_vtable_data = local_unnamed_addr global %Path_vtable_ty.560230 zeroinitializer
@str.14 = private unnamed_addr constant [6 x i8] c"%s/%s\00"
@FileId_vtable_data = global %FileId_vtable_ty.560232 zeroinitializer
@FloFile_vtable_data = global %FloFile_vtable_ty.560234 zeroinitializer
@"Array<FloFile>_vtable_data" = global %"Array<FloFile>_vtable_ty.560240" { void (%"Array<FloFile>.560237"*)* @"Array<FloFile>_resize", void (%"Array<FloFile>.560237"*, i64, i64)* @"Array<FloFile>_swap", void (%"Array<FloFile>.560237"*, %FloFile.560233*)* @"Array<FloFile>___sl__", void (%"Array<FloFile>.560237"*, i64, %FloFile.560233*)* @"Array<FloFile>___setitem__", void (%"Array<FloFile>.560237"*, %FloFile.560233*)* @"Array<FloFile>_append", %FloFile.560233* (%"Array<FloFile>.560237"*, i64)* @"Array<FloFile>___getitem__", i1 (%"Array<FloFile>.560237"*, %"Array<FloFile>.560237"*)* @"Array<FloFile>___eq__", i1 (%"Array<FloFile>.560237"*, %FloFile.560233*)* @"Array<FloFile>___in__", i64 (%"Array<FloFile>.560237"*, %FloFile.560233*)* @"Array<FloFile>_find" }
@"Array<FloError>_vtable_data" = global %"Array<FloError>_vtable_ty.560241" { void (%"Array<FloError>.560238"*)* @"Array<FloError>_resize", void (%"Array<FloError>.560238"*, i64, i64)* @"Array<FloError>_swap", void (%"Array<FloError>.560238"*, %FloError.560225*)* @"Array<FloError>___sl__", void (%"Array<FloError>.560238"*, i64, %FloError.560225*)* @"Array<FloError>___setitem__", void (%"Array<FloError>.560238"*, %FloError.560225*)* @"Array<FloError>_append", %FloError.560225* (%"Array<FloError>.560238"*, i64)* @"Array<FloError>___getitem__", i1 (%"Array<FloError>.560238"*, %"Array<FloError>.560238"*)* @"Array<FloError>___eq__", i1 (%"Array<FloError>.560238"*, %FloError.560225*)* @"Array<FloError>___in__", i64 (%"Array<FloError>.560238"*, %FloError.560225*)* @"Array<FloError>_find" }
@"Bucket<string, FileId>_vtable_data" = global %"Bucket<string, FileId>_vtable_ty.560244" { void (%"Bucket<string, FileId>.560243"*, %string.560217*, %FileId.560231*)* @"Bucket<string, FileId>_set" }
@"Array<Bucket<string, FileId>>_vtable_data" = global %"Array<Bucket<string, FileId>>_vtable_ty.560246" { void (%"Array<Bucket<string, FileId>>.560245"*)* @"Array<Bucket<string, FileId>>_resize", void (%"Array<Bucket<string, FileId>>.560245"*, i64, i64)* @"Array<Bucket<string, FileId>>_swap", void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)* @"Array<Bucket<string, FileId>>___sl__", void (%"Array<Bucket<string, FileId>>.560245"*, i64, %"Bucket<string, FileId>.560243"*)* @"Array<Bucket<string, FileId>>___setitem__", void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)* @"Array<Bucket<string, FileId>>_append", %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)* @"Array<Bucket<string, FileId>>___getitem__", i1 (%"Array<Bucket<string, FileId>>.560245"*, %"Array<Bucket<string, FileId>>.560245"*)* @"Array<Bucket<string, FileId>>___eq__", i1 (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)* @"Array<Bucket<string, FileId>>___in__", i64 (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)* @"Array<Bucket<string, FileId>>_find" }
@"Map<string, FileId>_vtable_data" = global %"Map<string, FileId>_vtable_ty.560242" { i64 (%"Map<string, FileId>.560239"*, %string.560217*)* @"Map<string, FileId>_hash_fnc", void (%"Map<string, FileId>.560239"*)* @"Map<string, FileId>_resize", void (%"Map<string, FileId>.560239"*, %string.560217*, %FileId.560231*)* @"Map<string, FileId>_set", %FileId.560231* (%"Map<string, FileId>.560239"*, %string.560217*)* @"Map<string, FileId>_get", %"Array<Bucket<string, FileId>>.560245"* (%"Map<string, FileId>.560239"*)* @"Map<string, FileId>_get_buckets" }
@Compiler_vtable_data = global %Compiler_vtable_ty.560236 { void (%Compiler.560235*, %string.560217*)* @Compiler_set_std_path, %string.560217* (%Compiler.560235*, %string.560217*)* @Compiler_find_module_path, %FileId.560231* (%Compiler.560235*, %string.560217*)* @Compiler_register_file, i1 (%Compiler.560235*, %FileId.560231*)* @Compiler_set_current_file, i1 (%Compiler.560235*)* @Compiler_print_errors, %FileId.560231* (%Compiler.560235*)* @Compiler_add_builtins }
@str.15 = private unnamed_addr constant [9 x i8] c"./flolib\00"
@str.16 = private unnamed_addr constant [13 x i8] c"builtins.flo\00"
@str.17 = private unnamed_addr constant [5 x i8] c"@flo\00"
@str.18 = private unnamed_addr constant [9 x i8] c"packages\00"
@str.19 = private unnamed_addr constant [5 x i8] c".flo\00"
@str.20 = private unnamed_addr constant [4 x i8] c"and\00"
@str.21 = private unnamed_addr constant [3 x i8] c"or\00"
@str.22 = private unnamed_addr constant [4 x i8] c"xor\00"
@str.23 = private unnamed_addr constant [6 x i8] c"const\00"
@str.24 = private unnamed_addr constant [4 x i8] c"let\00"
@str.25 = private unnamed_addr constant [3 x i8] c"if\00"
@str.26 = private unnamed_addr constant [5 x i8] c"else\00"
@str.27 = private unnamed_addr constant [5 x i8] c"bool\00"
@str.28 = private unnamed_addr constant [3 x i8] c"i4\00"
@str.29 = private unnamed_addr constant [3 x i8] c"i8\00"
@str.30 = private unnamed_addr constant [4 x i8] c"i16\00"
@str.31 = private unnamed_addr constant [4 x i8] c"i32\00"
@str.32 = private unnamed_addr constant [4 x i8] c"i64\00"
@str.33 = private unnamed_addr constant [5 x i8] c"i128\00"
@str.34 = private unnamed_addr constant [4 x i8] c"int\00"
@str.35 = private unnamed_addr constant [4 x i8] c"f16\00"
@str.36 = private unnamed_addr constant [4 x i8] c"f32\00"
@str.37 = private unnamed_addr constant [4 x i8] c"f64\00"
@str.38 = private unnamed_addr constant [6 x i8] c"float\00"
@str.39 = private unnamed_addr constant [5 x i8] c"void\00"
@str.40 = private unnamed_addr constant [4 x i8] c"for\00"
@str.41 = private unnamed_addr constant [6 x i8] c"while\00"
@str.42 = private unnamed_addr constant [4 x i8] c"fnc\00"
@str.43 = private unnamed_addr constant [6 x i8] c"break\00"
@str.44 = private unnamed_addr constant [9 x i8] c"continue\00"
@str.45 = private unnamed_addr constant [7 x i8] c"return\00"
@str.46 = private unnamed_addr constant [7 x i8] c"import\00"
@str.47 = private unnamed_addr constant [8 x i8] c"private\00"
@str.48 = private unnamed_addr constant [7 x i8] c"public\00"
@str.49 = private unnamed_addr constant [10 x i8] c"protected\00"
@str.50 = private unnamed_addr constant [3 x i8] c"in\00"
@str.51 = private unnamed_addr constant [6 x i8] c"class\00"
@str.52 = private unnamed_addr constant [5 x i8] c"enum\00"
@str.53 = private unnamed_addr constant [4 x i8] c"new\00"
@str.54 = private unnamed_addr constant [3 x i8] c"as\00"
@str.55 = private unnamed_addr constant [4 x i8] c"033\00"
@str.56 = private unnamed_addr constant [4 x i8] c"x1b\00"
@str.57 = private unnamed_addr constant [2 x i8] c"\1B\00"
@str.58 = private unnamed_addr constant [6 x i8] c"u001b\00"
@Token_vtable_data = global %Token_vtable_ty.560248 zeroinitializer
@IntToken_vtable_data = global %IntToken_vtable_ty.560250 zeroinitializer
@FloatToken_vtable_data = global %FloatToken_vtable_ty.560252 zeroinitializer
@CharToken_vtable_data = global %CharToken_vtable_ty.560254 zeroinitializer
@"Array<int>_vtable_data" = global %"Array<int>_vtable_ty.560262" { void (%"Array<int>.560257"*)* @"Array<int>_resize", void (%"Array<int>.560257"*, i64, i64)* @"Array<int>_swap", void (%"Array<int>.560257"*, i64)* @"Array<int>___sl__", void (%"Array<int>.560257"*, i64, i64)* @"Array<int>___setitem__", void (%"Array<int>.560257"*, i64)* @"Array<int>_append", i64 (%"Array<int>.560257"*, i64)* @"Array<int>___getitem__", i1 (%"Array<int>.560257"*, %"Array<int>.560257"*)* @"Array<int>___eq__", i1 (%"Array<int>.560257"*, i64)* @"Array<int>___in__", i64 (%"Array<int>.560257"*, i64)* @"Array<int>_find" }
@"Array<Token>_vtable_data" = global %"Array<Token>_vtable_ty.560260" { void (%"Array<Token>.560259"*)* @"Array<Token>_resize", void (%"Array<Token>.560259"*, i64, i64)* @"Array<Token>_swap", void (%"Array<Token>.560259"*, %Token.560247*)* @"Array<Token>___sl__", void (%"Array<Token>.560259"*, i64, %Token.560247*)* @"Array<Token>___setitem__", void (%"Array<Token>.560259"*, %Token.560247*)* @"Array<Token>_append", %Token.560247* (%"Array<Token>.560259"*, i64)* @"Array<Token>___getitem__", i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)* @"Array<Token>___eq__", i1 (%"Array<Token>.560259"*, %Token.560247*)* @"Array<Token>___in__", i64 (%"Array<Token>.560259"*, %Token.560247*)* @"Array<Token>_find" }
@"Array<Array<Token>>_vtable_data" = global %"Array<Array<Token>>_vtable_ty.560261" { void (%"Array<Array<Token>>.560258"*)* @"Array<Array<Token>>_resize", void (%"Array<Array<Token>>.560258"*, i64, i64)* @"Array<Array<Token>>_swap", void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)* @"Array<Array<Token>>___sl__", void (%"Array<Array<Token>>.560258"*, i64, %"Array<Token>.560259"*)* @"Array<Array<Token>>___setitem__", void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)* @"Array<Array<Token>>_append", %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)* @"Array<Array<Token>>___getitem__", i1 (%"Array<Array<Token>>.560258"*, %"Array<Array<Token>>.560258"*)* @"Array<Array<Token>>___eq__", i1 (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)* @"Array<Array<Token>>___in__", i64 (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)* @"Array<Array<Token>>_find" }
@StrToken_vtable_data = global %StrToken_vtable_ty.560256 zeroinitializer
@IdentifierToken_vtable_data = global %IdentifierToken_vtable_ty.560264 zeroinitializer
@Lexer_vtable_data = global %Lexer_vtable_ty.560266 { i1 (%Lexer.560265*)* @Lexer_eof, i8 (%Lexer.560265*, i64)* @Lexer_peek, void (%Lexer.560265*)* @Lexer_advance, %FloRange.560223* (%Lexer.560265*, i64)* @Lexer_get_range, %Token.560247* (%Lexer.560265*)* @Lexer_plus_token, i1 (%Lexer.560265*)* @Lexer_skip_comment, %Token.560247* (%Lexer.560265*)* @Lexer_minus_token, %Token.560247* (%Lexer.560265*)* @Lexer_mult_token, %Token.560247* (%Lexer.560265*)* @Lexer_mod_token, %Token.560247* (%Lexer.560265*)* @Lexer_pow_token, %Token.560247* (%Lexer.560265*)* @Lexer_div_token, %Token.560247* (%Lexer.560265*)* @Lexer_eq_token, %Token.560247* (%Lexer.560265*)* @Lexer_neq_token, %Token.560247* (%Lexer.560265*)* @Lexer_gt_token, %Token.560247* (%Lexer.560265*)* @Lexer_lt_token, %Token.560247* (%Lexer.560265*)* @Lexer_dot_token, %IntToken.560249* (%Lexer.560265*, i64)* @Lexer_base_int_token, %Token.560247* (%Lexer.560265*)* @Lexer_numeric_token, %Token.560247* (%Lexer.560265*)* @Lexer_identifier_token, %StrToken.560255* (%Lexer.560265*)* @Lexer_string_token, %CharToken.560253* (%Lexer.560265*)* @Lexer_char_token, %Token.560247* (%Lexer.560265*)* @Lexer_lex_token, %"Array<Token>.560259"* (%Lexer.560265*, %string.560217*, %"Array<FloError>.560238"*)* @Lexer_tokenize }
@str.59 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00"
@str.60 = private unnamed_addr constant [4 x i8] c"COL\00"
@str.61 = private unnamed_addr constant [8 x i8] c"SEMICOL\00"
@str.62 = private unnamed_addr constant [6 x i8] c"COMMA\00"
@str.63 = private unnamed_addr constant [5 x i8] c"PLUS\00"
@str.64 = private unnamed_addr constant [10 x i8] c"PLUS_PLUS\00"
@str.65 = private unnamed_addr constant [6 x i8] c"MINUS\00"
@str.66 = private unnamed_addr constant [12 x i8] c"MINUS_MINUS\00"
@str.67 = private unnamed_addr constant [5 x i8] c"MULT\00"
@str.68 = private unnamed_addr constant [4 x i8] c"DIV\00"
@str.69 = private unnamed_addr constant [5 x i8] c"LPAR\00"
@str.70 = private unnamed_addr constant [5 x i8] c"RPAR\00"
@str.71 = private unnamed_addr constant [4 x i8] c"MOD\00"
@str.72 = private unnamed_addr constant [7 x i8] c"LBRACE\00"
@str.73 = private unnamed_addr constant [7 x i8] c"RBRACE\00"
@str.74 = private unnamed_addr constant [9 x i8] c"LBRACKET\00"
@str.75 = private unnamed_addr constant [9 x i8] c"RBRACKET\00"
@str.76 = private unnamed_addr constant [4 x i8] c"INT\00"
@str.77 = private unnamed_addr constant [6 x i8] c"FLOAT\00"
@str.78 = private unnamed_addr constant [3 x i8] c"LN\00"
@str.79 = private unnamed_addr constant [4 x i8] c"STR\00"
@str.80 = private unnamed_addr constant [5 x i8] c"CHAR\00"
@str.81 = private unnamed_addr constant [4 x i8] c"POW\00"
@str.82 = private unnamed_addr constant [5 x i8] c"QUES\00"
@str.83 = private unnamed_addr constant [4 x i8] c"AMP\00"
@str.84 = private unnamed_addr constant [3 x i8] c"EQ\00"
@str.85 = private unnamed_addr constant [4 x i8] c"EEQ\00"
@str.86 = private unnamed_addr constant [4 x i8] c"NEQ\00"
@str.87 = private unnamed_addr constant [3 x i8] c"GT\00"
@str.88 = private unnamed_addr constant [3 x i8] c"LT\00"
@str.89 = private unnamed_addr constant [4 x i8] c"LTE\00"
@str.90 = private unnamed_addr constant [4 x i8] c"GTE\00"
@str.91 = private unnamed_addr constant [6 x i8] c"ARROW\00"
@str.92 = private unnamed_addr constant [4 x i8] c"EOF\00"
@str.93 = private unnamed_addr constant [4 x i8] c"NOT\00"
@str.94 = private unnamed_addr constant [3 x i8] c"SL\00"
@str.95 = private unnamed_addr constant [3 x i8] c"SR\00"
@str.96 = private unnamed_addr constant [4 x i8] c"DOT\00"
@str.97 = private unnamed_addr constant [8 x i8] c"DOT_DOT\00"
@str.98 = private unnamed_addr constant [12 x i8] c"DOT_DOT_DOT\00"
@str.99 = private unnamed_addr constant [10 x i8] c"IDENTIFER\00"
@str.100 = private unnamed_addr constant [7 x i8] c"AND_KW\00"
@str.101 = private unnamed_addr constant [6 x i8] c"OR_KW\00"
@str.102 = private unnamed_addr constant [7 x i8] c"XOR_KW\00"
@str.103 = private unnamed_addr constant [9 x i8] c"CONST_KW\00"
@str.104 = private unnamed_addr constant [6 x i8] c"IF_KW\00"
@str.105 = private unnamed_addr constant [8 x i8] c"ELSE_KW\00"
@str.106 = private unnamed_addr constant [8 x i8] c"BOOL_KW\00"
@str.107 = private unnamed_addr constant [6 x i8] c"I4_KW\00"
@str.108 = private unnamed_addr constant [6 x i8] c"I8_KW\00"
@str.109 = private unnamed_addr constant [7 x i8] c"I16_KW\00"
@str.110 = private unnamed_addr constant [7 x i8] c"I32_KW\00"
@str.111 = private unnamed_addr constant [7 x i8] c"I64_KW\00"
@str.112 = private unnamed_addr constant [8 x i8] c"I128_KW\00"
@str.113 = private unnamed_addr constant [7 x i8] c"INT_KW\00"
@str.114 = private unnamed_addr constant [7 x i8] c"F16_KW\00"
@str.115 = private unnamed_addr constant [7 x i8] c"F32_KW\00"
@str.116 = private unnamed_addr constant [7 x i8] c"F64_KW\00"
@str.117 = private unnamed_addr constant [9 x i8] c"FLOAT_KW\00"
@str.118 = private unnamed_addr constant [8 x i8] c"VOID_KW\00"
@str.119 = private unnamed_addr constant [7 x i8] c"FOR_KW\00"
@str.120 = private unnamed_addr constant [9 x i8] c"WHILE_KW\00"
@str.121 = private unnamed_addr constant [7 x i8] c"FNC_KW\00"
@str.122 = private unnamed_addr constant [9 x i8] c"BREAK_KW\00"
@str.123 = private unnamed_addr constant [12 x i8] c"CONTINUE_KW\00"
@str.124 = private unnamed_addr constant [10 x i8] c"RETURN_KW\00"
@str.125 = private unnamed_addr constant [10 x i8] c"IMPORT_KW\00"
@str.126 = private unnamed_addr constant [11 x i8] c"PRIVATE_KW\00"
@str.127 = private unnamed_addr constant [10 x i8] c"PUBLIC_KW\00"
@str.128 = private unnamed_addr constant [13 x i8] c"PROTECTED_KW\00"
@str.129 = private unnamed_addr constant [6 x i8] c"IN_KW\00"
@str.130 = private unnamed_addr constant [9 x i8] c"CLASS_KW\00"
@str.131 = private unnamed_addr constant [8 x i8] c"ENUM_KW\00"
@str.132 = private unnamed_addr constant [7 x i8] c"NEW_KW\00"
@str.133 = private unnamed_addr constant [6 x i8] c"AS_KW\00"
@str.134 = private unnamed_addr constant [7 x i8] c"LET_KW\00"
@str.135 = private unnamed_addr constant [1 x i8] zeroinitializer
@str.136 = private unnamed_addr constant [2 x i8] c"[\00"
@str.137 = private unnamed_addr constant [3 x i8] c" {\00"
@str.138 = private unnamed_addr constant [12 x i8] c"  type: %s,\00"
@str.139 = private unnamed_addr constant [15 x i8] c"  range: %d-%d\00"
@str.140 = private unnamed_addr constant [12 x i8] c"  value: %s\00"
@str.141 = private unnamed_addr constant [12 x i8] c"  value: \\n\00"
@str.142 = private unnamed_addr constant [4 x i8] c" },\00"
@str.143 = private unnamed_addr constant [2 x i8] c"]\00"
@Node_vtable_data = local_unnamed_addr global %Node_vtable_ty.560268 zeroinitializer
@TypeNode_vtable_data = global %TypeNode_vtable_ty.560270 zeroinitializer
@"Array<TypeNode>_vtable_data" = global %"Array<TypeNode>_vtable_ty.560274" { void (%"Array<TypeNode>.560273"*)* @"Array<TypeNode>_resize", void (%"Array<TypeNode>.560273"*, i64, i64)* @"Array<TypeNode>_swap", void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)* @"Array<TypeNode>___sl__", void (%"Array<TypeNode>.560273"*, i64, %TypeNode.560269*)* @"Array<TypeNode>___setitem__", void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)* @"Array<TypeNode>_append", %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)* @"Array<TypeNode>___getitem__", i1 (%"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"*)* @"Array<TypeNode>___eq__", i1 (%"Array<TypeNode>.560273"*, %TypeNode.560269*)* @"Array<TypeNode>___in__", i64 (%"Array<TypeNode>.560273"*, %TypeNode.560269*)* @"Array<TypeNode>_find" }
@RecordTypeNode_vtable_data = global %RecordTypeNode_vtable_ty.560272 zeroinitializer
@FunctionTypeNode_vtable_data = global %FunctionTypeNode_vtable_ty.560276 zeroinitializer
@PointerTypeNode_vtable_data = global %PointerTypeNode_vtable_ty.560278 zeroinitializer
@StatementNode_vtable_data = global %StatementNode_vtable_ty.560280 zeroinitializer
@"Array<StatementNode>_vtable_data" = global %"Array<StatementNode>_vtable_ty.560284" { void (%"Array<StatementNode>.560283"*)* @"Array<StatementNode>_resize", void (%"Array<StatementNode>.560283"*, i64, i64)* @"Array<StatementNode>_swap", void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)* @"Array<StatementNode>___sl__", void (%"Array<StatementNode>.560283"*, i64, %StatementNode.560279*)* @"Array<StatementNode>___setitem__", void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)* @"Array<StatementNode>_append", %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)* @"Array<StatementNode>___getitem__", i1 (%"Array<StatementNode>.560283"*, %"Array<StatementNode>.560283"*)* @"Array<StatementNode>___eq__", i1 (%"Array<StatementNode>.560283"*, %StatementNode.560279*)* @"Array<StatementNode>___in__", i64 (%"Array<StatementNode>.560283"*, %StatementNode.560279*)* @"Array<StatementNode>_find" }
@BlockNode_vtable_data = global %BlockNode_vtable_ty.560282 zeroinitializer
@ExpressionNode_vtable_data = global %ExpressionNode_vtable_ty.560286 zeroinitializer
@ArrayTypeNode_vtable_data = global %ArrayTypeNode_vtable_ty.560288 zeroinitializer
@IntExpressionNode_vtable_data = global %IntExpressionNode_vtable_ty.560290 zeroinitializer
@FloatExpressionNode_vtable_data = global %FloatExpressionNode_vtable_ty.560292 zeroinitializer
@CharExpressionNode_vtable_data = global %CharExpressionNode_vtable_ty.560294 zeroinitializer
@"Array<ExpressionNode>_vtable_data" = global %"Array<ExpressionNode>_vtable_ty.560298" { void (%"Array<ExpressionNode>.560297"*)* @"Array<ExpressionNode>_resize", void (%"Array<ExpressionNode>.560297"*, i64, i64)* @"Array<ExpressionNode>_swap", void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)* @"Array<ExpressionNode>___sl__", void (%"Array<ExpressionNode>.560297"*, i64, %ExpressionNode.560285*)* @"Array<ExpressionNode>___setitem__", void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)* @"Array<ExpressionNode>_append", %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)* @"Array<ExpressionNode>___getitem__", i1 (%"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"*)* @"Array<ExpressionNode>___eq__", i1 (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)* @"Array<ExpressionNode>___in__", i64 (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)* @"Array<ExpressionNode>_find" }
@StringExpressionNode_vtable_data = global %StringExpressionNode_vtable_ty.560296 zeroinitializer
@VarAccessExpressionNode_vtable_data = global %VarAccessExpressionNode_vtable_ty.560300 zeroinitializer
@ArrayExpressionNode_vtable_data = global %ArrayExpressionNode_vtable_ty.560302 zeroinitializer
@NewExpressionNode_vtable_data = global %NewExpressionNode_vtable_ty.560304 zeroinitializer
@ExpressionIndexNode_vtable_data = global %ExpressionIndexNode_vtable_ty.560306 zeroinitializer
@MemberExpressionNode_vtable_data = global %MemberExpressionNode_vtable_ty.560308 zeroinitializer
@CallExpressionNode_vtable_data = global %CallExpressionNode_vtable_ty.560310 zeroinitializer
@TypeCastExpressionNode_vtable_data = global %TypeCastExpressionNode_vtable_ty.560312 zeroinitializer
@BinaryExpressionNode_vtable_data = global %BinaryExpressionNode_vtable_ty.560314 zeroinitializer
@TernaryExpressionNode_vtable_data = global %TernaryExpressionNode_vtable_ty.560316 zeroinitializer
@UnaryExpressionNode_vtable_data = global %UnaryExpressionNode_vtable_ty.560318 zeroinitializer
@IfStatementNode_vtable_data = global %IfStatementNode_vtable_ty.560320 zeroinitializer
@WhileStatementNode_vtable_data = global %WhileStatementNode_vtable_ty.560322 zeroinitializer
@ForStatementNode_vtable_data = global %ForStatementNode_vtable_ty.560324 zeroinitializer
@ReturnStatementNode_vtable_data = global %ReturnStatementNode_vtable_ty.560326 zeroinitializer
@VarDeclarationStatement_vtable_data = global %VarDeclarationStatement_vtable_ty.560328 zeroinitializer
@ConstDeclarationStatement_vtable_data = global %ConstDeclarationStatement_vtable_ty.560330 zeroinitializer
@ArgNode_vtable_data = global %ArgNode_vtable_ty.560332 zeroinitializer
@"Array<ArgNode>_vtable_data" = global %"Array<ArgNode>_vtable_ty.560336" { void (%"Array<ArgNode>.560335"*)* @"Array<ArgNode>_resize", void (%"Array<ArgNode>.560335"*, i64, i64)* @"Array<ArgNode>_swap", void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)* @"Array<ArgNode>___sl__", void (%"Array<ArgNode>.560335"*, i64, %ArgNode.560331*)* @"Array<ArgNode>___setitem__", void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)* @"Array<ArgNode>_append", %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)* @"Array<ArgNode>___getitem__", i1 (%"Array<ArgNode>.560335"*, %"Array<ArgNode>.560335"*)* @"Array<ArgNode>___eq__", i1 (%"Array<ArgNode>.560335"*, %ArgNode.560331*)* @"Array<ArgNode>___in__", i64 (%"Array<ArgNode>.560335"*, %ArgNode.560331*)* @"Array<ArgNode>_find" }
@FunctionDeclarationNode_vtable_data = global %FunctionDeclarationNode_vtable_ty.560334 zeroinitializer
@MethodNode_vtable_data = global %MethodNode_vtable_ty.560338 zeroinitializer
@FieldNode_vtable_data = global %FieldNode_vtable_ty.560340 zeroinitializer
@GenericParameterNode_vtable_data = global %GenericParameterNode_vtable_ty.560342 zeroinitializer
@"Array<GenericParameterNode>_vtable_data" = global %"Array<GenericParameterNode>_vtable_ty.560348" { void (%"Array<GenericParameterNode>.560345"*)* @"Array<GenericParameterNode>_resize", void (%"Array<GenericParameterNode>.560345"*, i64, i64)* @"Array<GenericParameterNode>_swap", void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)* @"Array<GenericParameterNode>___sl__", void (%"Array<GenericParameterNode>.560345"*, i64, %GenericParameterNode.560341*)* @"Array<GenericParameterNode>___setitem__", void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)* @"Array<GenericParameterNode>_append", %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)* @"Array<GenericParameterNode>___getitem__", i1 (%"Array<GenericParameterNode>.560345"*, %"Array<GenericParameterNode>.560345"*)* @"Array<GenericParameterNode>___eq__", i1 (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)* @"Array<GenericParameterNode>___in__", i64 (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)* @"Array<GenericParameterNode>_find" }
@"Array<FieldNode>_vtable_data" = global %"Array<FieldNode>_vtable_ty.560349" { void (%"Array<FieldNode>.560346"*)* @"Array<FieldNode>_resize", void (%"Array<FieldNode>.560346"*, i64, i64)* @"Array<FieldNode>_swap", void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)* @"Array<FieldNode>___sl__", void (%"Array<FieldNode>.560346"*, i64, %FieldNode.560339*)* @"Array<FieldNode>___setitem__", void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)* @"Array<FieldNode>_append", %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)* @"Array<FieldNode>___getitem__", i1 (%"Array<FieldNode>.560346"*, %"Array<FieldNode>.560346"*)* @"Array<FieldNode>___eq__", i1 (%"Array<FieldNode>.560346"*, %FieldNode.560339*)* @"Array<FieldNode>___in__", i64 (%"Array<FieldNode>.560346"*, %FieldNode.560339*)* @"Array<FieldNode>_find" }
@"Array<MethodNode>_vtable_data" = global %"Array<MethodNode>_vtable_ty.560350" { void (%"Array<MethodNode>.560347"*)* @"Array<MethodNode>_resize", void (%"Array<MethodNode>.560347"*, i64, i64)* @"Array<MethodNode>_swap", void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)* @"Array<MethodNode>___sl__", void (%"Array<MethodNode>.560347"*, i64, %MethodNode.560337*)* @"Array<MethodNode>___setitem__", void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)* @"Array<MethodNode>_append", %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)* @"Array<MethodNode>___getitem__", i1 (%"Array<MethodNode>.560347"*, %"Array<MethodNode>.560347"*)* @"Array<MethodNode>___eq__", i1 (%"Array<MethodNode>.560347"*, %MethodNode.560337*)* @"Array<MethodNode>___in__", i64 (%"Array<MethodNode>.560347"*, %MethodNode.560337*)* @"Array<MethodNode>_find" }
@ClassDeclarationNode_vtable_data = global %ClassDeclarationNode_vtable_ty.560344 zeroinitializer
@EnumNodeField_vtable_data = global %EnumNodeField_vtable_ty.560352 zeroinitializer
@"Array<EnumNodeField>_vtable_data" = global %"Array<EnumNodeField>_vtable_ty.560356" { void (%"Array<EnumNodeField>.560355"*)* @"Array<EnumNodeField>_resize", void (%"Array<EnumNodeField>.560355"*, i64, i64)* @"Array<EnumNodeField>_swap", void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)* @"Array<EnumNodeField>___sl__", void (%"Array<EnumNodeField>.560355"*, i64, %EnumNodeField.560351*)* @"Array<EnumNodeField>___setitem__", void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)* @"Array<EnumNodeField>_append", %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)* @"Array<EnumNodeField>___getitem__", i1 (%"Array<EnumNodeField>.560355"*, %"Array<EnumNodeField>.560355"*)* @"Array<EnumNodeField>___eq__", i1 (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)* @"Array<EnumNodeField>___in__", i64 (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)* @"Array<EnumNodeField>_find" }
@EnumNode_vtable_data = global %EnumNode_vtable_ty.560354 zeroinitializer
@"Array<IdentifierToken>_vtable_data" = global %"Array<IdentifierToken>_vtable_ty.560360" { void (%"Array<IdentifierToken>.560359"*)* @"Array<IdentifierToken>_resize", void (%"Array<IdentifierToken>.560359"*, i64, i64)* @"Array<IdentifierToken>_swap", void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)* @"Array<IdentifierToken>___sl__", void (%"Array<IdentifierToken>.560359"*, i64, %IdentifierToken.560263*)* @"Array<IdentifierToken>___setitem__", void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)* @"Array<IdentifierToken>_append", %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)* @"Array<IdentifierToken>___getitem__", i1 (%"Array<IdentifierToken>.560359"*, %"Array<IdentifierToken>.560359"*)* @"Array<IdentifierToken>___eq__", i1 (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)* @"Array<IdentifierToken>___in__", i64 (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)* @"Array<IdentifierToken>_find" }
@ImportNode_vtable_data = global %ImportNode_vtable_ty.560358 zeroinitializer
@TypeAliasNode_vtable_data = global %TypeAliasNode_vtable_ty.560362 zeroinitializer
@"Array<FunctionDeclarationNode>_vtable_data" = global %"Array<FunctionDeclarationNode>_vtable_ty.560372" { void (%"Array<FunctionDeclarationNode>.560365"*)* @"Array<FunctionDeclarationNode>_resize", void (%"Array<FunctionDeclarationNode>.560365"*, i64, i64)* @"Array<FunctionDeclarationNode>_swap", void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)* @"Array<FunctionDeclarationNode>___sl__", void (%"Array<FunctionDeclarationNode>.560365"*, i64, %FunctionDeclarationNode.560333*)* @"Array<FunctionDeclarationNode>___setitem__", void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)* @"Array<FunctionDeclarationNode>_append", %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)* @"Array<FunctionDeclarationNode>___getitem__", i1 (%"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"*)* @"Array<FunctionDeclarationNode>___eq__", i1 (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)* @"Array<FunctionDeclarationNode>___in__", i64 (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)* @"Array<FunctionDeclarationNode>_find" }
@"Array<ClassDeclarationNode>_vtable_data" = global %"Array<ClassDeclarationNode>_vtable_ty.560373" { void (%"Array<ClassDeclarationNode>.560366"*)* @"Array<ClassDeclarationNode>_resize", void (%"Array<ClassDeclarationNode>.560366"*, i64, i64)* @"Array<ClassDeclarationNode>_swap", void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)* @"Array<ClassDeclarationNode>___sl__", void (%"Array<ClassDeclarationNode>.560366"*, i64, %ClassDeclarationNode.560343*)* @"Array<ClassDeclarationNode>___setitem__", void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)* @"Array<ClassDeclarationNode>_append", %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)* @"Array<ClassDeclarationNode>___getitem__", i1 (%"Array<ClassDeclarationNode>.560366"*, %"Array<ClassDeclarationNode>.560366"*)* @"Array<ClassDeclarationNode>___eq__", i1 (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)* @"Array<ClassDeclarationNode>___in__", i64 (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)* @"Array<ClassDeclarationNode>_find" }
@"Array<EnumNode>_vtable_data" = global %"Array<EnumNode>_vtable_ty.560374" { void (%"Array<EnumNode>.560367"*)* @"Array<EnumNode>_resize", void (%"Array<EnumNode>.560367"*, i64, i64)* @"Array<EnumNode>_swap", void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)* @"Array<EnumNode>___sl__", void (%"Array<EnumNode>.560367"*, i64, %EnumNode.560353*)* @"Array<EnumNode>___setitem__", void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)* @"Array<EnumNode>_append", %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)* @"Array<EnumNode>___getitem__", i1 (%"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"*)* @"Array<EnumNode>___eq__", i1 (%"Array<EnumNode>.560367"*, %EnumNode.560353*)* @"Array<EnumNode>___in__", i64 (%"Array<EnumNode>.560367"*, %EnumNode.560353*)* @"Array<EnumNode>_find" }
@"Array<ImportNode>_vtable_data" = global %"Array<ImportNode>_vtable_ty.560375" { void (%"Array<ImportNode>.560368"*)* @"Array<ImportNode>_resize", void (%"Array<ImportNode>.560368"*, i64, i64)* @"Array<ImportNode>_swap", void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)* @"Array<ImportNode>___sl__", void (%"Array<ImportNode>.560368"*, i64, %ImportNode.560357*)* @"Array<ImportNode>___setitem__", void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)* @"Array<ImportNode>_append", %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)* @"Array<ImportNode>___getitem__", i1 (%"Array<ImportNode>.560368"*, %"Array<ImportNode>.560368"*)* @"Array<ImportNode>___eq__", i1 (%"Array<ImportNode>.560368"*, %ImportNode.560357*)* @"Array<ImportNode>___in__", i64 (%"Array<ImportNode>.560368"*, %ImportNode.560357*)* @"Array<ImportNode>_find" }
@"Array<ConstDeclarationStatement>_vtable_data" = global %"Array<ConstDeclarationStatement>_vtable_ty.560376" { void (%"Array<ConstDeclarationStatement>.560369"*)* @"Array<ConstDeclarationStatement>_resize", void (%"Array<ConstDeclarationStatement>.560369"*, i64, i64)* @"Array<ConstDeclarationStatement>_swap", void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)* @"Array<ConstDeclarationStatement>___sl__", void (%"Array<ConstDeclarationStatement>.560369"*, i64, %ConstDeclarationStatement.560329*)* @"Array<ConstDeclarationStatement>___setitem__", void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)* @"Array<ConstDeclarationStatement>_append", %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)* @"Array<ConstDeclarationStatement>___getitem__", i1 (%"Array<ConstDeclarationStatement>.560369"*, %"Array<ConstDeclarationStatement>.560369"*)* @"Array<ConstDeclarationStatement>___eq__", i1 (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)* @"Array<ConstDeclarationStatement>___in__", i64 (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)* @"Array<ConstDeclarationStatement>_find" }
@"Array<VarDeclarationStatement>_vtable_data" = global %"Array<VarDeclarationStatement>_vtable_ty.560377" { void (%"Array<VarDeclarationStatement>.560370"*)* @"Array<VarDeclarationStatement>_resize", void (%"Array<VarDeclarationStatement>.560370"*, i64, i64)* @"Array<VarDeclarationStatement>_swap", void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)* @"Array<VarDeclarationStatement>___sl__", void (%"Array<VarDeclarationStatement>.560370"*, i64, %VarDeclarationStatement.560327*)* @"Array<VarDeclarationStatement>___setitem__", void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)* @"Array<VarDeclarationStatement>_append", %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)* @"Array<VarDeclarationStatement>___getitem__", i1 (%"Array<VarDeclarationStatement>.560370"*, %"Array<VarDeclarationStatement>.560370"*)* @"Array<VarDeclarationStatement>___eq__", i1 (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)* @"Array<VarDeclarationStatement>___in__", i64 (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)* @"Array<VarDeclarationStatement>_find" }
@"Array<TypeAliasNode>_vtable_data" = global %"Array<TypeAliasNode>_vtable_ty.560378" { void (%"Array<TypeAliasNode>.560371"*)* @"Array<TypeAliasNode>_resize", void (%"Array<TypeAliasNode>.560371"*, i64, i64)* @"Array<TypeAliasNode>_swap", void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)* @"Array<TypeAliasNode>___sl__", void (%"Array<TypeAliasNode>.560371"*, i64, %TypeAliasNode.560361*)* @"Array<TypeAliasNode>___setitem__", void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)* @"Array<TypeAliasNode>_append", %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)* @"Array<TypeAliasNode>___getitem__", i1 (%"Array<TypeAliasNode>.560371"*, %"Array<TypeAliasNode>.560371"*)* @"Array<TypeAliasNode>___eq__", i1 (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)* @"Array<TypeAliasNode>___in__", i64 (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)* @"Array<TypeAliasNode>_find" }
@ModuleAST_vtable_data = global %ModuleAST_vtable_ty.560364 zeroinitializer
@Parser_vtable_data = global %Parser_vtable_ty.560380 { i1 (%Parser.560379*)* @Parser_can_parse, void (%Parser.560379*, %string.560217*)* @Parser_error, void (%Parser.560379*)* @Parser_advance, %Token.560247* (%Parser.560379*, i64)* @Parser_peek, %Token.560247* (%Parser.560379*, i64)* @Parser_eat, void (%Parser.560379*)* @Parser_new_lines, %TypeNode.560269* (%Parser.560379*)* @Parser_parse_primitive_type, void (%Parser.560379*, %"Array<TypeNode>.560273"*)* @Parser_parse_type_list, %RecordTypeNode.560271* (%Parser.560379*)* @Parser_parse_object_type, %FunctionTypeNode.560275* (%Parser.560379*)* @Parser_parse_function_type, %TypeNode.560269* (%Parser.560379*)* @Parser_parse_type, void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)* @Parser_parse_expression_list, %ArrayExpressionNode.560301* (%Parser.560379*)* @Parser_parse_array_expression, %NewExpressionNode.560303* (%Parser.560379*)* @Parser_parse_new_expression, %StringExpressionNode.560295* (%Parser.560379*)* @Parser_parse_string, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_atom, %ExpressionIndexNode.560305* (%Parser.560379*, %ExpressionNode.560285*)* @Parser_parse_index_expression, %CallExpressionNode.560309* (%Parser.560379*, %ExpressionNode.560285*)* @Parser_parse_call_expression, %MemberExpressionNode.560307* (%Parser.560379*, %ExpressionNode.560285*)* @Parser_parse_member_expression, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_lhs_expression_allow_call, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_unary_expression_post, i64 (%Parser.560379*)* @Parser_is_unary_op, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_unary_expression_pre, i64 (%Parser.560379*)* @Parser_is_term_expr_op, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_term_expression, i64 (%Parser.560379*)* @Parser_is_arith_expr_op, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_arithmetic_expression, i64 (%Parser.560379*)* @Parser_is_bitshift_expr_op, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_bitshift_expression, i64 (%Parser.560379*)* @Parser_is_comp_expr_op, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_comparasion_expression, i64 (%Parser.560379*)* @Parser_is_logic_expr_op, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_bit_expression, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_range_expression, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_typecast_expression, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_ternary_expression, i64 (%Parser.560379*)* @Parser_is_assign_op, %ExpressionNode.560285* (%Parser.560379*)* @Parser_parse_expression, %IfStatementNode.560319* (%Parser.560379*)* @Parser_parse_if_statement, %WhileStatementNode.560321* (%Parser.560379*)* @Parser_parse_while_statement, %ForStatementNode.560323* (%Parser.560379*)* @Parser_parse_for_statement, %VarDeclarationStatement.560327* (%Parser.560379*)* @Parser_parse_variable_declaration_statement, %ReturnStatementNode.560325* (%Parser.560379*)* @Parser_parse_return_statement, %StatementNode.560279* (%Parser.560379*)* @Parser_parse_statement, %BlockNode.560281* (%Parser.560379*)* @Parser_parse_block, %TypeAliasNode.560361* (%Parser.560379*)* @Parser_parse_type_alias, %ArgNode.560331* (%Parser.560379*)* @Parser_parse_arg, void (%Parser.560379*, %"Array<ArgNode>.560335"*)* @Parser_parse_args, %FunctionDeclarationNode.560333* (%Parser.560379*)* @Parser_parse_function, %MethodNode.560337* (%Parser.560379*)* @Parser_parse_method, i64 (%Parser.560379*)* @Parser_parse_access_modifier, void (%Parser.560379*, %ClassDeclarationNode.560343*)* @Parser_parse_class_block, void (%Parser.560379*, %"Array<GenericParameterNode>.560345"*)* @Parser_parse_generic_parameters, %ClassDeclarationNode.560343* (%Parser.560379*)* @Parser_parse_class, %ConstDeclarationStatement.560329* (%Parser.560379*)* @Parser_parse_const_declaration_statement, %ImportNode.560357* (%Parser.560379*)* @Parser_parse_import, %EnumNode.560353* (%Parser.560379*)* @Parser_parse_enum, %ModuleAST.560363* (%Parser.560379*, %"Array<Token>.560259"*, %"Array<FloError>.560238"*)* @Parser_parse }
@str.144 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00"
@str.145 = private unnamed_addr constant [13 x i8] c"Expected '='\00"
@str.146 = private unnamed_addr constant [13 x i8] c"Expected ':'\00"
@str.147 = private unnamed_addr constant [13 x i8] c"Expected '('\00"
@str.148 = private unnamed_addr constant [13 x i8] c"Expected ')'\00"
@str.149 = private unnamed_addr constant [13 x i8] c"Expected '{'\00"
@str.150 = private unnamed_addr constant [13 x i8] c"Expected '}'\00"
@str.151 = private unnamed_addr constant [13 x i8] c"Expected ','\00"
@str.152 = private unnamed_addr constant [13 x i8] c"Expected '<'\00"
@str.153 = private unnamed_addr constant [13 x i8] c"Expected '>'\00"
@str.154 = private unnamed_addr constant [14 x i8] c"Expected '=>'\00"
@str.155 = private unnamed_addr constant [27 x i8] c"Expected a type definition\00"
@str.156 = private unnamed_addr constant [6 x i8] c"Array\00"
@str.157 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00"
@str.158 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00"
@str.159 = private unnamed_addr constant [5 x i8] c"this\00"
@str.160 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00"
@str.161 = private unnamed_addr constant [5 x i8] c"type\00"
@str.162 = private unnamed_addr constant [80 x i8] c"Illegal expression expected: 'fnc', 'class', 'enum', 'import', 'const' or 'let'\00"
@Type_vtable_data = global %Type_vtable_ty.560382 zeroinitializer
@BooleanType_vtable_data = global %BooleanType_vtable_ty.560384 zeroinitializer
@PointerType_vtable_data = global %PointerType_vtable_ty.560386 zeroinitializer
@"Array<Type>_vtable_data" = global %"Array<Type>_vtable_ty.560390" { void (%"Array<Type>.560389"*)* @"Array<Type>_resize", void (%"Array<Type>.560389"*, i64, i64)* @"Array<Type>_swap", void (%"Array<Type>.560389"*, %Type.560381*)* @"Array<Type>___sl__", void (%"Array<Type>.560389"*, i64, %Type.560381*)* @"Array<Type>___setitem__", void (%"Array<Type>.560389"*, %Type.560381*)* @"Array<Type>_append", %Type.560381* (%"Array<Type>.560389"*, i64)* @"Array<Type>___getitem__", i1 (%"Array<Type>.560389"*, %"Array<Type>.560389"*)* @"Array<Type>___eq__", i1 (%"Array<Type>.560389"*, %Type.560381*)* @"Array<Type>___in__", i64 (%"Array<Type>.560389"*, %Type.560381*)* @"Array<Type>_find" }
@FunctionType_vtable_data = global %FunctionType_vtable_ty.560388 zeroinitializer
@Value_vtable_data = local_unnamed_addr global %Value_vtable_ty.560392 zeroinitializer
@Statement_vtable_data = global %Statement_vtable_ty.560394 zeroinitializer
@TypeId_vtable_data = local_unnamed_addr global %TypeId_vtable_ty.560396 zeroinitializer
@ClassId_vtable_data = global %ClassId_vtable_ty.560398 zeroinitializer
@EnumId_vtable_data = global %EnumId_vtable_ty.560400 zeroinitializer
@Expression_vtable_data = local_unnamed_addr global %Expression_vtable_ty.560402 zeroinitializer
@ArrayType_vtable_data = global %ArrayType_vtable_ty.560404 zeroinitializer
@GenericType_vtable_data = global %GenericType_vtable_ty.560406 zeroinitializer
@ObjectType_vtable_data = global %ObjectType_vtable_ty.560408 zeroinitializer
@EnumType_vtable_data = global %EnumType_vtable_ty.560410 zeroinitializer
@IntExpression_vtable_data = global %IntExpression_vtable_ty.560412 zeroinitializer
@BooleanExpression_vtable_data = global %BooleanExpression_vtable_ty.560414 zeroinitializer
@FloatExpression_vtable_data = global %FloatExpression_vtable_ty.560416 zeroinitializer
@"Array<Expression>_vtable_data" = global %"Array<Expression>_vtable_ty.560420" { void (%"Array<Expression>.560419"*)* @"Array<Expression>_resize", void (%"Array<Expression>.560419"*, i64, i64)* @"Array<Expression>_swap", void (%"Array<Expression>.560419"*, %Expression.560401*)* @"Array<Expression>___sl__", void (%"Array<Expression>.560419"*, i64, %Expression.560401*)* @"Array<Expression>___setitem__", void (%"Array<Expression>.560419"*, %Expression.560401*)* @"Array<Expression>_append", %Expression.560401* (%"Array<Expression>.560419"*, i64)* @"Array<Expression>___getitem__", i1 (%"Array<Expression>.560419"*, %"Array<Expression>.560419"*)* @"Array<Expression>___eq__", i1 (%"Array<Expression>.560419"*, %Expression.560401*)* @"Array<Expression>___in__", i64 (%"Array<Expression>.560419"*, %Expression.560401*)* @"Array<Expression>_find" }
@StringExpression_vtable_data = global %StringExpression_vtable_ty.560418 zeroinitializer
@NullExpression_vtable_data = global %NullExpression_vtable_ty.560422 zeroinitializer
@ArrayExpression_vtable_data = global %ArrayExpression_vtable_ty.560424 zeroinitializer
@BinaryExpression_vtable_data = global %BinaryExpression_vtable_ty.560426 zeroinitializer
@UnaryExpression_vtable_data = global %UnaryExpression_vtable_ty.560428 zeroinitializer
@TernaryExpression_vtable_data = global %TernaryExpression_vtable_ty.560430 zeroinitializer
@TypeCastExpression_vtable_data = global %TypeCastExpression_vtable_ty.560432 zeroinitializer
@NewExpression_vtable_data = global %NewExpression_vtable_ty.560434 zeroinitializer
@IndexExpression_vtable_data = global %IndexExpression_vtable_ty.560436 zeroinitializer
@CallExpression_vtable_data = global %CallExpression_vtable_ty.560438 zeroinitializer
@IntrinsicCall_vtable_data = global %IntrinsicCall_vtable_ty.560440 zeroinitializer
@VarId_vtable_data = global %VarId_vtable_ty.560442 zeroinitializer
@ClassVarId_vtable_data = global %ClassVarId_vtable_ty.560444 { %ClassId.560397* (%ClassVarId.560443*)* @ClassVarId_to_classId }
@EnumVarId_vtable_data = global %EnumVarId_vtable_ty.560446 { %EnumId.560399* (%EnumVarId.560445*)* @EnumVarId_to_enumId }
@ConstId_vtable_data = global %ConstId_vtable_ty.560448 zeroinitializer
@PropId_vtable_data = global %PropId_vtable_ty.560450 zeroinitializer
@MemberExpression_vtable_data = global %MemberExpression_vtable_ty.560452 zeroinitializer
@VarAccessExpression_vtable_data = global %VarAccessExpression_vtable_ty.560454 zeroinitializer
@"Array<Statement>_vtable_data" = global %"Array<Statement>_vtable_ty.560458" { void (%"Array<Statement>.560457"*)* @"Array<Statement>_resize", void (%"Array<Statement>.560457"*, i64, i64)* @"Array<Statement>_swap", void (%"Array<Statement>.560457"*, %Statement.560393*)* @"Array<Statement>___sl__", void (%"Array<Statement>.560457"*, i64, %Statement.560393*)* @"Array<Statement>___setitem__", void (%"Array<Statement>.560457"*, %Statement.560393*)* @"Array<Statement>_append", %Statement.560393* (%"Array<Statement>.560457"*, i64)* @"Array<Statement>___getitem__", i1 (%"Array<Statement>.560457"*, %"Array<Statement>.560457"*)* @"Array<Statement>___eq__", i1 (%"Array<Statement>.560457"*, %Statement.560393*)* @"Array<Statement>___in__", i64 (%"Array<Statement>.560457"*, %Statement.560393*)* @"Array<Statement>_find" }
@Block_vtable_data = global %Block_vtable_ty.560456 zeroinitializer
@IfStatement_vtable_data = global %IfStatement_vtable_ty.560460 zeroinitializer
@VarDeclaration_vtable_data = global %VarDeclaration_vtable_ty.560462 zeroinitializer
@ConstDeclaration_vtable_data = global %ConstDeclaration_vtable_ty.560464 zeroinitializer
@ForStatement_vtable_data = global %ForStatement_vtable_ty.560466 zeroinitializer
@WhileStatement_vtable_data = global %WhileStatement_vtable_ty.560468 zeroinitializer
@ReturnStatement_vtable_data = global %ReturnStatement_vtable_ty.560470 zeroinitializer
@str.163 = private unnamed_addr constant [4 x i8] c"i%d\00"
@str.164 = private unnamed_addr constant [4 x i8] c"f%d\00"
@str.165 = private unnamed_addr constant [7 x i8] c"record\00"
@str.166 = private unnamed_addr constant [8 x i8] c"unknown\00"
@str.167 = private unnamed_addr constant [2 x i8] c"+\00"
@str.168 = private unnamed_addr constant [2 x i8] c"-\00"
@str.169 = private unnamed_addr constant [2 x i8] c"*\00"
@str.170 = private unnamed_addr constant [2 x i8] c"/\00"
@str.171 = private unnamed_addr constant [2 x i8] c"%\00"
@str.172 = private unnamed_addr constant [2 x i8] c">\00"
@str.173 = private unnamed_addr constant [3 x i8] c">=\00"
@str.174 = private unnamed_addr constant [2 x i8] c"<\00"
@str.175 = private unnamed_addr constant [3 x i8] c"<=\00"
@str.176 = private unnamed_addr constant [3 x i8] c"==\00"
@str.177 = private unnamed_addr constant [3 x i8] c"!=\00"
@str.178 = private unnamed_addr constant [3 x i8] c"<<\00"
@str.179 = private unnamed_addr constant [3 x i8] c">>\00"
@str.180 = private unnamed_addr constant [2 x i8] c"=\00"
@str.181 = private unnamed_addr constant [3 x i8] c"..\00"
@str.182 = private unnamed_addr constant [8 x i8] c"++(pre)\00"
@str.183 = private unnamed_addr constant [8 x i8] c"--(pre)\00"
@str.184 = private unnamed_addr constant [9 x i8] c"(post)++\00"
@str.185 = private unnamed_addr constant [9 x i8] c"(post)--\00"
@str.186 = private unnamed_addr constant [2 x i8] c"!\00"
@str.187 = private unnamed_addr constant [2 x i8] c"&\00"
@ScopeId_vtable_data = global %ScopeId_vtable_ty.560472 zeroinitializer
@"Bucket<string, VarId>_vtable_data" = global %"Bucket<string, VarId>_vtable_ty.560481" { void (%"Bucket<string, VarId>.560480"*, %string.560217*, %VarId.560441*)* @"Bucket<string, VarId>_set" }
@"Array<Bucket<string, VarId>>_vtable_data" = global %"Array<Bucket<string, VarId>>_vtable_ty.560483" { void (%"Array<Bucket<string, VarId>>.560482"*)* @"Array<Bucket<string, VarId>>_resize", void (%"Array<Bucket<string, VarId>>.560482"*, i64, i64)* @"Array<Bucket<string, VarId>>_swap", void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)* @"Array<Bucket<string, VarId>>___sl__", void (%"Array<Bucket<string, VarId>>.560482"*, i64, %"Bucket<string, VarId>.560480"*)* @"Array<Bucket<string, VarId>>___setitem__", void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)* @"Array<Bucket<string, VarId>>_append", %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)* @"Array<Bucket<string, VarId>>___getitem__", i1 (%"Array<Bucket<string, VarId>>.560482"*, %"Array<Bucket<string, VarId>>.560482"*)* @"Array<Bucket<string, VarId>>___eq__", i1 (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)* @"Array<Bucket<string, VarId>>___in__", i64 (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)* @"Array<Bucket<string, VarId>>_find" }
@"Map<string, VarId>_vtable_data" = global %"Map<string, VarId>_vtable_ty.560479" { i64 (%"Map<string, VarId>.560475"*, %string.560217*)* @"Map<string, VarId>_hash_fnc", void (%"Map<string, VarId>.560475"*)* @"Map<string, VarId>_resize", void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)* @"Map<string, VarId>_set", %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)* @"Map<string, VarId>_get", %"Array<Bucket<string, VarId>>.560482"* (%"Map<string, VarId>.560475"*)* @"Map<string, VarId>_get_buckets" }
@"Bucket<string, ClassId>_vtable_data" = global %"Bucket<string, ClassId>_vtable_ty.560486" { void (%"Bucket<string, ClassId>.560485"*, %string.560217*, %ClassId.560397*)* @"Bucket<string, ClassId>_set" }
@"Array<Bucket<string, ClassId>>_vtable_data" = global %"Array<Bucket<string, ClassId>>_vtable_ty.560488" { void (%"Array<Bucket<string, ClassId>>.560487"*)* @"Array<Bucket<string, ClassId>>_resize", void (%"Array<Bucket<string, ClassId>>.560487"*, i64, i64)* @"Array<Bucket<string, ClassId>>_swap", void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)* @"Array<Bucket<string, ClassId>>___sl__", void (%"Array<Bucket<string, ClassId>>.560487"*, i64, %"Bucket<string, ClassId>.560485"*)* @"Array<Bucket<string, ClassId>>___setitem__", void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)* @"Array<Bucket<string, ClassId>>_append", %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)* @"Array<Bucket<string, ClassId>>___getitem__", i1 (%"Array<Bucket<string, ClassId>>.560487"*, %"Array<Bucket<string, ClassId>>.560487"*)* @"Array<Bucket<string, ClassId>>___eq__", i1 (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)* @"Array<Bucket<string, ClassId>>___in__", i64 (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)* @"Array<Bucket<string, ClassId>>_find" }
@"Map<string, ClassId>_vtable_data" = global %"Map<string, ClassId>_vtable_ty.560484" { i64 (%"Map<string, ClassId>.560476"*, %string.560217*)* @"Map<string, ClassId>_hash_fnc", void (%"Map<string, ClassId>.560476"*)* @"Map<string, ClassId>_resize", void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)* @"Map<string, ClassId>_set", %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)* @"Map<string, ClassId>_get", %"Array<Bucket<string, ClassId>>.560487"* (%"Map<string, ClassId>.560476"*)* @"Map<string, ClassId>_get_buckets" }
@"Bucket<string, EnumId>_vtable_data" = global %"Bucket<string, EnumId>_vtable_ty.560491" { void (%"Bucket<string, EnumId>.560490"*, %string.560217*, %EnumId.560399*)* @"Bucket<string, EnumId>_set" }
@"Array<Bucket<string, EnumId>>_vtable_data" = global %"Array<Bucket<string, EnumId>>_vtable_ty.560493" { void (%"Array<Bucket<string, EnumId>>.560492"*)* @"Array<Bucket<string, EnumId>>_resize", void (%"Array<Bucket<string, EnumId>>.560492"*, i64, i64)* @"Array<Bucket<string, EnumId>>_swap", void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)* @"Array<Bucket<string, EnumId>>___sl__", void (%"Array<Bucket<string, EnumId>>.560492"*, i64, %"Bucket<string, EnumId>.560490"*)* @"Array<Bucket<string, EnumId>>___setitem__", void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)* @"Array<Bucket<string, EnumId>>_append", %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)* @"Array<Bucket<string, EnumId>>___getitem__", i1 (%"Array<Bucket<string, EnumId>>.560492"*, %"Array<Bucket<string, EnumId>>.560492"*)* @"Array<Bucket<string, EnumId>>___eq__", i1 (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)* @"Array<Bucket<string, EnumId>>___in__", i64 (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)* @"Array<Bucket<string, EnumId>>_find" }
@"Map<string, EnumId>_vtable_data" = global %"Map<string, EnumId>_vtable_ty.560489" { i64 (%"Map<string, EnumId>.560477"*, %string.560217*)* @"Map<string, EnumId>_hash_fnc", void (%"Map<string, EnumId>.560477"*)* @"Map<string, EnumId>_resize", void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)* @"Map<string, EnumId>_set", %EnumId.560399* (%"Map<string, EnumId>.560477"*, %string.560217*)* @"Map<string, EnumId>_get", %"Array<Bucket<string, EnumId>>.560492"* (%"Map<string, EnumId>.560477"*)* @"Map<string, EnumId>_get_buckets" }
@"Bucket<string, Type>_vtable_data" = global %"Bucket<string, Type>_vtable_ty.560496" { void (%"Bucket<string, Type>.560495"*, %string.560217*, %Type.560381*)* @"Bucket<string, Type>_set" }
@"Array<Bucket<string, Type>>_vtable_data" = global %"Array<Bucket<string, Type>>_vtable_ty.560498" { void (%"Array<Bucket<string, Type>>.560497"*)* @"Array<Bucket<string, Type>>_resize", void (%"Array<Bucket<string, Type>>.560497"*, i64, i64)* @"Array<Bucket<string, Type>>_swap", void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)* @"Array<Bucket<string, Type>>___sl__", void (%"Array<Bucket<string, Type>>.560497"*, i64, %"Bucket<string, Type>.560495"*)* @"Array<Bucket<string, Type>>___setitem__", void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)* @"Array<Bucket<string, Type>>_append", %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)* @"Array<Bucket<string, Type>>___getitem__", i1 (%"Array<Bucket<string, Type>>.560497"*, %"Array<Bucket<string, Type>>.560497"*)* @"Array<Bucket<string, Type>>___eq__", i1 (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)* @"Array<Bucket<string, Type>>___in__", i64 (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)* @"Array<Bucket<string, Type>>_find" }
@"Map<string, Type>_vtable_data" = global %"Map<string, Type>_vtable_ty.560494" { i64 (%"Map<string, Type>.560478"*, %string.560217*)* @"Map<string, Type>_hash_fnc", void (%"Map<string, Type>.560478"*)* @"Map<string, Type>_resize", void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)* @"Map<string, Type>_set", %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)* @"Map<string, Type>_get", %"Array<Bucket<string, Type>>.560497"* (%"Map<string, Type>.560478"*)* @"Map<string, Type>_get_buckets" }
@Scope_vtable_data = global %Scope_vtable_ty.560474 zeroinitializer
@FunctionArg_vtable_data = global %FunctionArg_vtable_ty.560500 zeroinitializer
@"Array<FunctionArg>_vtable_data" = global %"Array<FunctionArg>_vtable_ty.560504" { void (%"Array<FunctionArg>.560503"*)* @"Array<FunctionArg>_resize", void (%"Array<FunctionArg>.560503"*, i64, i64)* @"Array<FunctionArg>_swap", void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)* @"Array<FunctionArg>___sl__", void (%"Array<FunctionArg>.560503"*, i64, %FunctionArg.560499*)* @"Array<FunctionArg>___setitem__", void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)* @"Array<FunctionArg>_append", %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)* @"Array<FunctionArg>___getitem__", i1 (%"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"*)* @"Array<FunctionArg>___eq__", i1 (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)* @"Array<FunctionArg>___in__", i64 (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)* @"Array<FunctionArg>_find" }
@Function_vtable_data = global %Function_vtable_ty.560502 zeroinitializer
@Var_vtable_data = global %Var_vtable_ty.560506 zeroinitializer
@Const_vtable_data = global %Const_vtable_ty.560508 zeroinitializer
@ClassField_vtable_data = global %ClassField_vtable_ty.560510 zeroinitializer
@ClassMethod_vtable_data = global %ClassMethod_vtable_ty.560512 zeroinitializer
@"Array<ClassField>_vtable_data" = global %"Array<ClassField>_vtable_ty.560518" { void (%"Array<ClassField>.560515"*)* @"Array<ClassField>_resize", void (%"Array<ClassField>.560515"*, i64, i64)* @"Array<ClassField>_swap", void (%"Array<ClassField>.560515"*, %ClassField.560509*)* @"Array<ClassField>___sl__", void (%"Array<ClassField>.560515"*, i64, %ClassField.560509*)* @"Array<ClassField>___setitem__", void (%"Array<ClassField>.560515"*, %ClassField.560509*)* @"Array<ClassField>_append", %ClassField.560509* (%"Array<ClassField>.560515"*, i64)* @"Array<ClassField>___getitem__", i1 (%"Array<ClassField>.560515"*, %"Array<ClassField>.560515"*)* @"Array<ClassField>___eq__", i1 (%"Array<ClassField>.560515"*, %ClassField.560509*)* @"Array<ClassField>___in__", i64 (%"Array<ClassField>.560515"*, %ClassField.560509*)* @"Array<ClassField>_find" }
@"Array<ClassMethod>_vtable_data" = global %"Array<ClassMethod>_vtable_ty.560519" { void (%"Array<ClassMethod>.560516"*)* @"Array<ClassMethod>_resize", void (%"Array<ClassMethod>.560516"*, i64, i64)* @"Array<ClassMethod>_swap", void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)* @"Array<ClassMethod>___sl__", void (%"Array<ClassMethod>.560516"*, i64, %ClassMethod.560511*)* @"Array<ClassMethod>___setitem__", void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)* @"Array<ClassMethod>_append", %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)* @"Array<ClassMethod>___getitem__", i1 (%"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"*)* @"Array<ClassMethod>___eq__", i1 (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)* @"Array<ClassMethod>___in__", i64 (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)* @"Array<ClassMethod>_find" }
@"Bucket<string, PropId>_vtable_data" = global %"Bucket<string, PropId>_vtable_ty.560522" { void (%"Bucket<string, PropId>.560521"*, %string.560217*, %PropId.560449*)* @"Bucket<string, PropId>_set" }
@"Array<Bucket<string, PropId>>_vtable_data" = global %"Array<Bucket<string, PropId>>_vtable_ty.560524" { void (%"Array<Bucket<string, PropId>>.560523"*)* @"Array<Bucket<string, PropId>>_resize", void (%"Array<Bucket<string, PropId>>.560523"*, i64, i64)* @"Array<Bucket<string, PropId>>_swap", void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)* @"Array<Bucket<string, PropId>>___sl__", void (%"Array<Bucket<string, PropId>>.560523"*, i64, %"Bucket<string, PropId>.560521"*)* @"Array<Bucket<string, PropId>>___setitem__", void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)* @"Array<Bucket<string, PropId>>_append", %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)* @"Array<Bucket<string, PropId>>___getitem__", i1 (%"Array<Bucket<string, PropId>>.560523"*, %"Array<Bucket<string, PropId>>.560523"*)* @"Array<Bucket<string, PropId>>___eq__", i1 (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)* @"Array<Bucket<string, PropId>>___in__", i64 (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)* @"Array<Bucket<string, PropId>>_find" }
@"Map<string, PropId>_vtable_data" = global %"Map<string, PropId>_vtable_ty.560520" { i64 (%"Map<string, PropId>.560517"*, %string.560217*)* @"Map<string, PropId>_hash_fnc", void (%"Map<string, PropId>.560517"*)* @"Map<string, PropId>_resize", void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)* @"Map<string, PropId>_set", %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)* @"Map<string, PropId>_get", %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)* @"Map<string, PropId>_get_buckets" }
@Class_vtable_data = global %Class_vtable_ty.560514 zeroinitializer
@EnumField_vtable_data = global %EnumField_vtable_ty.560526 zeroinitializer
@"Array<EnumField>_vtable_data" = global %"Array<EnumField>_vtable_ty.560530" { void (%"Array<EnumField>.560529"*)* @"Array<EnumField>_resize", void (%"Array<EnumField>.560529"*, i64, i64)* @"Array<EnumField>_swap", void (%"Array<EnumField>.560529"*, %EnumField.560525*)* @"Array<EnumField>___sl__", void (%"Array<EnumField>.560529"*, i64, %EnumField.560525*)* @"Array<EnumField>___setitem__", void (%"Array<EnumField>.560529"*, %EnumField.560525*)* @"Array<EnumField>_append", %EnumField.560525* (%"Array<EnumField>.560529"*, i64)* @"Array<EnumField>___getitem__", i1 (%"Array<EnumField>.560529"*, %"Array<EnumField>.560529"*)* @"Array<EnumField>___eq__", i1 (%"Array<EnumField>.560529"*, %EnumField.560525*)* @"Array<EnumField>___in__", i64 (%"Array<EnumField>.560529"*, %EnumField.560525*)* @"Array<EnumField>_find" }
@Enum_vtable_data = global %Enum_vtable_ty.560528 zeroinitializer
@"Array<Var>_vtable_data" = global %"Array<Var>_vtable_ty.560541" { void (%"Array<Var>.560533"*)* @"Array<Var>_resize", void (%"Array<Var>.560533"*, i64, i64)* @"Array<Var>_swap", void (%"Array<Var>.560533"*, %Var.560505*)* @"Array<Var>___sl__", void (%"Array<Var>.560533"*, i64, %Var.560505*)* @"Array<Var>___setitem__", void (%"Array<Var>.560533"*, %Var.560505*)* @"Array<Var>_append", %Var.560505* (%"Array<Var>.560533"*, i64)* @"Array<Var>___getitem__", i1 (%"Array<Var>.560533"*, %"Array<Var>.560533"*)* @"Array<Var>___eq__", i1 (%"Array<Var>.560533"*, %Var.560505*)* @"Array<Var>___in__", i64 (%"Array<Var>.560533"*, %Var.560505*)* @"Array<Var>_find" }
@"Array<Const>_vtable_data" = global %"Array<Const>_vtable_ty.560542" { void (%"Array<Const>.560534"*)* @"Array<Const>_resize", void (%"Array<Const>.560534"*, i64, i64)* @"Array<Const>_swap", void (%"Array<Const>.560534"*, %Const.560507*)* @"Array<Const>___sl__", void (%"Array<Const>.560534"*, i64, %Const.560507*)* @"Array<Const>___setitem__", void (%"Array<Const>.560534"*, %Const.560507*)* @"Array<Const>_append", %Const.560507* (%"Array<Const>.560534"*, i64)* @"Array<Const>___getitem__", i1 (%"Array<Const>.560534"*, %"Array<Const>.560534"*)* @"Array<Const>___eq__", i1 (%"Array<Const>.560534"*, %Const.560507*)* @"Array<Const>___in__", i64 (%"Array<Const>.560534"*, %Const.560507*)* @"Array<Const>_find" }
@"Array<Class>_vtable_data" = global %"Array<Class>_vtable_ty.560543" { void (%"Array<Class>.560535"*)* @"Array<Class>_resize", void (%"Array<Class>.560535"*, i64, i64)* @"Array<Class>_swap", void (%"Array<Class>.560535"*, %Class.560513*)* @"Array<Class>___sl__", void (%"Array<Class>.560535"*, i64, %Class.560513*)* @"Array<Class>___setitem__", void (%"Array<Class>.560535"*, %Class.560513*)* @"Array<Class>_append", %Class.560513* (%"Array<Class>.560535"*, i64)* @"Array<Class>___getitem__", i1 (%"Array<Class>.560535"*, %"Array<Class>.560535"*)* @"Array<Class>___eq__", i1 (%"Array<Class>.560535"*, %Class.560513*)* @"Array<Class>___in__", i64 (%"Array<Class>.560535"*, %Class.560513*)* @"Array<Class>_find" }
@"Array<Function>_vtable_data" = global %"Array<Function>_vtable_ty.560544" { void (%"Array<Function>.560536"*)* @"Array<Function>_resize", void (%"Array<Function>.560536"*, i64, i64)* @"Array<Function>_swap", void (%"Array<Function>.560536"*, %Function.560501*)* @"Array<Function>___sl__", void (%"Array<Function>.560536"*, i64, %Function.560501*)* @"Array<Function>___setitem__", void (%"Array<Function>.560536"*, %Function.560501*)* @"Array<Function>_append", %Function.560501* (%"Array<Function>.560536"*, i64)* @"Array<Function>___getitem__", i1 (%"Array<Function>.560536"*, %"Array<Function>.560536"*)* @"Array<Function>___eq__", i1 (%"Array<Function>.560536"*, %Function.560501*)* @"Array<Function>___in__", i64 (%"Array<Function>.560536"*, %Function.560501*)* @"Array<Function>_find" }
@"Array<Enum>_vtable_data" = global %"Array<Enum>_vtable_ty.560545" { void (%"Array<Enum>.560537"*)* @"Array<Enum>_resize", void (%"Array<Enum>.560537"*, i64, i64)* @"Array<Enum>_swap", void (%"Array<Enum>.560537"*, %Enum.560527*)* @"Array<Enum>___sl__", void (%"Array<Enum>.560537"*, i64, %Enum.560527*)* @"Array<Enum>___setitem__", void (%"Array<Enum>.560537"*, %Enum.560527*)* @"Array<Enum>_append", %Enum.560527* (%"Array<Enum>.560537"*, i64)* @"Array<Enum>___getitem__", i1 (%"Array<Enum>.560537"*, %"Array<Enum>.560537"*)* @"Array<Enum>___eq__", i1 (%"Array<Enum>.560537"*, %Enum.560527*)* @"Array<Enum>___in__", i64 (%"Array<Enum>.560537"*, %Enum.560527*)* @"Array<Enum>_find" }
@"Array<Scope>_vtable_data" = global %"Array<Scope>_vtable_ty.560546" { void (%"Array<Scope>.560538"*)* @"Array<Scope>_resize", void (%"Array<Scope>.560538"*, i64, i64)* @"Array<Scope>_swap", void (%"Array<Scope>.560538"*, %Scope.560473*)* @"Array<Scope>___sl__", void (%"Array<Scope>.560538"*, i64, %Scope.560473*)* @"Array<Scope>___setitem__", void (%"Array<Scope>.560538"*, %Scope.560473*)* @"Array<Scope>_append", %Scope.560473* (%"Array<Scope>.560538"*, i64)* @"Array<Scope>___getitem__", i1 (%"Array<Scope>.560538"*, %"Array<Scope>.560538"*)* @"Array<Scope>___eq__", i1 (%"Array<Scope>.560538"*, %Scope.560473*)* @"Array<Scope>___in__", i64 (%"Array<Scope>.560538"*, %Scope.560473*)* @"Array<Scope>_find" }
@"Array<ConstDeclaration>_vtable_data" = global %"Array<ConstDeclaration>_vtable_ty.560547" { void (%"Array<ConstDeclaration>.560539"*)* @"Array<ConstDeclaration>_resize", void (%"Array<ConstDeclaration>.560539"*, i64, i64)* @"Array<ConstDeclaration>_swap", void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)* @"Array<ConstDeclaration>___sl__", void (%"Array<ConstDeclaration>.560539"*, i64, %ConstDeclaration.560463*)* @"Array<ConstDeclaration>___setitem__", void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)* @"Array<ConstDeclaration>_append", %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)* @"Array<ConstDeclaration>___getitem__", i1 (%"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"*)* @"Array<ConstDeclaration>___eq__", i1 (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)* @"Array<ConstDeclaration>___in__", i64 (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)* @"Array<ConstDeclaration>_find" }
@"Array<VarDeclaration>_vtable_data" = global %"Array<VarDeclaration>_vtable_ty.560548" { void (%"Array<VarDeclaration>.560540"*)* @"Array<VarDeclaration>_resize", void (%"Array<VarDeclaration>.560540"*, i64, i64)* @"Array<VarDeclaration>_swap", void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)* @"Array<VarDeclaration>___sl__", void (%"Array<VarDeclaration>.560540"*, i64, %VarDeclaration.560461*)* @"Array<VarDeclaration>___setitem__", void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)* @"Array<VarDeclaration>_append", %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)* @"Array<VarDeclaration>___getitem__", i1 (%"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"*)* @"Array<VarDeclaration>___eq__", i1 (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)* @"Array<VarDeclaration>___in__", i64 (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)* @"Array<VarDeclaration>_find" }
@Module_vtable_data = global %Module_vtable_ty.560532 zeroinitializer
@"Array<Module>_vtable_data" = global %"Array<Module>_vtable_ty.560552" { void (%"Array<Module>.560551"*)* @"Array<Module>_resize", void (%"Array<Module>.560551"*, i64, i64)* @"Array<Module>_swap", void (%"Array<Module>.560551"*, %Module.560531*)* @"Array<Module>___sl__", void (%"Array<Module>.560551"*, i64, %Module.560531*)* @"Array<Module>___setitem__", void (%"Array<Module>.560551"*, %Module.560531*)* @"Array<Module>_append", %Module.560531* (%"Array<Module>.560551"*, i64)* @"Array<Module>___getitem__", i1 (%"Array<Module>.560551"*, %"Array<Module>.560551"*)* @"Array<Module>___eq__", i1 (%"Array<Module>.560551"*, %Module.560531*)* @"Array<Module>___in__", i64 (%"Array<Module>.560551"*, %Module.560531*)* @"Array<Module>_find" }
@Program_vtable_data = global %Program_vtable_ty.560550 zeroinitializer
@str.188 = private unnamed_addr constant [7 x i8] c"__eq__\00"
@str.189 = private unnamed_addr constant [8 x i8] c"__add__\00"
@str.190 = private unnamed_addr constant [8 x i8] c"__sub__\00"
@str.191 = private unnamed_addr constant [8 x i8] c"__mul__\00"
@str.192 = private unnamed_addr constant [8 x i8] c"__div__\00"
@str.193 = private unnamed_addr constant [7 x i8] c"__or__\00"
@str.194 = private unnamed_addr constant [9 x i8] c"__adda__\00"
@str.195 = private unnamed_addr constant [9 x i8] c"__suba__\00"
@str.196 = private unnamed_addr constant [9 x i8] c"__mula__\00"
@str.197 = private unnamed_addr constant [9 x i8] c"__diva__\00"
@str.198 = private unnamed_addr constant [8 x i8] c"__ora__\00"
@str.199 = private unnamed_addr constant [9 x i8] c"__anda__\00"
@str.200 = private unnamed_addr constant [9 x i8] c"__xora__\00"
@str.201 = private unnamed_addr constant [12 x i8] c"__getitem__\00"
@str.202 = private unnamed_addr constant [12 x i8] c"__setitem__\00"
@str.203 = private unnamed_addr constant [7 x i8] c"__sl__\00"
@str.204 = private unnamed_addr constant [7 x i8] c"__sr__\00"
@str.205 = private unnamed_addr constant [8 x i8] c"__sla__\00"
@str.206 = private unnamed_addr constant [8 x i8] c"__sra__\00"
@str.207 = private unnamed_addr constant [7 x i8] c"__in__\00"
@str.208 = private unnamed_addr constant [7 x i8] c"__lt__\00"
@str.209 = private unnamed_addr constant [7 x i8] c"__lg__\00"
@str.210 = private unnamed_addr constant [7 x i8] c"__ne__\00"
@str.211 = private unnamed_addr constant [7 x i8] c"__le__\00"
@str.212 = private unnamed_addr constant [7 x i8] c"__ge__\00"
@str.213 = private unnamed_addr constant [8 x i8] c"__pow__\00"
@str.214 = private unnamed_addr constant [8 x i8] c"__mod__\00"
@str.215 = private unnamed_addr constant [9 x i8] c"__powa__\00"
@str.216 = private unnamed_addr constant [9 x i8] c"__moda__\00"
@str.217 = private unnamed_addr constant [7 x i8] c"__gt__\00"
@str.218 = private unnamed_addr constant [8 x i8] c"__and__\00"
@str.219 = private unnamed_addr constant [8 x i8] c"__xor__\00"
@Generic_vtable_data = global %Generic_vtable_ty.560554 zeroinitializer
@"Bucket<string, Generic>_vtable_data" = global %"Bucket<string, Generic>_vtable_ty.560560" { void (%"Bucket<string, Generic>.560559"*, %string.560217*, %Generic.560553*)* @"Bucket<string, Generic>_set" }
@"Array<Bucket<string, Generic>>_vtable_data" = global %"Array<Bucket<string, Generic>>_vtable_ty.560562" { void (%"Array<Bucket<string, Generic>>.560561"*)* @"Array<Bucket<string, Generic>>_resize", void (%"Array<Bucket<string, Generic>>.560561"*, i64, i64)* @"Array<Bucket<string, Generic>>_swap", void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)* @"Array<Bucket<string, Generic>>___sl__", void (%"Array<Bucket<string, Generic>>.560561"*, i64, %"Bucket<string, Generic>.560559"*)* @"Array<Bucket<string, Generic>>___setitem__", void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)* @"Array<Bucket<string, Generic>>_append", %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)* @"Array<Bucket<string, Generic>>___getitem__", i1 (%"Array<Bucket<string, Generic>>.560561"*, %"Array<Bucket<string, Generic>>.560561"*)* @"Array<Bucket<string, Generic>>___eq__", i1 (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)* @"Array<Bucket<string, Generic>>___in__", i64 (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)* @"Array<Bucket<string, Generic>>_find" }
@"Map<string, Generic>_vtable_data" = global %"Map<string, Generic>_vtable_ty.560558" { i64 (%"Map<string, Generic>.560557"*, %string.560217*)* @"Map<string, Generic>_hash_fnc", void (%"Map<string, Generic>.560557"*)* @"Map<string, Generic>_resize", void (%"Map<string, Generic>.560557"*, %string.560217*, %Generic.560553*)* @"Map<string, Generic>_set", %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)* @"Map<string, Generic>_get", %"Array<Bucket<string, Generic>>.560561"* (%"Map<string, Generic>.560557"*)* @"Map<string, Generic>_get_buckets" }
@TypeChecker_vtable_data = global %TypeChecker_vtable_ty.560556 { %Module.560531* (%TypeChecker.560555*, i64)* @TypeChecker_get_module, %Module.560531* (%TypeChecker.560555*)* @TypeChecker_get_current_module, %Scope.560473* (%TypeChecker.560555*)* @TypeChecker_get_current_scope, %Scope.560473* (%TypeChecker.560555*)* @TypeChecker_get_current_module_global_scope, %Function.560501* (%TypeChecker.560555*)* @TypeChecker_get_current_function, %FunctionType.560387* (%TypeChecker.560555*)* @TypeChecker_get_current_function_type, %Class.560513* (%TypeChecker.560555*)* @TypeChecker_get_current_class, %Class.560513* (%TypeChecker.560555*, %VarId.560441*)* @TypeChecker_get_class_from_var_id, %Enum.560527* (%TypeChecker.560555*, %VarId.560441*)* @TypeChecker_get_enum_from_var_id, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)* @TypeChecker_types_are_eq, %string.560217* (%TypeChecker.560555*, %Type.560381*)* @TypeChecker_dump_type, %Scope.560473* (%TypeChecker.560555*)* @TypeChecker_create_scope, i1 (%TypeChecker.560555*, %string.560217*)* @TypeChecker_is_constant_in_scope, %VarId.560441* (%TypeChecker.560555*, %string.560217*)* @TypeChecker_get_var_from_current_scope, %Type.560381* (%TypeChecker.560555*, %string.560217*)* @TypeChecker_get_type_from_current_scope, %Scope.560473* (%TypeChecker.560555*)* @TypeChecker_create_child_scope_within_current_scope, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)* @TypeChecker_error, i1 (%TypeChecker.560555*)* @TypeChecker_has_errored, %Program.560549* (%TypeChecker.560555*, %ModuleAST.560363*, %Compiler.560235*, %string.560217*)* @TypeChecker_check, void (%TypeChecker.560555*)* @TypeChecker_load_builtins_module, void (%TypeChecker.560555*)* @TypeChecker_load_generic_module, void (%TypeChecker.560555*)* @TypeChecker_switch_to_generic_module, %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)* @TypeChecker_check_module, %GenericType.560405* (%TypeChecker.560555*, %string.560217*, %"Array<Type>.560389"*)* @TypeChecker_create_generic_instance_in_module, %Var.560505* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)* @TypeChecker_declare_var_within_current_scope, %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)* @TypeChecker_declare_const_within_current_scope, void (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)* @TypeChecker_declare_global_const, void (%TypeChecker.560555*, %VarDeclarationStatement.560327*)* @TypeChecker_declare_global_var, void (%TypeChecker.560555*, %string.560217*, %Type.560381*)* @TypeChecker_add_imported_typealias_to_module, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)* @TypeChecker_add_imported_var_to_module, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)* @TypeChecker_add_imported_fnc_to_module, void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)* @TypeChecker_add_imported_class_to_module, void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)* @TypeChecker_add_imported_enum_to_module, %FunctionType.560387* (%TypeChecker.560555*, %"Array<ArgNode>.560335"*, %TypeNode.560269*, %"Array<FunctionArg>.560503"*)* @TypeChecker_init_function_signature, void (%TypeChecker.560555*, %Module.560531*)* @TypeChecker_import_all_from_module, void (%TypeChecker.560555*, %ImportNode.560357*)* @TypeChecker_check_module_import, %Module.560531* (%TypeChecker.560555*, %string.560217*, %FloRange.560223*)* @TypeChecker_lex_and_parse_typecheck_file, void (%TypeChecker.560555*, %EnumNode.560353*)* @TypeChecker_declare_enum_within_module, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)* @TypeChecker_declare_class_within_module, void (%TypeChecker.560555*, %FunctionDeclarationNode.560333*)* @TypeChecker_declare_function_within_module, void (%TypeChecker.560555*, %Enum.560527*, %EnumNode.560353*)* @TypeChecker_check_enum_body, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)* @TypeChecker_declare_class_fields, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)* @TypeChecker_declare_class_methods, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)* @TypeChecker_add_inherited_props_to_class, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)* @TypeChecker_check_class_body, void (%TypeChecker.560555*, %Function.560501*, %FunctionDeclarationNode.560333*)* @TypeChecker_check_function_body, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)* @TypeChecker_check_type, %ArrayExpression.560423* (%TypeChecker.560555*, %Type.560381*, %ArrayExpressionNode.560301*)* @TypeChecker_check_array_expression, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %VarAccessExpressionNode.560299*)* @TypeChecker_check_var_access_expr, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %Expression.560401*, %BinaryExpressionNode.560313*)* @TypeChecker_check_assignment, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)* @TypeChecker_check_object_bin_assign, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*, %Expression.560401*)* @TypeChecker_check_object_binary_expr, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)* @TypeChecker_check_object_setitem_expr, %BinaryExpression.560425* (%TypeChecker.560555*, %Type.560381*, %BinaryExpressionNode.560313*)* @TypeChecker_check_bin_expr, %UnaryExpression.560427* (%TypeChecker.560555*, %Type.560381*, %UnaryExpressionNode.560317*)* @TypeChecker_check_unary_expr, %Expression.560401* (%TypeChecker.560555*, %TypeCastExpressionNode.560311*)* @TypeChecker_check_typecast_expr, %string.560217* (%TypeChecker.560555*, %ClassId.560397*, %"Array<ExpressionNode>.560297"*, %"Array<Expression>.560419"**)* @TypeChecker_check_constructor_call, %NewExpression.560433* (%TypeChecker.560555*, %NewExpressionNode.560303*)* @TypeChecker_check_new_expr, %string.560217* (%TypeChecker.560555*, %PropId.560449*)* @TypeChecker_check_member_access, %MemberExpression.560451* (%TypeChecker.560555*, %Type.560381*, %MemberExpressionNode.560307*)* @TypeChecker_check_member_expr, %TernaryExpression.560429* (%TypeChecker.560555*, %Type.560381*, %TernaryExpressionNode.560315*)* @TypeChecker_check_ternary_expr, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %ExpressionIndexNode.560305*)* @TypeChecker_check_object_index_expr, %IndexExpression.560435* (%TypeChecker.560555*, %Type.560381*, %ExpressionIndexNode.560305*)* @TypeChecker_check_index_expr, %"Array<FunctionArg>.560503"* (%TypeChecker.560555*, %Expression.560401*)* @TypeChecker_get_func_args_from_expression, %"Array<Expression>.560419"* (%TypeChecker.560555*, %FunctionType.560387*, %"Array<FunctionArg>.560503"*, %"Array<ExpressionNode>.560297"*)* @TypeChecker_fill_in_call_args, i64 (%TypeChecker.560555*, %FunctionType.560387*, %"Array<Expression>.560419"*)* @TypeChecker_check_function_call_args_match, %CallExpression.560437* (%TypeChecker.560555*, %Type.560381*, %CallExpressionNode.560309*)* @TypeChecker_check_call_expr, %IntrinsicCall.560439* (%TypeChecker.560555*, %IntrinsicCall.560439*, %CallExpressionNode.560309*)* @TypeChecker_check_intrinsic_call, %IntExpression.560411* (%TypeChecker.560555*, %Type.560381*, %IntExpressionNode.560289*)* @TypeChecker_check_int_expression, %FloatExpression.560415* (%TypeChecker.560555*, %Type.560381*, %FloatExpressionNode.560291*)* @TypeChecker_check_float_expression, %IntExpression.560411* (%TypeChecker.560555*, %CharExpressionNode.560293*)* @TypeChecker_check_char_expression, %StringExpression.560417* (%TypeChecker.560555*, %Type.560381*, %StringExpressionNode.560295*)* @TypeChecker_check_string_expression, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)* @TypeChecker_check_expression, %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)* @TypeChecker_check_condition, %IfStatement.560459* (%TypeChecker.560555*, %IfStatementNode.560319*)* @TypeChecker_check_if_stamement, %VarDeclaration.560461* (%TypeChecker.560555*, %VarDeclarationStatement.560327*)* @TypeChecker_check_var_declaration, %ConstDeclaration.560463* (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)* @TypeChecker_check_const_declaration, %ForStatement.560465* (%TypeChecker.560555*, %ForStatementNode.560323*)* @TypeChecker_check_for_statement, %WhileStatement.560467* (%TypeChecker.560555*, %WhileStatementNode.560321*)* @TypeChecker_check_while_statment, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)* @TypeChecker_check_can_break, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)* @TypeChecker_check_can_continue, %ReturnStatement.560469* (%TypeChecker.560555*, %ReturnStatementNode.560325*)* @TypeChecker_check_can_return, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)* @TypeChecker_check_statement, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)* @TypeChecker_check_block }
@str.220 = private unnamed_addr constant [3 x i8] c", \00"
@str.221 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00"
@str.222 = private unnamed_addr constant [4 x i8] c"%s*\00"
@str.223 = private unnamed_addr constant [7 x i8] c"%s[%d]\00"
@str.224 = private unnamed_addr constant [13 x i8] c"__generics__\00"
@str.225 = private unnamed_addr constant [5 x i8] c"true\00"
@str.226 = private unnamed_addr constant [6 x i8] c"false\00"
@str.227 = private unnamed_addr constant [5 x i8] c"null\00"
@str.228 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00"
@str.229 = private unnamed_addr constant [41 x i8] c"Generic expects %d parameters but got %d\00"
@str.230 = private unnamed_addr constant [4 x i8] c"%s_\00"
@str.231 = private unnamed_addr constant [6 x i8] c"%s_%s\00"
@str.232 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00"
@str.233 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00"
@str.234 = private unnamed_addr constant [52 x i8] c"Import statement path can't be a a formatted string\00"
@str.235 = private unnamed_addr constant [28 x i8] c"%s not found in module \22%s\22\00"
@str.236 = private unnamed_addr constant [2 x i8] c"@\00"
@str.237 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00"
@str.238 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00"
@str.239 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00"
@str.240 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00"
@str.241 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00"
@str.242 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00"
@str.243 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00"
@str.244 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00"
@str.245 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00"
@str.246 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00"
@str.247 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00"
@str.248 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00"
@str.249 = private unnamed_addr constant [65 x i8] c"Expected %d arguments for binary operator overload %s but got %d\00"
@str.250 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00"
@str.251 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00"
@str.252 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00"
@str.253 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00"
@str.254 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00"
@str.255 = private unnamed_addr constant [12 x i8] c"constructor\00"
@str.256 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00"
@str.257 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00"
@str.258 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00"
@str.259 = private unnamed_addr constant [6 x i8] c"super\00"
@str.260 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00"
@str.261 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00"
@str.262 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00"
@str.263 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00"
@str.264 = private unnamed_addr constant [17 x i8] c"length is an int\00"
@str.265 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00"
@str.266 = private unnamed_addr constant [32 x i8] c"length should be greater than 0\00"
@str.267 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00"
@str.268 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00"
@str.269 = private unnamed_addr constant [38 x i8] c"Cannot create array without type hint\00"
@str.270 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00"
@str.271 = private unnamed_addr constant [34 x i8] c"Cannot assign a value to a record\00"
@str.272 = private unnamed_addr constant [36 x i8] c"Cannot assign a value to a constant\00"
@str.273 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00"
@str.274 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00"
@str.275 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00"
@str.276 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00"
@str.277 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00"
@str.278 = private unnamed_addr constant [6 x i8] c"Range\00"
@str.279 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00"
@str.280 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00"
@str.281 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00"
@str.282 = private unnamed_addr constant [7 x i8] c"string\00"
@str.283 = private unnamed_addr constant [30 x i8] c"Cannot cast type '%s' to '%s'\00"
@str.284 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00"
@str.285 = private unnamed_addr constant [55 x i8] c"Expected %d argument(s) on constructor call but got %d\00"
@str.286 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00"
@str.287 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %d argument(s)\00"
@str.288 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00"
@str.289 = private unnamed_addr constant [6 x i8] c"@Type\00"
@str.290 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00"
@str.291 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00"
@str.292 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00"
@str.293 = private unnamed_addr constant [50 x i8] c"Property '%s' is not a static member in class '%s\00"
@str.294 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00"
@str.295 = private unnamed_addr constant [10 x i8] c"copy_from\00"
@str.296 = private unnamed_addr constant [10 x i8] c"move_from\00"
@str.297 = private unnamed_addr constant [10 x i8] c"fill_with\00"
@str.298 = private unnamed_addr constant [7 x i8] c"resize\00"
@str.299 = private unnamed_addr constant [8 x i8] c"compare\00"
@str.300 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00"
@str.301 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00"
@str.302 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00"
@str.303 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00"
@str.304 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00"
@str.305 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00"
@str.306 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00"
@str.307 = private unnamed_addr constant [52 x i8] c"Expected %d argument(s) on function call but got %d\00"
@str.308 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00"
@str.309 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00"
@str.310 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %d\00"
@str.311 = private unnamed_addr constant [63 x i8] c"Expected an int of but got type '%s' as function call argument\00"
@str.312 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %d\00"
@str.313 = private unnamed_addr constant [66 x i8] c"Expected type '%s' of but got type '%s' as function call argument\00"
@str.314 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00"
@str.315 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00"
@str.316 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00"
@str.317 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00"
@str.318 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00"
@str.319 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00"
@str.320 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00"
@str.321 = private unnamed_addr constant [55 x i8] c"Function with void return type cannot return any value\00"
@str.322 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00"
@str.323 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00"
@GeneratedModule_vtable_data = global %GeneratedModule_vtable_ty.560592 { void (%GeneratedModule.560591*)* @GeneratedModule_print_errors, void (%GeneratedModule.560591*, i64)* @GeneratedModule_run_passes, i64 (%GeneratedModule.560591*)* @GeneratedModule_exec, %LLVMTargetMachineRef.560585* (%GeneratedModule.560591*, %string.560217*)* @GeneratedModule_create_target_machine, void (%GeneratedModule.560591*, %string.560217*, %string.560217*)* @GeneratedModule_write_object, void (%GeneratedModule.560591*)* @GeneratedModule_print, void (%GeneratedModule.560591*)* @GeneratedModule_llvm_shutdown }
@str.324 = private unnamed_addr constant [10 x i8] c"error: %s\00"
@str.325 = private unnamed_addr constant [5 x i8] c"main\00"
@str.326 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00"
@str.327 = private unnamed_addr constant [8 x i8] c"generic\00"
@str.328 = private unnamed_addr constant [10 x i8] c"output.ll\00"
@IntrinsicResult_vtable_data = global %IntrinsicResult_vtable_ty.560594 zeroinitializer
@"Bucket<string, int>_vtable_data" = global %"Bucket<string, int>_vtable_ty.560601" { void (%"Bucket<string, int>.560600"*, %string.560217*, i64)* @"Bucket<string, int>_set" }
@"Array<Bucket<string, int>>_vtable_data" = global %"Array<Bucket<string, int>>_vtable_ty.560603" { void (%"Array<Bucket<string, int>>.560602"*)* @"Array<Bucket<string, int>>_resize", void (%"Array<Bucket<string, int>>.560602"*, i64, i64)* @"Array<Bucket<string, int>>_swap", void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)* @"Array<Bucket<string, int>>___sl__", void (%"Array<Bucket<string, int>>.560602"*, i64, %"Bucket<string, int>.560600"*)* @"Array<Bucket<string, int>>___setitem__", void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)* @"Array<Bucket<string, int>>_append", %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)* @"Array<Bucket<string, int>>___getitem__", i1 (%"Array<Bucket<string, int>>.560602"*, %"Array<Bucket<string, int>>.560602"*)* @"Array<Bucket<string, int>>___eq__", i1 (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)* @"Array<Bucket<string, int>>___in__", i64 (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)* @"Array<Bucket<string, int>>_find" }
@"Map<string, int>_vtable_data" = global %"Map<string, int>_vtable_ty.560599" { i64 (%"Map<string, int>.560597"*, %string.560217*)* @"Map<string, int>_hash_fnc", void (%"Map<string, int>.560597"*)* @"Map<string, int>_resize", void (%"Map<string, int>.560597"*, %string.560217*, i64)* @"Map<string, int>_set", i64 (%"Map<string, int>.560597"*, %string.560217*)* @"Map<string, int>_get", %"Array<Bucket<string, int>>.560602"* (%"Map<string, int>.560597"*)* @"Map<string, int>_get_buckets" }
@"Bucket<string, LLVMValueRef>_vtable_data" = global %"Bucket<string, LLVMValueRef>_vtable_ty.560606" { void (%"Bucket<string, LLVMValueRef>.560605"*, %string.560217*, %LLVMValueRef.560567*)* @"Bucket<string, LLVMValueRef>_set" }
@"Array<Bucket<string, LLVMValueRef>>_vtable_data" = global %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608" { void (%"Array<Bucket<string, LLVMValueRef>>.560607"*)* @"Array<Bucket<string, LLVMValueRef>>_resize", void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64, i64)* @"Array<Bucket<string, LLVMValueRef>>_swap", void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)* @"Array<Bucket<string, LLVMValueRef>>___sl__", void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64, %"Bucket<string, LLVMValueRef>.560605"*)* @"Array<Bucket<string, LLVMValueRef>>___setitem__", void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)* @"Array<Bucket<string, LLVMValueRef>>_append", %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)* @"Array<Bucket<string, LLVMValueRef>>___getitem__", i1 (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Array<Bucket<string, LLVMValueRef>>.560607"*)* @"Array<Bucket<string, LLVMValueRef>>___eq__", i1 (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)* @"Array<Bucket<string, LLVMValueRef>>___in__", i64 (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)* @"Array<Bucket<string, LLVMValueRef>>_find" }
@"Map<string, LLVMValueRef>_vtable_data" = global %"Map<string, LLVMValueRef>_vtable_ty.560604" { i64 (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)* @"Map<string, LLVMValueRef>_hash_fnc", void (%"Map<string, LLVMValueRef>.560598"*)* @"Map<string, LLVMValueRef>_resize", void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)* @"Map<string, LLVMValueRef>_set", %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)* @"Map<string, LLVMValueRef>_get", %"Array<Bucket<string, LLVMValueRef>>.560607"* (%"Map<string, LLVMValueRef>.560598"*)* @"Map<string, LLVMValueRef>_get_buckets" }
@CGClassType_vtable_data = global %CGClassType_vtable_ty.560596 zeroinitializer
@CGEnumType_vtable_data = global %CGEnumType_vtable_ty.560610 zeroinitializer
@"Array<LLVMTypeRef>_vtable_data" = global %"Array<LLVMTypeRef>_vtable_ty.560612" { void (%"Array<LLVMTypeRef>.560611"*)* @"Array<LLVMTypeRef>_resize", void (%"Array<LLVMTypeRef>.560611"*, i64, i64)* @"Array<LLVMTypeRef>_swap", void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)* @"Array<LLVMTypeRef>___sl__", void (%"Array<LLVMTypeRef>.560611"*, i64, %LLVMTypeRef.560566*)* @"Array<LLVMTypeRef>___setitem__", void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)* @"Array<LLVMTypeRef>_append", %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)* @"Array<LLVMTypeRef>___getitem__", i1 (%"Array<LLVMTypeRef>.560611"*, %"Array<LLVMTypeRef>.560611"*)* @"Array<LLVMTypeRef>___eq__", i1 (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)* @"Array<LLVMTypeRef>___in__", i64 (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)* @"Array<LLVMTypeRef>_find" }
@str.329 = private unnamed_addr constant [9 x i8] c"%d;%d;%d\00"
@str.330 = private unnamed_addr constant [9 x i8] c"%s;%d;%d\00"
@"Array<LLVMValueRef>_vtable_data" = global %"Array<LLVMValueRef>_vtable_ty.560614" { void (%"Array<LLVMValueRef>.560613"*)* @"Array<LLVMValueRef>_resize", void (%"Array<LLVMValueRef>.560613"*, i64, i64)* @"Array<LLVMValueRef>_swap", void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)* @"Array<LLVMValueRef>___sl__", void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)* @"Array<LLVMValueRef>___setitem__", void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)* @"Array<LLVMValueRef>_append", %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)* @"Array<LLVMValueRef>___getitem__", i1 (%"Array<LLVMValueRef>.560613"*, %"Array<LLVMValueRef>.560613"*)* @"Array<LLVMValueRef>___eq__", i1 (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)* @"Array<LLVMValueRef>___in__", i64 (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)* @"Array<LLVMValueRef>_find" }
@str.331 = private unnamed_addr constant [4 x i8] c"lld\00"
@str.332 = private unnamed_addr constant [3 x i8] c"ld\00"
@str.333 = private unnamed_addr constant [3 x i8] c"%d\00"
@str.334 = private unnamed_addr constant [3 x i8] c"%f\00"
@str.335 = private unnamed_addr constant [4 x i8] c"%lf\00"
@str.336 = private unnamed_addr constant [5 x i8] c"0x%X\00"
@str.337 = private unnamed_addr constant [3 x i8] c"%s\00"
@"Bucket<string, CGClassType>_vtable_data" = global %"Bucket<string, CGClassType>_vtable_ty.560621" { void (%"Bucket<string, CGClassType>.560620"*, %string.560217*, %CGClassType.560595*)* @"Bucket<string, CGClassType>_set" }
@"Array<Bucket<string, CGClassType>>_vtable_data" = global %"Array<Bucket<string, CGClassType>>_vtable_ty.560623" { void (%"Array<Bucket<string, CGClassType>>.560622"*)* @"Array<Bucket<string, CGClassType>>_resize", void (%"Array<Bucket<string, CGClassType>>.560622"*, i64, i64)* @"Array<Bucket<string, CGClassType>>_swap", void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)* @"Array<Bucket<string, CGClassType>>___sl__", void (%"Array<Bucket<string, CGClassType>>.560622"*, i64, %"Bucket<string, CGClassType>.560620"*)* @"Array<Bucket<string, CGClassType>>___setitem__", void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)* @"Array<Bucket<string, CGClassType>>_append", %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)* @"Array<Bucket<string, CGClassType>>___getitem__", i1 (%"Array<Bucket<string, CGClassType>>.560622"*, %"Array<Bucket<string, CGClassType>>.560622"*)* @"Array<Bucket<string, CGClassType>>___eq__", i1 (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)* @"Array<Bucket<string, CGClassType>>___in__", i64 (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)* @"Array<Bucket<string, CGClassType>>_find" }
@"Map<string, CGClassType>_vtable_data" = global %"Map<string, CGClassType>_vtable_ty.560619" { i64 (%"Map<string, CGClassType>.560617"*, %string.560217*)* @"Map<string, CGClassType>_hash_fnc", void (%"Map<string, CGClassType>.560617"*)* @"Map<string, CGClassType>_resize", void (%"Map<string, CGClassType>.560617"*, %string.560217*, %CGClassType.560595*)* @"Map<string, CGClassType>_set", %CGClassType.560595* (%"Map<string, CGClassType>.560617"*, %string.560217*)* @"Map<string, CGClassType>_get", %"Array<Bucket<string, CGClassType>>.560622"* (%"Map<string, CGClassType>.560617"*)* @"Map<string, CGClassType>_get_buckets" }
@"Bucket<string, CGEnumType>_vtable_data" = global %"Bucket<string, CGEnumType>_vtable_ty.560626" { void (%"Bucket<string, CGEnumType>.560625"*, %string.560217*, %CGEnumType.560609*)* @"Bucket<string, CGEnumType>_set" }
@"Array<Bucket<string, CGEnumType>>_vtable_data" = global %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628" { void (%"Array<Bucket<string, CGEnumType>>.560627"*)* @"Array<Bucket<string, CGEnumType>>_resize", void (%"Array<Bucket<string, CGEnumType>>.560627"*, i64, i64)* @"Array<Bucket<string, CGEnumType>>_swap", void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)* @"Array<Bucket<string, CGEnumType>>___sl__", void (%"Array<Bucket<string, CGEnumType>>.560627"*, i64, %"Bucket<string, CGEnumType>.560625"*)* @"Array<Bucket<string, CGEnumType>>___setitem__", void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)* @"Array<Bucket<string, CGEnumType>>_append", %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)* @"Array<Bucket<string, CGEnumType>>___getitem__", i1 (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Array<Bucket<string, CGEnumType>>.560627"*)* @"Array<Bucket<string, CGEnumType>>___eq__", i1 (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)* @"Array<Bucket<string, CGEnumType>>___in__", i64 (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)* @"Array<Bucket<string, CGEnumType>>_find" }
@"Map<string, CGEnumType>_vtable_data" = global %"Map<string, CGEnumType>_vtable_ty.560624" { i64 (%"Map<string, CGEnumType>.560618"*, %string.560217*)* @"Map<string, CGEnumType>_hash_fnc", void (%"Map<string, CGEnumType>.560618"*)* @"Map<string, CGEnumType>_resize", void (%"Map<string, CGEnumType>.560618"*, %string.560217*, %CGEnumType.560609*)* @"Map<string, CGEnumType>_set", %CGEnumType.560609* (%"Map<string, CGEnumType>.560618"*, %string.560217*)* @"Map<string, CGEnumType>_get", %"Array<Bucket<string, CGEnumType>>.560627"* (%"Map<string, CGEnumType>.560618"*)* @"Map<string, CGEnumType>_get_buckets" }
@CodeGen_vtable_data = global %CodeGen_vtable_ty.560616 { %GeneratedModule.560591* (%CodeGen.560615*, %Program.560549*)* @CodeGen_codegen, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)* @CodeGen_get_var_from_varid, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)* @CodeGen_get_class_from_typeid, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)* @CodeGen_get_enum_from_typeid, void (%CodeGen.560615*, %TypeId.560395*, %CGClassType.560595*)* @CodeGen_add_class, void (%CodeGen.560615*, %TypeId.560395*, %CGEnumType.560609*)* @CodeGen_add_enum, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)* @CodeGen_add_var, %LLVMValueRef.560567* (%CodeGen.560615*, i1)* @CodeGen_createLLVMBool, %LLVMValueRef.560567* (%CodeGen.560615*, i64)* @CodeGen_createLLVMInt, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)* @CodeGen_codegen_type, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ReturnStatement.560469*)* @CodeGen_codegen_return_stmt, %LLVMValueRef.560567* (%CodeGen.560615*, %IntExpression.560411*)* @CodeGen_codegen_int, %LLVMValueRef.560567* (%CodeGen.560615*, %FloatExpression.560415*)* @CodeGen_codegen_float, %LLVMValueRef.560567* (%CodeGen.560615*, %BooleanExpression.560413*)* @CodeGen_codegen_bool, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)* @CodeGen_codegen_atof_call, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)* @CodeGen_codegen_atoi_call, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)* @CodeGen_codegen_atol_call, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)* @CodeGen_codegen_realloc_call, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)* @CodeGen_codegen_memcmp_call, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)* @CodeGen_createGlobalLLVMString, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*, %"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567**)* @CodeGen_codegen_safe_fmt_string, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Type.560381*, i64)* @CodeGen_get_string_val, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %StringExpression.560417*)* @CodeGen_codegen_string, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ArrayExpression.560423*)* @CodeGen_store_array_elements, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ArrayExpression.560423*)* @CodeGen_codegen_array_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)* @CodeGen_get_or_codegen_var, %CGClassType.560595* (%CodeGen.560615*, %Class.560513*)* @CodeGen_construct_class, %CGEnumType.560609* (%CodeGen.560615*, %Enum.560527*)* @CodeGen_construct_enum, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)* @CodeGen_get_or_codegen_class_from_typeid, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)* @CodeGen_get_or_codegen_enum_from_typeid, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)* @CodeGen_get_var_expr_mem, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)* @CodeGen_get_index_expr_mem, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)* @CodeGen_get_member_expr_mem, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)* @CodeGen_get_expr_mem, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)* @CodeGen_get_member_mem_with_name, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)* @CodeGen_get_member_with_name, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %GenericType.560405*, %ArrayExpression.560423*)* @CodeGen_codegen_builtin_array, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)* @CodeGen_store_expr_to_mem, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)* @CodeGen_codegen_assignment, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Type.560381*, %LLVMValueRef.560567*, %LLVMValueRef.560567*)* @CodeGen_codegen_pow_expr, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)* @CodeGen_codegen_bin_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TypeCastExpression.560431*)* @CodeGen_codegen_typecast_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %UnaryExpression.560427*)* @CodeGen_codegen_unary_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)* @CodeGen_codegen_var_access_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %NullExpression.560421*)* @CodeGen_codegen_null, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TernaryExpression.560429*)* @CodeGen_codegen_ternary_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %CallExpression.560437*)* @CodeGen_codegen_call_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)* @CodeGen_codegen_index_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %NewExpression.560433*)* @CodeGen_codegen_new_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)* @CodeGen_codegen_member_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*)* @CodeGen_codegen_string_to_cstring, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IntrinsicCall.560439*)* @CodeGen_codegen_intrinsic_exp, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)* @CodeGen_codegen_expression, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IfStatement.560459*)* @CodeGen_codegen_if_stmt, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ForStatement.560465*)* @CodeGen_codegen_for_stmt, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %WhileStatement.560467*)* @CodeGen_codegen_while_stmt, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)* @CodeGen_evaluate_expression_list, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)* @CodeGen_build_constructor_call, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)* @CodeGen_codegen_var_declaration, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)* @CodeGen_codegen_const_declaration, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Statement.560393*)* @CodeGen_codegen_statement, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)* @CodeGen_codegen_block, void (%CodeGen.560615*, %Function.560501*)* @CodeGen_codegen_function, void (%CodeGen.560615*, %Class.560513*)* @CodeGen_codegen_class, %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)* @CodeGen_declare_method, void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*)* @CodeGen_declare_static_props, void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*, %"Array<LLVMTypeRef>.560611"*)* @CodeGen_declare_class_props, void (%CodeGen.560615*, %Class.560513*)* @CodeGen_declare_class, void (%CodeGen.560615*, %Enum.560527*)* @CodeGen_declare_enum }
@str.338 = private unnamed_addr constant [33 x i8] c"Type could not be code generated\00"
@str.339 = private unnamed_addr constant [5 x i8] c"atof\00"
@str.340 = private unnamed_addr constant [5 x i8] c"atoi\00"
@str.341 = private unnamed_addr constant [5 x i8] c"atol\00"
@str.342 = private unnamed_addr constant [8 x i8] c"realloc\00"
@str.343 = private unnamed_addr constant [7 x i8] c"memcmp\00"
@str.344 = private unnamed_addr constant [9 x i8] c"asprintf\00"
@str.345 = private unnamed_addr constant [6 x i8] c"%s {\0A\00"
@str.346 = private unnamed_addr constant [7 x i8] c" ... }\00"
@str.347 = private unnamed_addr constant [13 x i8] c" '%s': %s, \0A\00"
@str.348 = private unnamed_addr constant [2 x i8] c"}\00"
@str.349 = private unnamed_addr constant [11 x i8] c"<function>\00"
@str.350 = private unnamed_addr constant [18 x i8] c"string_from_bytes\00"
@str.351 = private unnamed_addr constant [55 x i8] c"Could not find function 'string.from_bytes' in program\00"
@str.352 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00"
@str.353 = private unnamed_addr constant [9 x i8] c"arrayidx\00"
@str.354 = private unnamed_addr constant [7 x i8] c"ptridx\00"
@str.355 = private unnamed_addr constant [10 x i8] c"memberidx\00"
@str.356 = private unnamed_addr constant [7 x i8] c"buffer\00"
@str.357 = private unnamed_addr constant [7 x i8] c"length\00"
@str.358 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00"
@str.359 = private unnamed_addr constant [23 x i8] c"Unknown case! %d %s %d\00"
@str.360 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00"
@str.361 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00"
@str.362 = private unnamed_addr constant [11 x i8] c"true_block\00"
@str.363 = private unnamed_addr constant [12 x i8] c"false_block\00"
@str.364 = private unnamed_addr constant [4 x i8] c"end\00"
@str.365 = private unnamed_addr constant [8 x i8] c"ternary\00"
@str.366 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00"
@str.367 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00"
@str.368 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00"
@str.369 = private unnamed_addr constant [11 x i8] c"to_cstring\00"
@str.370 = private unnamed_addr constant [22 x i8] c"instrinsic not found!\00"
@str.371 = private unnamed_addr constant [9 x i8] c"if.entry\00"
@str.372 = private unnamed_addr constant [6 x i8] c"ifend\00"
@str.373 = private unnamed_addr constant [10 x i8] c"for.entry\00"
@str.374 = private unnamed_addr constant [9 x i8] c"for.cond\00"
@str.375 = private unnamed_addr constant [9 x i8] c"for.body\00"
@str.376 = private unnamed_addr constant [9 x i8] c"for.incr\00"
@str.377 = private unnamed_addr constant [8 x i8] c"for.end\00"
@str.378 = private unnamed_addr constant [12 x i8] c"while.entry\00"
@str.379 = private unnamed_addr constant [10 x i8] c"while.end\00"
@str.380 = private unnamed_addr constant [48 x i8] c"Could not find constructor for constructor call\00"
@str.381 = private unnamed_addr constant [76 x i8] c"This should not happen: could not find function %s_%s (declare_class_props)\00"
@str.382 = private unnamed_addr constant [9 x i8] c"VTable%s\00"
@str.383 = private unnamed_addr constant [15 x i8] c"%s_constructor\00"
@"Arraymain.flo_vtable_data" = global %"Arraymain.flo_vtable_ty.560630" { void (%"Arraymain.flo.560629"*)* @"Arraymain.flo_resize", void (%"Arraymain.flo.560629"*, i64, i64)* @"Arraymain.flo_swap", void (%"Arraymain.flo.560629"*, %string.560217*)* @"Arraymain.flo___sl__", void (%"Arraymain.flo.560629"*, i64, %string.560217*)* @"Arraymain.flo___setitem__", void (%"Arraymain.flo.560629"*, %string.560217*)* @"Arraymain.flo_append", %string.560217* (%"Arraymain.flo.560629"*, i64)* @"Arraymain.flo___getitem__", i1 (%"Arraymain.flo.560629"*, %"Arraymain.flo.560629"*)* @"Arraymain.flo___eq__", i1 (%"Arraymain.flo.560629"*, %string.560217*)* @"Arraymain.flo___in__", i64 (%"Arraymain.flo.560629"*, %string.560217*)* @"Arraymain.flo_find" }
@str.384 = private unnamed_addr constant [28 x i8] c"Usage: %s <path> [OPTIONS]\0A\00"
@str.385 = private unnamed_addr constant [9 x i8] c"OPTIONS:\00"
@str.386 = private unnamed_addr constant [38 x i8] c" -h, --help\09\09\09Show this help message.\00"
@str.387 = private unnamed_addr constant [41 x i8] c" --print-tokens\09\09\09Print generated Tokens\00"
@str.388 = private unnamed_addr constant [36 x i8] c" --print-ast\09\09\09Print generated AST.\00"
@str.389 = private unnamed_addr constant [40 x i8] c" --emit-llvm\09\09\09Print generated LLVM-IR.\00"
@str.390 = private unnamed_addr constant [43 x i8] c" -o <file>\09\09\09Place the output into <file>.\00"
@str.391 = private unnamed_addr constant [46 x i8] c" -target\09\09\09Compile to specific target triple.\00"
@str.392 = private unnamed_addr constant [33 x i8] c" -I\09\09\09Specify runtime directory.\00"
@str.393 = private unnamed_addr constant [93 x i8] c" -O OPT_LEVEL\0A \09\09\09\09Specify the compiler's optimization level which is a\0A \09\09\09\09value from 0-3.\00"
@str.394 = private unnamed_addr constant [31 x i8] c" -v, --version\09\09\09Show version.\00"
@str.395 = private unnamed_addr constant [35 x i8] c"Missing value after '%s' argument.\00"
@str.396 = private unnamed_addr constant [3 x i8] c"-v\00"
@str.397 = private unnamed_addr constant [10 x i8] c"--version\00"
@str.398 = private unnamed_addr constant [20 x i8] c"v0.01@test.selfhost\00"
@str.399 = private unnamed_addr constant [3 x i8] c"-h\00"
@str.400 = private unnamed_addr constant [7 x i8] c"--help\00"
@str.401 = private unnamed_addr constant [3 x i8] c"-I\00"
@str.402 = private unnamed_addr constant [15 x i8] c"--print-tokens\00"
@str.403 = private unnamed_addr constant [3 x i8] c"-O\00"
@str.404 = private unnamed_addr constant [2 x i8] c"1\00"
@str.405 = private unnamed_addr constant [12 x i8] c"--emit-llvm\00"
@str.406 = private unnamed_addr constant [3 x i8] c"-o\00"
@str.407 = private unnamed_addr constant [4 x i8] c"a.o\00"
@str.408 = private unnamed_addr constant [8 x i8] c"-target\00"
@str.409 = private unnamed_addr constant [25 x i8] c"No input file specified.\00"

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #0

; Function Attrs: nofree
declare void @write(i64, i8* nocapture readonly, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind writeonly
define void @string_constructor(%string.560217* nocapture %.1, i8* %.2, i64 %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  store i8* %.2, i8** %.11, align 8
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  %.19 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 3
  store i64 %.3, i64* %.19, align 8
  ret void
}

; Function Attrs: nounwind
define noalias %string.560217* @string___add__(%string.560217* nocapture readonly %.1, %string.560217* nocapture readonly %.2) #3 {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = add i64 %.12, %.9
  %.17 = tail call i8* @malloc(i64 %.13)
  %.21 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.22 = load i8*, i8** %.21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.17, i8* align 1 %.22, i64 %.9, i1 false)
  %.31 = getelementptr inbounds i8, i8* %.17, i64 %.9
  %.35 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 1
  %.36 = load i8*, i8** %.35, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.31, i8* align 1 %.36, i64 %.12, i1 false)
  %.43 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.560217*
  %.45 = bitcast i8* %.43 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.45, align 8
  tail call void @string_constructor(%string.560217* %.44, i8* %.17, i64 %.13)
  ret %string.560217* %.44
}

; Function Attrs: nounwind
define %string.560217* @string___adda__(%string.560217* returned %.1, %string.560217* nocapture readonly %.2) #3 {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = add i64 %.12, %.9
  %.17 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = shl i64 %.13, 3
  %.21 = tail call i8* @realloc(i8* %.18, i64 %.20)
  store i8* %.21, i8** %.17, align 8
  %.29 = load i64, i64* %.8, align 8
  %.30 = getelementptr inbounds i8, i8* %.21, i64 %.29
  %.32 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 1
  %.33 = load i8*, i8** %.32, align 8
  %.36 = load i64, i64* %.11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.30, i8* align 1 %.33, i64 %.36, i1 false)
  store i64 %.13, i64* %.8, align 8
  ret %string.560217* %.1
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @string___getitem__(%string.560217* nocapture readonly %.1, i64 %.2) #4 {
.4:
  %.8 = tail call dereferenceable_or_null(1) i8* @malloc(i64 1)
  %.13 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.14 = load i8*, i8** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.14, i64 %.2
  %.16 = load i8, i8* %.15, align 1
  store i8 %.16, i8* %.8, align 1
  %.20 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %string.560217*
  %.22 = bitcast i8* %.20 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.22, align 8
  tail call void @string_constructor(%string.560217* %.21, i8* nonnull %.8, i64 2)
  ret %string.560217* %.21
}

define i1 @string___ne__(%string.560217* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.9 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.9, i64 0, i32 4
  %.11 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.10, align 8
  %.13 = tail call i1 %.11(%string.560217* %.1, %string.560217* %.2)
  %.14 = xor i1 %.13, true
  ret i1 %.14
}

define i1 @string___eq__(%string.560217* nocapture readonly %.1, %string.560217* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.17 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 1
  %.21 = load i8*, i8** %.20, align 8
  %.25 = tail call i64 @memcmp(i8* %.18, i8* %.21, i64 %.9)
  %.26 = icmp eq i64 %.25, 0
  ret i1 %.26
}

; Function Attrs: norecurse nounwind readonly
define i64 @string_find(%string.560217* nocapture readonly %.1, %string.560217* nocapture readonly %.2, i64 %.3) #5 {
.5:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.166 = load i64, i64* %.15, align 8
  %.177 = icmp sgt i64 %.166, %.3
  br i1 %.177, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.20 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 1
  %.21 = load i8*, i8** %.20, align 8
  %.23 = load i8, i8* %.21, align 1
  %.26 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.27 = load i8*, i8** %.26, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge8 = phi i64 [ %.3, %for.body.lr.ph ], [ %.76, %for.body.endif ]
  %.28 = getelementptr inbounds i8, i8* %.27, i64 %storemerge8
  %.29 = load i8, i8* %.28, align 1
  %.30 = icmp eq i8 %.23, %.29
  br i1 %.30, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %while.entry.endif, %while.entry, %.5, %for.body.if
  %merge = phi i64 [ %storemerge8, %for.body.if ], [ -1, %.5 ], [ -1, %while.entry ], [ %storemerge8, %while.entry.endif ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.if:                                      ; preds = %for.body
  %.33 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.34 = load i64, i64* %.33, align 8
  %.35 = add i64 %.34, -1
  %.39 = icmp sgt i64 %.35, 0
  br i1 %.39, label %while.entry, label %for.end

for.body.endif:                                   ; preds = %for.body
  %.76 = add nsw i64 %storemerge8, 1
  %.17 = icmp slt i64 %.76, %.166
  br i1 %.17, label %for.body, label %for.end

while.entry:                                      ; preds = %for.body.if, %while.entry.endif
  %.629 = phi i64 [ %.62, %while.entry.endif ], [ %.35, %for.body.if ]
  %.45 = getelementptr inbounds i8, i8* %.21, i64 %.629
  %.46 = load i8, i8* %.45, align 1
  %.49 = add i64 %.629, %storemerge8
  %.53 = getelementptr inbounds i8, i8* %.27, i64 %.49
  %.54 = load i8, i8* %.53, align 1
  %.55.not = icmp eq i8 %.46, %.54
  br i1 %.55.not, label %while.entry.endif, label %for.end

while.entry.endif:                                ; preds = %while.entry
  %.62 = add i64 %.629, -1
  %.65 = icmp sgt i64 %.62, 0
  br i1 %.65, label %while.entry, label %for.end
}

define i1 @string___in__(%string.560217* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.9 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.9, i64 0, i32 5
  %.11 = load i64 (%string.560217*, %string.560217*, i64)*, i64 (%string.560217*, %string.560217*, i64)** %.10, align 8
  %.13 = tail call i64 %.11(%string.560217* %.1, %string.560217* %.2, i64 0)
  %.15 = icmp ne i64 %.13, -1
  ret i1 %.15
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @string_substring(%string.560217* nocapture readonly %.1, i64 %.2, i64 %.3) #4 {
.5:
  %.10 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.11 = load i8*, i8** %.10, align 8
  %.13 = getelementptr inbounds i8, i8* %.11, i64 %.2
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.560217*
  %.17 = bitcast i8* %.15 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.17, align 8
  tail call void @string_constructor(%string.560217* %.16, i8* %.13, i64 %.3)
  ret %string.560217* %.16
}

; Function Attrs: norecurse nounwind readonly
define i8 @string_get_byte(%string.560217* nocapture readonly %.1, i64 %.2) #5 {
.4:
  %.9 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.10 = load i8*, i8** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.10, i64 %.2
  %.12 = load i8, i8* %.11, align 1
  ret i8 %.12
}

; Function Attrs: norecurse nounwind readonly
define i8* @string_get_bytes(%string.560217* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.7 = load i8*, i8** %.6, align 8
  ret i8* %.7
}

define %string.560217* @string_replace(%string.560217* %.1, %string.560217* %.2, %string.560217* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.11 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.10, align 8
  %.12 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.11, i64 0, i32 5
  %.13 = load i64 (%string.560217*, %string.560217*, i64)*, i64 (%string.560217*, %string.560217*, i64)** %.12, align 8
  %.15 = tail call i64 %.13(%string.560217* %.1, %string.560217* %.2, i64 0)
  %.18 = icmp sgt i64 %.15, -1
  br i1 %.18, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.21 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.22 = load i64, i64* %.21, align 8
  %.24 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.25 = load i64, i64* %.24, align 8
  %.26 = sub i64 %.22, %.25
  %.28 = getelementptr inbounds %string.560217, %string.560217* %.3, i64 0, i32 2
  %.29 = load i64, i64* %.28, align 8
  %.30 = add i64 %.26, %.29
  %.34 = tail call i8* @malloc(i64 %.30)
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.39 = load i8*, i8** %.38, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.34, i8* align 1 %.39, i64 %.15, i1 false)
  %.44 = getelementptr inbounds i8, i8* %.34, i64 %.15
  %.46 = getelementptr inbounds %string.560217, %string.560217* %.3, i64 0, i32 1
  %.47 = load i8*, i8** %.46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.44, i8* align 1 %.47, i64 %.29, i1 false)
  %.57 = add i64 %.29, %.15
  %.58 = getelementptr inbounds i8, i8* %.34, i64 %.57
  %.66 = add i64 %.25, %.15
  %.67 = getelementptr inbounds i8, i8* %.39, i64 %.66
  %.76 = sub i64 %.22, %.66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.58, i8* align 1 %.67, i64 %.76, i1 false)
  %.80 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.81 = bitcast i8* %.80 to %string.560217*
  %.82 = bitcast i8* %.80 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.82, align 8
  tail call void @string_constructor(%string.560217* %.81, i8* %.34, i64 %.30)
  ret %string.560217* %.81

.5.endif:                                         ; preds = %.5
  ret %string.560217* %.1
}

; Function Attrs: nounwind
define noalias i8* @string_to_cstring(%string.560217* nocapture readonly %.1) #3 {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.8 = add i64 %.7, 1
  %.10 = tail call i8* @malloc(i64 %.8)
  %.14 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.15 = load i8*, i8** %.14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.10, i8* align 1 %.15, i64 %.7, i1 false)
  %.24 = getelementptr inbounds i8, i8* %.10, i64 %.7
  store i8 0, i8* %.24, align 1
  ret i8* %.10
}

define i1 @string_ends_with(%string.560217* nocapture readonly %.1, %string.560217* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp slt i64 %.9, %.12
  br i1 %.13, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.17 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.22 = getelementptr inbounds i8, i8* %.18, i64 %.9
  %.26 = sub i64 0, %.12
  %.27 = getelementptr inbounds i8, i8* %.22, i64 %.26
  %.31 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 1
  %.32 = load i8*, i8** %.31, align 8
  %.36 = tail call i64 @memcmp(i8* %.27, i8* %.32, i64 %.12)
  %.37 = icmp eq i64 %.36, 0
  ret i1 %.37
}

define i1 @string_starts_with(%string.560217* nocapture readonly %.1, %string.560217* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp slt i64 %.9, %.12
  br i1 %.13, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.17 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 1
  %.21 = load i8*, i8** %.20, align 8
  %.25 = tail call i64 @memcmp(i8* %.18, i8* %.21, i64 %.12)
  %.26 = icmp eq i64 %.25, 0
  ret i1 %.26
}

; Function Attrs: nounwind
define noalias %string.560217* @string_from_cstring(i8* nocapture readonly %.1) local_unnamed_addr #3 {
.3:
  %.6 = tail call i64 @strlen(i8* nonnull dereferenceable(1) %.1)
  %.10 = tail call i8* @malloc(i64 %.6)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.10, i8* align 1 %.1, i64 %.6, i1 false)
  %.18 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.19 = bitcast i8* %.18 to %string.560217*
  %.20 = bitcast i8* %.18 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.20, align 8
  tail call void @string_constructor(%string.560217* %.19, i8* %.10, i64 %.6)
  ret %string.560217* %.19
}

; Function Attrs: nounwind
define noalias %string.560217* @string_from_bytes(i8* nocapture readonly %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.9 = tail call i8* @malloc(i64 %.2)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.9, i8* align 1 %.1, i64 %.2, i1 false)
  %.17 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.560217*
  %.19 = bitcast i8* %.17 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.19, align 8
  tail call void @string_constructor(%string.560217* %.18, i8* %.9, i64 %.2)
  ret %string.560217* %.18
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

declare i64 @memcmp(i8*, i8*, i64) local_unnamed_addr

; Function Attrs: nofree nounwind
define void @StringBuilder_constructor(%StringBuilder.560219* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.9 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 2
  store i64 %.2, i64* %.9, align 8
  %.16 = tail call i8* @malloc(i64 %.2)
  %.17 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 1
  store i8* %.16, i8** %.17, align 8
  %.221.cast = ptrtoint i8* %.16 to i64
  %.23 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 3
  %0 = bitcast i8** %.23 to i64*
  store i64 %.221.cast, i64* %0, align 8
  %.26 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 4
  store i64 0, i64* %.26, align 8
  ret void
}

; Function Attrs: nounwind
define void @StringBuilder_resize(%StringBuilder.560219* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 2
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 1
  %.15 = load i8*, i8** %.14, align 8
  %.19 = shl i64 %.8, 4
  %.20 = tail call i8* @realloc(i8* %.15, i64 %.19)
  store i8* %.20, i8** %.14, align 8
  %.28 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 4
  %.29 = load i64, i64* %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.20, i64 %.29
  %.31 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 3
  store i8* %.30, i8** %.31, align 8
  ret void
}

define void @StringBuilder_add_bytes_length(%StringBuilder.560219* %.1, i8* nocapture readonly %.2, i64 %.3) {
.5:
  %.10 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 4
  %.14 = load i64, i64* %.13, align 8
  %.15 = sub i64 %.11, %.14
  %.17.not = icmp sgt i64 %.15, %.3
  br i1 %.17.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.20 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 0
  %.21 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.20, align 8
  %.22 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.21, i64 0, i32 0
  %.23 = load void (%StringBuilder.560219*)*, void (%StringBuilder.560219*)** %.22, align 8
  tail call void %.23(%StringBuilder.560219* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.27 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 3
  %.28 = load i8*, i8** %.27, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.28, i8* align 1 %.2, i64 %.3, i1 false)
  %.35 = load i8*, i8** %.27, align 8
  %.37 = getelementptr inbounds i8, i8* %.35, i64 %.3
  store i8* %.37, i8** %.27, align 8
  %.43 = load i64, i64* %.13, align 8
  %.45 = add i64 %.43, %.3
  store i64 %.45, i64* %.13, align 8
  ret void
}

define void @StringBuilder_append_string(%StringBuilder.560219* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 0
  %.9 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.8, align 8
  %.10 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.9, i64 0, i32 1
  %.11 = load void (%StringBuilder.560219*, i8*, i64)*, void (%StringBuilder.560219*, i8*, i64)** %.10, align 8
  %.13 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.14 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.13, align 8
  %.15 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.14, i64 0, i32 9
  %.16 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.15, align 8
  %.17 = tail call i8* %.16(%string.560217* %.2)
  %.19 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.20 = load i64, i64* %.19, align 8
  tail call void %.11(%StringBuilder.560219* %.1, i8* %.17, i64 %.20)
  ret void
}

define void @StringBuilder_add_byte(%StringBuilder.560219* %.1, i8 %.2) {
.4:
  %.8 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 4
  %.12 = load i64, i64* %.11, align 8
  %.13 = sub i64 %.9, %.12
  %.14 = icmp slt i64 %.13, 2
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.17 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 0
  %.18 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.17, align 8
  %.19 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.18, i64 0, i32 0
  %.20 = load void (%StringBuilder.560219*)*, void (%StringBuilder.560219*)** %.19, align 8
  tail call void %.20(%StringBuilder.560219* nonnull %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4.if, %.4
  %.24 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 3
  %.25 = load i8*, i8** %.24, align 8
  store i8 %.2, i8* %.25, align 1
  %.32 = load i8*, i8** %.24, align 8
  %.33 = getelementptr inbounds i8, i8* %.32, i64 1
  store i8* %.33, i8** %.24, align 8
  %.39 = load i64, i64* %.11, align 8
  %.40 = add i64 %.39, 1
  store i64 %.40, i64* %.11, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @StringBuilder_get_string(%StringBuilder.560219* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 1
  %.7 = load i8*, i8** %.6, align 8
  %.9 = getelementptr inbounds %StringBuilder.560219, %StringBuilder.560219* %.1, i64 0, i32 4
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.12 = bitcast i8* %.11 to %string.560217*
  %.13 = bitcast i8* %.11 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.13, align 8
  tail call void @string_constructor(%string.560217* %.12, i8* %.7, i64 %.10)
  ret %string.560217* %.12
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Range_constructor(%Range.560221* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %Range.560221, %Range.560221* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %Range.560221, %Range.560221* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Range___in__(%Range.560221* nocapture readonly %.1, i64 %.2) #5 {
.4:
  %.9 = getelementptr inbounds %Range.560221, %Range.560221* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.11 = icmp sle i64 %.10, %.2
  %.14 = getelementptr inbounds %Range.560221, %Range.560221* %.1, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp sgt i64 %.15, %.2
  %.17 = and i1 %.11, %.16
  ret i1 %.17
}

define void @print(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.7, i64 0, i32 9
  %.9 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.8, align 8
  %.10 = tail call i8* %.9(%string.560217* %.1)
  %.12 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  tail call void @write(i64 1, i8* %.10, i64 %.13)
  ret void
}

define void @println(%string.560217* %.1) local_unnamed_addr {
.3:
  tail call void @print(%string.560217* %.1)
  tail call void @write(i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.0, i64 0, i64 0), i64 1)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloRange_constructor(%FloRange.560223* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5) local_unnamed_addr #2 {
.7:
  %.15 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.1, i64 0, i32 1
  store i64 %.2, i64* %.15, align 8
  %.19 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.1, i64 0, i32 2
  store i64 %.3, i64* %.19, align 8
  %.23 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.1, i64 0, i32 3
  store i64 %.4, i64* %.23, align 8
  %.27 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.1, i64 0, i32 4
  store i64 %.5, i64* %.27, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %FloRange.560223* @FloRange_merge(%FloRange.560223* nocapture readonly %.1, %FloRange.560223* nocapture readonly %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.17 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.2, i64 0, i32 4
  %.18 = load i64, i64* %.17, align 8
  %.19 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.20 = bitcast i8* %.19 to %FloRange.560223*
  %.21 = bitcast i8* %.19 to %FloRange_vtable_ty.560224**
  store %FloRange_vtable_ty.560224* @FloRange_vtable_data, %FloRange_vtable_ty.560224** %.21, align 8
  tail call void @FloRange_constructor(%FloRange.560223* %.20, i64 %.9, i64 %.12, i64 %.15, i64 %.18)
  ret %FloRange.560223* %.20
}

define void @change_print_color(i64 %.1) local_unnamed_addr {
.3:
  %.6 = icmp eq i64 %.1, 0
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.9.repack, align 8
  %.9.repack4 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack4 to i8**
  %.sink10 = select i1 %.6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.2, i64 0, i64 0)
  %.sink8 = select i1 %.6, i64 7, i64 4
  %.sink = select i1 %.6, i64 7, i64 4
  store i8* %.sink10, i8** %0, align 8
  %.13.repack2 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.13.repack2 to i64*
  store i64 %.sink8, i64* %1, align 8
  %.13.repack3 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.13.repack3 to i64*
  store i64 %.sink, i64* %2, align 8
  %.16 = bitcast i8* %.8 to %string.560217*
  tail call void @print(%string.560217* %.16)
  ret void
}

declare void @exit(i64) local_unnamed_addr

define void @panic(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.7, i64 0, i32 11
  %.9 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.8, align 8
  %.10 = tail call i8* %.9(%string.560217* %.1)
  %.12 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.3, i64 0, i64 0), i8* %.10)
  %.13 = add i64 %.12, 1
  %.15 = tail call i8* @malloc(i64 %.13)
  %.16 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.3, i64 0, i64 0), i8* %.10)
  %.17 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.560217*
  %.19 = bitcast i8* %.17 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.19, align 8
  %.21 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.21 to i8**
  store i8* %.15, i8** %0, align 8
  %.23 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.23 to i64*
  store i64 %.12, i64* %1, align 8
  %.25 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.25 to i64*
  store i64 %.12, i64* %2, align 8
  tail call void @println(%string.560217* %.18)
  tail call void @exit(i64 2)
  ret void
}

declare i64 @sprintf(i8*, i8*, ...) local_unnamed_addr

declare i64 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloError_constructor(%FloError.560225* nocapture %.1, i64 %.2, %string.560217* %.3, %FloRange.560223* %.4) local_unnamed_addr #2 {
.6:
  %.13 = getelementptr inbounds %FloError.560225, %FloError.560225* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %FloError.560225, %FloError.560225* %.1, i64 0, i32 3
  store %FloRange.560223* %.4, %FloRange.560223** %.17, align 8
  %.21 = getelementptr inbounds %FloError.560225, %FloError.560225* %.1, i64 0, i32 2
  store %string.560217* %.3, %string.560217** %.21, align 8
  ret void
}

define i64 @get_next_line_index(%string.560217* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.9 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.9, i64 0, i32 8
  %.11 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.10, align 8
  %.13 = tail call i8 %.11(%string.560217* %.1, i64 %.2)
  %.14 = icmp ne i8 %.13, 10
  %.17 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.18 = load i64, i64* %.17, align 8
  %.19 = icmp sgt i64 %.18, %.2
  %.20 = and i1 %.14, %.19
  br i1 %.20, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %start.0 = phi i64 [ %.25, %while.entry ], [ %.2, %.4 ]
  %.25 = add nsw i64 %start.0, 1
  %.29 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.8, align 8
  %.30 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.29, i64 0, i32 8
  %.31 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.30, align 8
  %.33 = tail call i8 %.31(%string.560217* nonnull %.1, i64 %.25)
  %.34 = icmp ne i8 %.33, 10
  %.38 = load i64, i64* %.17, align 8
  %.39 = icmp slt i64 %.25, %.38
  %.40 = and i1 %.34, %.39
  br i1 %.40, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %start.1 = phi i64 [ %.2, %.4 ], [ %.25, %while.entry ]
  ret i64 %start.1
}

define void @print_error_line(%string.560217* %.1, %FloRange.560223* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.2, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call i64 @get_next_line_index(%string.560217* %.1, i64 %.10)
  %.14 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.2, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.17 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.2, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = sub i64 %.15, %.18
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 7
  %.25 = load %string.560217* (%string.560217*, i64, i64)*, %string.560217* (%string.560217*, i64, i64)** %.24, align 8
  %.29 = sub i64 %.11, %.19
  %.30 = tail call %string.560217* %.25(%string.560217* %.1, i64 %.19, i64 %.29)
  tail call void @println(%string.560217* %.30)
  %.34 = load i64, i64* %.17, align 8
  %.38 = load i64, i64* %.9, align 8
  %.41 = load i64, i64* %.14, align 8
  %.42 = sub i64 %.38, %.41
  %.4914 = icmp sgt i64 %.34, 0
  br i1 %.4914, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %storemerge15 = phi i64 [ %.59, %for.body ], [ 0, %.4 ]
  %.51 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %string.560217*
  %.52.repack = bitcast i8* %.51 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.52.repack, align 8
  %.52.repack8 = getelementptr inbounds i8, i8* %.51, i64 8
  %0 = bitcast i8* %.52.repack8 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0), i8** %0, align 8
  %.52.repack9 = getelementptr inbounds i8, i8* %.51, i64 16
  %1 = bitcast i8* %.52.repack9 to i64*
  store i64 1, i64* %1, align 8
  %.52.repack10 = getelementptr inbounds i8, i8* %.51, i64 24
  %2 = bitcast i8* %.52.repack10 to i64*
  store i64 1, i64* %2, align 8
  tail call void @print(%string.560217* %.52)
  %.59 = add nuw nsw i64 %storemerge15, 1
  %exitcond16.not = icmp eq i64 %.59, %.34
  br i1 %exitcond16.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  tail call void @change_print_color(i64 0)
  %.6812 = icmp sgt i64 %.42, 0
  br i1 %.6812, label %for.body.1, label %for.end.1

for.body.1:                                       ; preds = %for.end, %for.body.1
  %storemerge113 = phi i64 [ %.78, %for.body.1 ], [ 0, %for.end ]
  %.70 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.71 = bitcast i8* %.70 to %string.560217*
  %.71.repack = bitcast i8* %.70 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.71.repack, align 8
  %.71.repack5 = getelementptr inbounds i8, i8* %.70, i64 8
  %3 = bitcast i8* %.71.repack5 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0), i8** %3, align 8
  %.71.repack6 = getelementptr inbounds i8, i8* %.70, i64 16
  %4 = bitcast i8* %.71.repack6 to i64*
  store i64 1, i64* %4, align 8
  %.71.repack7 = getelementptr inbounds i8, i8* %.70, i64 24
  %5 = bitcast i8* %.71.repack7 to i64*
  store i64 1, i64* %5, align 8
  tail call void @print(%string.560217* %.71)
  %.78 = add nuw nsw i64 %storemerge113, 1
  %exitcond.not = icmp eq i64 %.78, %.42
  br i1 %exitcond.not, label %for.end.1, label %for.body.1

for.end.1:                                        ; preds = %for.body.1, %for.end
  tail call void @change_print_color(i64 1)
  %.82 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.83 = bitcast i8* %.82 to %string.560217*
  %.83.repack = bitcast i8* %.82 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.83.repack, align 8
  %.83.repack2 = getelementptr inbounds i8, i8* %.82, i64 8
  %6 = bitcast i8* %.83.repack2 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.0, i64 0, i64 0), i8** %6, align 8
  %.83.repack3 = getelementptr inbounds i8, i8* %.82, i64 16
  %7 = bitcast i8* %.83.repack3 to i64*
  store i64 1, i64* %7, align 8
  %.83.repack4 = getelementptr inbounds i8, i8* %.82, i64 24
  %8 = bitcast i8* %.83.repack4 to i64*
  store i64 1, i64* %8, align 8
  tail call void @print(%string.560217* %.83)
  ret void
}

define void @print_message_error(i64 %.1, %string.560217* %.2) local_unnamed_addr {
.4:
  tail call void @change_print_color(i64 0)
  switch i64 %.1, label %.4.else.else.else.else.else [
    i64 0, label %.4.if
    i64 2, label %.4.endif
    i64 3, label %.4.else.else.if
    i64 5, label %.4.else.else.else.if
    i64 1, label %.4.else.else.else.else.if
  ]

.4.if:                                            ; preds = %.4
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.else.else.else.else.if, %.4.else.else.else.else.else, %.4.else.else.else.if, %.4.else.else.if, %.4.if
  %.sink23 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @str.10, i64 0, i64 0), %.4.else.else.else.else.if ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @str.11, i64 0, i64 0), %.4.else.else.else.else.else ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @str.9, i64 0, i64 0), %.4.else.else.else.if ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @str.8, i64 0, i64 0), %.4.else.else.if ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @str.6, i64 0, i64 0), %.4.if ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @str.7, i64 0, i64 0), %.4 ]
  %.sink20 = phi i64 [ 14, %.4.else.else.else.else.if ], [ 9, %.4.else.else.else.else.else ], [ 14, %.4.else.else.else.if ], [ 12, %.4.else.else.if ], [ 21, %.4.if ], [ 16, %.4 ]
  %.43 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.560217*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.44.repack, align 8
  %.44.repack4 = getelementptr inbounds i8, i8* %.43, i64 8
  %0 = bitcast i8* %.44.repack4 to i8**
  store i8* %.sink23, i8** %0, align 8
  %.44.repack5 = getelementptr inbounds i8, i8* %.43, i64 16
  %1 = bitcast i8* %.44.repack5 to i64*
  store i64 %.sink20, i64* %1, align 8
  %.44.repack6 = getelementptr inbounds i8, i8* %.43, i64 24
  %2 = bitcast i8* %.44.repack6 to i64*
  store i64 %.sink20, i64* %2, align 8
  tail call void @print(%string.560217* %.44)
  tail call void @change_print_color(i64 1)
  tail call void @println(%string.560217* %.2)
  ret void

.4.else.else.if:                                  ; preds = %.4
  br label %.4.endif

.4.else.else.else.if:                             ; preds = %.4
  br label %.4.endif

.4.else.else.else.else.if:                        ; preds = %.4
  br label %.4.endif

.4.else.else.else.else.else:                      ; preds = %.4
  br label %.4.endif
}

define void @print_error(%FloError.560225* nocapture readonly %.1, %string.560217* %.2, %string.560217* %.3) local_unnamed_addr {
.5:
  %.10 = getelementptr inbounds %FloError.560225, %FloError.560225* %.1, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %FloError.560225, %FloError.560225* %.1, i64 0, i32 2
  %.14 = load %string.560217*, %string.560217** %.13, align 8
  tail call void @print_message_error(i64 %.11, %string.560217* %.14)
  %.18 = getelementptr inbounds %FloError.560225, %FloError.560225* %.1, i64 0, i32 3
  %.19 = load %FloRange.560223*, %FloRange.560223** %.18, align 8
  %.20 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.19, i64 0, i32 4
  %.21 = load i64, i64* %.20, align 8
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 11
  %.25 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.24, align 8
  %.26 = tail call i8* %.25(%string.560217* %.2)
  %.28 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.12, i64 0, i64 0), i8* %.26, i64 %.21)
  %.29 = add i64 %.28, 1
  %.31 = tail call i8* @malloc(i64 %.29)
  %.32 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.31, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.12, i64 0, i64 0), i8* %.26, i64 %.21)
  %.33 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.560217*
  %.35 = bitcast i8* %.33 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.35, align 8
  %.37 = getelementptr inbounds i8, i8* %.33, i64 8
  %0 = bitcast i8* %.37 to i8**
  store i8* %.31, i8** %0, align 8
  %.39 = getelementptr inbounds i8, i8* %.33, i64 16
  %1 = bitcast i8* %.39 to i64*
  store i64 %.28, i64* %1, align 8
  %.41 = getelementptr inbounds i8, i8* %.33, i64 24
  %2 = bitcast i8* %.41 to i64*
  store i64 %.28, i64* %2, align 8
  tail call void @println(%string.560217* %.34)
  %.47 = load %FloRange.560223*, %FloRange.560223** %.18, align 8
  tail call void @print_error_line(%string.560217* %.3, %FloRange.560223* %.47)
  ret void
}

; Function Attrs: nofree nounwind
declare i64 @access(i8* nocapture readonly, i64) local_unnamed_addr #4

declare i64 @fopen(i8*, i8*) local_unnamed_addr

declare void @fclose(i64) local_unnamed_addr

declare i64 @fread(i8*, i64, i64, i64) local_unnamed_addr

; Function Attrs: nofree norecurse nounwind writeonly
define void @File_constructor(%File.560227* nocapture %.1, i64 %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %File.560227, %File.560227* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

define noalias %File.560227* @File_open_for_reading(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.7, i64 0, i32 11
  %.9 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.8, align 8
  %.10 = tail call i8* %.9(%string.560217* %.1)
  %.11 = tail call i64 @fopen(i8* %.10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.13, i64 0, i64 0))
  %.17 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.18 = bitcast i8* %.17 to %File.560227*
  %.19 = bitcast i8* %.17 to %File_vtable_ty.560228**
  store %File_vtable_ty.560228* @File_vtable_data, %File_vtable_ty.560228** %.19, align 8
  tail call void @File_constructor(%File.560227* %.18, i64 %.11)
  ret %File.560227* %.18
}

define noalias %string.560217* @File_read_all(%File.560227* nocapture readonly %.1) {
.3:
  %.8 = tail call i8* @malloc(i64 0)
  %buffer1 = alloca [1024 x i8], align 1
  %.112 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer1, i64 0, i64 0
  %.14 = getelementptr inbounds %File.560227, %File.560227* %.1, i64 0, i32 1
  %.153 = load i64, i64* %.14, align 8
  %.164 = call i64 @fread(i8* nonnull %.112, i64 1, i64 1024, i64 %.153)
  %.195 = icmp eq i64 %.164, 0
  br i1 %.195, label %while.entry.if, label %while.entry.endif

while.entry.if:                                   ; preds = %while.entry.endif, %.3
  %size.0.lcssa = phi i64 [ 0, %.3 ], [ %.33, %while.entry.endif ]
  %allocated_mem.0.lcssa = phi i8* [ %.8, %.3 ], [ %.38, %while.entry.endif ]
  %.23 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.560217*
  %.25 = bitcast i8* %.23 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.25, align 8
  call void @string_constructor(%string.560217* %.24, i8* %allocated_mem.0.lcssa, i64 %size.0.lcssa)
  ret %string.560217* %.24

while.entry.endif:                                ; preds = %.3, %while.entry.endif
  %.169 = phi i64 [ %.16, %while.entry.endif ], [ %.164, %.3 ]
  %.118 = phi i8* [ %.11, %while.entry.endif ], [ %.112, %.3 ]
  %allocated_mem.07 = phi i8* [ %.38, %while.entry.endif ], [ %.8, %.3 ]
  %size.06 = phi i64 [ %.33, %while.entry.endif ], [ 0, %.3 ]
  %.33 = add i64 %.169, %size.06
  %.37 = shl i64 %.33, 3
  %.38 = call i8* @realloc(i8* %allocated_mem.07, i64 %.37)
  %.42 = getelementptr inbounds i8, i8* %.38, i64 %size.06
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.42, i8* nonnull align 1 %.118, i64 %.169, i1 false)
  %buffer = alloca [1024 x i8], align 1
  %.11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i64 0, i64 0
  %.15 = load i64, i64* %.14, align 8
  %.16 = call i64 @fread(i8* nonnull %.11, i64 1, i64 1024, i64 %.15)
  %.19 = icmp eq i64 %.16, 0
  br i1 %.19, label %while.entry.if, label %while.entry.endif
}

define i1 @File_exists(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.7, i64 0, i32 11
  %.9 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.8, align 8
  %.10 = tail call i8* %.9(%string.560217* %.1)
  %.11 = tail call i64 @access(i8* %.10, i64 0)
  %.12 = icmp eq i64 %.11, 0
  ret i1 %.12
}

define void @File_close(%File.560227* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %File.560227, %File.560227* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  tail call void @fclose(i64 %.7)
  ret void
}

; Function Attrs: nofree nounwind
declare i8* @realpath(i8* nocapture readonly, i8*) local_unnamed_addr #4

declare i8* @dirname(i8*) local_unnamed_addr

define noalias %string.560217* @Path_join(%string.560217* %.1, %string.560217* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.10, i64 0, i32 11
  %.12 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.11, align 8
  %.13 = tail call i8* %.12(%string.560217* %.1)
  %.14 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.15 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.15, i64 0, i32 11
  %.17 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.16, align 8
  %.18 = tail call i8* %.17(%string.560217* %.2)
  %.20 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.14, i64 0, i64 0), i8* %.13, i8* %.18)
  %.21 = add i64 %.20, 1
  %.23 = tail call i8* @malloc(i64 %.21)
  %.24 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.14, i64 0, i64 0), i8* %.13, i8* %.18)
  %.25 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.25 to %string.560217*
  %.27 = bitcast i8* %.25 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %0 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %0, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %1 = bitcast i8* %.31 to i64*
  store i64 %.20, i64* %1, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %2 = bitcast i8* %.33 to i64*
  store i64 %.20, i64* %2, align 8
  ret %string.560217* %.26
}

define noalias %string.560217* @Path_abspath(%string.560217* %.1) local_unnamed_addr {
.3:
  %buf = alloca [400 x i8], align 1
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.7, i64 0, i32 11
  %.9 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.8, align 8
  %.10 = tail call i8* %.9(%string.560217* %.1)
  %.11 = getelementptr inbounds [400 x i8], [400 x i8]* %buf, i64 0, i64 0
  %.13 = call i8* @realpath(i8* %.10, i8* nonnull %.11)
  %.16 = call %string.560217* @string_from_cstring(i8* nonnull %.11)
  ret %string.560217* %.16
}

define noalias %string.560217* @Path_dirname(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.7, i64 0, i32 11
  %.9 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.8, align 8
  %.10 = tail call i8* %.9(%string.560217* %.1)
  %.11 = tail call i8* @dirname(i8* %.10)
  %.12 = tail call %string.560217* @string_from_cstring(i8* %.11)
  ret %string.560217* %.12
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FileId_constructor(%FileId.560231* nocapture %.1, i64 %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %FileId.560231, %FileId.560231* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloFile_constructor(%FloFile.560233* nocapture %.1, %string.560217* %.2, %string.560217* %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %FloFile.560233, %FloFile.560233* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.11, align 8
  %.15 = getelementptr inbounds %FloFile.560233, %FloFile.560233* %.1, i64 0, i32 2
  store %string.560217* %.3, %string.560217** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FloFile>_constructor"(%"Array<FloFile>.560237"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 1
  %0 = bitcast %FloFile.560233*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FloFile>_resize"(%"Array<FloFile>.560237"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 1
  %0 = bitcast %FloFile.560233*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FloFile>_swap"(%"Array<FloFile>.560237"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 1
  %.48 = load %FloFile.560233**, %FloFile.560233*** %.47, align 8
  %.49 = getelementptr inbounds %FloFile.560233*, %FloFile.560233** %.48, i64 %.2
  %4 = bitcast %FloFile.560233** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FloFile.560233*, %FloFile.560233** %.48, i64 %.3
  %5 = bitcast %FloFile.560233** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FloFile.560233**, %FloFile.560233*** %.47, align 8
  %.69 = getelementptr inbounds %FloFile.560233*, %FloFile.560233** %.67, i64 %.3
  %6 = bitcast %FloFile.560233** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloFile>___sl__"(%"Array<FloFile>.560237"* %.1, %FloFile.560233* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 0
  %.17 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FloFile>.560237"*)*, void (%"Array<FloFile>.560237"*)** %.18, align 8
  tail call void %.19(%"Array<FloFile>.560237"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 1
  %.31 = load %FloFile.560233**, %FloFile.560233*** %.30, align 8
  %.33 = getelementptr inbounds %FloFile.560233*, %FloFile.560233** %.31, i64 %.24
  store %FloFile.560233* %.2, %FloFile.560233** %.33, align 8
  ret void
}

define void @"Array<FloFile>___setitem__"(%"Array<FloFile>.560237"* nocapture readonly %.1, i64 %.2, %FloFile.560233* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 1
  %.30 = load %FloFile.560233**, %FloFile.560233*** %.29, align 8
  %.32 = getelementptr inbounds %FloFile.560233*, %FloFile.560233** %.30, i64 %.2
  store %FloFile.560233* %.3, %FloFile.560233** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloFile>_append"(%"Array<FloFile>.560237"* %.1, %FloFile.560233* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 0
  %.9 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FloFile>.560237"*, %FloFile.560233*)*, void (%"Array<FloFile>.560237"*, %FloFile.560233*)** %.10, align 8
  tail call void %.11(%"Array<FloFile>.560237"* %.1, %FloFile.560233* %.2)
  ret void
}

define %FloFile.560233* @"Array<FloFile>___getitem__"(%"Array<FloFile>.560237"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 1
  %.28 = load %FloFile.560233**, %FloFile.560233*** %.27, align 8
  %.29 = getelementptr inbounds %FloFile.560233*, %FloFile.560233** %.28, i64 %.2
  %.30 = load %FloFile.560233*, %FloFile.560233** %.29, align 8
  ret %FloFile.560233* %.30

.4.endif:                                         ; preds = %.4
  ret %FloFile.560233* null
}

define i1 @"Array<FloFile>___eq__"(%"Array<FloFile>.560237"* %.1, %"Array<FloFile>.560237"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.28, i64 0, i32 5
  %.30 = load %FloFile.560233* (%"Array<FloFile>.560237"*, i64)*, %FloFile.560233* (%"Array<FloFile>.560237"*, i64)** %.29, align 8
  %.31 = tail call %FloFile.560233* %.30(%"Array<FloFile>.560237"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.35, i64 0, i32 5
  %.37 = load %FloFile.560233* (%"Array<FloFile>.560237"*, i64)*, %FloFile.560233* (%"Array<FloFile>.560237"*, i64)** %.36, align 8
  %.38 = tail call %FloFile.560233* %.37(%"Array<FloFile>.560237"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %FloFile.560233* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FloFile.560233* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FloFile>___in__"(%"Array<FloFile>.560237"* %.1, %FloFile.560233* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FloFile.560233* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.19, i64 0, i32 5
  %.21 = load %FloFile.560233* (%"Array<FloFile>.560237"*, i64)*, %FloFile.560233* (%"Array<FloFile>.560237"*, i64)** %.20, align 8
  %.22 = tail call %FloFile.560233* %.21(%"Array<FloFile>.560237"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %FloFile.560233* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FloFile>_find"(%"Array<FloFile>.560237"* nocapture readonly %.1, %FloFile.560233* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.1, i64 0, i32 1
  %.19 = load %FloFile.560233**, %FloFile.560233*** %.18, align 8
  %0 = ptrtoint %FloFile.560233* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FloFile.560233*, %FloFile.560233** %.19, i64 %storemerge5
  %1 = bitcast %FloFile.560233** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<FloError>_constructor"(%"Array<FloError>.560238"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 1
  %0 = bitcast %FloError.560225*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FloError>_resize"(%"Array<FloError>.560238"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 1
  %0 = bitcast %FloError.560225*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FloError>_swap"(%"Array<FloError>.560238"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 1
  %.48 = load %FloError.560225**, %FloError.560225*** %.47, align 8
  %.49 = getelementptr inbounds %FloError.560225*, %FloError.560225** %.48, i64 %.2
  %4 = bitcast %FloError.560225** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FloError.560225*, %FloError.560225** %.48, i64 %.3
  %5 = bitcast %FloError.560225** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FloError.560225**, %FloError.560225*** %.47, align 8
  %.69 = getelementptr inbounds %FloError.560225*, %FloError.560225** %.67, i64 %.3
  %6 = bitcast %FloError.560225** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloError>___sl__"(%"Array<FloError>.560238"* %.1, %FloError.560225* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 0
  %.17 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FloError>.560238"*)*, void (%"Array<FloError>.560238"*)** %.18, align 8
  tail call void %.19(%"Array<FloError>.560238"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 1
  %.31 = load %FloError.560225**, %FloError.560225*** %.30, align 8
  %.33 = getelementptr inbounds %FloError.560225*, %FloError.560225** %.31, i64 %.24
  store %FloError.560225* %.2, %FloError.560225** %.33, align 8
  ret void
}

define void @"Array<FloError>___setitem__"(%"Array<FloError>.560238"* nocapture readonly %.1, i64 %.2, %FloError.560225* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 1
  %.30 = load %FloError.560225**, %FloError.560225*** %.29, align 8
  %.32 = getelementptr inbounds %FloError.560225*, %FloError.560225** %.30, i64 %.2
  store %FloError.560225* %.3, %FloError.560225** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloError>_append"(%"Array<FloError>.560238"* %.1, %FloError.560225* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 0
  %.9 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FloError>.560238"*, %FloError.560225*)*, void (%"Array<FloError>.560238"*, %FloError.560225*)** %.10, align 8
  tail call void %.11(%"Array<FloError>.560238"* %.1, %FloError.560225* %.2)
  ret void
}

define %FloError.560225* @"Array<FloError>___getitem__"(%"Array<FloError>.560238"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 1
  %.28 = load %FloError.560225**, %FloError.560225*** %.27, align 8
  %.29 = getelementptr inbounds %FloError.560225*, %FloError.560225** %.28, i64 %.2
  %.30 = load %FloError.560225*, %FloError.560225** %.29, align 8
  ret %FloError.560225* %.30

.4.endif:                                         ; preds = %.4
  ret %FloError.560225* null
}

define i1 @"Array<FloError>___eq__"(%"Array<FloError>.560238"* %.1, %"Array<FloError>.560238"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.28, i64 0, i32 5
  %.30 = load %FloError.560225* (%"Array<FloError>.560238"*, i64)*, %FloError.560225* (%"Array<FloError>.560238"*, i64)** %.29, align 8
  %.31 = tail call %FloError.560225* %.30(%"Array<FloError>.560238"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.35, i64 0, i32 5
  %.37 = load %FloError.560225* (%"Array<FloError>.560238"*, i64)*, %FloError.560225* (%"Array<FloError>.560238"*, i64)** %.36, align 8
  %.38 = tail call %FloError.560225* %.37(%"Array<FloError>.560238"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %FloError.560225* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FloError.560225* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FloError>___in__"(%"Array<FloError>.560238"* %.1, %FloError.560225* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FloError.560225* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.19, i64 0, i32 5
  %.21 = load %FloError.560225* (%"Array<FloError>.560238"*, i64)*, %FloError.560225* (%"Array<FloError>.560238"*, i64)** %.20, align 8
  %.22 = tail call %FloError.560225* %.21(%"Array<FloError>.560238"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %FloError.560225* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FloError>_find"(%"Array<FloError>.560238"* nocapture readonly %.1, %FloError.560225* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.1, i64 0, i32 1
  %.19 = load %FloError.560225**, %FloError.560225*** %.18, align 8
  %0 = ptrtoint %FloError.560225* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FloError.560225*, %FloError.560225** %.19, i64 %storemerge5
  %1 = bitcast %FloError.560225** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.560243"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, FileId>_set"(%"Bucket<string, FileId>.560243"* nocapture %.1, %string.560217* %.2, %FileId.560231* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.1, i64 0, i32 2
  store %FileId.560231* %.3, %FileId.560231** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, FileId>_constructor"(%"Map<string, FileId>.560239"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.560243"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, FileId>.560243"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, FileId>_vtable_ty.560244"**
  store %"Bucket<string, FileId>_vtable_ty.560244"* @"Bucket<string, FileId>_vtable_data", %"Bucket<string, FileId>_vtable_ty.560244"** %.266, align 8
  tail call void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.560243"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, FileId>.560243"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, FileId>_vtable_ty.560244"**
  store %"Bucket<string, FileId>_vtable_ty.560244"* @"Bucket<string, FileId>_vtable_data", %"Bucket<string, FileId>_vtable_ty.560244"** %.26, align 8
  tail call void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.560243"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, FileId>.560243"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, FileId>_hash_fnc"(%"Map<string, FileId>.560239"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, FileId>_resize"(%"Map<string, FileId>.560239"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, FileId>_vtable_ty.560242"*, %"Map<string, FileId>_vtable_ty.560242"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.560242", %"Map<string, FileId>_vtable_ty.560242"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, FileId>>.560245"* (%"Map<string, FileId>.560239"*)*, %"Array<Bucket<string, FileId>>.560245"* (%"Map<string, FileId>.560239"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, FileId>>.560245"* %.9(%"Map<string, FileId>.560239"* %.1)
  %.14 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.560243"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, FileId>.560243"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, FileId>_vtable_ty.560244"**
  store %"Bucket<string, FileId>_vtable_ty.560244"* @"Bucket<string, FileId>_vtable_data", %"Bucket<string, FileId>_vtable_ty.560244"** %.5016, align 8
  tail call void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.560243"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, FileId>.560243"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, FileId>_vtable_ty.560244"**
  store %"Bucket<string, FileId>_vtable_ty.560244"* @"Bucket<string, FileId>_vtable_data", %"Bucket<string, FileId>_vtable_ty.560244"** %.50, align 8
  tail call void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.560243"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, FileId>.560243"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, FileId>_vtable_ty.560242"*, %"Map<string, FileId>_vtable_ty.560242"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.560242", %"Map<string, FileId>_vtable_ty.560242"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, FileId>.560239"*, %string.560217*, %FileId.560231*)*, void (%"Map<string, FileId>.560239"*, %string.560217*, %FileId.560231*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)*, %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, FileId>.560243"* %.81(%"Array<Bucket<string, FileId>>.560245"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)*, %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, FileId>.560243"* %.90(%"Array<Bucket<string, FileId>>.560245"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.91, i64 0, i32 2
  %.93 = load %FileId.560231*, %FileId.560231** %.92, align 8
  tail call void %.75(%"Map<string, FileId>.560239"* nonnull %.1, %string.560217* %.84, %FileId.560231* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, FileId>_set"(%"Map<string, FileId>.560239"* %.1, %string.560217* %.2, %FileId.560231* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, FileId>_vtable_ty.560242"*, %"Map<string, FileId>_vtable_ty.560242"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.560242", %"Map<string, FileId>_vtable_ty.560242"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, FileId>.560239"*)*, void (%"Map<string, FileId>.560239"*)** %.25, align 8
  tail call void %.26(%"Map<string, FileId>.560239"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, FileId>_vtable_ty.560242"*, %"Map<string, FileId>_vtable_ty.560242"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.560242", %"Map<string, FileId>_vtable_ty.560242"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, FileId>.560239"*, %string.560217*)*, i64 (%"Map<string, FileId>.560239"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, FileId>.560239"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.44, i64 %.39
  %.46 = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, FileId>.560243"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, FileId>.560243"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.94, i64 %.91
  %.96 = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, FileId>_vtable_ty.560244"*, %"Bucket<string, FileId>_vtable_ty.560244"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, FileId>_vtable_ty.560244", %"Bucket<string, FileId>_vtable_ty.560244"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, FileId>.560243"*, %string.560217*, %FileId.560231*)*, void (%"Bucket<string, FileId>.560243"*, %string.560217*, %FileId.560231*)** %.99, align 8
  tail call void %.100(%"Bucket<string, FileId>.560243"* %.96, %string.560217* %.2, %FileId.560231* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.77, i64 %.72
  %.79 = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %FileId.560231* @"Map<string, FileId>_get"(%"Map<string, FileId>.560239"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, FileId>_vtable_ty.560242"*, %"Map<string, FileId>_vtable_ty.560242"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.560242", %"Map<string, FileId>_vtable_ty.560242"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, FileId>.560239"*, %string.560217*)*, i64 (%"Map<string, FileId>.560239"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, FileId>.560239"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.22, i64 %.17
  %.24 = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, FileId>.560243"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.56, i64 %.50
  %.58 = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %FileId.560231*, %FileId.560231** %.79, align 8
  ret %FileId.560231* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %FileId.560231* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, FileId>>_constructor"(%"Array<Bucket<string, FileId>>.560245"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.560243"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, FileId>>_resize"(%"Array<Bucket<string, FileId>>.560245"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.560243"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, FileId>>_swap"(%"Array<Bucket<string, FileId>>.560245"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, FileId>.560243"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, FileId>.560243"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, FileId>.560243"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, FileId>>___sl__"(%"Array<Bucket<string, FileId>>.560245"* %.1, %"Bucket<string, FileId>.560243"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, FileId>>.560245"*)*, void (%"Array<Bucket<string, FileId>>.560245"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, FileId>>.560245"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.31, i64 %.24
  store %"Bucket<string, FileId>.560243"* %.2, %"Bucket<string, FileId>.560243"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, FileId>>___setitem__"(%"Array<Bucket<string, FileId>>.560245"* nocapture readonly %.1, i64 %.2, %"Bucket<string, FileId>.560243"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.30, i64 %.2
  store %"Bucket<string, FileId>.560243"* %.3, %"Bucket<string, FileId>.560243"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, FileId>>_append"(%"Array<Bucket<string, FileId>>.560245"* %.1, %"Bucket<string, FileId>.560243"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)*, void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, FileId>>.560245"* %.1, %"Bucket<string, FileId>.560243"* %.2)
  ret void
}

define %"Bucket<string, FileId>.560243"* @"Array<Bucket<string, FileId>>___getitem__"(%"Array<Bucket<string, FileId>>.560245"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.28, i64 %.2
  %.30 = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.29, align 8
  ret %"Bucket<string, FileId>.560243"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, FileId>.560243"* null
}

define i1 @"Array<Bucket<string, FileId>>___eq__"(%"Array<Bucket<string, FileId>>.560245"* %.1, %"Array<Bucket<string, FileId>>.560245"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)*, %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, FileId>.560243"* %.30(%"Array<Bucket<string, FileId>>.560245"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)*, %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, FileId>.560243"* %.37(%"Array<Bucket<string, FileId>>.560245"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, FileId>.560243"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, FileId>.560243"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, FileId>>___in__"(%"Array<Bucket<string, FileId>>.560245"* %.1, %"Bucket<string, FileId>.560243"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, FileId>.560243"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)*, %"Bucket<string, FileId>.560243"* (%"Array<Bucket<string, FileId>>.560245"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, FileId>.560243"* %.21(%"Array<Bucket<string, FileId>>.560245"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, FileId>.560243"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, FileId>>_find"(%"Array<Bucket<string, FileId>>.560245"* nocapture readonly %.1, %"Bucket<string, FileId>.560243"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, FileId>>.560245", %"Array<Bucket<string, FileId>>.560245"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, FileId>.560243"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, FileId>.560243"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, FileId>>.560245"* @"Map<string, FileId>_get_buckets"(%"Map<string, FileId>.560239"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, FileId>>.560245"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, FileId>>_vtable_ty.560246"**
  store %"Array<Bucket<string, FileId>>_vtable_ty.560246"* @"Array<Bucket<string, FileId>>_vtable_data", %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, FileId>.560243"**, %"Bucket<string, FileId>.560243"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, FileId>.560243"*, %"Bucket<string, FileId>.560243"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, FileId>.560243", %"Bucket<string, FileId>.560243"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, FileId>>.560245"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, FileId>>_vtable_ty.560246"*, %"Array<Bucket<string, FileId>>_vtable_ty.560246"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.560246", %"Array<Bucket<string, FileId>>_vtable_ty.560246"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)*, void (%"Array<Bucket<string, FileId>>.560245"*, %"Bucket<string, FileId>.560243"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, FileId>>.560245"* %.9, %"Bucket<string, FileId>.560243"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

define void @Compiler_constructor(%Compiler.560235* %.1) local_unnamed_addr {
.3:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<FloFile>_vtable_ty.560240"**
  store %"Array<FloFile>_vtable_ty.560240"* @"Array<FloFile>_vtable_data", %"Array<FloFile>_vtable_ty.560240"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 5
  %3 = bitcast %"Array<FloFile>.560237"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 1
  store %FileId.560231* null, %FileId.560231** %.22, align 8
  %.25 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 3
  store %string.560217* null, %string.560217** %.25, align 8
  %.29 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.31 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.31 to %"Array<FloError>_vtable_ty.560241"**
  store %"Array<FloError>_vtable_ty.560241"* @"Array<FloError>_vtable_data", %"Array<FloError>_vtable_ty.560241"** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %4 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %4, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %5 = bitcast i8* %.37 to i64*
  store i64 0, i64* %5, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %6 = bitcast i8* %.39 to i64*
  store i64 8, i64* %6, align 8
  %.41 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 6
  %7 = bitcast %"Array<FloError>.560238"** %.41 to i8**
  store i8* %.31, i8** %7, align 8
  %.44 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %"Map<string, FileId>.560239"*
  %.46 = bitcast i8* %.44 to %"Map<string, FileId>_vtable_ty.560242"**
  store %"Map<string, FileId>_vtable_ty.560242"* @"Map<string, FileId>_vtable_data", %"Map<string, FileId>_vtable_ty.560242"** %.46, align 8
  tail call void @"Map<string, FileId>_constructor"(%"Map<string, FileId>.560239"* %.45)
  %.49 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 7
  %8 = bitcast %"Map<string, FileId>.560239"** %.49 to i8**
  store i8* %.44, i8** %8, align 8
  %.52 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 0
  %.53 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.52, align 8
  %.54 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.53, i64 0, i32 0
  %.55 = load void (%Compiler.560235*, %string.560217*)*, void (%Compiler.560235*, %string.560217*)** %.54, align 8
  %.56 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.57 = bitcast i8* %.56 to %string.560217*
  %.57.repack = bitcast i8* %.56 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.57.repack, align 8
  %.57.repack1 = getelementptr inbounds i8, i8* %.56, i64 8
  %9 = bitcast i8* %.57.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.15, i64 0, i64 0), i8** %9, align 8
  %.57.repack2 = getelementptr inbounds i8, i8* %.56, i64 16
  %10 = bitcast i8* %.57.repack2 to i64*
  store i64 8, i64* %10, align 8
  %.57.repack3 = getelementptr inbounds i8, i8* %.56, i64 24
  %11 = bitcast i8* %.57.repack3 to i64*
  store i64 8, i64* %11, align 8
  tail call void %.55(%Compiler.560235* %.1, %string.560217* %.57)
  ret void
}

define void @Compiler_set_std_path(%Compiler.560235* nocapture %.1, %string.560217* %.2) {
.4:
  %.9 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 2
  store %string.560217* %.2, %string.560217** %.9, align 8
  %.13 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %string.560217*
  %.14.repack = bitcast i8* %.13 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.14.repack, align 8
  %.14.repack1 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.14.repack1 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.16, i64 0, i64 0), i8** %0, align 8
  %.14.repack2 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.14.repack2 to i64*
  store i64 12, i64* %1, align 8
  %.14.repack3 = getelementptr inbounds i8, i8* %.13, i64 24
  %2 = bitcast i8* %.14.repack3 to i64*
  store i64 12, i64* %2, align 8
  %.16 = tail call %string.560217* @Path_join(%string.560217* %.2, %string.560217* %.14)
  %.17 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 4
  store %string.560217* %.16, %string.560217** %.17, align 8
  ret void
}

define noalias %string.560217* @Compiler_find_module_path(%Compiler.560235* nocapture readonly %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.9 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.9, i64 0, i32 10
  %.11 = load %string.560217* (%string.560217*, %string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*, %string.560217*)** %.10, align 8
  %.12 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %string.560217*
  %.13.repack = bitcast i8* %.12 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.13.repack, align 8
  %.13.repack1 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.13.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.13.repack2 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.13.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.13.repack3 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.13.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.16 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 2
  %.17 = load %string.560217*, %string.560217** %.16, align 8
  %.18 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.19 = bitcast i8* %.18 to %string.560217*
  %.19.repack = bitcast i8* %.18 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.19.repack, align 8
  %.19.repack4 = getelementptr inbounds i8, i8* %.18, i64 8
  %3 = bitcast i8* %.19.repack4 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.18, i64 0, i64 0), i8** %3, align 8
  %.19.repack5 = getelementptr inbounds i8, i8* %.18, i64 16
  %4 = bitcast i8* %.19.repack5 to i64*
  store i64 8, i64* %4, align 8
  %.19.repack6 = getelementptr inbounds i8, i8* %.18, i64 24
  %5 = bitcast i8* %.19.repack6 to i64*
  store i64 8, i64* %5, align 8
  %.21 = tail call %string.560217* @Path_join(%string.560217* %.17, %string.560217* %.19)
  %.22 = tail call %string.560217* %.11(%string.560217* %.2, %string.560217* %.13, %string.560217* %.21)
  %.25 = getelementptr inbounds %string.560217, %string.560217* %.22, i64 0, i32 0
  %.26 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.25, align 8
  %.27 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.26, i64 0, i32 12
  %.28 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.27, align 8
  %.29 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.560217*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.30.repack, align 8
  %.30.repack7 = getelementptr inbounds i8, i8* %.29, i64 8
  %6 = bitcast i8* %.30.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.19, i64 0, i64 0), i8** %6, align 8
  %.30.repack8 = getelementptr inbounds i8, i8* %.29, i64 16
  %7 = bitcast i8* %.30.repack8 to i64*
  store i64 4, i64* %7, align 8
  %.30.repack9 = getelementptr inbounds i8, i8* %.29, i64 24
  %8 = bitcast i8* %.30.repack9 to i64*
  store i64 4, i64* %8, align 8
  %.32 = tail call i1 %.28(%string.560217* %.22, %string.560217* %.30)
  br i1 %.32, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.36 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.560217*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.37.repack, align 8
  %.37.repack10 = getelementptr inbounds i8, i8* %.36, i64 8
  %9 = bitcast i8* %.37.repack10 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.19, i64 0, i64 0), i8** %9, align 8
  %.37.repack11 = getelementptr inbounds i8, i8* %.36, i64 16
  %10 = bitcast i8* %.37.repack11 to i64*
  store i64 4, i64* %10, align 8
  %.37.repack12 = getelementptr inbounds i8, i8* %.36, i64 24
  %11 = bitcast i8* %.37.repack12 to i64*
  store i64 4, i64* %11, align 8
  %.40 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.25, align 8
  %.41 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.40, i64 0, i32 0
  %.42 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.41, align 8
  %.43 = tail call %string.560217* %.42(%string.560217* %.22, %string.560217* %.37)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %path.0 = phi %string.560217* [ %.43, %.4.if ], [ %.22, %.4 ]
  %.47 = tail call %string.560217* @Path_abspath(%string.560217* %path.0)
  ret %string.560217* %.47
}

define %FileId.560231* @Compiler_register_file(%Compiler.560235* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 0
  %.9 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.8, align 8
  %.10 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.9, i64 0, i32 1
  %.11 = load %string.560217* (%Compiler.560235*, %string.560217*)*, %string.560217* (%Compiler.560235*, %string.560217*)** %.10, align 8
  %.13 = tail call %string.560217* %.11(%Compiler.560235* %.1, %string.560217* %.2)
  %.16 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 7
  %.17 = load %"Map<string, FileId>.560239"*, %"Map<string, FileId>.560239"** %.16, align 8
  %.18 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.17, i64 0, i32 0
  %.19 = load %"Map<string, FileId>_vtable_ty.560242"*, %"Map<string, FileId>_vtable_ty.560242"** %.18, align 8
  %.20 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.560242", %"Map<string, FileId>_vtable_ty.560242"* %.19, i64 0, i32 3
  %.21 = load %FileId.560231* (%"Map<string, FileId>.560239"*, %string.560217*)*, %FileId.560231* (%"Map<string, FileId>.560239"*, %string.560217*)** %.20, align 8
  %.23 = tail call %FileId.560231* %.21(%"Map<string, FileId>.560239"* %.17, %string.560217* %.13)
  %0 = ptrtoint %FileId.560231* %.23 to i64
  %.26 = trunc i64 %0 to i32
  %.28.not = icmp eq i32 %.26, 0
  br i1 %.28.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret %FileId.560231* %.23

.4.endif:                                         ; preds = %.4
  %.33 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 5
  %.34 = load %"Array<FloFile>.560237"*, %"Array<FloFile>.560237"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.34, i64 0, i32 2
  %.36 = load i64, i64* %.35, align 8
  %.37 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.38 = bitcast i8* %.37 to %FileId.560231*
  %.39 = bitcast i8* %.37 to %FileId_vtable_ty.560232**
  store %FileId_vtable_ty.560232* @FileId_vtable_data, %FileId_vtable_ty.560232** %.39, align 8
  tail call void @FileId_constructor(%FileId.560231* %.38, i64 %.36)
  %.45 = load %"Map<string, FileId>.560239"*, %"Map<string, FileId>.560239"** %.16, align 8
  %.46 = getelementptr inbounds %"Map<string, FileId>.560239", %"Map<string, FileId>.560239"* %.45, i64 0, i32 0
  %.47 = load %"Map<string, FileId>_vtable_ty.560242"*, %"Map<string, FileId>_vtable_ty.560242"** %.46, align 8
  %.48 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.560242", %"Map<string, FileId>_vtable_ty.560242"* %.47, i64 0, i32 2
  %.49 = load void (%"Map<string, FileId>.560239"*, %string.560217*, %FileId.560231*)*, void (%"Map<string, FileId>.560239"*, %string.560217*, %FileId.560231*)** %.48, align 8
  tail call void %.49(%"Map<string, FileId>.560239"* %.45, %string.560217* %.13, %FileId.560231* %.38)
  %.55 = load %"Array<FloFile>.560237"*, %"Array<FloFile>.560237"** %.33, align 8
  %.58 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.59 = bitcast i8* %.58 to %FloFile.560233*
  %.60 = bitcast i8* %.58 to %FloFile_vtable_ty.560234**
  store %FloFile_vtable_ty.560234* @FloFile_vtable_data, %FloFile_vtable_ty.560234** %.60, align 8
  tail call void @FloFile_constructor(%FloFile.560233* %.59, %string.560217* %.13, %string.560217* %.2)
  %.63 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.55, i64 0, i32 0
  %.64 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.64, i64 0, i32 2
  %.66 = load void (%"Array<FloFile>.560237"*, %FloFile.560233*)*, void (%"Array<FloFile>.560237"*, %FloFile.560233*)** %.65, align 8
  tail call void %.66(%"Array<FloFile>.560237"* %.55, %FloFile.560233* %.59)
  ret %FileId.560231* %.38
}

define i1 @Compiler_set_current_file(%Compiler.560235* nocapture %.1, %FileId.560231* %.2) {
.4:
  %.8 = getelementptr inbounds %FileId.560231, %FileId.560231* %.2, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 5
  %.12 = load %"Array<FloFile>.560237"*, %"Array<FloFile>.560237"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.12, i64 0, i32 0
  %.14 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.14, i64 0, i32 5
  %.16 = load %FloFile.560233* (%"Array<FloFile>.560237"*, i64)*, %FloFile.560233* (%"Array<FloFile>.560237"*, i64)** %.15, align 8
  %.17 = tail call %FloFile.560233* %.16(%"Array<FloFile>.560237"* %.12, i64 %.9)
  %.20 = getelementptr inbounds %FloFile.560233, %FloFile.560233* %.17, i64 0, i32 1
  %.21 = load %string.560217*, %string.560217** %.20, align 8
  %.22 = tail call i1 @File_exists(%string.560217* %.21)
  br i1 %.22, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.28 = load %string.560217*, %string.560217** %.20, align 8
  %.29 = tail call %File.560227* @File_open_for_reading(%string.560217* %.28)
  %.33 = getelementptr inbounds %File.560227, %File.560227* %.29, i64 0, i32 0
  %.34 = load %File_vtable_ty.560228*, %File_vtable_ty.560228** %.33, align 8
  %.35 = getelementptr inbounds %File_vtable_ty.560228, %File_vtable_ty.560228* %.34, i64 0, i32 0
  %.36 = load %string.560217* (%File.560227*)*, %string.560217* (%File.560227*)** %.35, align 8
  %.37 = tail call %string.560217* %.36(%File.560227* %.29)
  %.38 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 3
  store %string.560217* %.37, %string.560217** %.38, align 8
  %.42 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 1
  store %FileId.560231* %.2, %FileId.560231** %.42, align 8
  %.46 = load %File_vtable_ty.560228*, %File_vtable_ty.560228** %.33, align 8
  %.47 = getelementptr inbounds %File_vtable_ty.560228, %File_vtable_ty.560228* %.46, i64 0, i32 1
  %.48 = load void (%File.560227*)*, void (%File.560227*)** %.47, align 8
  tail call void %.48(%File.560227* %.29)
  ret i1 true
}

define i1 @Compiler_print_errors(%Compiler.560235* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 6
  %.7 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.7, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp sgt i64 %.9, 0
  br i1 %.10, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.15 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.7, i64 0, i32 0
  %.16 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.15, align 8
  %.17 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.16, i64 0, i32 5
  %.18 = load %FloError.560225* (%"Array<FloError>.560238"*, i64)*, %FloError.560225* (%"Array<FloError>.560238"*, i64)** %.17, align 8
  %.19 = tail call %FloError.560225* %.18(%"Array<FloError>.560238"* %.7, i64 0)
  %.21 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 1
  %.22 = load %FileId.560231*, %FileId.560231** %.21, align 8
  %.23 = getelementptr inbounds %FileId.560231, %FileId.560231* %.22, i64 0, i32 1
  %.24 = load i64, i64* %.23, align 8
  %.26 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 5
  %.27 = load %"Array<FloFile>.560237"*, %"Array<FloFile>.560237"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<FloFile>.560237", %"Array<FloFile>.560237"* %.27, i64 0, i32 0
  %.29 = load %"Array<FloFile>_vtable_ty.560240"*, %"Array<FloFile>_vtable_ty.560240"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<FloFile>_vtable_ty.560240", %"Array<FloFile>_vtable_ty.560240"* %.29, i64 0, i32 5
  %.31 = load %FloFile.560233* (%"Array<FloFile>.560237"*, i64)*, %FloFile.560233* (%"Array<FloFile>.560237"*, i64)** %.30, align 8
  %.32 = tail call %FloFile.560233* %.31(%"Array<FloFile>.560237"* %.27, i64 %.24)
  %.33 = getelementptr inbounds %FloFile.560233, %FloFile.560233* %.32, i64 0, i32 2
  %.34 = load %string.560217*, %string.560217** %.33, align 8
  %.36 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 3
  %.37 = load %string.560217*, %string.560217** %.36, align 8
  tail call void @print_error(%FloError.560225* %.19, %string.560217* %.34, %string.560217* %.37)
  ret i1 true

.3.endif:                                         ; preds = %.3
  ret i1 false
}

define %FileId.560231* @Compiler_add_builtins(%Compiler.560235* %.1) {
.3:
  %.6 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 0
  %.7 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.6, align 8
  %.8 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.7, i64 0, i32 2
  %.9 = load %FileId.560231* (%Compiler.560235*, %string.560217*)*, %FileId.560231* (%Compiler.560235*, %string.560217*)** %.8, align 8
  %.11 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.1, i64 0, i32 4
  %.12 = load %string.560217*, %string.560217** %.11, align 8
  %.13 = tail call %FileId.560231* %.9(%Compiler.560235* %.1, %string.560217* %.12)
  ret %FileId.560231* %.13
}

define i64 @string_to_kw_token(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.560217*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 3, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 3, i64* %2, align 8
  %.9 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.10, i64 0, i32 4
  %.12 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.11, align 8
  %.13 = tail call i1 %.12(%string.560217* %.1, %string.560217* %.7)
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3.endif.endif.endif.endi...endif.6, %.3.endif.endif.endif.endi...endif.5.endif.endif.endif, %.3.endif.endif.endif.endi...endif.5.endif.endif, %.3.endif.endif.endif.endi...endif.5.endif, %.3.endif.endif.endif.endi...endif.5, %.3.endif.endif.endif.endi...endif.4.endif.endif.endif, %.3.endif.endif.endif.endi...endif.4.endif.endif, %.3.endif.endif.endif.endi...endif.4.endif, %.3.endif.endif.endif.endi...endif.4, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif, %.3.endif.endif.endif.endi...endif.3, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif, %.3.endif.endif.endif.endi...endif.2, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif, %.3.endif.endif.endif.endi...endif.1, %.3.endif.endif.endif.endi...endif.endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif, %.3.endif.endif.endif, %.3.endif.endif, %.3.endif, %.3
  %merge = phi i64 [ 52, %.3 ], [ 53, %.3.endif ], [ 54, %.3.endif.endif ], [ 55, %.3.endif.endif.endif ], [ 56, %.3.endif.endif.endif.endif ], [ 57, %.3.endif.endif.endif.endif.endif ], [ 58, %.3.endif.endif.endif.endif.endif.endif ], [ 59, %.3.endif.endif.endif.endif.endif.endif.endif ], [ 60, %.3.endif.endif.endif.endif.endif.endif.endif.endif ], [ 61, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif ], [ 62, %.3.endif.endif.endif.endi...endif ], [ 63, %.3.endif.endif.endif.endi...endif.endif ], [ 64, %.3.endif.endif.endif.endi...endif.endif.endif ], [ 65, %.3.endif.endif.endif.endi...endif.endif.endif.endif ], [ 66, %.3.endif.endif.endif.endi...endif.1 ], [ 67, %.3.endif.endif.endif.endi...endif.1.endif ], [ 68, %.3.endif.endif.endif.endi...endif.1.endif.endif ], [ 69, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif ], [ 70, %.3.endif.endif.endif.endi...endif.2 ], [ 71, %.3.endif.endif.endif.endi...endif.2.endif ], [ 72, %.3.endif.endif.endif.endi...endif.2.endif.endif ], [ 73, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif ], [ 74, %.3.endif.endif.endif.endi...endif.3 ], [ 75, %.3.endif.endif.endif.endi...endif.3.endif ], [ 76, %.3.endif.endif.endif.endi...endif.3.endif.endif ], [ 77, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif ], [ 78, %.3.endif.endif.endif.endi...endif.4 ], [ 79, %.3.endif.endif.endif.endi...endif.4.endif ], [ 80, %.3.endif.endif.endif.endi...endif.4.endif.endif ], [ 81, %.3.endif.endif.endif.endi...endif.4.endif.endif.endif ], [ 82, %.3.endif.endif.endif.endi...endif.5 ], [ 83, %.3.endif.endif.endif.endi...endif.5.endif ], [ 84, %.3.endif.endif.endif.endi...endif.5.endif.endif ], [ 85, %.3.endif.endif.endif.endi...endif.5.endif.endif.endif ], [ %., %.3.endif.endif.endif.endi...endif.6 ]
  ret i64 %merge

.3.endif:                                         ; preds = %.3
  %.17 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.560217*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.18.repack, align 8
  %.18.repack4 = getelementptr inbounds i8, i8* %.17, i64 8
  %3 = bitcast i8* %.18.repack4 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.21, i64 0, i64 0), i8** %3, align 8
  %.18.repack5 = getelementptr inbounds i8, i8* %.17, i64 16
  %4 = bitcast i8* %.18.repack5 to i64*
  store i64 2, i64* %4, align 8
  %.18.repack6 = getelementptr inbounds i8, i8* %.17, i64 24
  %5 = bitcast i8* %.18.repack6 to i64*
  store i64 2, i64* %5, align 8
  %.21 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.21, i64 0, i32 4
  %.23 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.22, align 8
  %.24 = tail call i1 %.23(%string.560217* nonnull %.1, %string.560217* %.18)
  br i1 %.24, label %.3.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif
  %.28 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.560217*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %6 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.22, i64 0, i64 0), i8** %6, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %7 = bitcast i8* %.29.repack8 to i64*
  store i64 3, i64* %7, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %8 = bitcast i8* %.29.repack9 to i64*
  store i64 3, i64* %8, align 8
  %.32 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.33 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.32, i64 0, i32 4
  %.34 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.33, align 8
  %.35 = tail call i1 %.34(%string.560217* nonnull %.1, %string.560217* %.29)
  br i1 %.35, label %.3.if, label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.39 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.560217*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.40.repack, align 8
  %.40.repack10 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack10 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.23, i64 0, i64 0), i8** %9, align 8
  %.40.repack11 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack11 to i64*
  store i64 5, i64* %10, align 8
  %.40.repack12 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack12 to i64*
  store i64 5, i64* %11, align 8
  %.43 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.43, i64 0, i32 4
  %.45 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.44, align 8
  %.46 = tail call i1 %.45(%string.560217* nonnull %.1, %string.560217* %.40)
  br i1 %.46, label %.3.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  %.50 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.560217*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.51.repack, align 8
  %.51.repack13 = getelementptr inbounds i8, i8* %.50, i64 8
  %12 = bitcast i8* %.51.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.24, i64 0, i64 0), i8** %12, align 8
  %.51.repack14 = getelementptr inbounds i8, i8* %.50, i64 16
  %13 = bitcast i8* %.51.repack14 to i64*
  store i64 3, i64* %13, align 8
  %.51.repack15 = getelementptr inbounds i8, i8* %.50, i64 24
  %14 = bitcast i8* %.51.repack15 to i64*
  store i64 3, i64* %14, align 8
  %.54 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.54, i64 0, i32 4
  %.56 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.55, align 8
  %.57 = tail call i1 %.56(%string.560217* nonnull %.1, %string.560217* %.51)
  br i1 %.57, label %.3.if, label %.3.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif:                 ; preds = %.3.endif.endif.endif.endif
  %.61 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.560217*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.62.repack, align 8
  %.62.repack16 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack16 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.25, i64 0, i64 0), i8** %15, align 8
  %.62.repack17 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack17 to i64*
  store i64 2, i64* %16, align 8
  %.62.repack18 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack18 to i64*
  store i64 2, i64* %17, align 8
  %.65 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.66 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.65, i64 0, i32 4
  %.67 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.66, align 8
  %.68 = tail call i1 %.67(%string.560217* nonnull %.1, %string.560217* %.62)
  br i1 %.68, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3.endif.endif.endif.endif.endif
  %.72 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.560217*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.73.repack, align 8
  %.73.repack19 = getelementptr inbounds i8, i8* %.72, i64 8
  %18 = bitcast i8* %.73.repack19 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.26, i64 0, i64 0), i8** %18, align 8
  %.73.repack20 = getelementptr inbounds i8, i8* %.72, i64 16
  %19 = bitcast i8* %.73.repack20 to i64*
  store i64 4, i64* %19, align 8
  %.73.repack21 = getelementptr inbounds i8, i8* %.72, i64 24
  %20 = bitcast i8* %.73.repack21 to i64*
  store i64 4, i64* %20, align 8
  %.76 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.77 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.76, i64 0, i32 4
  %.78 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.77, align 8
  %.79 = tail call i1 %.78(%string.560217* nonnull %.1, %string.560217* %.73)
  br i1 %.79, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.3.endif.endif.endif.endif.endif.endif
  %.83 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.560217*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.84.repack, align 8
  %.84.repack22 = getelementptr inbounds i8, i8* %.83, i64 8
  %21 = bitcast i8* %.84.repack22 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.27, i64 0, i64 0), i8** %21, align 8
  %.84.repack23 = getelementptr inbounds i8, i8* %.83, i64 16
  %22 = bitcast i8* %.84.repack23 to i64*
  store i64 4, i64* %22, align 8
  %.84.repack24 = getelementptr inbounds i8, i8* %.83, i64 24
  %23 = bitcast i8* %.84.repack24 to i64*
  store i64 4, i64* %23, align 8
  %.87 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.87, i64 0, i32 4
  %.89 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.88, align 8
  %.90 = tail call i1 %.89(%string.560217* nonnull %.1, %string.560217* %.84)
  br i1 %.90, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif
  %.94 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.560217*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.95.repack, align 8
  %.95.repack25 = getelementptr inbounds i8, i8* %.94, i64 8
  %24 = bitcast i8* %.95.repack25 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.28, i64 0, i64 0), i8** %24, align 8
  %.95.repack26 = getelementptr inbounds i8, i8* %.94, i64 16
  %25 = bitcast i8* %.95.repack26 to i64*
  store i64 2, i64* %25, align 8
  %.95.repack27 = getelementptr inbounds i8, i8* %.94, i64 24
  %26 = bitcast i8* %.95.repack27 to i64*
  store i64 2, i64* %26, align 8
  %.98 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.99 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.98, i64 0, i32 4
  %.100 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.99, align 8
  %.101 = tail call i1 %.100(%string.560217* nonnull %.1, %string.560217* %.95)
  br i1 %.101, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif
  %.105 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.560217*
  %.106.repack = bitcast i8* %.105 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.106.repack, align 8
  %.106.repack28 = getelementptr inbounds i8, i8* %.105, i64 8
  %27 = bitcast i8* %.106.repack28 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.29, i64 0, i64 0), i8** %27, align 8
  %.106.repack29 = getelementptr inbounds i8, i8* %.105, i64 16
  %28 = bitcast i8* %.106.repack29 to i64*
  store i64 2, i64* %28, align 8
  %.106.repack30 = getelementptr inbounds i8, i8* %.105, i64 24
  %29 = bitcast i8* %.106.repack30 to i64*
  store i64 2, i64* %29, align 8
  %.109 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.109, i64 0, i32 4
  %.111 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.110, align 8
  %.112 = tail call i1 %.111(%string.560217* nonnull %.1, %string.560217* %.106)
  br i1 %.112, label %.3.if, label %.3.endif.endif.endif.endi...endif

.3.endif.endif.endif.endi...endif:                ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.116 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.560217*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.117.repack, align 8
  %.117.repack31 = getelementptr inbounds i8, i8* %.116, i64 8
  %30 = bitcast i8* %.117.repack31 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.30, i64 0, i64 0), i8** %30, align 8
  %.117.repack32 = getelementptr inbounds i8, i8* %.116, i64 16
  %31 = bitcast i8* %.117.repack32 to i64*
  store i64 3, i64* %31, align 8
  %.117.repack33 = getelementptr inbounds i8, i8* %.116, i64 24
  %32 = bitcast i8* %.117.repack33 to i64*
  store i64 3, i64* %32, align 8
  %.120 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.120, i64 0, i32 4
  %.122 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.121, align 8
  %.123 = tail call i1 %.122(%string.560217* nonnull %.1, %string.560217* %.117)
  br i1 %.123, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3.endif.endif.endif.endi...endif
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.560217*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.128.repack, align 8
  %.128.repack34 = getelementptr inbounds i8, i8* %.127, i64 8
  %33 = bitcast i8* %.128.repack34 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.31, i64 0, i64 0), i8** %33, align 8
  %.128.repack35 = getelementptr inbounds i8, i8* %.127, i64 16
  %34 = bitcast i8* %.128.repack35 to i64*
  store i64 3, i64* %34, align 8
  %.128.repack36 = getelementptr inbounds i8, i8* %.127, i64 24
  %35 = bitcast i8* %.128.repack36 to i64*
  store i64 3, i64* %35, align 8
  %.131 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.132 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.131, i64 0, i32 4
  %.133 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.132, align 8
  %.134 = tail call i1 %.133(%string.560217* nonnull %.1, %string.560217* %.128)
  br i1 %.134, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.3.endif.endif.endif.endi...endif.endif
  %.138 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.560217*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.139.repack, align 8
  %.139.repack37 = getelementptr inbounds i8, i8* %.138, i64 8
  %36 = bitcast i8* %.139.repack37 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.32, i64 0, i64 0), i8** %36, align 8
  %.139.repack38 = getelementptr inbounds i8, i8* %.138, i64 16
  %37 = bitcast i8* %.139.repack38 to i64*
  store i64 3, i64* %37, align 8
  %.139.repack39 = getelementptr inbounds i8, i8* %.138, i64 24
  %38 = bitcast i8* %.139.repack39 to i64*
  store i64 3, i64* %38, align 8
  %.142 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.143 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.142, i64 0, i32 4
  %.144 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.143, align 8
  %.145 = tail call i1 %.144(%string.560217* nonnull %.1, %string.560217* %.139)
  br i1 %.145, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif
  %.149 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.150 = bitcast i8* %.149 to %string.560217*
  %.150.repack = bitcast i8* %.149 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.150.repack, align 8
  %.150.repack40 = getelementptr inbounds i8, i8* %.149, i64 8
  %39 = bitcast i8* %.150.repack40 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.33, i64 0, i64 0), i8** %39, align 8
  %.150.repack41 = getelementptr inbounds i8, i8* %.149, i64 16
  %40 = bitcast i8* %.150.repack41 to i64*
  store i64 4, i64* %40, align 8
  %.150.repack42 = getelementptr inbounds i8, i8* %.149, i64 24
  %41 = bitcast i8* %.150.repack42 to i64*
  store i64 4, i64* %41, align 8
  %.153 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.153, i64 0, i32 4
  %.155 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.154, align 8
  %.156 = tail call i1 %.155(%string.560217* nonnull %.1, %string.560217* %.150)
  br i1 %.156, label %.3.if, label %.3.endif.endif.endif.endi...endif.1

.3.endif.endif.endif.endi...endif.1:              ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.endif
  %.160 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.560217*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.161.repack, align 8
  %.161.repack43 = getelementptr inbounds i8, i8* %.160, i64 8
  %42 = bitcast i8* %.161.repack43 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.34, i64 0, i64 0), i8** %42, align 8
  %.161.repack44 = getelementptr inbounds i8, i8* %.160, i64 16
  %43 = bitcast i8* %.161.repack44 to i64*
  store i64 3, i64* %43, align 8
  %.161.repack45 = getelementptr inbounds i8, i8* %.160, i64 24
  %44 = bitcast i8* %.161.repack45 to i64*
  store i64 3, i64* %44, align 8
  %.164 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.165 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.164, i64 0, i32 4
  %.166 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.165, align 8
  %.167 = tail call i1 %.166(%string.560217* nonnull %.1, %string.560217* %.161)
  br i1 %.167, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif

.3.endif.endif.endif.endi...endif.1.endif:        ; preds = %.3.endif.endif.endif.endi...endif.1
  %.171 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.560217*
  %.172.repack = bitcast i8* %.171 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.172.repack, align 8
  %.172.repack46 = getelementptr inbounds i8, i8* %.171, i64 8
  %45 = bitcast i8* %.172.repack46 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.35, i64 0, i64 0), i8** %45, align 8
  %.172.repack47 = getelementptr inbounds i8, i8* %.171, i64 16
  %46 = bitcast i8* %.172.repack47 to i64*
  store i64 3, i64* %46, align 8
  %.172.repack48 = getelementptr inbounds i8, i8* %.171, i64 24
  %47 = bitcast i8* %.172.repack48 to i64*
  store i64 3, i64* %47, align 8
  %.175 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.176 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.175, i64 0, i32 4
  %.177 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.176, align 8
  %.178 = tail call i1 %.177(%string.560217* nonnull %.1, %string.560217* %.172)
  br i1 %.178, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.1.endif
  %.182 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.183 = bitcast i8* %.182 to %string.560217*
  %.183.repack = bitcast i8* %.182 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.183.repack, align 8
  %.183.repack49 = getelementptr inbounds i8, i8* %.182, i64 8
  %48 = bitcast i8* %.183.repack49 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i64 0, i64 0), i8** %48, align 8
  %.183.repack50 = getelementptr inbounds i8, i8* %.182, i64 16
  %49 = bitcast i8* %.183.repack50 to i64*
  store i64 3, i64* %49, align 8
  %.183.repack51 = getelementptr inbounds i8, i8* %.182, i64 24
  %50 = bitcast i8* %.183.repack51 to i64*
  store i64 3, i64* %50, align 8
  %.186 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.187 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.186, i64 0, i32 4
  %.188 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.187, align 8
  %.189 = tail call i1 %.188(%string.560217* nonnull %.1, %string.560217* %.183)
  br i1 %.189, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif
  %.193 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.560217*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.194.repack, align 8
  %.194.repack52 = getelementptr inbounds i8, i8* %.193, i64 8
  %51 = bitcast i8* %.194.repack52 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.37, i64 0, i64 0), i8** %51, align 8
  %.194.repack53 = getelementptr inbounds i8, i8* %.193, i64 16
  %52 = bitcast i8* %.194.repack53 to i64*
  store i64 3, i64* %52, align 8
  %.194.repack54 = getelementptr inbounds i8, i8* %.193, i64 24
  %53 = bitcast i8* %.194.repack54 to i64*
  store i64 3, i64* %53, align 8
  %.197 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.197, i64 0, i32 4
  %.199 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.198, align 8
  %.200 = tail call i1 %.199(%string.560217* nonnull %.1, %string.560217* %.194)
  br i1 %.200, label %.3.if, label %.3.endif.endif.endif.endi...endif.2

.3.endif.endif.endif.endi...endif.2:              ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.204 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.560217*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.205.repack, align 8
  %.205.repack55 = getelementptr inbounds i8, i8* %.204, i64 8
  %54 = bitcast i8* %.205.repack55 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.38, i64 0, i64 0), i8** %54, align 8
  %.205.repack56 = getelementptr inbounds i8, i8* %.204, i64 16
  %55 = bitcast i8* %.205.repack56 to i64*
  store i64 5, i64* %55, align 8
  %.205.repack57 = getelementptr inbounds i8, i8* %.204, i64 24
  %56 = bitcast i8* %.205.repack57 to i64*
  store i64 5, i64* %56, align 8
  %.208 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.209 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.208, i64 0, i32 4
  %.210 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.209, align 8
  %.211 = tail call i1 %.210(%string.560217* nonnull %.1, %string.560217* %.205)
  br i1 %.211, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3.endif.endif.endif.endi...endif.2
  %.215 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.216 = bitcast i8* %.215 to %string.560217*
  %.216.repack = bitcast i8* %.215 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.216.repack, align 8
  %.216.repack58 = getelementptr inbounds i8, i8* %.215, i64 8
  %57 = bitcast i8* %.216.repack58 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.39, i64 0, i64 0), i8** %57, align 8
  %.216.repack59 = getelementptr inbounds i8, i8* %.215, i64 16
  %58 = bitcast i8* %.216.repack59 to i64*
  store i64 4, i64* %58, align 8
  %.216.repack60 = getelementptr inbounds i8, i8* %.215, i64 24
  %59 = bitcast i8* %.216.repack60 to i64*
  store i64 4, i64* %59, align 8
  %.219 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.220 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.219, i64 0, i32 4
  %.221 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.220, align 8
  %.222 = tail call i1 %.221(%string.560217* nonnull %.1, %string.560217* %.216)
  br i1 %.222, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.2.endif
  %.226 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.227 = bitcast i8* %.226 to %string.560217*
  %.227.repack = bitcast i8* %.226 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.227.repack, align 8
  %.227.repack61 = getelementptr inbounds i8, i8* %.226, i64 8
  %60 = bitcast i8* %.227.repack61 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.40, i64 0, i64 0), i8** %60, align 8
  %.227.repack62 = getelementptr inbounds i8, i8* %.226, i64 16
  %61 = bitcast i8* %.227.repack62 to i64*
  store i64 3, i64* %61, align 8
  %.227.repack63 = getelementptr inbounds i8, i8* %.226, i64 24
  %62 = bitcast i8* %.227.repack63 to i64*
  store i64 3, i64* %62, align 8
  %.230 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.230, i64 0, i32 4
  %.232 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.231, align 8
  %.233 = tail call i1 %.232(%string.560217* nonnull %.1, %string.560217* %.227)
  br i1 %.233, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif
  %.237 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.238 = bitcast i8* %.237 to %string.560217*
  %.238.repack = bitcast i8* %.237 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.238.repack, align 8
  %.238.repack64 = getelementptr inbounds i8, i8* %.237, i64 8
  %63 = bitcast i8* %.238.repack64 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.41, i64 0, i64 0), i8** %63, align 8
  %.238.repack65 = getelementptr inbounds i8, i8* %.237, i64 16
  %64 = bitcast i8* %.238.repack65 to i64*
  store i64 5, i64* %64, align 8
  %.238.repack66 = getelementptr inbounds i8, i8* %.237, i64 24
  %65 = bitcast i8* %.238.repack66 to i64*
  store i64 5, i64* %65, align 8
  %.241 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.241, i64 0, i32 4
  %.243 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.242, align 8
  %.244 = tail call i1 %.243(%string.560217* nonnull %.1, %string.560217* %.238)
  br i1 %.244, label %.3.if, label %.3.endif.endif.endif.endi...endif.3

.3.endif.endif.endif.endi...endif.3:              ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif.endif
  %.248 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.249 = bitcast i8* %.248 to %string.560217*
  %.249.repack = bitcast i8* %.248 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.249.repack, align 8
  %.249.repack67 = getelementptr inbounds i8, i8* %.248, i64 8
  %66 = bitcast i8* %.249.repack67 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.42, i64 0, i64 0), i8** %66, align 8
  %.249.repack68 = getelementptr inbounds i8, i8* %.248, i64 16
  %67 = bitcast i8* %.249.repack68 to i64*
  store i64 3, i64* %67, align 8
  %.249.repack69 = getelementptr inbounds i8, i8* %.248, i64 24
  %68 = bitcast i8* %.249.repack69 to i64*
  store i64 3, i64* %68, align 8
  %.252 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.253 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.252, i64 0, i32 4
  %.254 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.253, align 8
  %.255 = tail call i1 %.254(%string.560217* nonnull %.1, %string.560217* %.249)
  br i1 %.255, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif

.3.endif.endif.endif.endi...endif.3.endif:        ; preds = %.3.endif.endif.endif.endi...endif.3
  %.259 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.260 = bitcast i8* %.259 to %string.560217*
  %.260.repack = bitcast i8* %.259 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.260.repack, align 8
  %.260.repack70 = getelementptr inbounds i8, i8* %.259, i64 8
  %69 = bitcast i8* %.260.repack70 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.43, i64 0, i64 0), i8** %69, align 8
  %.260.repack71 = getelementptr inbounds i8, i8* %.259, i64 16
  %70 = bitcast i8* %.260.repack71 to i64*
  store i64 5, i64* %70, align 8
  %.260.repack72 = getelementptr inbounds i8, i8* %.259, i64 24
  %71 = bitcast i8* %.260.repack72 to i64*
  store i64 5, i64* %71, align 8
  %.263 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.263, i64 0, i32 4
  %.265 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.264, align 8
  %.266 = tail call i1 %.265(%string.560217* nonnull %.1, %string.560217* %.260)
  br i1 %.266, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.3.endif
  %.270 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %string.560217*
  %.271.repack = bitcast i8* %.270 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.271.repack, align 8
  %.271.repack73 = getelementptr inbounds i8, i8* %.270, i64 8
  %72 = bitcast i8* %.271.repack73 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.44, i64 0, i64 0), i8** %72, align 8
  %.271.repack74 = getelementptr inbounds i8, i8* %.270, i64 16
  %73 = bitcast i8* %.271.repack74 to i64*
  store i64 8, i64* %73, align 8
  %.271.repack75 = getelementptr inbounds i8, i8* %.270, i64 24
  %74 = bitcast i8* %.271.repack75 to i64*
  store i64 8, i64* %74, align 8
  %.274 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.275 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.274, i64 0, i32 4
  %.276 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.275, align 8
  %.277 = tail call i1 %.276(%string.560217* nonnull %.1, %string.560217* %.271)
  br i1 %.277, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif
  %.281 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.560217*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.282.repack, align 8
  %.282.repack76 = getelementptr inbounds i8, i8* %.281, i64 8
  %75 = bitcast i8* %.282.repack76 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.45, i64 0, i64 0), i8** %75, align 8
  %.282.repack77 = getelementptr inbounds i8, i8* %.281, i64 16
  %76 = bitcast i8* %.282.repack77 to i64*
  store i64 6, i64* %76, align 8
  %.282.repack78 = getelementptr inbounds i8, i8* %.281, i64 24
  %77 = bitcast i8* %.282.repack78 to i64*
  store i64 6, i64* %77, align 8
  %.285 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.286 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.285, i64 0, i32 4
  %.287 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.286, align 8
  %.288 = tail call i1 %.287(%string.560217* nonnull %.1, %string.560217* %.282)
  br i1 %.288, label %.3.if, label %.3.endif.endif.endif.endi...endif.4

.3.endif.endif.endif.endi...endif.4:              ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif.endif
  %.292 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.560217*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.293.repack, align 8
  %.293.repack79 = getelementptr inbounds i8, i8* %.292, i64 8
  %78 = bitcast i8* %.293.repack79 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.46, i64 0, i64 0), i8** %78, align 8
  %.293.repack80 = getelementptr inbounds i8, i8* %.292, i64 16
  %79 = bitcast i8* %.293.repack80 to i64*
  store i64 6, i64* %79, align 8
  %.293.repack81 = getelementptr inbounds i8, i8* %.292, i64 24
  %80 = bitcast i8* %.293.repack81 to i64*
  store i64 6, i64* %80, align 8
  %.296 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.296, i64 0, i32 4
  %.298 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.297, align 8
  %.299 = tail call i1 %.298(%string.560217* nonnull %.1, %string.560217* %.293)
  br i1 %.299, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif

.3.endif.endif.endif.endi...endif.4.endif:        ; preds = %.3.endif.endif.endif.endi...endif.4
  %.303 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.560217*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.304.repack, align 8
  %.304.repack82 = getelementptr inbounds i8, i8* %.303, i64 8
  %81 = bitcast i8* %.304.repack82 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.47, i64 0, i64 0), i8** %81, align 8
  %.304.repack83 = getelementptr inbounds i8, i8* %.303, i64 16
  %82 = bitcast i8* %.304.repack83 to i64*
  store i64 7, i64* %82, align 8
  %.304.repack84 = getelementptr inbounds i8, i8* %.303, i64 24
  %83 = bitcast i8* %.304.repack84 to i64*
  store i64 7, i64* %83, align 8
  %.307 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.308 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.307, i64 0, i32 4
  %.309 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.308, align 8
  %.310 = tail call i1 %.309(%string.560217* nonnull %.1, %string.560217* %.304)
  br i1 %.310, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.4.endif
  %.314 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.315 = bitcast i8* %.314 to %string.560217*
  %.315.repack = bitcast i8* %.314 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.315.repack, align 8
  %.315.repack85 = getelementptr inbounds i8, i8* %.314, i64 8
  %84 = bitcast i8* %.315.repack85 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.48, i64 0, i64 0), i8** %84, align 8
  %.315.repack86 = getelementptr inbounds i8, i8* %.314, i64 16
  %85 = bitcast i8* %.315.repack86 to i64*
  store i64 6, i64* %85, align 8
  %.315.repack87 = getelementptr inbounds i8, i8* %.314, i64 24
  %86 = bitcast i8* %.315.repack87 to i64*
  store i64 6, i64* %86, align 8
  %.318 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.319 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.318, i64 0, i32 4
  %.320 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.319, align 8
  %.321 = tail call i1 %.320(%string.560217* nonnull %.1, %string.560217* %.315)
  br i1 %.321, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.4.endif.endif
  %.325 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.326 = bitcast i8* %.325 to %string.560217*
  %.326.repack = bitcast i8* %.325 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.326.repack, align 8
  %.326.repack88 = getelementptr inbounds i8, i8* %.325, i64 8
  %87 = bitcast i8* %.326.repack88 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.49, i64 0, i64 0), i8** %87, align 8
  %.326.repack89 = getelementptr inbounds i8, i8* %.325, i64 16
  %88 = bitcast i8* %.326.repack89 to i64*
  store i64 9, i64* %88, align 8
  %.326.repack90 = getelementptr inbounds i8, i8* %.325, i64 24
  %89 = bitcast i8* %.326.repack90 to i64*
  store i64 9, i64* %89, align 8
  %.329 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.330 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.329, i64 0, i32 4
  %.331 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.330, align 8
  %.332 = tail call i1 %.331(%string.560217* nonnull %.1, %string.560217* %.326)
  br i1 %.332, label %.3.if, label %.3.endif.endif.endif.endi...endif.5

.3.endif.endif.endif.endi...endif.5:              ; preds = %.3.endif.endif.endif.endi...endif.4.endif.endif.endif
  %.336 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.337 = bitcast i8* %.336 to %string.560217*
  %.337.repack = bitcast i8* %.336 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.337.repack, align 8
  %.337.repack91 = getelementptr inbounds i8, i8* %.336, i64 8
  %90 = bitcast i8* %.337.repack91 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.50, i64 0, i64 0), i8** %90, align 8
  %.337.repack92 = getelementptr inbounds i8, i8* %.336, i64 16
  %91 = bitcast i8* %.337.repack92 to i64*
  store i64 2, i64* %91, align 8
  %.337.repack93 = getelementptr inbounds i8, i8* %.336, i64 24
  %92 = bitcast i8* %.337.repack93 to i64*
  store i64 2, i64* %92, align 8
  %.340 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.341 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.340, i64 0, i32 4
  %.342 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.341, align 8
  %.343 = tail call i1 %.342(%string.560217* nonnull %.1, %string.560217* %.337)
  br i1 %.343, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif

.3.endif.endif.endif.endi...endif.5.endif:        ; preds = %.3.endif.endif.endif.endi...endif.5
  %.347 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.348 = bitcast i8* %.347 to %string.560217*
  %.348.repack = bitcast i8* %.347 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.348.repack, align 8
  %.348.repack94 = getelementptr inbounds i8, i8* %.347, i64 8
  %93 = bitcast i8* %.348.repack94 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.51, i64 0, i64 0), i8** %93, align 8
  %.348.repack95 = getelementptr inbounds i8, i8* %.347, i64 16
  %94 = bitcast i8* %.348.repack95 to i64*
  store i64 5, i64* %94, align 8
  %.348.repack96 = getelementptr inbounds i8, i8* %.347, i64 24
  %95 = bitcast i8* %.348.repack96 to i64*
  store i64 5, i64* %95, align 8
  %.351 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.352 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.351, i64 0, i32 4
  %.353 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.352, align 8
  %.354 = tail call i1 %.353(%string.560217* nonnull %.1, %string.560217* %.348)
  br i1 %.354, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif.endif

.3.endif.endif.endif.endi...endif.5.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.5.endif
  %.358 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.359 = bitcast i8* %.358 to %string.560217*
  %.359.repack = bitcast i8* %.358 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.359.repack, align 8
  %.359.repack97 = getelementptr inbounds i8, i8* %.358, i64 8
  %96 = bitcast i8* %.359.repack97 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.52, i64 0, i64 0), i8** %96, align 8
  %.359.repack98 = getelementptr inbounds i8, i8* %.358, i64 16
  %97 = bitcast i8* %.359.repack98 to i64*
  store i64 4, i64* %97, align 8
  %.359.repack99 = getelementptr inbounds i8, i8* %.358, i64 24
  %98 = bitcast i8* %.359.repack99 to i64*
  store i64 4, i64* %98, align 8
  %.362 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.363 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.362, i64 0, i32 4
  %.364 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.363, align 8
  %.365 = tail call i1 %.364(%string.560217* nonnull %.1, %string.560217* %.359)
  br i1 %.365, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif.endif.endif

.3.endif.endif.endif.endi...endif.5.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.5.endif.endif
  %.369 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.370 = bitcast i8* %.369 to %string.560217*
  %.370.repack = bitcast i8* %.369 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.370.repack, align 8
  %.370.repack100 = getelementptr inbounds i8, i8* %.369, i64 8
  %99 = bitcast i8* %.370.repack100 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.53, i64 0, i64 0), i8** %99, align 8
  %.370.repack101 = getelementptr inbounds i8, i8* %.369, i64 16
  %100 = bitcast i8* %.370.repack101 to i64*
  store i64 3, i64* %100, align 8
  %.370.repack102 = getelementptr inbounds i8, i8* %.369, i64 24
  %101 = bitcast i8* %.370.repack102 to i64*
  store i64 3, i64* %101, align 8
  %.373 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.374 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.373, i64 0, i32 4
  %.375 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.374, align 8
  %.376 = tail call i1 %.375(%string.560217* nonnull %.1, %string.560217* %.370)
  br i1 %.376, label %.3.if, label %.3.endif.endif.endif.endi...endif.6

.3.endif.endif.endif.endi...endif.6:              ; preds = %.3.endif.endif.endif.endi...endif.5.endif.endif.endif
  %.380 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.381 = bitcast i8* %.380 to %string.560217*
  %.381.repack = bitcast i8* %.380 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.381.repack, align 8
  %.381.repack103 = getelementptr inbounds i8, i8* %.380, i64 8
  %102 = bitcast i8* %.381.repack103 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.54, i64 0, i64 0), i8** %102, align 8
  %.381.repack104 = getelementptr inbounds i8, i8* %.380, i64 16
  %103 = bitcast i8* %.381.repack104 to i64*
  store i64 2, i64* %103, align 8
  %.381.repack105 = getelementptr inbounds i8, i8* %.380, i64 24
  %104 = bitcast i8* %.381.repack105 to i64*
  store i64 2, i64* %104, align 8
  %.384 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.385 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.384, i64 0, i32 4
  %.386 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.385, align 8
  %.387 = tail call i1 %.386(%string.560217* nonnull %.1, %string.560217* %.381)
  %. = select i1 %.387, i64 86, i64 0
  br label %.3.if
}

; Function Attrs: norecurse nounwind readnone
define i1 @is_identifier_char(i8 %.1) local_unnamed_addr #7 {
.3:
  %0 = and i8 %.1, -33
  %1 = add i8 %0, -65
  %2 = icmp ult i8 %1, 26
  %.17 = icmp eq i8 %.1, 95
  %.18 = or i1 %.17, %2
  ret i1 %.18
}

; Function Attrs: norecurse nounwind readnone
define i1 @is_number_char(i8 %.1) local_unnamed_addr #7 {
.3:
  %.1.off = add i8 %.1, -48
  %0 = icmp ult i8 %.1.off, 10
  ret i1 %0
}

; Function Attrs: norecurse nounwind readnone
define i8 @capitalize(i8 %.1) local_unnamed_addr #7 {
.3:
  %.1.off = add i8 %.1, -97
  %0 = icmp ult i8 %.1.off, 26
  br i1 %0, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.12 = add nsw i8 %.1, -32
  ret i8 %.12

.3.endif:                                         ; preds = %.3
  ret i8 %.1
}

; Function Attrs: norecurse nounwind readnone
define i1 @in_base_range(i8 %.1, i64 %.2) local_unnamed_addr #7 {
.4:
  %.8 = icmp slt i64 %.2, 10
  %.11 = icmp sgt i8 %.1, 47
  %.13 = zext i8 %.1 to i64
  %.15 = add i64 %.2, 48
  %.16 = icmp sge i64 %.15, %.13
  %.17 = and i1 %.11, %.16
  br i1 %.8, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret i1 %.17

.4.endif:                                         ; preds = %.4
  %.28 = icmp sgt i8 %.1, 64
  %.32 = add nuw i64 %.2, 65
  %.33 = icmp sge i64 %.32, %.13
  %.34 = and i1 %.28, %.33
  %.35 = or i1 %.17, %.34
  ret i1 %.35
}

; Function Attrs: norecurse nounwind readnone
define i8 @get_escape_char(i8 %.1) local_unnamed_addr #7 {
.3:
  switch i8 %.1, label %.3.endif.endif.endif.endi...endif.endif [
    i8 97, label %.3.if
    i8 98, label %.3.endif.if
    i8 116, label %.3.endif.endif.if
    i8 102, label %.3.endif.endif.endif.if
    i8 110, label %.3.endif.endif.endif.endif.if
    i8 114, label %.3.endif.endif.endif.endif.endif.if
    i8 118, label %.3.endif.endif.endif.endif.endif.endif.if
    i8 48, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i8 39, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i8 34, label %.3.endif.endif.endif.endi...if
    i8 92, label %.3.endif.endif.endif.endi...endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif.if, %.3.endif.endif.endif.endi...if, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i8 [ 7, %.3 ], [ 8, %.3.endif.if ], [ 9, %.3.endif.endif.if ], [ 12, %.3.endif.endif.endif.if ], [ 10, %.3.endif.endif.endif.endif.if ], [ 13, %.3.endif.endif.endif.endif.endif.if ], [ 11, %.3.endif.endif.endif.endif.endif.endif.if ], [ 0, %.3.endif.endif.endif.endif.endif.endif.endif.if ], [ %.1, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ %.1, %.3.endif.endif.endif.endi...if ], [ %.1, %.3.endif.endif.endif.endi...endif.if ], [ %.1, %.3.endif.endif.endif.endi...endif.endif ]
  ret i8 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3
  br label %.3.if
}

define %string.560217* @unescape(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.8 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.9 = bitcast i8* %.8 to %StringBuilder.560219*
  %.10 = bitcast i8* %.8 to %StringBuilder_vtable_ty.560220**
  store %StringBuilder_vtable_ty.560220* @StringBuilder_vtable_data, %StringBuilder_vtable_ty.560220** %.10, align 8
  tail call void @StringBuilder_constructor(%StringBuilder.560219* %.9, i64 %.7)
  %.2214 = load i64, i64* %.6, align 8
  %.2315 = icmp sgt i64 %.2214, 0
  br i1 %.2315, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.26 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge16 = phi i64 [ 0, %for.body.lr.ph ], [ %.125, %for.incr ]
  %.27 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.26, align 8
  %.28 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.27, i64 0, i32 8
  %.29 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.28, align 8
  %.31 = tail call i8 %.29(%string.560217* nonnull %.1, i64 %storemerge16)
  %.34 = icmp eq i8 %.31, 92
  br i1 %.34, label %for.body.if, label %for.body.endif

for.incr:                                         ; preds = %for.body.if.if.endif.if.if, %for.body.if.if.if, %for.body.endif
  %i.0 = phi i64 [ %.37, %for.body.if.if.if ], [ %.95, %for.body.if.if.endif.if.if ], [ %i.1, %for.body.endif ]
  %.125 = add i64 %i.0, 1
  %.22 = load i64, i64* %.6, align 8
  %.23 = icmp slt i64 %.125, %.22
  br i1 %.23, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.3
  %.130 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.10, align 8
  %.131 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.130, i64 0, i32 4
  %.132 = load %string.560217* (%StringBuilder.560219*)*, %string.560217* (%StringBuilder.560219*)** %.131, align 8
  %.133 = tail call %string.560217* %.132(%StringBuilder.560219* %.9)
  ret %string.560217* %.133

for.body.if:                                      ; preds = %for.body
  %.37 = add i64 %storemerge16, 3
  %.40 = load i64, i64* %.6, align 8
  %.41 = icmp slt i64 %.37, %.40
  br i1 %.41, label %for.body.if.if, label %for.body.if.endif

for.body.endif:                                   ; preds = %for.body.if.endif, %for.body
  %i.1 = phi i64 [ %.106, %for.body.if.endif ], [ %storemerge16, %for.body ]
  %char.0 = phi i8 [ %.111, %for.body.if.endif ], [ %.31, %for.body ]
  %.116 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.10, align 8
  %.117 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.116, i64 0, i32 3
  %.118 = load void (%StringBuilder.560219*, i8)*, void (%StringBuilder.560219*, i8)** %.117, align 8
  tail call void %.118(%StringBuilder.560219* %.9, i8 %char.0)
  br label %for.incr

for.body.if.if:                                   ; preds = %for.body.if
  %.45 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.26, align 8
  %.46 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.45, i64 0, i32 9
  %.47 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.46, align 8
  %.48 = tail call i8* %.47(%string.560217* nonnull %.1)
  %.50 = getelementptr inbounds i8, i8* %.48, i64 1
  %.51 = getelementptr inbounds i8, i8* %.50, i64 %storemerge16
  %.54 = tail call i64 @memcmp(i8* nonnull %.51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.55, i64 0, i64 0), i64 3)
  %.55 = icmp eq i64 %.54, 0
  %.57 = tail call i64 @memcmp(i8* nonnull %.51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.56, i64 0, i64 0), i64 3)
  %.58 = icmp eq i64 %.57, 0
  %.59 = or i1 %.55, %.58
  br i1 %.59, label %for.body.if.if.if, label %for.body.if.if.endif

for.body.if.endif:                                ; preds = %for.body.if.if.endif.if, %for.body.if.if.endif, %for.body.if
  %.102 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.26, align 8
  %.103 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.102, i64 0, i32 8
  %.104 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.103, align 8
  %.106 = add nsw i64 %storemerge16, 1
  %.110 = tail call i8 %.104(%string.560217* nonnull %.1, i64 %.106)
  %.111 = tail call i8 @get_escape_char(i8 %.110)
  br label %for.body.endif

for.body.if.if.if:                                ; preds = %for.body.if.if
  %.63 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.10, align 8
  %.64 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.63, i64 0, i32 2
  %.65 = load void (%StringBuilder.560219*, %string.560217*)*, void (%StringBuilder.560219*, %string.560217*)** %.64, align 8
  %.66 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.67 = bitcast i8* %.66 to %string.560217*
  %.67.repack = bitcast i8* %.66 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.67.repack, align 8
  %.67.repack4 = getelementptr inbounds i8, i8* %.66, i64 8
  %0 = bitcast i8* %.67.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.57, i64 0, i64 0), i8** %0, align 8
  %.67.repack5 = getelementptr inbounds i8, i8* %.66, i64 16
  %1 = bitcast i8* %.67.repack5 to i64*
  store i64 1, i64* %1, align 8
  %.67.repack6 = getelementptr inbounds i8, i8* %.66, i64 24
  %2 = bitcast i8* %.67.repack6 to i64*
  store i64 1, i64* %2, align 8
  tail call void %.65(%StringBuilder.560219* %.9, %string.560217* %.67)
  br label %for.incr

for.body.if.if.endif:                             ; preds = %for.body.if.if
  %.75 = add i64 %storemerge16, 6
  %.78 = load i64, i64* %.6, align 8
  %.79 = icmp slt i64 %.75, %.78
  br i1 %.79, label %for.body.if.if.endif.if, label %for.body.if.endif

for.body.if.if.endif.if:                          ; preds = %for.body.if.if.endif
  %.82 = tail call i64 @memcmp(i8* nonnull %.51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.58, i64 0, i64 0), i64 5)
  %.83 = icmp eq i64 %.82, 0
  br i1 %.83, label %for.body.if.if.endif.if.if, label %for.body.if.endif

for.body.if.if.endif.if.if:                       ; preds = %for.body.if.if.endif.if
  %.87 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.10, align 8
  %.88 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.87, i64 0, i32 2
  %.89 = load void (%StringBuilder.560219*, %string.560217*)*, void (%StringBuilder.560219*, %string.560217*)** %.88, align 8
  %.90 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.90 to %string.560217*
  %.91.repack = bitcast i8* %.90 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.91.repack, align 8
  %.91.repack1 = getelementptr inbounds i8, i8* %.90, i64 8
  %3 = bitcast i8* %.91.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.57, i64 0, i64 0), i8** %3, align 8
  %.91.repack2 = getelementptr inbounds i8, i8* %.90, i64 16
  %4 = bitcast i8* %.91.repack2 to i64*
  store i64 1, i64* %4, align 8
  %.91.repack3 = getelementptr inbounds i8, i8* %.90, i64 24
  %5 = bitcast i8* %.91.repack3 to i64*
  store i64 1, i64* %5, align 8
  tail call void %.89(%StringBuilder.560219* %.9, %string.560217* %.91)
  %.95 = add i64 %storemerge16, 5
  br label %for.incr
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Token_constructor(%Token.560247* nocapture %.1, i64 %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %Token.560247, %Token.560247* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %Token.560247, %Token.560247* %.1, i64 0, i32 2
  store %FloRange.560223* %.3, %FloRange.560223** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IntToken_constructor(%IntToken.560249* nocapture %.1, i64 %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %IntToken.560249* %.1 to %Token.560247*
  tail call void @Token_constructor(%Token.560247* %.10, i64 29, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %IntToken.560249, %IntToken.560249* %.1, i64 0, i32 3
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloatToken_constructor(%FloatToken.560251* nocapture %.1, double %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %FloatToken.560251* %.1 to %Token.560247*
  tail call void @Token_constructor(%Token.560247* %.10, i64 30, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %FloatToken.560251, %FloatToken.560251* %.1, i64 0, i32 3
  store double %.2, double* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @CharToken_constructor(%CharToken.560253* nocapture %.1, i8 %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %CharToken.560253* %.1 to %Token.560247*
  tail call void @Token_constructor(%Token.560247* %.10, i64 33, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %CharToken.560253, %CharToken.560253* %.1, i64 0, i32 3
  store i8 %.2, i8* %.15, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<int>_constructor"(%"Array<int>.560257"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 1
  %0 = bitcast i64** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<int>_resize"(%"Array<int>.560257"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 1
  %0 = bitcast i64** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<int>_swap"(%"Array<int>.560257"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 1
  %.48 = load i64*, i64** %.47, align 8
  %.49 = getelementptr inbounds i64, i64* %.48, i64 %.2
  %.50 = load i64, i64* %.49, align 8
  %.60 = getelementptr inbounds i64, i64* %.48, i64 %.3
  %.61 = load i64, i64* %.60, align 8
  store i64 %.61, i64* %.49, align 8
  %.67 = load i64*, i64** %.47, align 8
  %.69 = getelementptr inbounds i64, i64* %.67, i64 %.3
  store i64 %.50, i64* %.69, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<int>___sl__"(%"Array<int>.560257"* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 0
  %.17 = load %"Array<int>_vtable_ty.560262"*, %"Array<int>_vtable_ty.560262"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<int>_vtable_ty.560262", %"Array<int>_vtable_ty.560262"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<int>.560257"*)*, void (%"Array<int>.560257"*)** %.18, align 8
  tail call void %.19(%"Array<int>.560257"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 1
  %.31 = load i64*, i64** %.30, align 8
  %.33 = getelementptr inbounds i64, i64* %.31, i64 %.24
  store i64 %.2, i64* %.33, align 8
  ret void
}

define void @"Array<int>___setitem__"(%"Array<int>.560257"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 1
  %.30 = load i64*, i64** %.29, align 8
  %.32 = getelementptr inbounds i64, i64* %.30, i64 %.2
  store i64 %.3, i64* %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<int>_append"(%"Array<int>.560257"* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 0
  %.9 = load %"Array<int>_vtable_ty.560262"*, %"Array<int>_vtable_ty.560262"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<int>_vtable_ty.560262", %"Array<int>_vtable_ty.560262"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<int>.560257"*, i64)*, void (%"Array<int>.560257"*, i64)** %.10, align 8
  tail call void %.11(%"Array<int>.560257"* %.1, i64 %.2)
  ret void
}

define i64 @"Array<int>___getitem__"(%"Array<int>.560257"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 1
  %.28 = load i64*, i64** %.27, align 8
  %.29 = getelementptr inbounds i64, i64* %.28, i64 %.2
  %.30 = load i64, i64* %.29, align 8
  ret i64 %.30

.4.endif:                                         ; preds = %.4
  ret i64 0
}

define i1 @"Array<int>___eq__"(%"Array<int>.560257"* %.1, %"Array<int>.560257"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.46, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.46, %for.cond ]
  %.28 = load %"Array<int>_vtable_ty.560262"*, %"Array<int>_vtable_ty.560262"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<int>_vtable_ty.560262", %"Array<int>_vtable_ty.560262"* %.28, i64 0, i32 5
  %.30 = load i64 (%"Array<int>.560257"*, i64)*, i64 (%"Array<int>.560257"*, i64)** %.29, align 8
  %.31 = tail call i64 %.30(%"Array<int>.560257"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<int>_vtable_ty.560262"*, %"Array<int>_vtable_ty.560262"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<int>_vtable_ty.560262", %"Array<int>_vtable_ty.560262"* %.35, i64 0, i32 5
  %.37 = load i64 (%"Array<int>.560257"*, i64)*, i64 (%"Array<int>.560257"*, i64)** %.36, align 8
  %.38 = tail call i64 %.37(%"Array<int>.560257"* nonnull %.2, i64 %storemerge3)
  %.39.not = icmp eq i64 %.31, %.38
  %.46 = add nuw nsw i64 %storemerge3, 1
  br i1 %.39.not, label %for.cond, label %.4.if
}

define i1 @"Array<int>___in__"(%"Array<int>.560257"* %.1, i64 %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body, label %for.end

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.31, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.cond
  %storemerge4 = phi i64 [ %.31, %for.cond ], [ 0, %.4 ]
  %.19 = load %"Array<int>_vtable_ty.560262"*, %"Array<int>_vtable_ty.560262"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<int>_vtable_ty.560262", %"Array<int>_vtable_ty.560262"* %.19, i64 0, i32 5
  %.21 = load i64 (%"Array<int>.560257"*, i64)*, i64 (%"Array<int>.560257"*, i64)** %.20, align 8
  %.22 = tail call i64 %.21(%"Array<int>.560257"* nonnull %.1, i64 %storemerge4)
  %.24 = icmp eq i64 %.22, %.2
  %.31 = add nuw nsw i64 %storemerge4, 1
  br i1 %.24, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<int>_find"(%"Array<int>.560257"* nocapture readonly %.1, i64 %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.1, i64 0, i32 1
  %.19 = load i64*, i64** %.18, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.31, %for.body.endif ]
  %.20 = getelementptr inbounds i64, i64* %.19, i64 %storemerge4
  %.21 = load i64, i64* %.20, align 8
  %.23 = icmp eq i64 %.21, %.2
  br i1 %.23, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge4, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.31 = add nuw nsw i64 %storemerge4, 1
  %.14 = icmp slt i64 %.31, %.132
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<Token>_constructor"(%"Array<Token>.560259"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 1
  %0 = bitcast %Token.560247*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Token>_resize"(%"Array<Token>.560259"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 1
  %0 = bitcast %Token.560247*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Token>_swap"(%"Array<Token>.560259"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 1
  %.48 = load %Token.560247**, %Token.560247*** %.47, align 8
  %.49 = getelementptr inbounds %Token.560247*, %Token.560247** %.48, i64 %.2
  %4 = bitcast %Token.560247** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Token.560247*, %Token.560247** %.48, i64 %.3
  %5 = bitcast %Token.560247** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Token.560247**, %Token.560247*** %.47, align 8
  %.69 = getelementptr inbounds %Token.560247*, %Token.560247** %.67, i64 %.3
  %6 = bitcast %Token.560247** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Token>___sl__"(%"Array<Token>.560259"* %.1, %Token.560247* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 0
  %.17 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Token>.560259"*)*, void (%"Array<Token>.560259"*)** %.18, align 8
  tail call void %.19(%"Array<Token>.560259"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 1
  %.31 = load %Token.560247**, %Token.560247*** %.30, align 8
  %.33 = getelementptr inbounds %Token.560247*, %Token.560247** %.31, i64 %.24
  store %Token.560247* %.2, %Token.560247** %.33, align 8
  ret void
}

define void @"Array<Token>___setitem__"(%"Array<Token>.560259"* nocapture readonly %.1, i64 %.2, %Token.560247* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 1
  %.30 = load %Token.560247**, %Token.560247*** %.29, align 8
  %.32 = getelementptr inbounds %Token.560247*, %Token.560247** %.30, i64 %.2
  store %Token.560247* %.3, %Token.560247** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Token>_append"(%"Array<Token>.560259"* %.1, %Token.560247* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 0
  %.9 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Token>.560259"*, %Token.560247*)*, void (%"Array<Token>.560259"*, %Token.560247*)** %.10, align 8
  tail call void %.11(%"Array<Token>.560259"* %.1, %Token.560247* %.2)
  ret void
}

define %Token.560247* @"Array<Token>___getitem__"(%"Array<Token>.560259"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 1
  %.28 = load %Token.560247**, %Token.560247*** %.27, align 8
  %.29 = getelementptr inbounds %Token.560247*, %Token.560247** %.28, i64 %.2
  %.30 = load %Token.560247*, %Token.560247** %.29, align 8
  ret %Token.560247* %.30

.4.endif:                                         ; preds = %.4
  ret %Token.560247* null
}

define i1 @"Array<Token>___eq__"(%"Array<Token>.560259"* %.1, %"Array<Token>.560259"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.28, i64 0, i32 5
  %.30 = load %Token.560247* (%"Array<Token>.560259"*, i64)*, %Token.560247* (%"Array<Token>.560259"*, i64)** %.29, align 8
  %.31 = tail call %Token.560247* %.30(%"Array<Token>.560259"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.35, i64 0, i32 5
  %.37 = load %Token.560247* (%"Array<Token>.560259"*, i64)*, %Token.560247* (%"Array<Token>.560259"*, i64)** %.36, align 8
  %.38 = tail call %Token.560247* %.37(%"Array<Token>.560259"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Token.560247* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Token.560247* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Token>___in__"(%"Array<Token>.560259"* %.1, %Token.560247* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Token.560247* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.19, i64 0, i32 5
  %.21 = load %Token.560247* (%"Array<Token>.560259"*, i64)*, %Token.560247* (%"Array<Token>.560259"*, i64)** %.20, align 8
  %.22 = tail call %Token.560247* %.21(%"Array<Token>.560259"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Token.560247* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Token>_find"(%"Array<Token>.560259"* nocapture readonly %.1, %Token.560247* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 1
  %.19 = load %Token.560247**, %Token.560247*** %.18, align 8
  %0 = ptrtoint %Token.560247* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Token.560247*, %Token.560247** %.19, i64 %storemerge5
  %1 = bitcast %Token.560247** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<Array<Token>>_constructor"(%"Array<Array<Token>>.560258"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 1
  %0 = bitcast %"Array<Token>.560259"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Array<Token>>_resize"(%"Array<Array<Token>>.560258"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 1
  %0 = bitcast %"Array<Token>.560259"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Array<Token>>_swap"(%"Array<Array<Token>>.560258"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 1
  %.48 = load %"Array<Token>.560259"**, %"Array<Token>.560259"*** %.47, align 8
  %.49 = getelementptr inbounds %"Array<Token>.560259"*, %"Array<Token>.560259"** %.48, i64 %.2
  %4 = bitcast %"Array<Token>.560259"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Array<Token>.560259"*, %"Array<Token>.560259"** %.48, i64 %.3
  %5 = bitcast %"Array<Token>.560259"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Array<Token>.560259"**, %"Array<Token>.560259"*** %.47, align 8
  %.69 = getelementptr inbounds %"Array<Token>.560259"*, %"Array<Token>.560259"** %.67, i64 %.3
  %6 = bitcast %"Array<Token>.560259"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Array<Token>>___sl__"(%"Array<Array<Token>>.560258"* %.1, %"Array<Token>.560259"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 0
  %.17 = load %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Array<Token>>_vtable_ty.560261"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.560261", %"Array<Array<Token>>_vtable_ty.560261"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Array<Token>>.560258"*)*, void (%"Array<Array<Token>>.560258"*)** %.18, align 8
  tail call void %.19(%"Array<Array<Token>>.560258"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 1
  %.31 = load %"Array<Token>.560259"**, %"Array<Token>.560259"*** %.30, align 8
  %.33 = getelementptr inbounds %"Array<Token>.560259"*, %"Array<Token>.560259"** %.31, i64 %.24
  store %"Array<Token>.560259"* %.2, %"Array<Token>.560259"** %.33, align 8
  ret void
}

define void @"Array<Array<Token>>___setitem__"(%"Array<Array<Token>>.560258"* nocapture readonly %.1, i64 %.2, %"Array<Token>.560259"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 1
  %.30 = load %"Array<Token>.560259"**, %"Array<Token>.560259"*** %.29, align 8
  %.32 = getelementptr inbounds %"Array<Token>.560259"*, %"Array<Token>.560259"** %.30, i64 %.2
  store %"Array<Token>.560259"* %.3, %"Array<Token>.560259"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Array<Token>>_append"(%"Array<Array<Token>>.560258"* %.1, %"Array<Token>.560259"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 0
  %.9 = load %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Array<Token>>_vtable_ty.560261"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.560261", %"Array<Array<Token>>_vtable_ty.560261"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)*, void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)** %.10, align 8
  tail call void %.11(%"Array<Array<Token>>.560258"* %.1, %"Array<Token>.560259"* %.2)
  ret void
}

define %"Array<Token>.560259"* @"Array<Array<Token>>___getitem__"(%"Array<Array<Token>>.560258"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 1
  %.28 = load %"Array<Token>.560259"**, %"Array<Token>.560259"*** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Token>.560259"*, %"Array<Token>.560259"** %.28, i64 %.2
  %.30 = load %"Array<Token>.560259"*, %"Array<Token>.560259"** %.29, align 8
  ret %"Array<Token>.560259"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Array<Token>.560259"* null
}

define i1 @"Array<Array<Token>>___eq__"(%"Array<Array<Token>>.560258"* %.1, %"Array<Array<Token>>.560258"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.27 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 0
  %.34 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.51, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.51, %for.cond ]
  %.28 = load %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Array<Token>>_vtable_ty.560261"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.560261", %"Array<Array<Token>>_vtable_ty.560261"* %.28, i64 0, i32 5
  %.30 = load %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)*, %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)** %.29, align 8
  %.31 = tail call %"Array<Token>.560259"* %.30(%"Array<Array<Token>>.560258"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Array<Token>>_vtable_ty.560261"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.560261", %"Array<Array<Token>>_vtable_ty.560261"* %.35, i64 0, i32 5
  %.37 = load %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)*, %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)** %.36, align 8
  %.38 = tail call %"Array<Token>.560259"* %.37(%"Array<Array<Token>>.560258"* nonnull %.2, i64 %storemerge3)
  %.39 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.31, i64 0, i32 0
  %.40 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.40, i64 0, i32 6
  %.42 = load i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)*, i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)** %.41, align 8
  %.43 = tail call i1 %.42(%"Array<Token>.560259"* %.31, %"Array<Token>.560259"* %.38)
  %.51 = add nuw nsw i64 %storemerge3, 1
  br i1 %.43, label %for.cond, label %.4.if
}

define i1 @"Array<Array<Token>>___in__"(%"Array<Array<Token>>.560258"* %.1, %"Array<Token>.560259"* %.2) {
.4:
  %.12 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 0
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.cond ]
  %.19 = load %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Array<Token>>_vtable_ty.560261"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.560261", %"Array<Array<Token>>_vtable_ty.560261"* %.19, i64 0, i32 5
  %.21 = load %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)*, %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)** %.20, align 8
  %.22 = tail call %"Array<Token>.560259"* %.21(%"Array<Array<Token>>.560258"* nonnull %.1, i64 %storemerge4)
  %.24 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.22, i64 0, i32 0
  %.25 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.24, align 8
  %.26 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.25, i64 0, i32 6
  %.27 = load i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)*, i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)** %.26, align 8
  %.28 = tail call i1 %.27(%"Array<Token>.560259"* %.22, %"Array<Token>.560259"* %.2)
  %.35 = add nuw nsw i64 %storemerge4, 1
  br i1 %.28, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

define i64 @"Array<Array<Token>>_find"(%"Array<Array<Token>>.560258"* nocapture readonly %.1, %"Array<Token>.560259"* %.2) {
.4:
  %.12 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body.endif ]
  %.19 = load %"Array<Token>.560259"**, %"Array<Token>.560259"*** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Token>.560259"*, %"Array<Token>.560259"** %.19, i64 %storemerge4
  %.21 = load %"Array<Token>.560259"*, %"Array<Token>.560259"** %.20, align 8
  %.23 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.21, i64 0, i32 0
  %.24 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.24, i64 0, i32 6
  %.26 = load i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)*, i1 (%"Array<Token>.560259"*, %"Array<Token>.560259"*)** %.25, align 8
  %.27 = tail call i1 %.26(%"Array<Token>.560259"* %.21, %"Array<Token>.560259"* %.2)
  br i1 %.27, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge4, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StrToken_constructor(%StrToken.560255* nocapture %.1, %"Array<Array<Token>>.560258"* %.2, %"Array<int>.560257"* %.3, %string.560217* %.4, %FloRange.560223* %.5) local_unnamed_addr #2 {
.7:
  %.14 = bitcast %StrToken.560255* %.1 to %Token.560247*
  tail call void @Token_constructor(%Token.560247* %.14, i64 32, %FloRange.560223* %.5)
  %.19 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.1, i64 0, i32 3
  store %string.560217* %.4, %string.560217** %.19, align 8
  %.23 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.1, i64 0, i32 4
  store %"Array<int>.560257"* %.3, %"Array<int>.560257"** %.23, align 8
  %.27 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.1, i64 0, i32 5
  store %"Array<Array<Token>>.560258"* %.2, %"Array<Array<Token>>.560258"** %.27, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IdentifierToken_constructor(%IdentifierToken.560263* nocapture %.1, %string.560217* %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %IdentifierToken.560263* %.1 to %Token.560247*
  tail call void @Token_constructor(%Token.560247* %.10, i64 51, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.1, i64 0, i32 3
  store %string.560217* %.2, %string.560217** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Lexer_constructor(%Lexer.560265* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.7 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 4
  store i64 -1, i64* %.7, align 8
  %.10 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 6
  store i64 1, i64* %.10, align 8
  %.13 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 5
  store i64 0, i64* %.13, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Lexer_eof(%Lexer.560265* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 4
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 2
  %.10 = load %string.560217*, %string.560217** %.9, align 8
  %.11 = getelementptr inbounds %string.560217, %string.560217* %.10, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp sge i64 %.7, %.12
  ret i1 %.13
}

define i8 @Lexer_peek(%Lexer.560265* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = add i64 %.9, %.2
  %.13 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 2
  %.14 = load %string.560217*, %string.560217** %.13, align 8
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.14, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.11, %.16
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.14, i64 0, i32 0
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.31 = tail call i8 %.25(%string.560217* %.14, i64 %.11)
  ret i8 %.31

.4.endif:                                         ; preds = %.4
  ret i8 0
}

define void @Lexer_advance(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 0
  %.9 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.8, align 8
  %.10 = tail call i1 %.9(%Lexer.560265* %.1)
  br i1 %.10, label %.3.if, label %.3.endif

.3.if.sink.split:                                 ; preds = %.3.endif, %.3.endif.if
  %.40.sink1 = phi i64* [ %.40, %.3.endif.if ], [ %.37, %.3.endif ]
  %.41 = load i64, i64* %.40.sink1, align 8
  %.42 = add i64 %.41, 1
  store i64 %.42, i64* %.40.sink1, align 8
  br label %.3.if

.3.if:                                            ; preds = %.3.if.sink.split, %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.15 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 2
  %.16 = load %string.560217*, %string.560217** %.15, align 8
  %.17 = getelementptr inbounds %string.560217, %string.560217* %.16, i64 0, i32 0
  %.18 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.17, align 8
  %.19 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.18, i64 0, i32 8
  %.20 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.19, align 8
  %.22 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 4
  %.23 = load i64, i64* %.22, align 8
  %.24 = add i64 %.23, 1
  store i64 %.24, i64* %.22, align 8
  %.28 = tail call i8 %.20(%string.560217* %.16, i64 %.24)
  %.29 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 1
  store i8 %.28, i8* %.29, align 1
  %.34 = icmp eq i8 %.28, 10
  %.37 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 5
  br i1 %.34, label %.3.endif.if, label %.3.if.sink.split

.3.endif.if:                                      ; preds = %.3.endif
  store i64 0, i64* %.37, align 8
  %.40 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 6
  br label %.3.if.sink.split
}

; Function Attrs: nofree nounwind
define noalias %FloRange.560223* @Lexer_get_range(%Lexer.560265* nocapture readonly %.1, i64 %.2) #4 {
.4:
  %.8 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = sub i64 1, %.2
  %.12 = add i64 %.11, %.9
  %.16 = add i64 %.9, 1
  %.18 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 5
  %.19 = load i64, i64* %.18, align 8
  %.21 = sub i64 %.19, %.2
  %.23 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 6
  %.24 = load i64, i64* %.23, align 8
  %.25 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.26 = bitcast i8* %.25 to %FloRange.560223*
  %.27 = bitcast i8* %.25 to %FloRange_vtable_ty.560224**
  store %FloRange_vtable_ty.560224* @FloRange_vtable_data, %FloRange_vtable_ty.560224** %.27, align 8
  tail call void @FloRange_constructor(%FloRange.560223* %.26, i64 %.12, i64 %.16, i64 %.21, i64 %.24)
  ret %FloRange.560223* %.26
}

define noalias %Token.560247* @Lexer_plus_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 43
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 21, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call i8 %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = icmp eq i8 %.36, 61
  %.41 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.42, align 8
  tail call void %.43(%Lexer.560265* nonnull %.1)
  %.47 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.47, i64 0, i32 3
  %.49 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.48, align 8
  %.50 = tail call %FloRange.560223* %.49(%Lexer.560265* nonnull %.1, i64 2)
  %.51 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.560247*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.53, align 8
  tail call void @Token_constructor(%Token.560247* %.52, i64 12, %FloRange.560223* %.50)
  ret %Token.560247* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 3
  %.62 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.61, align 8
  %.63 = tail call %FloRange.560223* %.62(%Lexer.560265* nonnull %.1, i64 1)
  %.64 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.560247*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.66, align 8
  tail call void @Token_constructor(%Token.560247* %.65, i64 6, %FloRange.560223* %.63)
  ret %Token.560247* %.65
}

define i1 @Lexer_skip_comment(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 42
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 0
  %.23 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.22, align 8
  %.24 = tail call i1 %.23(%Lexer.560265* nonnull %.1)
  br i1 %.24, label %while.exit, label %while.entry

.3.else:                                          ; preds = %.3
  %.74 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 1
  %.75 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.74, align 8
  %.76 = tail call i8 %.75(%Lexer.560265* nonnull %.1, i64 1)
  %.77 = icmp eq i8 %.76, 47
  br i1 %.77, label %.3.else.if, label %.3.endif

.3.endif:                                         ; preds = %while.entry.1, %.3.else.if, %.3.else
  %merge = phi i1 [ false, %.3.else ], [ true, %.3.else.if ], [ true, %while.entry.1 ]
  ret i1 %merge

while.entry:                                      ; preds = %.3.if, %while.entry.endif
  %.29 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.30 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.29, i64 0, i32 1
  %.31 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.30, align 8
  %.32 = tail call i8 %.31(%Lexer.560265* nonnull %.1, i64 1)
  %.33 = icmp eq i8 %.32, 42
  %.36 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.37 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.36, i64 0, i32 1
  %.38 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.37, align 8
  %.39 = tail call i8 %.38(%Lexer.560265* nonnull %.1, i64 2)
  %.40 = icmp eq i8 %.39, 47
  %.41 = and i1 %.33, %.40
  br i1 %.41, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3.if
  %.60 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.61 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.60, i64 0, i32 2
  %.62 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.61, align 8
  tail call void %.62(%Lexer.560265* nonnull %.1)
  %.66 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.67, align 8
  tail call void %.68(%Lexer.560265* nonnull %.1)
  ret i1 true

while.entry.endif:                                ; preds = %while.entry
  %.46 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.47 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.46, i64 0, i32 2
  %.48 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.47, align 8
  tail call void %.48(%Lexer.560265* nonnull %.1)
  %.52 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.53 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.52, i64 0, i32 0
  %.54 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.53, align 8
  %.55 = tail call i1 %.54(%Lexer.560265* nonnull %.1)
  br i1 %.55, label %while.exit, label %while.entry

.3.else.if:                                       ; preds = %.3.else
  %.81 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.82 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.81, i64 0, i32 2
  %.83 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.82, align 8
  tail call void %.83(%Lexer.560265* nonnull %.1)
  %.87 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.88 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.87, i64 0, i32 1
  %.89 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.88, align 8
  %.90 = tail call i8 %.89(%Lexer.560265* nonnull %.1, i64 1)
  %.91 = icmp ne i8 %.90, 10
  %.94 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.95 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.94, i64 0, i32 0
  %.96 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.95, align 8
  %.97 = tail call i1 %.96(%Lexer.560265* nonnull %.1)
  %.98 = xor i1 %.97, true
  %.99 = and i1 %.91, %.98
  br i1 %.99, label %while.entry.1, label %.3.endif

while.entry.1:                                    ; preds = %.3.else.if, %while.entry.1
  %.103 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.104 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.103, i64 0, i32 2
  %.105 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.104, align 8
  tail call void %.105(%Lexer.560265* nonnull %.1)
  %.109 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.110 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.109, i64 0, i32 1
  %.111 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.110, align 8
  %.112 = tail call i8 %.111(%Lexer.560265* nonnull %.1, i64 1)
  %.113 = icmp ne i8 %.112, 10
  %.116 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.117 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.116, i64 0, i32 0
  %.118 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.117, align 8
  %.119 = tail call i1 %.118(%Lexer.560265* nonnull %.1)
  %.120 = xor i1 %.119, true
  %.121 = and i1 %.113, %.120
  br i1 %.121, label %while.entry.1, label %.3.endif
}

define noalias %Token.560247* @Lexer_minus_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 45
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 22, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call i8 %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = icmp eq i8 %.36, 61
  %.41 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.42, align 8
  tail call void %.43(%Lexer.560265* nonnull %.1)
  %.47 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.47, i64 0, i32 3
  %.49 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.48, align 8
  %.50 = tail call %FloRange.560223* %.49(%Lexer.560265* nonnull %.1, i64 2)
  %.51 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.560247*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.53, align 8
  tail call void @Token_constructor(%Token.560247* %.52, i64 11, %FloRange.560223* %.50)
  ret %Token.560247* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 3
  %.62 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.61, align 8
  %.63 = tail call %FloRange.560223* %.62(%Lexer.560265* nonnull %.1, i64 2)
  %.64 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.560247*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.66, align 8
  tail call void @Token_constructor(%Token.560247* %.65, i64 5, %FloRange.560223* %.63)
  ret %Token.560247* %.65
}

define noalias %Token.560247* @Lexer_mult_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 10, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 3
  %.35 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call %FloRange.560223* %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.560247*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.39, align 8
  tail call void @Token_constructor(%Token.560247* %.38, i64 4, %FloRange.560223* %.36)
  ret %Token.560247* %.38
}

define noalias %Token.560247* @Lexer_mod_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 14, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 3
  %.35 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call %FloRange.560223* %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.560247*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.39, align 8
  tail call void @Token_constructor(%Token.560247* %.38, i64 8, %FloRange.560223* %.36)
  ret %Token.560247* %.38
}

define noalias %Token.560247* @Lexer_pow_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 15, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 3
  %.35 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call %FloRange.560223* %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.560247*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.39, align 8
  tail call void @Token_constructor(%Token.560247* %.38, i64 9, %FloRange.560223* %.36)
  ret %Token.560247* %.38
}

define noalias %Token.560247* @Lexer_div_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 13, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 3
  %.35 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call %FloRange.560223* %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.560247*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.39, align 8
  tail call void @Token_constructor(%Token.560247* %.38, i64 7, %FloRange.560223* %.36)
  ret %Token.560247* %.38
}

define noalias %Token.560247* @Lexer_eq_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 37, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call i8 %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = icmp eq i8 %.36, 62
  %.41 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.42, align 8
  tail call void %.43(%Lexer.560265* nonnull %.1)
  %.47 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.47, i64 0, i32 3
  %.49 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.48, align 8
  %.50 = tail call %FloRange.560223* %.49(%Lexer.560265* nonnull %.1, i64 2)
  %.51 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.560247*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.53, align 8
  tail call void @Token_constructor(%Token.560247* %.52, i64 43, %FloRange.560223* %.50)
  ret %Token.560247* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 3
  %.62 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.61, align 8
  %.63 = tail call %FloRange.560223* %.62(%Lexer.560265* nonnull %.1, i64 1)
  %.64 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.560247*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.66, align 8
  tail call void @Token_constructor(%Token.560247* %.65, i64 36, %FloRange.560223* %.63)
  ret %Token.560247* %.65
}

define noalias %Token.560247* @Lexer_neq_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 38, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 3
  %.35 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call %FloRange.560223* %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.560247*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.39, align 8
  tail call void @Token_constructor(%Token.560247* %.38, i64 45, %FloRange.560223* %.36)
  ret %Token.560247* %.38
}

define noalias %Token.560247* @Lexer_gt_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 42, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call i8 %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = icmp eq i8 %.36, 62
  %.41 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.42, align 8
  tail call void %.43(%Lexer.560265* nonnull %.1)
  %.47 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.47, i64 0, i32 1
  %.49 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.48, align 8
  %.50 = tail call i8 %.49(%Lexer.560265* nonnull %.1, i64 1)
  %.51 = icmp eq i8 %.50, 61
  %.55 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.51, label %.3.else.if.if, label %.3.else.if.endif

.3.else.endif:                                    ; preds = %.3.else
  %.87 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 3
  %.88 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.87, align 8
  %.89 = tail call %FloRange.560223* %.88(%Lexer.560265* nonnull %.1, i64 1)
  %.90 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.91 = bitcast i8* %.90 to %Token.560247*
  %.92 = bitcast i8* %.90 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.92, align 8
  tail call void @Token_constructor(%Token.560247* %.91, i64 39, %FloRange.560223* %.89)
  ret %Token.560247* %.91

.3.else.if.if:                                    ; preds = %.3.else.if
  %.56 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.55, i64 0, i32 2
  %.57 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.56, align 8
  tail call void %.57(%Lexer.560265* nonnull %.1)
  %.61 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.61, i64 0, i32 3
  %.63 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.62, align 8
  %.64 = tail call %FloRange.560223* %.63(%Lexer.560265* nonnull %.1, i64 3)
  %.65 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.66 = bitcast i8* %.65 to %Token.560247*
  %.67 = bitcast i8* %.65 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.67, align 8
  tail call void @Token_constructor(%Token.560247* %.66, i64 19, %FloRange.560223* %.64)
  ret %Token.560247* %.66

.3.else.if.endif:                                 ; preds = %.3.else.if
  %.74 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.55, i64 0, i32 3
  %.75 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.74, align 8
  %.76 = tail call %FloRange.560223* %.75(%Lexer.560265* nonnull %.1, i64 2)
  %.77 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.78 = bitcast i8* %.77 to %Token.560247*
  %.79 = bitcast i8* %.77 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.79, align 8
  tail call void @Token_constructor(%Token.560247* %.78, i64 47, %FloRange.560223* %.76)
  ret %Token.560247* %.78
}

define noalias %Token.560247* @Lexer_lt_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.8, align 8
  %.10 = tail call i8 %.9(%Lexer.560265* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.16, align 8
  tail call void %.17(%Lexer.560265* nonnull %.1)
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 3
  %.23 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.22, align 8
  %.24 = tail call %FloRange.560223* %.23(%Lexer.560265* nonnull %.1, i64 2)
  %.25 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.560247*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.27, align 8
  tail call void @Token_constructor(%Token.560247* %.26, i64 41, %FloRange.560223* %.24)
  ret %Token.560247* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.34, align 8
  %.36 = tail call i8 %.35(%Lexer.560265* nonnull %.1, i64 1)
  %.37 = icmp eq i8 %.36, 60
  %.41 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.42, align 8
  tail call void %.43(%Lexer.560265* nonnull %.1)
  %.47 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.47, i64 0, i32 1
  %.49 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.48, align 8
  %.50 = tail call i8 %.49(%Lexer.560265* nonnull %.1, i64 1)
  %.51 = icmp eq i8 %.50, 61
  %.55 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  br i1 %.51, label %.3.else.if.if, label %.3.else.if.endif

.3.else.endif:                                    ; preds = %.3.else
  %.87 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.41, i64 0, i32 3
  %.88 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.87, align 8
  %.89 = tail call %FloRange.560223* %.88(%Lexer.560265* nonnull %.1, i64 1)
  %.90 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.91 = bitcast i8* %.90 to %Token.560247*
  %.92 = bitcast i8* %.90 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.92, align 8
  tail call void @Token_constructor(%Token.560247* %.91, i64 40, %FloRange.560223* %.89)
  ret %Token.560247* %.91

.3.else.if.if:                                    ; preds = %.3.else.if
  %.56 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.55, i64 0, i32 2
  %.57 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.56, align 8
  tail call void %.57(%Lexer.560265* nonnull %.1)
  %.61 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.6, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.61, i64 0, i32 3
  %.63 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.62, align 8
  %.64 = tail call %FloRange.560223* %.63(%Lexer.560265* nonnull %.1, i64 3)
  %.65 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.66 = bitcast i8* %.65 to %Token.560247*
  %.67 = bitcast i8* %.65 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.67, align 8
  tail call void @Token_constructor(%Token.560247* %.66, i64 20, %FloRange.560223* %.64)
  ret %Token.560247* %.66

.3.else.if.endif:                                 ; preds = %.3.else.if
  %.74 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.55, i64 0, i32 3
  %.75 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.74, align 8
  %.76 = tail call %FloRange.560223* %.75(%Lexer.560265* nonnull %.1, i64 2)
  %.77 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.78 = bitcast i8* %.77 to %Token.560247*
  %.79 = bitcast i8* %.77 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.79, align 8
  tail call void @Token_constructor(%Token.560247* %.78, i64 46, %FloRange.560223* %.76)
  ret %Token.560247* %.78
}

define noalias %Token.560247* @Lexer_dot_token(%Lexer.560265* %.1) {
.3:
  %.8 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.9 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.10 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.9, i64 0, i32 1
  %.11 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.10, align 8
  %.12 = tail call i8 %.11(%Lexer.560265* %.1, i64 1)
  %.13 = icmp eq i8 %.12, 46
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.23, i64 0, i32 2
  %.25 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.24, align 8
  tail call void %.25(%Lexer.560265* nonnull %.1)
  %.29 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.30 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.29, i64 0, i32 1
  %.31 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.30, align 8
  %.32 = tail call i8 %.31(%Lexer.560265* nonnull %.1, i64 1)
  %.33 = icmp eq i8 %.32, 46
  br i1 %.33, label %.3.if.if, label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3.if.if, %.3
  %token.0 = phi i64 [ 48, %.3 ], [ 50, %.3.if.if ], [ 49, %.3.if ]
  %length.0 = phi i64 [ 1, %.3 ], [ 3, %.3.if.if ], [ 2, %.3.if ]
  %.52 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.53 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.52, i64 0, i32 3
  %.54 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.53, align 8
  %.56 = tail call %FloRange.560223* %.54(%Lexer.560265* nonnull %.1, i64 %length.0)
  %.57 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.58 = bitcast i8* %.57 to %Token.560247*
  %.59 = bitcast i8* %.57 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.59, align 8
  tail call void @Token_constructor(%Token.560247* %.58, i64 %token.0, %FloRange.560223* %.56)
  ret %Token.560247* %.58

.3.if.if:                                         ; preds = %.3.if
  %.43 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.44 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.43, i64 0, i32 2
  %.45 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.44, align 8
  tail call void %.45(%Lexer.560265* nonnull %.1)
  br label %.3.endif
}

define noalias %IntToken.560249* @Lexer_base_int_token(%Lexer.560265* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.9 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.10 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.9, i64 0, i32 2
  %.11 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.10, align 8
  tail call void %.11(%Lexer.560265* %.1)
  %.18 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.19 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.18, i64 0, i32 1
  %.20 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.19, align 8
  %.21 = tail call i8 %.20(%Lexer.560265* %.1, i64 1)
  %.22 = tail call i8 @capitalize(i8 %.21)
  %.25 = tail call i1 @in_base_range(i8 %.22, i64 %.2)
  %.28 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.29 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.28, i64 0, i32 0
  %.30 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.29, align 8
  %.31 = tail call i1 %.30(%Lexer.560265* %.1)
  %.32 = xor i1 %.31, true
  %.33 = and i1 %.25, %.32
  br i1 %.33, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %length.0 = phi i64 [ %.58, %while.entry ], [ 3, %.4 ]
  %value.0 = phi i64 [ %.53, %while.entry ], [ 0, %.4 ]
  %current_char.0 = phi i8 [ %.72, %while.entry ], [ %.22, %.4 ]
  %.37 = mul i64 %value.0, %.2
  %.43 = icmp sgt i8 %current_char.0, 64
  %spec.select.v = select i1 %.43, i8 -55, i8 -48
  %spec.select = add i8 %spec.select.v, %current_char.0
  %.52 = zext i8 %spec.select to i64
  %.53 = add i64 %.37, %.52
  %.58 = add i64 %length.0, 1
  %.62 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.63 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.62, i64 0, i32 2
  %.64 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.63, align 8
  tail call void %.64(%Lexer.560265* nonnull %.1)
  %.68 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.69 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.68, i64 0, i32 1
  %.70 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.69, align 8
  %.71 = tail call i8 %.70(%Lexer.560265* nonnull %.1, i64 1)
  %.72 = tail call i8 @capitalize(i8 %.71)
  %.75 = tail call i1 @in_base_range(i8 %.72, i64 %.2)
  %.78 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.79 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.78, i64 0, i32 0
  %.80 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.79, align 8
  %.81 = tail call i1 %.80(%Lexer.560265* nonnull %.1)
  %.82 = xor i1 %.81, true
  %.83 = and i1 %.75, %.82
  br i1 %.83, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %length.1 = phi i64 [ 3, %.4 ], [ %.58, %while.entry ]
  %value.1 = phi i64 [ 0, %.4 ], [ %.53, %while.entry ]
  %.88 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.8, align 8
  %.89 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.88, i64 0, i32 3
  %.90 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.89, align 8
  %.92 = tail call %FloRange.560223* %.90(%Lexer.560265* nonnull %.1, i64 %length.1)
  %.93 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.94 = bitcast i8* %.93 to %IntToken.560249*
  %.95 = bitcast i8* %.93 to %IntToken_vtable_ty.560250**
  store %IntToken_vtable_ty.560250* @IntToken_vtable_data, %IntToken_vtable_ty.560250** %.95, align 8
  tail call void @IntToken_constructor(%IntToken.560249* %.94, i64 %value.1, %FloRange.560223* %.92)
  ret %IntToken.560249* %.94
}

define %Token.560247* @Lexer_numeric_token(%Lexer.560265* %.1) {
.3:
  %.9 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 1
  %.10 = load i8, i8* %.9, align 1
  %.11 = icmp eq i8 %.10, 48
  %.13 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.14 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.15 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.14, i64 0, i32 1
  %.16 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.15, align 8
  %.17 = tail call i8 %.16(%Lexer.560265* %.1, i64 1)
  %.18 = icmp eq i8 %.17, 98
  %.19 = and i1 %.11, %.18
  br i1 %.19, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.23, i64 0, i32 16
  %.25 = load %IntToken.560249* (%Lexer.560265*, i64)*, %IntToken.560249* (%Lexer.560265*, i64)** %.24, align 8
  %.26 = tail call %IntToken.560249* %.25(%Lexer.560265* nonnull %.1, i64 2)
  %.27 = bitcast %IntToken.560249* %.26 to %Token.560247*
  ret %Token.560247* %.27

.3.endif:                                         ; preds = %.3
  %.31 = load i8, i8* %.9, align 1
  %.32 = icmp eq i8 %.31, 48
  %.35 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.36 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.35, i64 0, i32 1
  %.37 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.36, align 8
  %.38 = tail call i8 %.37(%Lexer.560265* nonnull %.1, i64 1)
  %.39 = icmp eq i8 %.38, 111
  %.40 = and i1 %.32, %.39
  br i1 %.40, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.44 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.45 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.44, i64 0, i32 16
  %.46 = load %IntToken.560249* (%Lexer.560265*, i64)*, %IntToken.560249* (%Lexer.560265*, i64)** %.45, align 8
  %.47 = tail call %IntToken.560249* %.46(%Lexer.560265* nonnull %.1, i64 8)
  %.48 = bitcast %IntToken.560249* %.47 to %Token.560247*
  ret %Token.560247* %.48

.3.endif.endif:                                   ; preds = %.3.endif
  %.52 = load i8, i8* %.9, align 1
  %.53 = icmp eq i8 %.52, 48
  %.56 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.57 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.56, i64 0, i32 1
  %.58 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.57, align 8
  %.59 = tail call i8 %.58(%Lexer.560265* nonnull %.1, i64 1)
  %.60 = icmp eq i8 %.59, 120
  %.61 = and i1 %.53, %.60
  %.65 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  br i1 %.61, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.66 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.65, i64 0, i32 16
  %.67 = load %IntToken.560249* (%Lexer.560265*, i64)*, %IntToken.560249* (%Lexer.560265*, i64)** %.66, align 8
  %.68 = tail call %IntToken.560249* %.67(%Lexer.560265* nonnull %.1, i64 16)
  %.69 = bitcast %IntToken.560249* %.68 to %Token.560247*
  ret %Token.560247* %.69

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.74 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.65, i64 0, i32 1
  %.75 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.74, align 8
  %.76 = tail call i8 %.75(%Lexer.560265* nonnull %.1, i64 1)
  %.78 = tail call i1 @is_number_char(i8 %.76)
  %.80 = icmp eq i8 %.76, 46
  %.81 = or i1 %.78, %.80
  %.84 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.85 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.84, i64 0, i32 0
  %.86 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.85, align 8
  %.87 = tail call i1 %.86(%Lexer.560265* nonnull %.1)
  %.88 = xor i1 %.87, true
  %.89 = and i1 %.81, %.88
  br i1 %.89, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3.endif.endif.endif, %while.entry.endif
  %is_float.0 = phi i1 [ %spec.select, %while.entry.endif ], [ false, %.3.endif.endif.endif ]
  %length.0 = phi i64 [ %.116, %while.entry.endif ], [ 1, %.3.endif.endif.endif ]
  %next_char.0 = phi i8 [ %.129, %while.entry.endif ], [ %.76, %.3.endif.endif.endif ]
  %.92 = icmp eq i8 %next_char.0, 46
  %.96 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.97 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.96, i64 0, i32 1
  %.98 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.97, align 8
  %.99 = tail call i8 %.98(%Lexer.560265* nonnull %.1, i64 2)
  %.100 = tail call i1 @is_number_char(i8 %.99)
  %.101 = xor i1 %.100, true
  %.102 = or i1 %is_float.0, %.101
  %.103 = and i1 %.92, %.102
  br i1 %.103, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3.endif.endif.endif
  %is_float.1 = phi i1 [ false, %.3.endif.endif.endif ], [ %is_float.0, %while.entry ], [ %spec.select, %while.entry.endif ]
  %length.1 = phi i64 [ 1, %.3.endif.endif.endif ], [ %length.0, %while.entry ], [ %.116, %while.entry.endif ]
  %.146 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.147 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.146, i64 0, i32 3
  %.148 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.147, align 8
  %.150 = tail call %FloRange.560223* %.148(%Lexer.560265* nonnull %.1, i64 %length.1)
  %.153 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 2
  %.154 = load %string.560217*, %string.560217** %.153, align 8
  %.155 = getelementptr inbounds %string.560217, %string.560217* %.154, i64 0, i32 0
  %.156 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.155, align 8
  %.157 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.156, i64 0, i32 7
  %.158 = load %string.560217* (%string.560217*, i64, i64)*, %string.560217* (%string.560217*, i64, i64)** %.157, align 8
  %.160 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.150, i64 0, i32 1
  %.161 = load i64, i64* %.160, align 8
  %.163 = tail call %string.560217* %.158(%string.560217* %.154, i64 %.161, i64 %length.1)
  %.168 = getelementptr inbounds %string.560217, %string.560217* %.163, i64 0, i32 0
  %.169 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.168, align 8
  %.170 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.169, i64 0, i32 11
  %.171 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.170, align 8
  %.172 = tail call i8* %.171(%string.560217* %.163)
  br i1 %is_float.1, label %true_block, label %false_block

while.entry.endif:                                ; preds = %while.entry
  %.108 = load i8, i8* %.9, align 1
  %.109 = icmp eq i8 %.108, 46
  %spec.select = or i1 %is_float.0, %.109
  %.116 = add i64 %length.0, 1
  %.120 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.121 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.120, i64 0, i32 2
  %.122 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.121, align 8
  tail call void %.122(%Lexer.560265* nonnull %.1)
  %.126 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.127 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.126, i64 0, i32 1
  %.128 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.127, align 8
  %.129 = tail call i8 %.128(%Lexer.560265* nonnull %.1, i64 1)
  %.131 = tail call i1 @is_number_char(i8 %.129)
  %.133 = icmp eq i8 %.129, 46
  %.134 = or i1 %.131, %.133
  %.137 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.13, align 8
  %.138 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.137, i64 0, i32 0
  %.139 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.138, align 8
  %.140 = tail call i1 %.139(%Lexer.560265* nonnull %.1)
  %.141 = xor i1 %.140, true
  %.142 = and i1 %.134, %.141
  br i1 %.142, label %while.entry, label %while.exit

true_block:                                       ; preds = %while.exit
  %.173 = tail call double @atof(i8* %.172)
  %.175 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.176 = bitcast i8* %.175 to %FloatToken.560251*
  %.177 = bitcast i8* %.175 to %FloatToken_vtable_ty.560252**
  store %FloatToken_vtable_ty.560252* @FloatToken_vtable_data, %FloatToken_vtable_ty.560252** %.177, align 8
  tail call void @FloatToken_constructor(%FloatToken.560251* %.176, double %.173, %FloRange.560223* %.150)
  br label %end

false_block:                                      ; preds = %while.exit
  %.188 = tail call i32 @atoi(i8* %.172)
  %.189 = zext i32 %.188 to i64
  %.191 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.192 = bitcast i8* %.191 to %IntToken.560249*
  %.193 = bitcast i8* %.191 to %IntToken_vtable_ty.560250**
  store %IntToken_vtable_ty.560250* @IntToken_vtable_data, %IntToken_vtable_ty.560250** %.193, align 8
  tail call void @IntToken_constructor(%IntToken.560249* %.192, i64 %.189, %FloRange.560223* %.150)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.198.in = phi i8* [ %.175, %true_block ], [ %.191, %false_block ]
  %.198 = bitcast i8* %.198.in to %Token.560247*
  ret %Token.560247* %.198
}

define noalias %Token.560247* @Lexer_identifier_token(%Lexer.560265* %.1) {
.3:
  %.7 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 4
  %.8 = load i64, i64* %.7, align 8
  %.11 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.12 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.13 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.12, i64 0, i32 1
  %.14 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.13, align 8
  %.15 = tail call i8 %.14(%Lexer.560265* %.1, i64 1)
  %.19 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.20 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.19, i64 0, i32 1
  %.21 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.20, align 8
  %.22 = tail call i8 %.21(%Lexer.560265* %.1, i64 1)
  %.24 = tail call i1 @is_identifier_char(i8 %.22)
  %.26 = tail call i1 @is_number_char(i8 %.22)
  %.27 = or i1 %.24, %.26
  %.30 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.31 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.30, i64 0, i32 0
  %.32 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.31, align 8
  %.33 = tail call i1 %.32(%Lexer.560265* %.1)
  %.34 = xor i1 %.33, true
  %.35 = and i1 %.27, %.34
  br i1 %.35, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %length.0 = phi i64 [ %.40, %while.entry ], [ 1, %.3 ]
  %.40 = add i64 %length.0, 1
  %.44 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.45 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.44, i64 0, i32 2
  %.46 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.45, align 8
  tail call void %.46(%Lexer.560265* nonnull %.1)
  %.50 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.51 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.50, i64 0, i32 1
  %.52 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.51, align 8
  %.53 = tail call i8 %.52(%Lexer.560265* nonnull %.1, i64 1)
  %.55 = tail call i1 @is_identifier_char(i8 %.53)
  %.57 = tail call i1 @is_number_char(i8 %.53)
  %.58 = or i1 %.55, %.57
  %.61 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.61, i64 0, i32 0
  %.63 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.62, align 8
  %.64 = tail call i1 %.63(%Lexer.560265* nonnull %.1)
  %.65 = xor i1 %.64, true
  %.66 = and i1 %.58, %.65
  br i1 %.66, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3
  %length.1 = phi i64 [ 1, %.3 ], [ %.40, %while.entry ]
  %.69 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 2
  %.70 = load %string.560217*, %string.560217** %.69, align 8
  %.71 = getelementptr inbounds %string.560217, %string.560217* %.70, i64 0, i32 0
  %.72 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.71, align 8
  %.73 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.72, i64 0, i32 7
  %.74 = load %string.560217* (%string.560217*, i64, i64)*, %string.560217* (%string.560217*, i64, i64)** %.73, align 8
  %.77 = tail call %string.560217* %.74(%string.560217* %.70, i64 %.8, i64 %length.1)
  %.81 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.82 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.81, i64 0, i32 3
  %.83 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.82, align 8
  %.85 = tail call %FloRange.560223* %.83(%Lexer.560265* nonnull %.1, i64 %length.1)
  %.89 = tail call i64 @string_to_kw_token(%string.560217* %.77)
  %.91.not = icmp eq i64 %.89, 0
  br i1 %.91.not, label %while.exit.endif, label %while.exit.if

while.exit.if:                                    ; preds = %while.exit
  %.95 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.96 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.95, i64 0, i32 1
  %.97 = load i8 (%Lexer.560265*, i64)*, i8 (%Lexer.560265*, i64)** %.96, align 8
  %.98 = tail call i8 %.97(%Lexer.560265* nonnull %.1, i64 1)
  %.99 = icmp eq i8 %.98, 61
  br i1 %.99, label %while.exit.if.if, label %while.exit.if.endif

while.exit.endif:                                 ; preds = %while.exit
  %.145 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.146 = bitcast i8* %.145 to %IdentifierToken.560263*
  %.147 = bitcast i8* %.145 to %IdentifierToken_vtable_ty.560264**
  store %IdentifierToken_vtable_ty.560264* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.560264** %.147, align 8
  tail call void @IdentifierToken_constructor(%IdentifierToken.560263* %.146, %string.560217* %.77, %FloRange.560223* %.85)
  %.150 = bitcast i8* %.145 to %Token.560247*
  ret %Token.560247* %.150

while.exit.if.if:                                 ; preds = %while.exit.if
  switch i64 %.89, label %while.exit.if.endif [
    i64 52, label %while.exit.if.if.endif.thread
    i64 53, label %while.exit.if.if.endif.if
    i64 54, label %while.exit.if.if.endif.endif.if
  ]

while.exit.if.endif:                              ; preds = %while.exit.if.if, %while.exit.if.if.endif.if, %while.exit.if.if.endif.thread, %while.exit.if.if.endif.endif.if, %while.exit.if
  %.135 = phi i64 [ 17, %while.exit.if.if.endif.if ], [ 16, %while.exit.if.if.endif.thread ], [ 18, %while.exit.if.if.endif.endif.if ], [ %.89, %while.exit.if ], [ %.89, %while.exit.if.if ]
  %.137 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.138 = bitcast i8* %.137 to %Token.560247*
  %.139 = bitcast i8* %.137 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.139, align 8
  tail call void @Token_constructor(%Token.560247* %.138, i64 %.135, %FloRange.560223* %.85)
  ret %Token.560247* %.138

while.exit.if.if.endif.thread:                    ; preds = %while.exit.if.if
  %.106 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.107 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.106, i64 0, i32 2
  %.108 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.107, align 8
  tail call void %.108(%Lexer.560265* nonnull %.1)
  br label %while.exit.if.endif

while.exit.if.if.endif.if:                        ; preds = %while.exit.if.if
  %.117 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.118 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.117, i64 0, i32 2
  %.119 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.118, align 8
  tail call void %.119(%Lexer.560265* nonnull %.1)
  br label %while.exit.if.endif

while.exit.if.if.endif.endif.if:                  ; preds = %while.exit.if.if
  %.128 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.11, align 8
  %.129 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.128, i64 0, i32 2
  %.130 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.129, align 8
  tail call void %.130(%Lexer.560265* nonnull %.1)
  br label %while.exit.if.endif
}

define noalias %StrToken.560255* @Lexer_string_token(%Lexer.560265* %.1) {
.3:
  %.8 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.10 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %"Array<Array<Token>>.560258"*
  %.12 = bitcast i8* %.10 to %"Array<Array<Token>>_vtable_ty.560261"**
  store %"Array<Array<Token>>_vtable_ty.560261"* @"Array<Array<Token>>_vtable_data", %"Array<Array<Token>>_vtable_ty.560261"** %.12, align 8
  %.14 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.14 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.16 to i64*
  store i64 0, i64* %1, align 8
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.18 to i64*
  store i64 8, i64* %2, align 8
  %.22 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Array<int>.560257"*
  %.26 = bitcast i8* %.24 to %"Array<int>_vtable_ty.560262"**
  store %"Array<int>_vtable_ty.560262"* @"Array<int>_vtable_data", %"Array<int>_vtable_ty.560262"** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 0, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 8, i64* %5, align 8
  %.37 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.38 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.39 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.38, i64 0, i32 2
  %.40 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.39, align 8
  tail call void %.40(%Lexer.560265* %.1)
  %.42 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.43 = bitcast i8* %.42 to %StringBuilder.560219*
  %.44 = bitcast i8* %.42 to %StringBuilder_vtable_ty.560220**
  store %StringBuilder_vtable_ty.560220* @StringBuilder_vtable_data, %StringBuilder_vtable_ty.560220** %.44, align 8
  tail call void @StringBuilder_constructor(%StringBuilder.560219* %.43, i64 1)
  %.50 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.51 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.50, i64 0, i32 0
  %.52 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.51, align 8
  %.53 = tail call i1 %.52(%Lexer.560265* %.1)
  br i1 %.53, label %while.exit, label %while.entry.preheader

while.entry.preheader:                            ; preds = %.3
  %.57 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 1
  %.207 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 5
  %.210 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 6
  br label %while.entry.outer

while.entry.outer:                                ; preds = %while.entry.preheader, %while.entry.endif.endif
  %length.0.ph = phi i64 [ 2, %while.entry.preheader ], [ %.238, %while.entry.endif.endif ]
  %escape_next.0.ph = phi i1 [ false, %while.entry.preheader ], [ %.243, %while.entry.endif.endif ]
  %.585 = load i8, i8* %.57, align 1
  %.596 = icmp eq i8 %.585, 34
  %.61 = xor i1 %escape_next.0.ph, true
  %.627 = and i1 %.596, %.61
  br i1 %.627, label %while.exit, label %while.entry.endif.lr.ph

while.entry.endif.lr.ph:                          ; preds = %while.entry.outer
  %.75 = add i64 %length.0.ph, -2
  br label %while.entry.endif

while.exit:                                       ; preds = %while.entry.outer, %while.entry.endif.endif, %while.entry.endif.if.endif, %.3
  %length.1 = phi i64 [ 2, %.3 ], [ %length.0.ph, %while.entry.endif.if.endif ], [ %length.0.ph, %while.entry.outer ], [ %.238, %while.entry.endif.endif ]
  %.270 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.271 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.270, i64 0, i32 3
  %.272 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.271, align 8
  %.274 = tail call %FloRange.560223* %.272(%Lexer.560265* nonnull %.1, i64 %length.1)
  %.278 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.44, align 8
  %.279 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.278, i64 0, i32 4
  %.280 = load %string.560217* (%StringBuilder.560219*)*, %string.560217* (%StringBuilder.560219*)** %.279, align 8
  %.281 = tail call %string.560217* %.280(%StringBuilder.560219* %.43)
  %.282 = tail call %string.560217* @unescape(%string.560217* %.281)
  %.288 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.289 = bitcast i8* %.288 to %StrToken.560255*
  %.290 = bitcast i8* %.288 to %StrToken_vtable_ty.560256**
  store %StrToken_vtable_ty.560256* @StrToken_vtable_data, %StrToken_vtable_ty.560256** %.290, align 8
  tail call void @StrToken_constructor(%StrToken.560255* %.289, %"Array<Array<Token>>.560258"* %.11, %"Array<int>.560257"* %.25, %string.560217* %.282, %FloRange.560223* %.274)
  ret %StrToken.560255* %.289

while.entry.endif:                                ; preds = %while.entry.endif.lr.ph, %while.entry.endif.if.endif
  %.588 = phi i8 [ %.585, %while.entry.endif.lr.ph ], [ %.58, %while.entry.endif.if.endif ]
  %.68 = icmp eq i8 %.588, 36
  %.71 = and i1 %.68, %.61
  br i1 %.71, label %while.entry.endif.if, label %while.entry.endif.endif

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.77 = load %"Array<int>_vtable_ty.560262"*, %"Array<int>_vtable_ty.560262"** %.26, align 8
  %.78 = getelementptr inbounds %"Array<int>_vtable_ty.560262", %"Array<int>_vtable_ty.560262"* %.77, i64 0, i32 2
  %.79 = load void (%"Array<int>.560257"*, i64)*, void (%"Array<int>.560257"*, i64)** %.78, align 8
  tail call void %.79(%"Array<int>.560257"* %.25, i64 %.75)
  %.83 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.84 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.83, i64 0, i32 2
  %.85 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.84, align 8
  tail call void %.85(%Lexer.560265* nonnull %.1)
  %.88 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.90 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.92 = bitcast i8* %.90 to %"Array<Token>_vtable_ty.560260"**
  store %"Array<Token>_vtable_ty.560260"* @"Array<Token>_vtable_data", %"Array<Token>_vtable_ty.560260"** %.92, align 8
  %.94 = getelementptr inbounds i8, i8* %.90, i64 8
  %6 = bitcast i8* %.94 to i8**
  store i8* %.88, i8** %6, align 8
  %.96 = getelementptr inbounds i8, i8* %.90, i64 16
  %7 = bitcast i8* %.96 to i64*
  store i64 0, i64* %7, align 8
  %.98 = getelementptr inbounds i8, i8* %.90, i64 24
  %8 = bitcast i8* %.98 to i64*
  store i64 8, i64* %8, align 8
  %.104 = load i8, i8* %.57, align 1
  %.105 = icmp eq i8 %.104, 40
  %9 = bitcast i8* %.90 to %"Array<Token>.560259"*
  %.109 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  br i1 %.105, label %while.entry.endif.if.if, label %while.entry.endif.if.else

while.entry.endif.endif:                          ; preds = %while.entry.endif
  %.238 = add i64 %length.0.ph, 1
  %.243 = icmp eq i8 %.588, 92
  %.247 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.44, align 8
  %.248 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.247, i64 0, i32 3
  %.249 = load void (%StringBuilder.560219*, i8)*, void (%StringBuilder.560219*, i8)** %.248, align 8
  tail call void %.249(%StringBuilder.560219* %.43, i8 %.588)
  %.256 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.257 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.256, i64 0, i32 2
  %.258 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.257, align 8
  tail call void %.258(%Lexer.560265* nonnull %.1)
  %.262 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.263 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.262, i64 0, i32 0
  %.264 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.263, align 8
  %.265 = tail call i1 %.264(%Lexer.560265* nonnull %.1)
  br i1 %.265, label %while.exit, label %while.entry.outer

while.entry.endif.if.if:                          ; preds = %while.entry.endif.if
  %.110 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.109, i64 0, i32 2
  %.111 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.110, align 8
  tail call void %.111(%Lexer.560265* nonnull %.1)
  %.115 = load i8, i8* %.57, align 1
  %.116 = icmp ne i8 %.115, 41
  %.122 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.123 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.122, i64 0, i32 0
  %.124 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.123, align 8
  %.125 = tail call i1 %.124(%Lexer.560265* nonnull %.1)
  %.126 = xor i1 %.125, true
  %.127 = and i1 %.116, %.126
  br i1 %.127, label %while.entry.1.preheader, label %while.entry.endif.if.endif

while.entry.1.preheader:                          ; preds = %while.entry.endif.if.if
  %.158 = bitcast i8* %.90 to %"Array<Token>_vtable_ty.560260"**
  br label %while.entry.1

while.entry.endif.if.else:                        ; preds = %while.entry.endif.if
  %.190 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.109, i64 0, i32 21
  %.191 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.190, align 8
  %.192 = tail call %Token.560247* %.191(%Lexer.560265* nonnull %.1)
  %.193 = bitcast i8* %.90 to %"Array<Token>_vtable_ty.560260"**
  %.194 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.193, align 8
  %.195 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.194, i64 0, i32 2
  %.196 = load void (%"Array<Token>.560259"*, %Token.560247*)*, void (%"Array<Token>.560259"*, %Token.560247*)** %.195, align 8
  tail call void %.196(%"Array<Token>.560259"* %9, %Token.560247* %.192)
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif:                       ; preds = %while.entry.1.endif.endif, %while.entry.endif.if.if, %while.entry.endif.if.else
  %.201 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.202 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.201, i64 0, i32 2
  %.203 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.202, align 8
  tail call void %.203(%Lexer.560265* nonnull %.1)
  %.208 = load i64, i64* %.207, align 8
  %.211 = load i64, i64* %.210, align 8
  %.212 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.213 = bitcast i8* %.212 to %FloRange.560223*
  %.214 = bitcast i8* %.212 to %FloRange_vtable_ty.560224**
  store %FloRange_vtable_ty.560224* @FloRange_vtable_data, %FloRange_vtable_ty.560224** %.214, align 8
  tail call void @FloRange_constructor(%FloRange.560223* %.213, i64 0, i64 0, i64 %.208, i64 %.211)
  %.217 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.218 = bitcast i8* %.217 to %Token.560247*
  %.219 = bitcast i8* %.217 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.219, align 8
  tail call void @Token_constructor(%Token.560247* %.218, i64 44, %FloRange.560223* %.213)
  %.222 = bitcast i8* %.90 to %"Array<Token>_vtable_ty.560260"**
  %.223 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.222, align 8
  %.224 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.223, i64 0, i32 2
  %.225 = load void (%"Array<Token>.560259"*, %Token.560247*)*, void (%"Array<Token>.560259"*, %Token.560247*)** %.224, align 8
  tail call void %.225(%"Array<Token>.560259"* %9, %Token.560247* %.218)
  %.230 = load %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Array<Token>>_vtable_ty.560261"** %.12, align 8
  %.231 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.560261", %"Array<Array<Token>>_vtable_ty.560261"* %.230, i64 0, i32 2
  %.232 = load void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)*, void (%"Array<Array<Token>>.560258"*, %"Array<Token>.560259"*)** %.231, align 8
  tail call void %.232(%"Array<Array<Token>>.560258"* %.11, %"Array<Token>.560259"* %9)
  %.58 = load i8, i8* %.57, align 1
  %.59 = icmp eq i8 %.58, 34
  br i1 %.59, label %while.exit, label %while.entry.endif

while.entry.1:                                    ; preds = %while.entry.1.preheader, %while.entry.1.endif.endif
  %.17310 = phi i64 [ 0, %while.entry.1.preheader ], [ %.17311, %while.entry.1.endif.endif ]
  %.131 = load i8, i8* %.57, align 1
  switch i8 %.131, label %while.entry.1.endif.endif [
    i8 40, label %while.entry.1.endif.thread
    i8 41, label %while.entry.1.endif.if
  ]

while.entry.1.endif.thread:                       ; preds = %while.entry.1
  %.137 = add i64 %.17310, 1
  br label %while.entry.1.endif.endif

while.entry.1.endif.if:                           ; preds = %while.entry.1
  %.148 = add i64 %.17310, -1
  br label %while.entry.1.endif.endif

while.entry.1.endif.endif:                        ; preds = %while.entry.1, %while.entry.1.endif.thread, %while.entry.1.endif.if
  %.17311 = phi i64 [ %.17310, %while.entry.1 ], [ %.137, %while.entry.1.endif.thread ], [ %.148, %while.entry.1.endif.if ]
  %.154 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.155 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.154, i64 0, i32 21
  %.156 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.155, align 8
  %.157 = tail call %Token.560247* %.156(%Lexer.560265* nonnull %.1)
  %.159 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.158, align 8
  %.160 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.159, i64 0, i32 2
  %.161 = load void (%"Array<Token>.560259"*, %Token.560247*)*, void (%"Array<Token>.560259"*, %Token.560247*)** %.160, align 8
  tail call void %.161(%"Array<Token>.560259"* %9, %Token.560247* %.157)
  %.165 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.166 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.165, i64 0, i32 2
  %.167 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.166, align 8
  tail call void %.167(%Lexer.560265* nonnull %.1)
  %.171 = load i8, i8* %.57, align 1
  %.172 = icmp ne i8 %.171, 41
  %.174 = icmp ne i64 %.17311, 0
  %.175 = or i1 %.172, %.174
  %.178 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.37, align 8
  %.179 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.178, i64 0, i32 0
  %.180 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.179, align 8
  %.181 = tail call i1 %.180(%Lexer.560265* nonnull %.1)
  %.182 = xor i1 %.181, true
  %.183 = and i1 %.175, %.182
  br i1 %.183, label %while.entry.1, label %while.entry.endif.if.endif
}

define noalias %CharToken.560253* @Lexer_char_token(%Lexer.560265* %.1) {
.3:
  %.7 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.8 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.7, align 8
  %.9 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.8, i64 0, i32 2
  %.10 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.9, align 8
  tail call void %.10(%Lexer.560265* %.1)
  %.13 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 1
  %.14 = load i8, i8* %.13, align 1
  %.19 = icmp eq i8 %.14, 92
  br i1 %.19, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.7, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.23, i64 0, i32 2
  %.25 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.24, align 8
  tail call void %.25(%Lexer.560265* nonnull %.1)
  %.29 = load i8, i8* %.13, align 1
  %.30 = tail call i8 @get_escape_char(i8 %.29)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %length.0 = phi i64 [ 5, %.3.if ], [ 3, %.3 ]
  %value.0 = phi i8 [ %.30, %.3.if ], [ %.14, %.3 ]
  %.38 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.7, align 8
  %.39 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.38, i64 0, i32 2
  %.40 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.39, align 8
  tail call void %.40(%Lexer.560265* nonnull %.1)
  %.45 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.7, align 8
  %.46 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.45, i64 0, i32 3
  %.47 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.46, align 8
  %.49 = tail call %FloRange.560223* %.47(%Lexer.560265* nonnull %.1, i64 %length.0)
  %.50 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %CharToken.560253*
  %.52 = bitcast i8* %.50 to %CharToken_vtable_ty.560254**
  store %CharToken_vtable_ty.560254* @CharToken_vtable_data, %CharToken_vtable_ty.560254** %.52, align 8
  tail call void @CharToken_constructor(%CharToken.560253* %.51, i8 %value.0, %FloRange.560223* %.49)
  ret %CharToken.560253* %.51
}

define %Token.560247* @Lexer_lex_token(%Lexer.560265* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 1
  %.7 = load i8, i8* %.6, align 1
  switch i8 %.7, label %.3.endif [
    i8 32, label %.3.if
    i8 9, label %.3.if
  ]

.3.if:                                            ; preds = %.3, %.3
  %.20 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.21 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.20, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.21, i64 0, i32 2
  %.23 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.22, align 8
  tail call void %.23(%Lexer.560265* nonnull %.1)
  %.27 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.20, align 8
  %.28 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.27, i64 0, i32 21
  %.29 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.28, align 8
  %.30 = tail call %Token.560247* %.29(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.30

.3.endif:                                         ; preds = %.3
  %.33 = tail call i1 @is_identifier_char(i8 %.7)
  br i1 %.33, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.36 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.37 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.36, align 8
  %.38 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.37, i64 0, i32 18
  %.39 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.38, align 8
  %.40 = tail call %Token.560247* %.39(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.40

.3.endif.endif:                                   ; preds = %.3.endif
  %.43 = icmp eq i8 %.7, 34
  br i1 %.43, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.46 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.47 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.46, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.47, i64 0, i32 19
  %.49 = load %StrToken.560255* (%Lexer.560265*)*, %StrToken.560255* (%Lexer.560265*)** %.48, align 8
  %.50 = tail call %StrToken.560255* %.49(%Lexer.560265* nonnull %.1)
  %.51 = bitcast %StrToken.560255* %.50 to %Token.560247*
  ret %Token.560247* %.51

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.54 = tail call i1 @is_number_char(i8 %.7)
  br i1 %.54, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.57 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.58 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.57, align 8
  %.59 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.58, i64 0, i32 17
  %.60 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.59, align 8
  %.61 = tail call %Token.560247* %.60(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.61

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  switch i8 %.7, label %.3.endif.endif.endif.endi...endif.4.endif.endif.endif [
    i8 58, label %.3.endif.endif.endif.endif.if
    i8 59, label %.3.endif.endif.endif.endif.endif.if
    i8 44, label %.3.endif.endif.endif.endif.endif.endif.if
    i8 43, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i8 45, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i8 42, label %.3.endif.endif.endif.endi...if
    i8 37, label %.3.endif.endif.endif.endi...endif.if
    i8 94, label %.3.endif.endif.endif.endi...endif.endif.if
    i8 47, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i8 40, label %.3.endif.endif.endif.endi...if.1
    i8 41, label %.3.endif.endif.endif.endi...endif.1.if
    i8 123, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i8 125, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i8 91, label %.3.endif.endif.endif.endi...if.2
    i8 93, label %.3.endif.endif.endif.endi...endif.2.if
    i8 13, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i8 10, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i8 39, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i8 63, label %.3.endif.endif.endif.endi...if.3
    i8 38, label %.3.endif.endif.endif.endi...endif.3.if
    i8 61, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i8 33, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i8 62, label %.3.endif.endif.endif.endi...if.4
    i8 60, label %.3.endif.endif.endif.endi...endif.4.if
    i8 46, label %.3.endif.endif.endif.endi...endif.4.endif.if
    i8 0, label %.3.endif.endif.endif.endi...endif.4.endif.endif.if
  ]

.3.endif.endif.endif.endif.if:                    ; preds = %.3.endif.endif.endif.endif
  %.67 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.68 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.67, align 8
  %.69 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.68, i64 0, i32 3
  %.70 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.69, align 8
  %.71 = tail call %FloRange.560223* %.70(%Lexer.560265* nonnull %.1, i64 1)
  %.72 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.73 = bitcast i8* %.72 to %Token.560247*
  %.74 = bitcast i8* %.72 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.74, align 8
  tail call void @Token_constructor(%Token.560247* %.73, i64 1, %FloRange.560223* %.71)
  ret %Token.560247* %.73

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3.endif.endif.endif.endif
  %.82 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.83 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.82, align 8
  %.84 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.83, i64 0, i32 3
  %.85 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.84, align 8
  %.86 = tail call %FloRange.560223* %.85(%Lexer.560265* nonnull %.1, i64 1)
  %.87 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.88 = bitcast i8* %.87 to %Token.560247*
  %.89 = bitcast i8* %.87 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.89, align 8
  tail call void @Token_constructor(%Token.560247* %.88, i64 2, %FloRange.560223* %.86)
  ret %Token.560247* %.88

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3.endif.endif.endif.endif
  %.97 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.98 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.97, align 8
  %.99 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.98, i64 0, i32 3
  %.100 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.99, align 8
  %.101 = tail call %FloRange.560223* %.100(%Lexer.560265* nonnull %.1, i64 1)
  %.102 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.103 = bitcast i8* %.102 to %Token.560247*
  %.104 = bitcast i8* %.102 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.104, align 8
  tail call void @Token_constructor(%Token.560247* %.103, i64 3, %FloRange.560223* %.101)
  ret %Token.560247* %.103

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3.endif.endif.endif.endif
  %.112 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.113 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.112, align 8
  %.114 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.113, i64 0, i32 4
  %.115 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.114, align 8
  %.116 = tail call %Token.560247* %.115(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.116

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.122 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.123 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.122, align 8
  %.124 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.123, i64 0, i32 6
  %.125 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.124, align 8
  %.126 = tail call %Token.560247* %.125(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.126

.3.endif.endif.endif.endi...if:                   ; preds = %.3.endif.endif.endif.endif
  %.132 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.133 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.132, align 8
  %.134 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.133, i64 0, i32 7
  %.135 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.134, align 8
  %.136 = tail call %Token.560247* %.135(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.136

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3.endif.endif.endif.endif
  %.142 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.143 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.142, align 8
  %.144 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.143, i64 0, i32 8
  %.145 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.144, align 8
  %.146 = tail call %Token.560247* %.145(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.146

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3.endif.endif.endif.endif
  %.152 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.153 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.152, align 8
  %.154 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.153, i64 0, i32 9
  %.155 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.154, align 8
  %.156 = tail call %Token.560247* %.155(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.156

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.162 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.163 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.162, align 8
  %.164 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.163, i64 0, i32 5
  %.165 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.164, align 8
  %.166 = tail call i1 %.165(%Lexer.560265* nonnull %.1)
  %.170 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.162, align 8
  br i1 %.166, label %.3.endif.endif.endif.endi...endif.endif.endif.if.if, label %.3.endif.endif.endif.endi...endif.endif.endif.if.endif

.3.endif.endif.endif.endi...endif.endif.endif.if.if: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.if
  %.171 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.170, i64 0, i32 2
  %.172 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.171, align 8
  tail call void %.172(%Lexer.560265* nonnull %.1)
  %.176 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.162, align 8
  %.177 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.176, i64 0, i32 21
  %.178 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.177, align 8
  %.179 = tail call %Token.560247* %.178(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.179

.3.endif.endif.endif.endi...endif.endif.endif.if.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.if
  %.184 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.170, i64 0, i32 10
  %.185 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.184, align 8
  %.186 = tail call %Token.560247* %.185(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.186

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3.endif.endif.endif.endif
  %.192 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.193 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.192, align 8
  %.194 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.193, i64 0, i32 3
  %.195 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.194, align 8
  %.196 = tail call %FloRange.560223* %.195(%Lexer.560265* nonnull %.1, i64 1)
  %.197 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.198 = bitcast i8* %.197 to %Token.560247*
  %.199 = bitcast i8* %.197 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.199, align 8
  tail call void @Token_constructor(%Token.560247* %.198, i64 23, %FloRange.560223* %.196)
  ret %Token.560247* %.198

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3.endif.endif.endif.endif
  %.207 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.208 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.207, align 8
  %.209 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.208, i64 0, i32 3
  %.210 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.209, align 8
  %.211 = tail call %FloRange.560223* %.210(%Lexer.560265* nonnull %.1, i64 1)
  %.212 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.213 = bitcast i8* %.212 to %Token.560247*
  %.214 = bitcast i8* %.212 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.214, align 8
  tail call void @Token_constructor(%Token.560247* %.213, i64 24, %FloRange.560223* %.211)
  ret %Token.560247* %.213

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.222 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.223 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.222, align 8
  %.224 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.223, i64 0, i32 3
  %.225 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.224, align 8
  %.226 = tail call %FloRange.560223* %.225(%Lexer.560265* nonnull %.1, i64 1)
  %.227 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.228 = bitcast i8* %.227 to %Token.560247*
  %.229 = bitcast i8* %.227 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.229, align 8
  tail call void @Token_constructor(%Token.560247* %.228, i64 25, %FloRange.560223* %.226)
  ret %Token.560247* %.228

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.237 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.238 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.237, align 8
  %.239 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.238, i64 0, i32 3
  %.240 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.239, align 8
  %.241 = tail call %FloRange.560223* %.240(%Lexer.560265* nonnull %.1, i64 1)
  %.242 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.243 = bitcast i8* %.242 to %Token.560247*
  %.244 = bitcast i8* %.242 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.244, align 8
  tail call void @Token_constructor(%Token.560247* %.243, i64 26, %FloRange.560223* %.241)
  ret %Token.560247* %.243

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3.endif.endif.endif.endif
  %.252 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.253 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.252, align 8
  %.254 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.253, i64 0, i32 3
  %.255 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.254, align 8
  %.256 = tail call %FloRange.560223* %.255(%Lexer.560265* nonnull %.1, i64 1)
  %.257 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.258 = bitcast i8* %.257 to %Token.560247*
  %.259 = bitcast i8* %.257 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.259, align 8
  tail call void @Token_constructor(%Token.560247* %.258, i64 27, %FloRange.560223* %.256)
  ret %Token.560247* %.258

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3.endif.endif.endif.endif
  %.267 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.268 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.267, align 8
  %.269 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.268, i64 0, i32 3
  %.270 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.269, align 8
  %.271 = tail call %FloRange.560223* %.270(%Lexer.560265* nonnull %.1, i64 1)
  %.272 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.273 = bitcast i8* %.272 to %Token.560247*
  %.274 = bitcast i8* %.272 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.274, align 8
  tail call void @Token_constructor(%Token.560247* %.273, i64 28, %FloRange.560223* %.271)
  ret %Token.560247* %.273

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3.endif.endif.endif.endif, %.3.endif.endif.endif.endif
  %.285 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.286 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.285, align 8
  %.287 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.286, i64 0, i32 3
  %.288 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.287, align 8
  %.289 = tail call %FloRange.560223* %.288(%Lexer.560265* nonnull %.1, i64 1)
  %.290 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.291 = bitcast i8* %.290 to %Token.560247*
  %.292 = bitcast i8* %.290 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.292, align 8
  tail call void @Token_constructor(%Token.560247* %.291, i64 31, %FloRange.560223* %.289)
  ret %Token.560247* %.291

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.300 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.301 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.300, align 8
  %.302 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.301, i64 0, i32 20
  %.303 = load %CharToken.560253* (%Lexer.560265*)*, %CharToken.560253* (%Lexer.560265*)** %.302, align 8
  %.304 = tail call %CharToken.560253* %.303(%Lexer.560265* nonnull %.1)
  %.305 = bitcast %CharToken.560253* %.304 to %Token.560247*
  ret %Token.560247* %.305

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3.endif.endif.endif.endif
  %.311 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.312 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.311, align 8
  %.313 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.312, i64 0, i32 3
  %.314 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.313, align 8
  %.315 = tail call %FloRange.560223* %.314(%Lexer.560265* nonnull %.1, i64 1)
  %.316 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.317 = bitcast i8* %.316 to %Token.560247*
  %.318 = bitcast i8* %.316 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.318, align 8
  tail call void @Token_constructor(%Token.560247* %.317, i64 34, %FloRange.560223* %.315)
  ret %Token.560247* %.317

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3.endif.endif.endif.endif
  %.326 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.327 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.326, align 8
  %.328 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.327, i64 0, i32 3
  %.329 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.328, align 8
  %.330 = tail call %FloRange.560223* %.329(%Lexer.560265* nonnull %.1, i64 1)
  %.331 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.332 = bitcast i8* %.331 to %Token.560247*
  %.333 = bitcast i8* %.331 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.333, align 8
  tail call void @Token_constructor(%Token.560247* %.332, i64 35, %FloRange.560223* %.330)
  ret %Token.560247* %.332

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.341 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.342 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.341, align 8
  %.343 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.342, i64 0, i32 11
  %.344 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.343, align 8
  %.345 = tail call %Token.560247* %.344(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.345

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.351 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.352 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.351, align 8
  %.353 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.352, i64 0, i32 12
  %.354 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.353, align 8
  %.355 = tail call %Token.560247* %.354(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.355

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3.endif.endif.endif.endif
  %.361 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.362 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.361, align 8
  %.363 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.362, i64 0, i32 13
  %.364 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.363, align 8
  %.365 = tail call %Token.560247* %.364(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.365

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3.endif.endif.endif.endif
  %.371 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.372 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.371, align 8
  %.373 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.372, i64 0, i32 14
  %.374 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.373, align 8
  %.375 = tail call %Token.560247* %.374(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.375

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.381 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.382 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.381, align 8
  %.383 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.382, i64 0, i32 15
  %.384 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.383, align 8
  %.385 = tail call %Token.560247* %.384(%Lexer.560265* nonnull %.1)
  ret %Token.560247* %.385

.3.endif.endif.endif.endi...endif.4.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.391 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 5
  %.392 = load i64, i64* %.391, align 8
  %.394 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 6
  %.395 = load i64, i64* %.394, align 8
  %.396 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.397 = bitcast i8* %.396 to %FloRange.560223*
  %.398 = bitcast i8* %.396 to %FloRange_vtable_ty.560224**
  store %FloRange_vtable_ty.560224* @FloRange_vtable_data, %FloRange_vtable_ty.560224** %.398, align 8
  tail call void @FloRange_constructor(%FloRange.560223* %.397, i64 0, i64 0, i64 %.392, i64 %.395)
  %.401 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.402 = bitcast i8* %.401 to %Token.560247*
  %.403 = bitcast i8* %.401 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.403, align 8
  tail call void @Token_constructor(%Token.560247* %.402, i64 44, %FloRange.560223* %.397)
  ret %Token.560247* %.402

.3.endif.endif.endif.endi...endif.4.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif
  %.408 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 3
  %.409 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.408, align 8
  %.411 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 2
  %.412 = load %string.560217*, %string.560217** %.411, align 8
  %.413 = getelementptr inbounds %string.560217, %string.560217* %.412, i64 0, i32 0
  %.414 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.413, align 8
  %.415 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.414, i64 0, i32 7
  %.416 = load %string.560217* (%string.560217*, i64, i64)*, %string.560217* (%string.560217*, i64, i64)** %.415, align 8
  %.418 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 4
  %.419 = load i64, i64* %.418, align 8
  %.420 = tail call %string.560217* %.416(%string.560217* %.412, i64 %.419, i64 1)
  %.421 = getelementptr inbounds %string.560217, %string.560217* %.420, i64 0, i32 0
  %.422 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.421, align 8
  %.423 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.422, i64 0, i32 11
  %.424 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.423, align 8
  %.425 = tail call i8* %.424(%string.560217* %.420)
  %.427 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.59, i64 0, i64 0), i8* %.425)
  %.428 = add i64 %.427, 1
  %.430 = tail call i8* @malloc(i64 %.428)
  %.431 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.430, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.59, i64 0, i64 0), i8* %.425)
  %.432 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.433 = bitcast i8* %.432 to %string.560217*
  %.434 = bitcast i8* %.432 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.434, align 8
  %.436 = getelementptr inbounds i8, i8* %.432, i64 8
  %0 = bitcast i8* %.436 to i8**
  store i8* %.430, i8** %0, align 8
  %.438 = getelementptr inbounds i8, i8* %.432, i64 16
  %1 = bitcast i8* %.438 to i64*
  store i64 %.427, i64* %1, align 8
  %.440 = getelementptr inbounds i8, i8* %.432, i64 24
  %2 = bitcast i8* %.440 to i64*
  store i64 %.427, i64* %2, align 8
  %.443 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.444 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.443, align 8
  %.445 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.444, i64 0, i32 3
  %.446 = load %FloRange.560223* (%Lexer.560265*, i64)*, %FloRange.560223* (%Lexer.560265*, i64)** %.445, align 8
  %.447 = tail call %FloRange.560223* %.446(%Lexer.560265* nonnull %.1, i64 1)
  %.448 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.449 = bitcast i8* %.448 to %FloError.560225*
  %.450 = bitcast i8* %.448 to %FloError_vtable_ty.560226**
  store %FloError_vtable_ty.560226* @FloError_vtable_data, %FloError_vtable_ty.560226** %.450, align 8
  tail call void @FloError_constructor(%FloError.560225* %.449, i64 0, %string.560217* %.433, %FloRange.560223* %.447)
  %.453 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.409, i64 0, i32 0
  %.454 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.453, align 8
  %.455 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.454, i64 0, i32 2
  %.456 = load void (%"Array<FloError>.560238"*, %FloError.560225*)*, void (%"Array<FloError>.560238"*, %FloError.560225*)** %.455, align 8
  tail call void %.456(%"Array<FloError>.560238"* %.409, %FloError.560225* %.449)
  ret %Token.560247* null
}

define %"Array<Token>.560259"* @Lexer_tokenize(%Lexer.560265* %.1, %string.560217* %.2, %"Array<FloError>.560238"* %.3) {
.5:
  %.11 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 2
  store %string.560217* %.2, %string.560217** %.11, align 8
  %.15 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 3
  store %"Array<FloError>.560238"* %.3, %"Array<FloError>.560238"** %.15, align 8
  %.18 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 0
  %.19 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.18, align 8
  %.20 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.19, i64 0, i32 2
  %.21 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.20, align 8
  tail call void %.21(%Lexer.560265* %.1)
  %.24 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.26 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %"Array<Token>.560259"*
  %.28 = bitcast i8* %.26 to %"Array<Token>_vtable_ty.560260"**
  store %"Array<Token>_vtable_ty.560260"* @"Array<Token>_vtable_data", %"Array<Token>_vtable_ty.560260"** %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.26, i64 8
  %0 = bitcast i8* %.30 to i8**
  store i8* %.24, i8** %0, align 8
  %.32 = getelementptr inbounds i8, i8* %.26, i64 16
  %1 = bitcast i8* %.32 to i64*
  store i64 0, i64* %1, align 8
  %.34 = getelementptr inbounds i8, i8* %.26, i64 24
  %2 = bitcast i8* %.34 to i64*
  store i64 8, i64* %2, align 8
  %.39 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.18, align 8
  %.40 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.39, i64 0, i32 0
  %.41 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.40, align 8
  %.42 = tail call i1 %.41(%Lexer.560265* %.1)
  %.43 = xor i1 %.42, true
  %.46 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.15, align 8
  %.47 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.46, i64 0, i32 2
  %.48 = load i64, i64* %.47, align 8
  %.49 = icmp eq i64 %.48, 0
  %.50 = and i1 %.49, %.43
  br i1 %.50, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.5, %while.entry
  %.55 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.18, align 8
  %.56 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.55, i64 0, i32 21
  %.57 = load %Token.560247* (%Lexer.560265*)*, %Token.560247* (%Lexer.560265*)** %.56, align 8
  %.58 = tail call %Token.560247* %.57(%Lexer.560265* nonnull %.1)
  %.60 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.28, align 8
  %.61 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.60, i64 0, i32 2
  %.62 = load void (%"Array<Token>.560259"*, %Token.560247*)*, void (%"Array<Token>.560259"*, %Token.560247*)** %.61, align 8
  tail call void %.62(%"Array<Token>.560259"* %.27, %Token.560247* %.58)
  %.66 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.18, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.560265*)*, void (%Lexer.560265*)** %.67, align 8
  tail call void %.68(%Lexer.560265* nonnull %.1)
  %.72 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.18, align 8
  %.73 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.72, i64 0, i32 0
  %.74 = load i1 (%Lexer.560265*)*, i1 (%Lexer.560265*)** %.73, align 8
  %.75 = tail call i1 %.74(%Lexer.560265* nonnull %.1)
  %.76 = xor i1 %.75, true
  %.79 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.15, align 8
  %.80 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.79, i64 0, i32 2
  %.81 = load i64, i64* %.80, align 8
  %.82 = icmp eq i64 %.81, 0
  %.83 = and i1 %.82, %.76
  br i1 %.83, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.5
  %.87 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 5
  %.88 = load i64, i64* %.87, align 8
  %.90 = getelementptr inbounds %Lexer.560265, %Lexer.560265* %.1, i64 0, i32 6
  %.91 = load i64, i64* %.90, align 8
  %.92 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.93 = bitcast i8* %.92 to %FloRange.560223*
  %.94 = bitcast i8* %.92 to %FloRange_vtable_ty.560224**
  store %FloRange_vtable_ty.560224* @FloRange_vtable_data, %FloRange_vtable_ty.560224** %.94, align 8
  tail call void @FloRange_constructor(%FloRange.560223* %.93, i64 0, i64 0, i64 %.88, i64 %.91)
  %.97 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.98 = bitcast i8* %.97 to %Token.560247*
  %.99 = bitcast i8* %.97 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.99, align 8
  tail call void @Token_constructor(%Token.560247* %.98, i64 44, %FloRange.560223* %.93)
  %.103 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.28, align 8
  %.104 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.103, i64 0, i32 2
  %.105 = load void (%"Array<Token>.560259"*, %Token.560247*)*, void (%"Array<Token>.560259"*, %Token.560247*)** %.104, align 8
  tail call void %.105(%"Array<Token>.560259"* %.27, %Token.560247* %.98)
  ret %"Array<Token>.560259"* %.27
}

; Function Attrs: nofree nounwind readonly
declare double @atof(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
define noalias %string.560217* @token_str(i64 %.1) local_unnamed_addr #4 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.16.endif [
    i64 1, label %.3.if
    i64 2, label %.3.endif.if
    i64 3, label %.3.endif.endif.if
    i64 6, label %.3.endif.endif.endif.if
    i64 21, label %.3.endif.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.endif.if
    i64 22, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 23, label %.3.endif.endif.endif.endi...if
    i64 24, label %.3.endif.endif.endif.endi...endif.if
    i64 8, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 25, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 26, label %.3.endif.endif.endif.endi...if.1
    i64 27, label %.3.endif.endif.endif.endi...endif.1.if
    i64 28, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 29, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 30, label %.3.endif.endif.endif.endi...if.2
    i64 31, label %.3.endif.endif.endif.endi...endif.2.if
    i64 32, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i64 33, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i64 9, label %.3.endif.endif.endif.endi...if.3
    i64 34, label %.3.endif.endif.endif.endi...endif.3.if
    i64 35, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i64 36, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i64 37, label %.3.endif.endif.endif.endi...if.4
    i64 38, label %.3.endif.endif.endif.endi...endif.4.if
    i64 39, label %.3.endif.endif.endif.endi...endif.4.endif.if
    i64 40, label %.3.endif.endif.endif.endi...endif.4.endif.endif.if
    i64 41, label %.3.endif.endif.endif.endi...if.5
    i64 42, label %.3.endif.endif.endif.endi...endif.5.if
    i64 43, label %.3.endif.endif.endif.endi...endif.5.endif.if
    i64 44, label %.3.endif.endif.endif.endi...endif.5.endif.endif.if
    i64 45, label %.3.endif.endif.endif.endi...if.6
    i64 46, label %.3.endif.endif.endif.endi...endif.6.if
    i64 47, label %.3.endif.endif.endif.endi...endif.6.endif.if
    i64 48, label %.3.endif.endif.endif.endi...endif.6.endif.endif.if
    i64 49, label %.3.endif.endif.endif.endi...if.7
    i64 50, label %.3.endif.endif.endif.endi...endif.7.if
    i64 51, label %.3.endif.endif.endif.endi...endif.7.endif.if
    i64 52, label %.3.endif.endif.endif.endi...endif.7.endif.endif.if
    i64 53, label %.3.endif.endif.endif.endi...if.8
    i64 54, label %.3.endif.endif.endif.endi...endif.8.if
    i64 55, label %.3.endif.endif.endif.endi...endif.8.endif.if
    i64 57, label %.3.endif.endif.endif.endi...endif.8.endif.endif.if
    i64 58, label %.3.endif.endif.endif.endi...if.9
    i64 59, label %.3.endif.endif.endif.endi...endif.9.if
    i64 60, label %.3.endif.endif.endif.endi...endif.9.endif.if
    i64 61, label %.3.endif.endif.endif.endi...endif.9.endif.endif.if
    i64 62, label %.3.endif.endif.endif.endi...if.10
    i64 63, label %.3.endif.endif.endif.endi...endif.10.if
    i64 64, label %.3.endif.endif.endif.endi...endif.10.endif.if
    i64 65, label %.3.endif.endif.endif.endi...endif.10.endif.endif.if
    i64 66, label %.3.endif.endif.endif.endi...if.11
    i64 67, label %.3.endif.endif.endif.endi...endif.11.if
    i64 68, label %.3.endif.endif.endif.endi...endif.11.endif.if
    i64 69, label %.3.endif.endif.endif.endi...endif.11.endif.endif.if
    i64 70, label %.3.endif.endif.endif.endi...if.12
    i64 71, label %.3.endif.endif.endif.endi...endif.12.if
    i64 72, label %.3.endif.endif.endif.endi...endif.12.endif.if
    i64 73, label %.3.endif.endif.endif.endi...endif.12.endif.endif.if
    i64 74, label %.3.endif.endif.endif.endi...if.13
    i64 75, label %.3.endif.endif.endif.endi...endif.13.if
    i64 76, label %.3.endif.endif.endif.endi...endif.13.endif.if
    i64 77, label %.3.endif.endif.endif.endi...endif.13.endif.endif.if
    i64 78, label %.3.endif.endif.endif.endi...if.14
    i64 79, label %.3.endif.endif.endif.endi...endif.14.if
    i64 80, label %.3.endif.endif.endif.endi...endif.14.endif.if
    i64 81, label %.3.endif.endif.endif.endi...endif.14.endif.endif.if
    i64 82, label %.3.endif.endif.endif.endi...if.15
    i64 83, label %.3.endif.endif.endif.endi...endif.15.if
    i64 84, label %.3.endif.endif.endif.endi...endif.15.endif.if
    i64 85, label %.3.endif.endif.endif.endi...endif.15.endif.endif.if
    i64 86, label %.3.endif.endif.endif.endi...if.16
    i64 56, label %.3.endif.endif.endif.endi...endif.16.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.560217*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.9.repack, align 8
  %.9.repack223 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack223 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.60, i64 0, i64 0), i8** %0, align 8
  %.9.repack224 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack224 to i64*
  store i64 3, i64* %1, align 8
  %.9.repack225 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack225 to i64*
  store i64 3, i64* %2, align 8
  ret %string.560217* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.560217*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.16.repack, align 8
  %.16.repack220 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack220 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.61, i64 0, i64 0), i8** %3, align 8
  %.16.repack221 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack221 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack222 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack222 to i64*
  store i64 7, i64* %5, align 8
  ret %string.560217* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.560217*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.23.repack, align 8
  %.23.repack217 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack217 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.62, i64 0, i64 0), i8** %6, align 8
  %.23.repack218 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack218 to i64*
  store i64 5, i64* %7, align 8
  %.23.repack219 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack219 to i64*
  store i64 5, i64* %8, align 8
  ret %string.560217* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.560217*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.30.repack, align 8
  %.30.repack214 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack214 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.63, i64 0, i64 0), i8** %9, align 8
  %.30.repack215 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack215 to i64*
  store i64 4, i64* %10, align 8
  %.30.repack216 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack216 to i64*
  store i64 4, i64* %11, align 8
  ret %string.560217* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.560217*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.37.repack, align 8
  %.37.repack211 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack211 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.64, i64 0, i64 0), i8** %12, align 8
  %.37.repack212 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack212 to i64*
  store i64 9, i64* %13, align 8
  %.37.repack213 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack213 to i64*
  store i64 9, i64* %14, align 8
  ret %string.560217* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.560217*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.44.repack, align 8
  %.44.repack208 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack208 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.65, i64 0, i64 0), i8** %15, align 8
  %.44.repack209 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack209 to i64*
  store i64 5, i64* %16, align 8
  %.44.repack210 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack210 to i64*
  store i64 5, i64* %17, align 8
  ret %string.560217* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.560217*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.51.repack, align 8
  %.51.repack205 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack205 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.66, i64 0, i64 0), i8** %18, align 8
  %.51.repack206 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack206 to i64*
  store i64 11, i64* %19, align 8
  %.51.repack207 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack207 to i64*
  store i64 11, i64* %20, align 8
  ret %string.560217* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.560217*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.58.repack, align 8
  %.58.repack202 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack202 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.67, i64 0, i64 0), i8** %21, align 8
  %.58.repack203 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack203 to i64*
  store i64 4, i64* %22, align 8
  %.58.repack204 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack204 to i64*
  store i64 4, i64* %23, align 8
  ret %string.560217* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.560217*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.65.repack, align 8
  %.65.repack199 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack199 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.68, i64 0, i64 0), i8** %24, align 8
  %.65.repack200 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack200 to i64*
  store i64 3, i64* %25, align 8
  %.65.repack201 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack201 to i64*
  store i64 3, i64* %26, align 8
  ret %string.560217* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.560217*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.72.repack, align 8
  %.72.repack196 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack196 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.69, i64 0, i64 0), i8** %27, align 8
  %.72.repack197 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack197 to i64*
  store i64 4, i64* %28, align 8
  %.72.repack198 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack198 to i64*
  store i64 4, i64* %29, align 8
  ret %string.560217* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.560217*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.79.repack, align 8
  %.79.repack193 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack193 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.70, i64 0, i64 0), i8** %30, align 8
  %.79.repack194 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack194 to i64*
  store i64 4, i64* %31, align 8
  %.79.repack195 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack195 to i64*
  store i64 4, i64* %32, align 8
  ret %string.560217* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.560217*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.86.repack, align 8
  %.86.repack190 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack190 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.71, i64 0, i64 0), i8** %33, align 8
  %.86.repack191 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack191 to i64*
  store i64 3, i64* %34, align 8
  %.86.repack192 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack192 to i64*
  store i64 3, i64* %35, align 8
  ret %string.560217* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.560217*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.93.repack, align 8
  %.93.repack187 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack187 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.72, i64 0, i64 0), i8** %36, align 8
  %.93.repack188 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack188 to i64*
  store i64 6, i64* %37, align 8
  %.93.repack189 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack189 to i64*
  store i64 6, i64* %38, align 8
  ret %string.560217* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.560217*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.100.repack, align 8
  %.100.repack184 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack184 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.73, i64 0, i64 0), i8** %39, align 8
  %.100.repack185 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack185 to i64*
  store i64 6, i64* %40, align 8
  %.100.repack186 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack186 to i64*
  store i64 6, i64* %41, align 8
  ret %string.560217* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.560217*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.107.repack, align 8
  %.107.repack181 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack181 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.74, i64 0, i64 0), i8** %42, align 8
  %.107.repack182 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack182 to i64*
  store i64 8, i64* %43, align 8
  %.107.repack183 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack183 to i64*
  store i64 8, i64* %44, align 8
  ret %string.560217* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.560217*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.114.repack, align 8
  %.114.repack178 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack178 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.75, i64 0, i64 0), i8** %45, align 8
  %.114.repack179 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack179 to i64*
  store i64 8, i64* %46, align 8
  %.114.repack180 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack180 to i64*
  store i64 8, i64* %47, align 8
  ret %string.560217* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.560217*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.121.repack, align 8
  %.121.repack175 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack175 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.76, i64 0, i64 0), i8** %48, align 8
  %.121.repack176 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack176 to i64*
  store i64 3, i64* %49, align 8
  %.121.repack177 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack177 to i64*
  store i64 3, i64* %50, align 8
  ret %string.560217* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.560217*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.128.repack, align 8
  %.128.repack172 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack172 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.77, i64 0, i64 0), i8** %51, align 8
  %.128.repack173 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack173 to i64*
  store i64 5, i64* %52, align 8
  %.128.repack174 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack174 to i64*
  store i64 5, i64* %53, align 8
  ret %string.560217* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.560217*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.135.repack, align 8
  %.135.repack169 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack169 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.78, i64 0, i64 0), i8** %54, align 8
  %.135.repack170 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack170 to i64*
  store i64 2, i64* %55, align 8
  %.135.repack171 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack171 to i64*
  store i64 2, i64* %56, align 8
  ret %string.560217* %.135

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3
  %.141 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.142 = bitcast i8* %.141 to %string.560217*
  %.142.repack = bitcast i8* %.141 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.142.repack, align 8
  %.142.repack166 = getelementptr inbounds i8, i8* %.141, i64 8
  %57 = bitcast i8* %.142.repack166 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.79, i64 0, i64 0), i8** %57, align 8
  %.142.repack167 = getelementptr inbounds i8, i8* %.141, i64 16
  %58 = bitcast i8* %.142.repack167 to i64*
  store i64 3, i64* %58, align 8
  %.142.repack168 = getelementptr inbounds i8, i8* %.141, i64 24
  %59 = bitcast i8* %.142.repack168 to i64*
  store i64 3, i64* %59, align 8
  ret %string.560217* %.142

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3
  %.148 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.560217*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.149.repack, align 8
  %.149.repack163 = getelementptr inbounds i8, i8* %.148, i64 8
  %60 = bitcast i8* %.149.repack163 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.80, i64 0, i64 0), i8** %60, align 8
  %.149.repack164 = getelementptr inbounds i8, i8* %.148, i64 16
  %61 = bitcast i8* %.149.repack164 to i64*
  store i64 4, i64* %61, align 8
  %.149.repack165 = getelementptr inbounds i8, i8* %.148, i64 24
  %62 = bitcast i8* %.149.repack165 to i64*
  store i64 4, i64* %62, align 8
  ret %string.560217* %.149

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3
  %.155 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %string.560217*
  %.156.repack = bitcast i8* %.155 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.156.repack, align 8
  %.156.repack160 = getelementptr inbounds i8, i8* %.155, i64 8
  %63 = bitcast i8* %.156.repack160 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.81, i64 0, i64 0), i8** %63, align 8
  %.156.repack161 = getelementptr inbounds i8, i8* %.155, i64 16
  %64 = bitcast i8* %.156.repack161 to i64*
  store i64 3, i64* %64, align 8
  %.156.repack162 = getelementptr inbounds i8, i8* %.155, i64 24
  %65 = bitcast i8* %.156.repack162 to i64*
  store i64 3, i64* %65, align 8
  ret %string.560217* %.156

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3
  %.162 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.560217*
  %.163.repack = bitcast i8* %.162 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.163.repack, align 8
  %.163.repack157 = getelementptr inbounds i8, i8* %.162, i64 8
  %66 = bitcast i8* %.163.repack157 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.82, i64 0, i64 0), i8** %66, align 8
  %.163.repack158 = getelementptr inbounds i8, i8* %.162, i64 16
  %67 = bitcast i8* %.163.repack158 to i64*
  store i64 4, i64* %67, align 8
  %.163.repack159 = getelementptr inbounds i8, i8* %.162, i64 24
  %68 = bitcast i8* %.163.repack159 to i64*
  store i64 4, i64* %68, align 8
  ret %string.560217* %.163

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3
  %.169 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.560217*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.170.repack, align 8
  %.170.repack154 = getelementptr inbounds i8, i8* %.169, i64 8
  %69 = bitcast i8* %.170.repack154 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.83, i64 0, i64 0), i8** %69, align 8
  %.170.repack155 = getelementptr inbounds i8, i8* %.169, i64 16
  %70 = bitcast i8* %.170.repack155 to i64*
  store i64 3, i64* %70, align 8
  %.170.repack156 = getelementptr inbounds i8, i8* %.169, i64 24
  %71 = bitcast i8* %.170.repack156 to i64*
  store i64 3, i64* %71, align 8
  ret %string.560217* %.170

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3
  %.176 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.177 = bitcast i8* %.176 to %string.560217*
  %.177.repack = bitcast i8* %.176 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.177.repack, align 8
  %.177.repack151 = getelementptr inbounds i8, i8* %.176, i64 8
  %72 = bitcast i8* %.177.repack151 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.84, i64 0, i64 0), i8** %72, align 8
  %.177.repack152 = getelementptr inbounds i8, i8* %.176, i64 16
  %73 = bitcast i8* %.177.repack152 to i64*
  store i64 2, i64* %73, align 8
  %.177.repack153 = getelementptr inbounds i8, i8* %.176, i64 24
  %74 = bitcast i8* %.177.repack153 to i64*
  store i64 2, i64* %74, align 8
  ret %string.560217* %.177

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3
  %.183 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.184 = bitcast i8* %.183 to %string.560217*
  %.184.repack = bitcast i8* %.183 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.184.repack, align 8
  %.184.repack148 = getelementptr inbounds i8, i8* %.183, i64 8
  %75 = bitcast i8* %.184.repack148 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.85, i64 0, i64 0), i8** %75, align 8
  %.184.repack149 = getelementptr inbounds i8, i8* %.183, i64 16
  %76 = bitcast i8* %.184.repack149 to i64*
  store i64 3, i64* %76, align 8
  %.184.repack150 = getelementptr inbounds i8, i8* %.183, i64 24
  %77 = bitcast i8* %.184.repack150 to i64*
  store i64 3, i64* %77, align 8
  ret %string.560217* %.184

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3
  %.190 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.560217*
  %.191.repack = bitcast i8* %.190 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.191.repack, align 8
  %.191.repack145 = getelementptr inbounds i8, i8* %.190, i64 8
  %78 = bitcast i8* %.191.repack145 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.86, i64 0, i64 0), i8** %78, align 8
  %.191.repack146 = getelementptr inbounds i8, i8* %.190, i64 16
  %79 = bitcast i8* %.191.repack146 to i64*
  store i64 3, i64* %79, align 8
  %.191.repack147 = getelementptr inbounds i8, i8* %.190, i64 24
  %80 = bitcast i8* %.191.repack147 to i64*
  store i64 3, i64* %80, align 8
  ret %string.560217* %.191

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3
  %.197 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.198 = bitcast i8* %.197 to %string.560217*
  %.198.repack = bitcast i8* %.197 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.198.repack, align 8
  %.198.repack142 = getelementptr inbounds i8, i8* %.197, i64 8
  %81 = bitcast i8* %.198.repack142 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.87, i64 0, i64 0), i8** %81, align 8
  %.198.repack143 = getelementptr inbounds i8, i8* %.197, i64 16
  %82 = bitcast i8* %.198.repack143 to i64*
  store i64 2, i64* %82, align 8
  %.198.repack144 = getelementptr inbounds i8, i8* %.197, i64 24
  %83 = bitcast i8* %.198.repack144 to i64*
  store i64 2, i64* %83, align 8
  ret %string.560217* %.198

.3.endif.endif.endif.endi...endif.4.endif.endif.if: ; preds = %.3
  %.204 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.560217*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.205.repack, align 8
  %.205.repack139 = getelementptr inbounds i8, i8* %.204, i64 8
  %84 = bitcast i8* %.205.repack139 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.88, i64 0, i64 0), i8** %84, align 8
  %.205.repack140 = getelementptr inbounds i8, i8* %.204, i64 16
  %85 = bitcast i8* %.205.repack140 to i64*
  store i64 2, i64* %85, align 8
  %.205.repack141 = getelementptr inbounds i8, i8* %.204, i64 24
  %86 = bitcast i8* %.205.repack141 to i64*
  store i64 2, i64* %86, align 8
  ret %string.560217* %.205

.3.endif.endif.endif.endi...if.5:                 ; preds = %.3
  %.211 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.212 = bitcast i8* %.211 to %string.560217*
  %.212.repack = bitcast i8* %.211 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.212.repack, align 8
  %.212.repack136 = getelementptr inbounds i8, i8* %.211, i64 8
  %87 = bitcast i8* %.212.repack136 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.89, i64 0, i64 0), i8** %87, align 8
  %.212.repack137 = getelementptr inbounds i8, i8* %.211, i64 16
  %88 = bitcast i8* %.212.repack137 to i64*
  store i64 3, i64* %88, align 8
  %.212.repack138 = getelementptr inbounds i8, i8* %.211, i64 24
  %89 = bitcast i8* %.212.repack138 to i64*
  store i64 3, i64* %89, align 8
  ret %string.560217* %.212

.3.endif.endif.endif.endi...endif.5.if:           ; preds = %.3
  %.218 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.219 = bitcast i8* %.218 to %string.560217*
  %.219.repack = bitcast i8* %.218 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.219.repack, align 8
  %.219.repack133 = getelementptr inbounds i8, i8* %.218, i64 8
  %90 = bitcast i8* %.219.repack133 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.90, i64 0, i64 0), i8** %90, align 8
  %.219.repack134 = getelementptr inbounds i8, i8* %.218, i64 16
  %91 = bitcast i8* %.219.repack134 to i64*
  store i64 3, i64* %91, align 8
  %.219.repack135 = getelementptr inbounds i8, i8* %.218, i64 24
  %92 = bitcast i8* %.219.repack135 to i64*
  store i64 3, i64* %92, align 8
  ret %string.560217* %.219

.3.endif.endif.endif.endi...endif.5.endif.if:     ; preds = %.3
  %.225 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.226 = bitcast i8* %.225 to %string.560217*
  %.226.repack = bitcast i8* %.225 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.226.repack, align 8
  %.226.repack130 = getelementptr inbounds i8, i8* %.225, i64 8
  %93 = bitcast i8* %.226.repack130 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.91, i64 0, i64 0), i8** %93, align 8
  %.226.repack131 = getelementptr inbounds i8, i8* %.225, i64 16
  %94 = bitcast i8* %.226.repack131 to i64*
  store i64 5, i64* %94, align 8
  %.226.repack132 = getelementptr inbounds i8, i8* %.225, i64 24
  %95 = bitcast i8* %.226.repack132 to i64*
  store i64 5, i64* %95, align 8
  ret %string.560217* %.226

.3.endif.endif.endif.endi...endif.5.endif.endif.if: ; preds = %.3
  %.232 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.233 = bitcast i8* %.232 to %string.560217*
  %.233.repack = bitcast i8* %.232 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.233.repack, align 8
  %.233.repack127 = getelementptr inbounds i8, i8* %.232, i64 8
  %96 = bitcast i8* %.233.repack127 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.92, i64 0, i64 0), i8** %96, align 8
  %.233.repack128 = getelementptr inbounds i8, i8* %.232, i64 16
  %97 = bitcast i8* %.233.repack128 to i64*
  store i64 3, i64* %97, align 8
  %.233.repack129 = getelementptr inbounds i8, i8* %.232, i64 24
  %98 = bitcast i8* %.233.repack129 to i64*
  store i64 3, i64* %98, align 8
  ret %string.560217* %.233

.3.endif.endif.endif.endi...if.6:                 ; preds = %.3
  %.239 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.240 = bitcast i8* %.239 to %string.560217*
  %.240.repack = bitcast i8* %.239 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.240.repack, align 8
  %.240.repack124 = getelementptr inbounds i8, i8* %.239, i64 8
  %99 = bitcast i8* %.240.repack124 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.93, i64 0, i64 0), i8** %99, align 8
  %.240.repack125 = getelementptr inbounds i8, i8* %.239, i64 16
  %100 = bitcast i8* %.240.repack125 to i64*
  store i64 3, i64* %100, align 8
  %.240.repack126 = getelementptr inbounds i8, i8* %.239, i64 24
  %101 = bitcast i8* %.240.repack126 to i64*
  store i64 3, i64* %101, align 8
  ret %string.560217* %.240

.3.endif.endif.endif.endi...endif.6.if:           ; preds = %.3
  %.246 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.247 = bitcast i8* %.246 to %string.560217*
  %.247.repack = bitcast i8* %.246 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.247.repack, align 8
  %.247.repack121 = getelementptr inbounds i8, i8* %.246, i64 8
  %102 = bitcast i8* %.247.repack121 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.94, i64 0, i64 0), i8** %102, align 8
  %.247.repack122 = getelementptr inbounds i8, i8* %.246, i64 16
  %103 = bitcast i8* %.247.repack122 to i64*
  store i64 2, i64* %103, align 8
  %.247.repack123 = getelementptr inbounds i8, i8* %.246, i64 24
  %104 = bitcast i8* %.247.repack123 to i64*
  store i64 2, i64* %104, align 8
  ret %string.560217* %.247

.3.endif.endif.endif.endi...endif.6.endif.if:     ; preds = %.3
  %.253 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.254 = bitcast i8* %.253 to %string.560217*
  %.254.repack = bitcast i8* %.253 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.254.repack, align 8
  %.254.repack118 = getelementptr inbounds i8, i8* %.253, i64 8
  %105 = bitcast i8* %.254.repack118 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.95, i64 0, i64 0), i8** %105, align 8
  %.254.repack119 = getelementptr inbounds i8, i8* %.253, i64 16
  %106 = bitcast i8* %.254.repack119 to i64*
  store i64 2, i64* %106, align 8
  %.254.repack120 = getelementptr inbounds i8, i8* %.253, i64 24
  %107 = bitcast i8* %.254.repack120 to i64*
  store i64 2, i64* %107, align 8
  ret %string.560217* %.254

.3.endif.endif.endif.endi...endif.6.endif.endif.if: ; preds = %.3
  %.260 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.261 = bitcast i8* %.260 to %string.560217*
  %.261.repack = bitcast i8* %.260 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.261.repack, align 8
  %.261.repack115 = getelementptr inbounds i8, i8* %.260, i64 8
  %108 = bitcast i8* %.261.repack115 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.96, i64 0, i64 0), i8** %108, align 8
  %.261.repack116 = getelementptr inbounds i8, i8* %.260, i64 16
  %109 = bitcast i8* %.261.repack116 to i64*
  store i64 3, i64* %109, align 8
  %.261.repack117 = getelementptr inbounds i8, i8* %.260, i64 24
  %110 = bitcast i8* %.261.repack117 to i64*
  store i64 3, i64* %110, align 8
  ret %string.560217* %.261

.3.endif.endif.endif.endi...if.7:                 ; preds = %.3
  %.267 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.268 = bitcast i8* %.267 to %string.560217*
  %.268.repack = bitcast i8* %.267 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.268.repack, align 8
  %.268.repack112 = getelementptr inbounds i8, i8* %.267, i64 8
  %111 = bitcast i8* %.268.repack112 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.97, i64 0, i64 0), i8** %111, align 8
  %.268.repack113 = getelementptr inbounds i8, i8* %.267, i64 16
  %112 = bitcast i8* %.268.repack113 to i64*
  store i64 7, i64* %112, align 8
  %.268.repack114 = getelementptr inbounds i8, i8* %.267, i64 24
  %113 = bitcast i8* %.268.repack114 to i64*
  store i64 7, i64* %113, align 8
  ret %string.560217* %.268

.3.endif.endif.endif.endi...endif.7.if:           ; preds = %.3
  %.274 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.275 = bitcast i8* %.274 to %string.560217*
  %.275.repack = bitcast i8* %.274 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.275.repack, align 8
  %.275.repack109 = getelementptr inbounds i8, i8* %.274, i64 8
  %114 = bitcast i8* %.275.repack109 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.98, i64 0, i64 0), i8** %114, align 8
  %.275.repack110 = getelementptr inbounds i8, i8* %.274, i64 16
  %115 = bitcast i8* %.275.repack110 to i64*
  store i64 11, i64* %115, align 8
  %.275.repack111 = getelementptr inbounds i8, i8* %.274, i64 24
  %116 = bitcast i8* %.275.repack111 to i64*
  store i64 11, i64* %116, align 8
  ret %string.560217* %.275

.3.endif.endif.endif.endi...endif.7.endif.if:     ; preds = %.3
  %.281 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.560217*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.282.repack, align 8
  %.282.repack106 = getelementptr inbounds i8, i8* %.281, i64 8
  %117 = bitcast i8* %.282.repack106 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.99, i64 0, i64 0), i8** %117, align 8
  %.282.repack107 = getelementptr inbounds i8, i8* %.281, i64 16
  %118 = bitcast i8* %.282.repack107 to i64*
  store i64 9, i64* %118, align 8
  %.282.repack108 = getelementptr inbounds i8, i8* %.281, i64 24
  %119 = bitcast i8* %.282.repack108 to i64*
  store i64 9, i64* %119, align 8
  ret %string.560217* %.282

.3.endif.endif.endif.endi...endif.7.endif.endif.if: ; preds = %.3
  %.288 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.289 = bitcast i8* %.288 to %string.560217*
  %.289.repack = bitcast i8* %.288 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.289.repack, align 8
  %.289.repack103 = getelementptr inbounds i8, i8* %.288, i64 8
  %120 = bitcast i8* %.289.repack103 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.100, i64 0, i64 0), i8** %120, align 8
  %.289.repack104 = getelementptr inbounds i8, i8* %.288, i64 16
  %121 = bitcast i8* %.289.repack104 to i64*
  store i64 6, i64* %121, align 8
  %.289.repack105 = getelementptr inbounds i8, i8* %.288, i64 24
  %122 = bitcast i8* %.289.repack105 to i64*
  store i64 6, i64* %122, align 8
  ret %string.560217* %.289

.3.endif.endif.endif.endi...if.8:                 ; preds = %.3
  %.295 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.296 = bitcast i8* %.295 to %string.560217*
  %.296.repack = bitcast i8* %.295 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.296.repack, align 8
  %.296.repack100 = getelementptr inbounds i8, i8* %.295, i64 8
  %123 = bitcast i8* %.296.repack100 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.101, i64 0, i64 0), i8** %123, align 8
  %.296.repack101 = getelementptr inbounds i8, i8* %.295, i64 16
  %124 = bitcast i8* %.296.repack101 to i64*
  store i64 5, i64* %124, align 8
  %.296.repack102 = getelementptr inbounds i8, i8* %.295, i64 24
  %125 = bitcast i8* %.296.repack102 to i64*
  store i64 5, i64* %125, align 8
  ret %string.560217* %.296

.3.endif.endif.endif.endi...endif.8.if:           ; preds = %.3
  %.302 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.303 = bitcast i8* %.302 to %string.560217*
  %.303.repack = bitcast i8* %.302 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.303.repack, align 8
  %.303.repack97 = getelementptr inbounds i8, i8* %.302, i64 8
  %126 = bitcast i8* %.303.repack97 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.102, i64 0, i64 0), i8** %126, align 8
  %.303.repack98 = getelementptr inbounds i8, i8* %.302, i64 16
  %127 = bitcast i8* %.303.repack98 to i64*
  store i64 6, i64* %127, align 8
  %.303.repack99 = getelementptr inbounds i8, i8* %.302, i64 24
  %128 = bitcast i8* %.303.repack99 to i64*
  store i64 6, i64* %128, align 8
  ret %string.560217* %.303

.3.endif.endif.endif.endi...endif.8.endif.if:     ; preds = %.3
  %.309 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.310 = bitcast i8* %.309 to %string.560217*
  %.310.repack = bitcast i8* %.309 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.310.repack, align 8
  %.310.repack94 = getelementptr inbounds i8, i8* %.309, i64 8
  %129 = bitcast i8* %.310.repack94 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.103, i64 0, i64 0), i8** %129, align 8
  %.310.repack95 = getelementptr inbounds i8, i8* %.309, i64 16
  %130 = bitcast i8* %.310.repack95 to i64*
  store i64 8, i64* %130, align 8
  %.310.repack96 = getelementptr inbounds i8, i8* %.309, i64 24
  %131 = bitcast i8* %.310.repack96 to i64*
  store i64 8, i64* %131, align 8
  ret %string.560217* %.310

.3.endif.endif.endif.endi...endif.8.endif.endif.if: ; preds = %.3
  %.316 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.317 = bitcast i8* %.316 to %string.560217*
  %.317.repack = bitcast i8* %.316 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.317.repack, align 8
  %.317.repack91 = getelementptr inbounds i8, i8* %.316, i64 8
  %132 = bitcast i8* %.317.repack91 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.104, i64 0, i64 0), i8** %132, align 8
  %.317.repack92 = getelementptr inbounds i8, i8* %.316, i64 16
  %133 = bitcast i8* %.317.repack92 to i64*
  store i64 5, i64* %133, align 8
  %.317.repack93 = getelementptr inbounds i8, i8* %.316, i64 24
  %134 = bitcast i8* %.317.repack93 to i64*
  store i64 5, i64* %134, align 8
  ret %string.560217* %.317

.3.endif.endif.endif.endi...if.9:                 ; preds = %.3
  %.323 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.324 = bitcast i8* %.323 to %string.560217*
  %.324.repack = bitcast i8* %.323 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.324.repack, align 8
  %.324.repack88 = getelementptr inbounds i8, i8* %.323, i64 8
  %135 = bitcast i8* %.324.repack88 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.105, i64 0, i64 0), i8** %135, align 8
  %.324.repack89 = getelementptr inbounds i8, i8* %.323, i64 16
  %136 = bitcast i8* %.324.repack89 to i64*
  store i64 7, i64* %136, align 8
  %.324.repack90 = getelementptr inbounds i8, i8* %.323, i64 24
  %137 = bitcast i8* %.324.repack90 to i64*
  store i64 7, i64* %137, align 8
  ret %string.560217* %.324

.3.endif.endif.endif.endi...endif.9.if:           ; preds = %.3
  %.330 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.331 = bitcast i8* %.330 to %string.560217*
  %.331.repack = bitcast i8* %.330 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.331.repack, align 8
  %.331.repack85 = getelementptr inbounds i8, i8* %.330, i64 8
  %138 = bitcast i8* %.331.repack85 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.106, i64 0, i64 0), i8** %138, align 8
  %.331.repack86 = getelementptr inbounds i8, i8* %.330, i64 16
  %139 = bitcast i8* %.331.repack86 to i64*
  store i64 7, i64* %139, align 8
  %.331.repack87 = getelementptr inbounds i8, i8* %.330, i64 24
  %140 = bitcast i8* %.331.repack87 to i64*
  store i64 7, i64* %140, align 8
  ret %string.560217* %.331

.3.endif.endif.endif.endi...endif.9.endif.if:     ; preds = %.3
  %.337 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.338 = bitcast i8* %.337 to %string.560217*
  %.338.repack = bitcast i8* %.337 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.338.repack, align 8
  %.338.repack82 = getelementptr inbounds i8, i8* %.337, i64 8
  %141 = bitcast i8* %.338.repack82 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.107, i64 0, i64 0), i8** %141, align 8
  %.338.repack83 = getelementptr inbounds i8, i8* %.337, i64 16
  %142 = bitcast i8* %.338.repack83 to i64*
  store i64 5, i64* %142, align 8
  %.338.repack84 = getelementptr inbounds i8, i8* %.337, i64 24
  %143 = bitcast i8* %.338.repack84 to i64*
  store i64 5, i64* %143, align 8
  ret %string.560217* %.338

.3.endif.endif.endif.endi...endif.9.endif.endif.if: ; preds = %.3
  %.344 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.345 = bitcast i8* %.344 to %string.560217*
  %.345.repack = bitcast i8* %.344 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.345.repack, align 8
  %.345.repack79 = getelementptr inbounds i8, i8* %.344, i64 8
  %144 = bitcast i8* %.345.repack79 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.108, i64 0, i64 0), i8** %144, align 8
  %.345.repack80 = getelementptr inbounds i8, i8* %.344, i64 16
  %145 = bitcast i8* %.345.repack80 to i64*
  store i64 5, i64* %145, align 8
  %.345.repack81 = getelementptr inbounds i8, i8* %.344, i64 24
  %146 = bitcast i8* %.345.repack81 to i64*
  store i64 5, i64* %146, align 8
  ret %string.560217* %.345

.3.endif.endif.endif.endi...if.10:                ; preds = %.3
  %.351 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.352 = bitcast i8* %.351 to %string.560217*
  %.352.repack = bitcast i8* %.351 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.352.repack, align 8
  %.352.repack76 = getelementptr inbounds i8, i8* %.351, i64 8
  %147 = bitcast i8* %.352.repack76 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.109, i64 0, i64 0), i8** %147, align 8
  %.352.repack77 = getelementptr inbounds i8, i8* %.351, i64 16
  %148 = bitcast i8* %.352.repack77 to i64*
  store i64 6, i64* %148, align 8
  %.352.repack78 = getelementptr inbounds i8, i8* %.351, i64 24
  %149 = bitcast i8* %.352.repack78 to i64*
  store i64 6, i64* %149, align 8
  ret %string.560217* %.352

.3.endif.endif.endif.endi...endif.10.if:          ; preds = %.3
  %.358 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.359 = bitcast i8* %.358 to %string.560217*
  %.359.repack = bitcast i8* %.358 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.359.repack, align 8
  %.359.repack73 = getelementptr inbounds i8, i8* %.358, i64 8
  %150 = bitcast i8* %.359.repack73 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.110, i64 0, i64 0), i8** %150, align 8
  %.359.repack74 = getelementptr inbounds i8, i8* %.358, i64 16
  %151 = bitcast i8* %.359.repack74 to i64*
  store i64 6, i64* %151, align 8
  %.359.repack75 = getelementptr inbounds i8, i8* %.358, i64 24
  %152 = bitcast i8* %.359.repack75 to i64*
  store i64 6, i64* %152, align 8
  ret %string.560217* %.359

.3.endif.endif.endif.endi...endif.10.endif.if:    ; preds = %.3
  %.365 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.366 = bitcast i8* %.365 to %string.560217*
  %.366.repack = bitcast i8* %.365 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.366.repack, align 8
  %.366.repack70 = getelementptr inbounds i8, i8* %.365, i64 8
  %153 = bitcast i8* %.366.repack70 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.111, i64 0, i64 0), i8** %153, align 8
  %.366.repack71 = getelementptr inbounds i8, i8* %.365, i64 16
  %154 = bitcast i8* %.366.repack71 to i64*
  store i64 6, i64* %154, align 8
  %.366.repack72 = getelementptr inbounds i8, i8* %.365, i64 24
  %155 = bitcast i8* %.366.repack72 to i64*
  store i64 6, i64* %155, align 8
  ret %string.560217* %.366

.3.endif.endif.endif.endi...endif.10.endif.endif.if: ; preds = %.3
  %.372 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.373 = bitcast i8* %.372 to %string.560217*
  %.373.repack = bitcast i8* %.372 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.373.repack, align 8
  %.373.repack67 = getelementptr inbounds i8, i8* %.372, i64 8
  %156 = bitcast i8* %.373.repack67 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.112, i64 0, i64 0), i8** %156, align 8
  %.373.repack68 = getelementptr inbounds i8, i8* %.372, i64 16
  %157 = bitcast i8* %.373.repack68 to i64*
  store i64 7, i64* %157, align 8
  %.373.repack69 = getelementptr inbounds i8, i8* %.372, i64 24
  %158 = bitcast i8* %.373.repack69 to i64*
  store i64 7, i64* %158, align 8
  ret %string.560217* %.373

.3.endif.endif.endif.endi...if.11:                ; preds = %.3
  %.379 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.380 = bitcast i8* %.379 to %string.560217*
  %.380.repack = bitcast i8* %.379 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.380.repack, align 8
  %.380.repack64 = getelementptr inbounds i8, i8* %.379, i64 8
  %159 = bitcast i8* %.380.repack64 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.113, i64 0, i64 0), i8** %159, align 8
  %.380.repack65 = getelementptr inbounds i8, i8* %.379, i64 16
  %160 = bitcast i8* %.380.repack65 to i64*
  store i64 6, i64* %160, align 8
  %.380.repack66 = getelementptr inbounds i8, i8* %.379, i64 24
  %161 = bitcast i8* %.380.repack66 to i64*
  store i64 6, i64* %161, align 8
  ret %string.560217* %.380

.3.endif.endif.endif.endi...endif.11.if:          ; preds = %.3
  %.386 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.387 = bitcast i8* %.386 to %string.560217*
  %.387.repack = bitcast i8* %.386 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.387.repack, align 8
  %.387.repack61 = getelementptr inbounds i8, i8* %.386, i64 8
  %162 = bitcast i8* %.387.repack61 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.114, i64 0, i64 0), i8** %162, align 8
  %.387.repack62 = getelementptr inbounds i8, i8* %.386, i64 16
  %163 = bitcast i8* %.387.repack62 to i64*
  store i64 6, i64* %163, align 8
  %.387.repack63 = getelementptr inbounds i8, i8* %.386, i64 24
  %164 = bitcast i8* %.387.repack63 to i64*
  store i64 6, i64* %164, align 8
  ret %string.560217* %.387

.3.endif.endif.endif.endi...endif.11.endif.if:    ; preds = %.3
  %.393 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.394 = bitcast i8* %.393 to %string.560217*
  %.394.repack = bitcast i8* %.393 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.394.repack, align 8
  %.394.repack58 = getelementptr inbounds i8, i8* %.393, i64 8
  %165 = bitcast i8* %.394.repack58 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.115, i64 0, i64 0), i8** %165, align 8
  %.394.repack59 = getelementptr inbounds i8, i8* %.393, i64 16
  %166 = bitcast i8* %.394.repack59 to i64*
  store i64 6, i64* %166, align 8
  %.394.repack60 = getelementptr inbounds i8, i8* %.393, i64 24
  %167 = bitcast i8* %.394.repack60 to i64*
  store i64 6, i64* %167, align 8
  ret %string.560217* %.394

.3.endif.endif.endif.endi...endif.11.endif.endif.if: ; preds = %.3
  %.400 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.401 = bitcast i8* %.400 to %string.560217*
  %.401.repack = bitcast i8* %.400 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.401.repack, align 8
  %.401.repack55 = getelementptr inbounds i8, i8* %.400, i64 8
  %168 = bitcast i8* %.401.repack55 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.116, i64 0, i64 0), i8** %168, align 8
  %.401.repack56 = getelementptr inbounds i8, i8* %.400, i64 16
  %169 = bitcast i8* %.401.repack56 to i64*
  store i64 6, i64* %169, align 8
  %.401.repack57 = getelementptr inbounds i8, i8* %.400, i64 24
  %170 = bitcast i8* %.401.repack57 to i64*
  store i64 6, i64* %170, align 8
  ret %string.560217* %.401

.3.endif.endif.endif.endi...if.12:                ; preds = %.3
  %.407 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.408 = bitcast i8* %.407 to %string.560217*
  %.408.repack = bitcast i8* %.407 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.408.repack, align 8
  %.408.repack52 = getelementptr inbounds i8, i8* %.407, i64 8
  %171 = bitcast i8* %.408.repack52 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.117, i64 0, i64 0), i8** %171, align 8
  %.408.repack53 = getelementptr inbounds i8, i8* %.407, i64 16
  %172 = bitcast i8* %.408.repack53 to i64*
  store i64 8, i64* %172, align 8
  %.408.repack54 = getelementptr inbounds i8, i8* %.407, i64 24
  %173 = bitcast i8* %.408.repack54 to i64*
  store i64 8, i64* %173, align 8
  ret %string.560217* %.408

.3.endif.endif.endif.endi...endif.12.if:          ; preds = %.3
  %.414 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.415 = bitcast i8* %.414 to %string.560217*
  %.415.repack = bitcast i8* %.414 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.415.repack, align 8
  %.415.repack49 = getelementptr inbounds i8, i8* %.414, i64 8
  %174 = bitcast i8* %.415.repack49 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.118, i64 0, i64 0), i8** %174, align 8
  %.415.repack50 = getelementptr inbounds i8, i8* %.414, i64 16
  %175 = bitcast i8* %.415.repack50 to i64*
  store i64 7, i64* %175, align 8
  %.415.repack51 = getelementptr inbounds i8, i8* %.414, i64 24
  %176 = bitcast i8* %.415.repack51 to i64*
  store i64 7, i64* %176, align 8
  ret %string.560217* %.415

.3.endif.endif.endif.endi...endif.12.endif.if:    ; preds = %.3
  %.421 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.422 = bitcast i8* %.421 to %string.560217*
  %.422.repack = bitcast i8* %.421 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.422.repack, align 8
  %.422.repack46 = getelementptr inbounds i8, i8* %.421, i64 8
  %177 = bitcast i8* %.422.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.119, i64 0, i64 0), i8** %177, align 8
  %.422.repack47 = getelementptr inbounds i8, i8* %.421, i64 16
  %178 = bitcast i8* %.422.repack47 to i64*
  store i64 6, i64* %178, align 8
  %.422.repack48 = getelementptr inbounds i8, i8* %.421, i64 24
  %179 = bitcast i8* %.422.repack48 to i64*
  store i64 6, i64* %179, align 8
  ret %string.560217* %.422

.3.endif.endif.endif.endi...endif.12.endif.endif.if: ; preds = %.3
  %.428 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.429 = bitcast i8* %.428 to %string.560217*
  %.429.repack = bitcast i8* %.428 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.429.repack, align 8
  %.429.repack43 = getelementptr inbounds i8, i8* %.428, i64 8
  %180 = bitcast i8* %.429.repack43 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.120, i64 0, i64 0), i8** %180, align 8
  %.429.repack44 = getelementptr inbounds i8, i8* %.428, i64 16
  %181 = bitcast i8* %.429.repack44 to i64*
  store i64 8, i64* %181, align 8
  %.429.repack45 = getelementptr inbounds i8, i8* %.428, i64 24
  %182 = bitcast i8* %.429.repack45 to i64*
  store i64 8, i64* %182, align 8
  ret %string.560217* %.429

.3.endif.endif.endif.endi...if.13:                ; preds = %.3
  %.435 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.436 = bitcast i8* %.435 to %string.560217*
  %.436.repack = bitcast i8* %.435 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.436.repack, align 8
  %.436.repack40 = getelementptr inbounds i8, i8* %.435, i64 8
  %183 = bitcast i8* %.436.repack40 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.121, i64 0, i64 0), i8** %183, align 8
  %.436.repack41 = getelementptr inbounds i8, i8* %.435, i64 16
  %184 = bitcast i8* %.436.repack41 to i64*
  store i64 6, i64* %184, align 8
  %.436.repack42 = getelementptr inbounds i8, i8* %.435, i64 24
  %185 = bitcast i8* %.436.repack42 to i64*
  store i64 6, i64* %185, align 8
  ret %string.560217* %.436

.3.endif.endif.endif.endi...endif.13.if:          ; preds = %.3
  %.442 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.443 = bitcast i8* %.442 to %string.560217*
  %.443.repack = bitcast i8* %.442 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.443.repack, align 8
  %.443.repack37 = getelementptr inbounds i8, i8* %.442, i64 8
  %186 = bitcast i8* %.443.repack37 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.122, i64 0, i64 0), i8** %186, align 8
  %.443.repack38 = getelementptr inbounds i8, i8* %.442, i64 16
  %187 = bitcast i8* %.443.repack38 to i64*
  store i64 8, i64* %187, align 8
  %.443.repack39 = getelementptr inbounds i8, i8* %.442, i64 24
  %188 = bitcast i8* %.443.repack39 to i64*
  store i64 8, i64* %188, align 8
  ret %string.560217* %.443

.3.endif.endif.endif.endi...endif.13.endif.if:    ; preds = %.3
  %.449 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.450 = bitcast i8* %.449 to %string.560217*
  %.450.repack = bitcast i8* %.449 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.450.repack, align 8
  %.450.repack34 = getelementptr inbounds i8, i8* %.449, i64 8
  %189 = bitcast i8* %.450.repack34 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.123, i64 0, i64 0), i8** %189, align 8
  %.450.repack35 = getelementptr inbounds i8, i8* %.449, i64 16
  %190 = bitcast i8* %.450.repack35 to i64*
  store i64 11, i64* %190, align 8
  %.450.repack36 = getelementptr inbounds i8, i8* %.449, i64 24
  %191 = bitcast i8* %.450.repack36 to i64*
  store i64 11, i64* %191, align 8
  ret %string.560217* %.450

.3.endif.endif.endif.endi...endif.13.endif.endif.if: ; preds = %.3
  %.456 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.457 = bitcast i8* %.456 to %string.560217*
  %.457.repack = bitcast i8* %.456 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.457.repack, align 8
  %.457.repack31 = getelementptr inbounds i8, i8* %.456, i64 8
  %192 = bitcast i8* %.457.repack31 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.124, i64 0, i64 0), i8** %192, align 8
  %.457.repack32 = getelementptr inbounds i8, i8* %.456, i64 16
  %193 = bitcast i8* %.457.repack32 to i64*
  store i64 9, i64* %193, align 8
  %.457.repack33 = getelementptr inbounds i8, i8* %.456, i64 24
  %194 = bitcast i8* %.457.repack33 to i64*
  store i64 9, i64* %194, align 8
  ret %string.560217* %.457

.3.endif.endif.endif.endi...if.14:                ; preds = %.3
  %.463 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.464 = bitcast i8* %.463 to %string.560217*
  %.464.repack = bitcast i8* %.463 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.464.repack, align 8
  %.464.repack28 = getelementptr inbounds i8, i8* %.463, i64 8
  %195 = bitcast i8* %.464.repack28 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.125, i64 0, i64 0), i8** %195, align 8
  %.464.repack29 = getelementptr inbounds i8, i8* %.463, i64 16
  %196 = bitcast i8* %.464.repack29 to i64*
  store i64 9, i64* %196, align 8
  %.464.repack30 = getelementptr inbounds i8, i8* %.463, i64 24
  %197 = bitcast i8* %.464.repack30 to i64*
  store i64 9, i64* %197, align 8
  ret %string.560217* %.464

.3.endif.endif.endif.endi...endif.14.if:          ; preds = %.3
  %.470 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.471 = bitcast i8* %.470 to %string.560217*
  %.471.repack = bitcast i8* %.470 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.471.repack, align 8
  %.471.repack25 = getelementptr inbounds i8, i8* %.470, i64 8
  %198 = bitcast i8* %.471.repack25 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.126, i64 0, i64 0), i8** %198, align 8
  %.471.repack26 = getelementptr inbounds i8, i8* %.470, i64 16
  %199 = bitcast i8* %.471.repack26 to i64*
  store i64 10, i64* %199, align 8
  %.471.repack27 = getelementptr inbounds i8, i8* %.470, i64 24
  %200 = bitcast i8* %.471.repack27 to i64*
  store i64 10, i64* %200, align 8
  ret %string.560217* %.471

.3.endif.endif.endif.endi...endif.14.endif.if:    ; preds = %.3
  %.477 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.478 = bitcast i8* %.477 to %string.560217*
  %.478.repack = bitcast i8* %.477 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.478.repack, align 8
  %.478.repack22 = getelementptr inbounds i8, i8* %.477, i64 8
  %201 = bitcast i8* %.478.repack22 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.127, i64 0, i64 0), i8** %201, align 8
  %.478.repack23 = getelementptr inbounds i8, i8* %.477, i64 16
  %202 = bitcast i8* %.478.repack23 to i64*
  store i64 9, i64* %202, align 8
  %.478.repack24 = getelementptr inbounds i8, i8* %.477, i64 24
  %203 = bitcast i8* %.478.repack24 to i64*
  store i64 9, i64* %203, align 8
  ret %string.560217* %.478

.3.endif.endif.endif.endi...endif.14.endif.endif.if: ; preds = %.3
  %.484 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.485 = bitcast i8* %.484 to %string.560217*
  %.485.repack = bitcast i8* %.484 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.485.repack, align 8
  %.485.repack19 = getelementptr inbounds i8, i8* %.484, i64 8
  %204 = bitcast i8* %.485.repack19 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.128, i64 0, i64 0), i8** %204, align 8
  %.485.repack20 = getelementptr inbounds i8, i8* %.484, i64 16
  %205 = bitcast i8* %.485.repack20 to i64*
  store i64 12, i64* %205, align 8
  %.485.repack21 = getelementptr inbounds i8, i8* %.484, i64 24
  %206 = bitcast i8* %.485.repack21 to i64*
  store i64 12, i64* %206, align 8
  ret %string.560217* %.485

.3.endif.endif.endif.endi...if.15:                ; preds = %.3
  %.491 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.492 = bitcast i8* %.491 to %string.560217*
  %.492.repack = bitcast i8* %.491 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.492.repack, align 8
  %.492.repack16 = getelementptr inbounds i8, i8* %.491, i64 8
  %207 = bitcast i8* %.492.repack16 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.129, i64 0, i64 0), i8** %207, align 8
  %.492.repack17 = getelementptr inbounds i8, i8* %.491, i64 16
  %208 = bitcast i8* %.492.repack17 to i64*
  store i64 5, i64* %208, align 8
  %.492.repack18 = getelementptr inbounds i8, i8* %.491, i64 24
  %209 = bitcast i8* %.492.repack18 to i64*
  store i64 5, i64* %209, align 8
  ret %string.560217* %.492

.3.endif.endif.endif.endi...endif.15.if:          ; preds = %.3
  %.498 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.499 = bitcast i8* %.498 to %string.560217*
  %.499.repack = bitcast i8* %.498 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.499.repack, align 8
  %.499.repack13 = getelementptr inbounds i8, i8* %.498, i64 8
  %210 = bitcast i8* %.499.repack13 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.130, i64 0, i64 0), i8** %210, align 8
  %.499.repack14 = getelementptr inbounds i8, i8* %.498, i64 16
  %211 = bitcast i8* %.499.repack14 to i64*
  store i64 8, i64* %211, align 8
  %.499.repack15 = getelementptr inbounds i8, i8* %.498, i64 24
  %212 = bitcast i8* %.499.repack15 to i64*
  store i64 8, i64* %212, align 8
  ret %string.560217* %.499

.3.endif.endif.endif.endi...endif.15.endif.if:    ; preds = %.3
  %.505 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.506 = bitcast i8* %.505 to %string.560217*
  %.506.repack = bitcast i8* %.505 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.506.repack, align 8
  %.506.repack10 = getelementptr inbounds i8, i8* %.505, i64 8
  %213 = bitcast i8* %.506.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.131, i64 0, i64 0), i8** %213, align 8
  %.506.repack11 = getelementptr inbounds i8, i8* %.505, i64 16
  %214 = bitcast i8* %.506.repack11 to i64*
  store i64 7, i64* %214, align 8
  %.506.repack12 = getelementptr inbounds i8, i8* %.505, i64 24
  %215 = bitcast i8* %.506.repack12 to i64*
  store i64 7, i64* %215, align 8
  ret %string.560217* %.506

.3.endif.endif.endif.endi...endif.15.endif.endif.if: ; preds = %.3
  %.512 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.513 = bitcast i8* %.512 to %string.560217*
  %.513.repack = bitcast i8* %.512 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.513.repack, align 8
  %.513.repack7 = getelementptr inbounds i8, i8* %.512, i64 8
  %216 = bitcast i8* %.513.repack7 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.132, i64 0, i64 0), i8** %216, align 8
  %.513.repack8 = getelementptr inbounds i8, i8* %.512, i64 16
  %217 = bitcast i8* %.513.repack8 to i64*
  store i64 6, i64* %217, align 8
  %.513.repack9 = getelementptr inbounds i8, i8* %.512, i64 24
  %218 = bitcast i8* %.513.repack9 to i64*
  store i64 6, i64* %218, align 8
  ret %string.560217* %.513

.3.endif.endif.endif.endi...if.16:                ; preds = %.3
  %.519 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.520 = bitcast i8* %.519 to %string.560217*
  %.520.repack = bitcast i8* %.519 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.520.repack, align 8
  %.520.repack4 = getelementptr inbounds i8, i8* %.519, i64 8
  %219 = bitcast i8* %.520.repack4 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.133, i64 0, i64 0), i8** %219, align 8
  %.520.repack5 = getelementptr inbounds i8, i8* %.519, i64 16
  %220 = bitcast i8* %.520.repack5 to i64*
  store i64 5, i64* %220, align 8
  %.520.repack6 = getelementptr inbounds i8, i8* %.519, i64 24
  %221 = bitcast i8* %.520.repack6 to i64*
  store i64 5, i64* %221, align 8
  ret %string.560217* %.520

.3.endif.endif.endif.endi...endif.16.if:          ; preds = %.3
  %.526 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.527 = bitcast i8* %.526 to %string.560217*
  %.527.repack = bitcast i8* %.526 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.527.repack, align 8
  %.527.repack1 = getelementptr inbounds i8, i8* %.526, i64 8
  %222 = bitcast i8* %.527.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.134, i64 0, i64 0), i8** %222, align 8
  %.527.repack2 = getelementptr inbounds i8, i8* %.526, i64 16
  %223 = bitcast i8* %.527.repack2 to i64*
  store i64 6, i64* %223, align 8
  %.527.repack3 = getelementptr inbounds i8, i8* %.526, i64 24
  %224 = bitcast i8* %.527.repack3 to i64*
  store i64 6, i64* %224, align 8
  ret %string.560217* %.527

.3.endif.endif.endif.endi...endif.16.endif:       ; preds = %.3
  %.530 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.531 = bitcast i8* %.530 to %string.560217*
  %.532 = bitcast i8* %.530 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.532, align 8
  %.534 = getelementptr inbounds i8, i8* %.530, i64 8
  %225 = bitcast i8* %.534 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %225, align 8
  %.536 = getelementptr inbounds i8, i8* %.530, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.536, i8 0, i64 16, i1 false)
  ret %string.560217* %.531
}

define %string.560217* @token_value(%Token.560247* nocapture readonly %.1, %string.560217* %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.9 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.9, i64 0, i32 7
  %.11 = load %string.560217* (%string.560217*, i64, i64)*, %string.560217* (%string.560217*, i64, i64)** %.10, align 8
  %.13 = getelementptr inbounds %Token.560247, %Token.560247* %.1, i64 0, i32 2
  %.14 = load %FloRange.560223*, %FloRange.560223** %.13, align 8
  %.15 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.20 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.14, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.27 = sub i64 %.21, %.16
  %.28 = tail call %string.560217* %.11(%string.560217* %.2, i64 %.16, i64 %.27)
  ret %string.560217* %.28
}

define void @print_tokens(%"Array<Token>.560259"* %.1, %string.560217* %.2) local_unnamed_addr {
.4:
  %.7 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.8 = bitcast i8* %.7 to %string.560217*
  %.8.repack = bitcast i8* %.7 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.8.repack, align 8
  %.8.repack1 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.8.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.136, i64 0, i64 0), i8** %0, align 8
  %.8.repack2 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.8.repack2 to i64*
  store i64 1, i64* %1, align 8
  %.8.repack3 = getelementptr inbounds i8, i8* %.7, i64 24
  %2 = bitcast i8* %.8.repack3 to i64*
  store i64 1, i64* %2, align 8
  tail call void @println(%string.560217* %.8)
  %.16 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 2
  %.1717 = load i64, i64* %.16, align 8
  %.1818 = icmp sgt i64 %.1717, 0
  br i1 %.1818, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge19 = phi i64 [ 0, %for.body.lr.ph ], [ %.129, %for.body.endif ]
  %.23 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.23, i64 0, i32 5
  %.25 = load %Token.560247* (%"Array<Token>.560259"*, i64)*, %Token.560247* (%"Array<Token>.560259"*, i64)** %.24, align 8
  %.26 = tail call %Token.560247* %.25(%"Array<Token>.560259"* nonnull %.1, i64 %storemerge19)
  %.28 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.560217*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %3 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.137, i64 0, i64 0), i8** %3, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %4 = bitcast i8* %.29.repack8 to i64*
  store i64 2, i64* %4, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %5 = bitcast i8* %.29.repack9 to i64*
  store i64 2, i64* %5, align 8
  tail call void @println(%string.560217* %.29)
  %.33 = getelementptr inbounds %Token.560247, %Token.560247* %.26, i64 0, i32 1
  %.34 = load i64, i64* %.33, align 8
  %.35 = tail call %string.560217* @token_str(i64 %.34)
  %.36 = getelementptr inbounds %string.560217, %string.560217* %.35, i64 0, i32 0
  %.37 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.36, align 8
  %.38 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.37, i64 0, i32 11
  %.39 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.38, align 8
  %.40 = tail call i8* %.39(%string.560217* %.35)
  %.42 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.138, i64 0, i64 0), i8* %.40)
  %.43 = add i64 %.42, 1
  %.45 = tail call i8* @malloc(i64 %.43)
  %.46 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.45, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.138, i64 0, i64 0), i8* %.40)
  %.47 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.47 to %string.560217*
  %.49 = bitcast i8* %.47 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.49, align 8
  %.51 = getelementptr inbounds i8, i8* %.47, i64 8
  %6 = bitcast i8* %.51 to i8**
  store i8* %.45, i8** %6, align 8
  %.53 = getelementptr inbounds i8, i8* %.47, i64 16
  %7 = bitcast i8* %.53 to i64*
  store i64 %.42, i64* %7, align 8
  %.55 = getelementptr inbounds i8, i8* %.47, i64 24
  %8 = bitcast i8* %.55 to i64*
  store i64 %.42, i64* %8, align 8
  tail call void @println(%string.560217* %.48)
  %.59 = getelementptr inbounds %Token.560247, %Token.560247* %.26, i64 0, i32 2
  %.60 = load %FloRange.560223*, %FloRange.560223** %.59, align 8
  %.61 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.60, i64 0, i32 1
  %.62 = load i64, i64* %.61, align 8
  %.66 = getelementptr inbounds %FloRange.560223, %FloRange.560223* %.60, i64 0, i32 2
  %.67 = load i64, i64* %.66, align 8
  %.69 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.139, i64 0, i64 0), i64 %.62, i64 %.67)
  %.70 = add i64 %.69, 1
  %.72 = tail call i8* @malloc(i64 %.70)
  %.73 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.139, i64 0, i64 0), i64 %.62, i64 %.67)
  %.74 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.74 to %string.560217*
  %.76 = bitcast i8* %.74 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.76, align 8
  %.78 = getelementptr inbounds i8, i8* %.74, i64 8
  %9 = bitcast i8* %.78 to i8**
  store i8* %.72, i8** %9, align 8
  %.80 = getelementptr inbounds i8, i8* %.74, i64 16
  %10 = bitcast i8* %.80 to i64*
  store i64 %.69, i64* %10, align 8
  %.82 = getelementptr inbounds i8, i8* %.74, i64 24
  %11 = bitcast i8* %.82 to i64*
  store i64 %.69, i64* %11, align 8
  tail call void @println(%string.560217* %.75)
  %.87 = load i64, i64* %.33, align 8
  %.88.not = icmp eq i64 %.87, 31
  br i1 %.88.not, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.4
  %.132 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.133 = bitcast i8* %.132 to %string.560217*
  %.133.repack = bitcast i8* %.132 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.133.repack, align 8
  %.133.repack4 = getelementptr inbounds i8, i8* %.132, i64 8
  %12 = bitcast i8* %.133.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.143, i64 0, i64 0), i8** %12, align 8
  %.133.repack5 = getelementptr inbounds i8, i8* %.132, i64 16
  %13 = bitcast i8* %.133.repack5 to i64*
  store i64 1, i64* %13, align 8
  %.133.repack6 = getelementptr inbounds i8, i8* %.132, i64 24
  %14 = bitcast i8* %.133.repack6 to i64*
  store i64 1, i64* %14, align 8
  tail call void @println(%string.560217* %.133)
  ret void

for.body.if:                                      ; preds = %for.body
  %.92 = tail call %string.560217* @token_value(%Token.560247* %.26, %string.560217* %.2)
  %.93 = getelementptr inbounds %string.560217, %string.560217* %.92, i64 0, i32 0
  %.94 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.94, i64 0, i32 11
  %.96 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.95, align 8
  %.97 = tail call i8* %.96(%string.560217* %.92)
  %.99 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.140, i64 0, i64 0), i8* %.97)
  %.100 = add i64 %.99, 1
  %.102 = tail call i8* @malloc(i64 %.100)
  %.103 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.102, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.140, i64 0, i64 0), i8* %.97)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.sink24 = phi i8* [ %.102, %for.body.if ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @str.141, i64 0, i64 0), %for.body ]
  %.sink21 = phi i64 [ %.99, %for.body.if ], [ 11, %for.body ]
  %.116 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.560217*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.117.repack, align 8
  %.117.repack10 = getelementptr inbounds i8, i8* %.116, i64 8
  %15 = bitcast i8* %.117.repack10 to i8**
  store i8* %.sink24, i8** %15, align 8
  %.117.repack11 = getelementptr inbounds i8, i8* %.116, i64 16
  %16 = bitcast i8* %.117.repack11 to i64*
  store i64 %.sink21, i64* %16, align 8
  %.117.repack12 = getelementptr inbounds i8, i8* %.116, i64 24
  %17 = bitcast i8* %.117.repack12 to i64*
  store i64 %.sink21, i64* %17, align 8
  tail call void @println(%string.560217* %.117)
  %.121 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.122 = bitcast i8* %.121 to %string.560217*
  %.122.repack = bitcast i8* %.121 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.122.repack, align 8
  %.122.repack13 = getelementptr inbounds i8, i8* %.121, i64 8
  %18 = bitcast i8* %.122.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.142, i64 0, i64 0), i8** %18, align 8
  %.122.repack14 = getelementptr inbounds i8, i8* %.121, i64 16
  %19 = bitcast i8* %.122.repack14 to i64*
  store i64 3, i64* %19, align 8
  %.122.repack15 = getelementptr inbounds i8, i8* %.121, i64 24
  %20 = bitcast i8* %.122.repack15 to i64*
  store i64 3, i64* %20, align 8
  tail call void @println(%string.560217* %.122)
  %.129 = add nuw nsw i64 %storemerge19, 1
  %.17 = load i64, i64* %.16, align 8
  %.18 = icmp slt i64 %.129, %.17
  br i1 %.18, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Node_constructor(%Node.560267* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %Node.560267, %Node.560267* %.1, i64 0, i32 1
  store %FloRange.560223* %.2, %FloRange.560223** %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @TypeNode_constructor(%TypeNode.560269* nocapture %.1, i64 %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %TypeNode.560269* %.1 to %Node.560267*
  tail call void @Node_constructor(%Node.560267* %.10, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.1, i64 0, i32 2
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<TypeNode>_constructor"(%"Array<TypeNode>.560273"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 1
  %0 = bitcast %TypeNode.560269*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<TypeNode>_resize"(%"Array<TypeNode>.560273"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 1
  %0 = bitcast %TypeNode.560269*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<TypeNode>_swap"(%"Array<TypeNode>.560273"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 1
  %.48 = load %TypeNode.560269**, %TypeNode.560269*** %.47, align 8
  %.49 = getelementptr inbounds %TypeNode.560269*, %TypeNode.560269** %.48, i64 %.2
  %4 = bitcast %TypeNode.560269** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %TypeNode.560269*, %TypeNode.560269** %.48, i64 %.3
  %5 = bitcast %TypeNode.560269** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %TypeNode.560269**, %TypeNode.560269*** %.47, align 8
  %.69 = getelementptr inbounds %TypeNode.560269*, %TypeNode.560269** %.67, i64 %.3
  %6 = bitcast %TypeNode.560269** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeNode>___sl__"(%"Array<TypeNode>.560273"* %.1, %TypeNode.560269* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 0
  %.17 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<TypeNode>.560273"*)*, void (%"Array<TypeNode>.560273"*)** %.18, align 8
  tail call void %.19(%"Array<TypeNode>.560273"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 1
  %.31 = load %TypeNode.560269**, %TypeNode.560269*** %.30, align 8
  %.33 = getelementptr inbounds %TypeNode.560269*, %TypeNode.560269** %.31, i64 %.24
  store %TypeNode.560269* %.2, %TypeNode.560269** %.33, align 8
  ret void
}

define void @"Array<TypeNode>___setitem__"(%"Array<TypeNode>.560273"* nocapture readonly %.1, i64 %.2, %TypeNode.560269* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 1
  %.30 = load %TypeNode.560269**, %TypeNode.560269*** %.29, align 8
  %.32 = getelementptr inbounds %TypeNode.560269*, %TypeNode.560269** %.30, i64 %.2
  store %TypeNode.560269* %.3, %TypeNode.560269** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeNode>_append"(%"Array<TypeNode>.560273"* %.1, %TypeNode.560269* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 0
  %.9 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)*, void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)** %.10, align 8
  tail call void %.11(%"Array<TypeNode>.560273"* %.1, %TypeNode.560269* %.2)
  ret void
}

define %TypeNode.560269* @"Array<TypeNode>___getitem__"(%"Array<TypeNode>.560273"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 1
  %.28 = load %TypeNode.560269**, %TypeNode.560269*** %.27, align 8
  %.29 = getelementptr inbounds %TypeNode.560269*, %TypeNode.560269** %.28, i64 %.2
  %.30 = load %TypeNode.560269*, %TypeNode.560269** %.29, align 8
  ret %TypeNode.560269* %.30

.4.endif:                                         ; preds = %.4
  ret %TypeNode.560269* null
}

define i1 @"Array<TypeNode>___eq__"(%"Array<TypeNode>.560273"* %.1, %"Array<TypeNode>.560273"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.28, i64 0, i32 5
  %.30 = load %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)*, %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)** %.29, align 8
  %.31 = tail call %TypeNode.560269* %.30(%"Array<TypeNode>.560273"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.35, i64 0, i32 5
  %.37 = load %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)*, %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)** %.36, align 8
  %.38 = tail call %TypeNode.560269* %.37(%"Array<TypeNode>.560273"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %TypeNode.560269* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %TypeNode.560269* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<TypeNode>___in__"(%"Array<TypeNode>.560273"* %.1, %TypeNode.560269* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %TypeNode.560269* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.19, i64 0, i32 5
  %.21 = load %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)*, %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)** %.20, align 8
  %.22 = tail call %TypeNode.560269* %.21(%"Array<TypeNode>.560273"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %TypeNode.560269* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<TypeNode>_find"(%"Array<TypeNode>.560273"* nocapture readonly %.1, %TypeNode.560269* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.1, i64 0, i32 1
  %.19 = load %TypeNode.560269**, %TypeNode.560269*** %.18, align 8
  %0 = ptrtoint %TypeNode.560269* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %TypeNode.560269*, %TypeNode.560269** %.19, i64 %storemerge5
  %1 = bitcast %TypeNode.560269** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @RecordTypeNode_constructor(%RecordTypeNode.560271* nocapture %.1, %IdentifierToken.560263* %.2, %FloRange.560223* %.3) local_unnamed_addr #4 {
.5:
  %.10 = bitcast %RecordTypeNode.560271* %.1 to %TypeNode.560269*
  tail call void @TypeNode_constructor(%TypeNode.560269* %.10, i64 18, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %RecordTypeNode.560271, %RecordTypeNode.560271* %.1, i64 0, i32 3
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.15, align 8
  %.19 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.21 to %"Array<TypeNode>_vtable_ty.560274"**
  store %"Array<TypeNode>_vtable_ty.560274"* @"Array<TypeNode>_vtable_data", %"Array<TypeNode>_vtable_ty.560274"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  %.31 = getelementptr inbounds %RecordTypeNode.560271, %RecordTypeNode.560271* %.1, i64 0, i32 4
  %3 = bitcast %"Array<TypeNode>.560273"** %.31 to i8**
  store i8* %.21, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @FunctionTypeNode_constructor(%FunctionTypeNode.560275* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #4 {
.4:
  %.8 = bitcast %FunctionTypeNode.560275* %.1 to %TypeNode.560269*
  tail call void @TypeNode_constructor(%TypeNode.560269* %.8, i64 17, %FloRange.560223* %.2)
  %.13 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<TypeNode>_vtable_ty.560274"**
  store %"Array<TypeNode>_vtable_ty.560274"* @"Array<TypeNode>_vtable_data", %"Array<TypeNode>_vtable_ty.560274"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %FunctionTypeNode.560275, %FunctionTypeNode.560275* %.1, i64 0, i32 3
  %3 = bitcast %"Array<TypeNode>.560273"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PointerTypeNode_constructor(%PointerTypeNode.560277* nocapture %.1, %TypeNode.560269* %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %PointerTypeNode.560277* %.1 to %TypeNode.560269*
  tail call void @TypeNode_constructor(%TypeNode.560269* %.10, i64 15, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %PointerTypeNode.560277, %PointerTypeNode.560277* %.1, i64 0, i32 3
  store %TypeNode.560269* %.2, %TypeNode.560269** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StatementNode_constructor(%StatementNode.560279* nocapture %.1, i64 %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %StatementNode.560279* %.1 to %Node.560267*
  tail call void @Node_constructor(%Node.560267* %.10, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %StatementNode.560279, %StatementNode.560279* %.1, i64 0, i32 2
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<StatementNode>_constructor"(%"Array<StatementNode>.560283"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 1
  %0 = bitcast %StatementNode.560279*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<StatementNode>_resize"(%"Array<StatementNode>.560283"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 1
  %0 = bitcast %StatementNode.560279*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<StatementNode>_swap"(%"Array<StatementNode>.560283"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 1
  %.48 = load %StatementNode.560279**, %StatementNode.560279*** %.47, align 8
  %.49 = getelementptr inbounds %StatementNode.560279*, %StatementNode.560279** %.48, i64 %.2
  %4 = bitcast %StatementNode.560279** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %StatementNode.560279*, %StatementNode.560279** %.48, i64 %.3
  %5 = bitcast %StatementNode.560279** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %StatementNode.560279**, %StatementNode.560279*** %.47, align 8
  %.69 = getelementptr inbounds %StatementNode.560279*, %StatementNode.560279** %.67, i64 %.3
  %6 = bitcast %StatementNode.560279** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<StatementNode>___sl__"(%"Array<StatementNode>.560283"* %.1, %StatementNode.560279* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 0
  %.17 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<StatementNode>.560283"*)*, void (%"Array<StatementNode>.560283"*)** %.18, align 8
  tail call void %.19(%"Array<StatementNode>.560283"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 1
  %.31 = load %StatementNode.560279**, %StatementNode.560279*** %.30, align 8
  %.33 = getelementptr inbounds %StatementNode.560279*, %StatementNode.560279** %.31, i64 %.24
  store %StatementNode.560279* %.2, %StatementNode.560279** %.33, align 8
  ret void
}

define void @"Array<StatementNode>___setitem__"(%"Array<StatementNode>.560283"* nocapture readonly %.1, i64 %.2, %StatementNode.560279* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 1
  %.30 = load %StatementNode.560279**, %StatementNode.560279*** %.29, align 8
  %.32 = getelementptr inbounds %StatementNode.560279*, %StatementNode.560279** %.30, i64 %.2
  store %StatementNode.560279* %.3, %StatementNode.560279** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<StatementNode>_append"(%"Array<StatementNode>.560283"* %.1, %StatementNode.560279* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 0
  %.9 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)*, void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)** %.10, align 8
  tail call void %.11(%"Array<StatementNode>.560283"* %.1, %StatementNode.560279* %.2)
  ret void
}

define %StatementNode.560279* @"Array<StatementNode>___getitem__"(%"Array<StatementNode>.560283"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 1
  %.28 = load %StatementNode.560279**, %StatementNode.560279*** %.27, align 8
  %.29 = getelementptr inbounds %StatementNode.560279*, %StatementNode.560279** %.28, i64 %.2
  %.30 = load %StatementNode.560279*, %StatementNode.560279** %.29, align 8
  ret %StatementNode.560279* %.30

.4.endif:                                         ; preds = %.4
  ret %StatementNode.560279* null
}

define i1 @"Array<StatementNode>___eq__"(%"Array<StatementNode>.560283"* %.1, %"Array<StatementNode>.560283"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.28, i64 0, i32 5
  %.30 = load %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)*, %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)** %.29, align 8
  %.31 = tail call %StatementNode.560279* %.30(%"Array<StatementNode>.560283"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.35, i64 0, i32 5
  %.37 = load %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)*, %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)** %.36, align 8
  %.38 = tail call %StatementNode.560279* %.37(%"Array<StatementNode>.560283"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %StatementNode.560279* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %StatementNode.560279* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<StatementNode>___in__"(%"Array<StatementNode>.560283"* %.1, %StatementNode.560279* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %StatementNode.560279* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.19, i64 0, i32 5
  %.21 = load %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)*, %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)** %.20, align 8
  %.22 = tail call %StatementNode.560279* %.21(%"Array<StatementNode>.560283"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %StatementNode.560279* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<StatementNode>_find"(%"Array<StatementNode>.560283"* nocapture readonly %.1, %StatementNode.560279* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.1, i64 0, i32 1
  %.19 = load %StatementNode.560279**, %StatementNode.560279*** %.18, align 8
  %0 = ptrtoint %StatementNode.560279* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %StatementNode.560279*, %StatementNode.560279** %.19, i64 %storemerge5
  %1 = bitcast %StatementNode.560279** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @BlockNode_constructor(%BlockNode.560281* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #4 {
.4:
  %.8 = bitcast %BlockNode.560281* %.1 to %Node.560267*
  tail call void @Node_constructor(%Node.560267* %.8, %FloRange.560223* %.2)
  %.13 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<StatementNode>_vtable_ty.560284"**
  store %"Array<StatementNode>_vtable_ty.560284"* @"Array<StatementNode>_vtable_data", %"Array<StatementNode>_vtable_ty.560284"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %BlockNode.560281, %BlockNode.560281* %.1, i64 0, i32 2
  %3 = bitcast %"Array<StatementNode>.560283"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ExpressionNode_constructor(%ExpressionNode.560285* nocapture %.1, i64 %.2, %FloRange.560223* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %ExpressionNode.560285* %.1 to %StatementNode.560279*
  tail call void @StatementNode_constructor(%StatementNode.560279* %.10, i64 8, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.1, i64 0, i32 3
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ArrayTypeNode_constructor(%ArrayTypeNode.560287* nocapture %.1, %TypeNode.560269* %.2, %ExpressionNode.560285* %.3, %FloRange.560223* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %ArrayTypeNode.560287* %.1 to %TypeNode.560269*
  tail call void @TypeNode_constructor(%TypeNode.560269* %.12, i64 16, %FloRange.560223* %.4)
  %.17 = getelementptr inbounds %ArrayTypeNode.560287, %ArrayTypeNode.560287* %.1, i64 0, i32 3
  store %TypeNode.560269* %.2, %TypeNode.560269** %.17, align 8
  %.21 = getelementptr inbounds %ArrayTypeNode.560287, %ArrayTypeNode.560287* %.1, i64 0, i32 4
  store %ExpressionNode.560285* %.3, %ExpressionNode.560285** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @IntExpressionNode_constructor(%IntExpressionNode.560289* nocapture %.1, %IntToken.560249* %.2) local_unnamed_addr #9 {
.4:
  %.8 = bitcast %IntExpressionNode.560289* %.1 to %ExpressionNode.560285*
  %.10 = getelementptr inbounds %IntToken.560249, %IntToken.560249* %.2, i64 0, i32 2
  %.11 = load %FloRange.560223*, %FloRange.560223** %.10, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.8, i64 0, %FloRange.560223* %.11)
  %.15 = getelementptr inbounds %IntExpressionNode.560289, %IntExpressionNode.560289* %.1, i64 0, i32 4
  store %IntToken.560249* %.2, %IntToken.560249** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @FloatExpressionNode_constructor(%FloatExpressionNode.560291* nocapture %.1, %FloatToken.560251* %.2) local_unnamed_addr #9 {
.4:
  %.8 = bitcast %FloatExpressionNode.560291* %.1 to %ExpressionNode.560285*
  %.10 = getelementptr inbounds %FloatToken.560251, %FloatToken.560251* %.2, i64 0, i32 2
  %.11 = load %FloRange.560223*, %FloRange.560223** %.10, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.8, i64 1, %FloRange.560223* %.11)
  %.15 = getelementptr inbounds %FloatExpressionNode.560291, %FloatExpressionNode.560291* %.1, i64 0, i32 4
  store %FloatToken.560251* %.2, %FloatToken.560251** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @CharExpressionNode_constructor(%CharExpressionNode.560293* nocapture %.1, %CharToken.560253* %.2) local_unnamed_addr #9 {
.4:
  %.8 = bitcast %CharExpressionNode.560293* %.1 to %ExpressionNode.560285*
  %.10 = getelementptr inbounds %CharToken.560253, %CharToken.560253* %.2, i64 0, i32 2
  %.11 = load %FloRange.560223*, %FloRange.560223** %.10, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.8, i64 3, %FloRange.560223* %.11)
  %.15 = getelementptr inbounds %CharExpressionNode.560293, %CharExpressionNode.560293* %.1, i64 0, i32 4
  store %CharToken.560253* %.2, %CharToken.560253** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ExpressionNode>_constructor"(%"Array<ExpressionNode>.560297"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 1
  %0 = bitcast %ExpressionNode.560285*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ExpressionNode>_resize"(%"Array<ExpressionNode>.560297"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 1
  %0 = bitcast %ExpressionNode.560285*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ExpressionNode>_swap"(%"Array<ExpressionNode>.560297"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 1
  %.48 = load %ExpressionNode.560285**, %ExpressionNode.560285*** %.47, align 8
  %.49 = getelementptr inbounds %ExpressionNode.560285*, %ExpressionNode.560285** %.48, i64 %.2
  %4 = bitcast %ExpressionNode.560285** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ExpressionNode.560285*, %ExpressionNode.560285** %.48, i64 %.3
  %5 = bitcast %ExpressionNode.560285** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ExpressionNode.560285**, %ExpressionNode.560285*** %.47, align 8
  %.69 = getelementptr inbounds %ExpressionNode.560285*, %ExpressionNode.560285** %.67, i64 %.3
  %6 = bitcast %ExpressionNode.560285** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ExpressionNode>___sl__"(%"Array<ExpressionNode>.560297"* %.1, %ExpressionNode.560285* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 0
  %.17 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ExpressionNode>.560297"*)*, void (%"Array<ExpressionNode>.560297"*)** %.18, align 8
  tail call void %.19(%"Array<ExpressionNode>.560297"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 1
  %.31 = load %ExpressionNode.560285**, %ExpressionNode.560285*** %.30, align 8
  %.33 = getelementptr inbounds %ExpressionNode.560285*, %ExpressionNode.560285** %.31, i64 %.24
  store %ExpressionNode.560285* %.2, %ExpressionNode.560285** %.33, align 8
  ret void
}

define void @"Array<ExpressionNode>___setitem__"(%"Array<ExpressionNode>.560297"* nocapture readonly %.1, i64 %.2, %ExpressionNode.560285* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 1
  %.30 = load %ExpressionNode.560285**, %ExpressionNode.560285*** %.29, align 8
  %.32 = getelementptr inbounds %ExpressionNode.560285*, %ExpressionNode.560285** %.30, i64 %.2
  store %ExpressionNode.560285* %.3, %ExpressionNode.560285** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ExpressionNode>_append"(%"Array<ExpressionNode>.560297"* %.1, %ExpressionNode.560285* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 0
  %.9 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)*, void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)** %.10, align 8
  tail call void %.11(%"Array<ExpressionNode>.560297"* %.1, %ExpressionNode.560285* %.2)
  ret void
}

define %ExpressionNode.560285* @"Array<ExpressionNode>___getitem__"(%"Array<ExpressionNode>.560297"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 1
  %.28 = load %ExpressionNode.560285**, %ExpressionNode.560285*** %.27, align 8
  %.29 = getelementptr inbounds %ExpressionNode.560285*, %ExpressionNode.560285** %.28, i64 %.2
  %.30 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.29, align 8
  ret %ExpressionNode.560285* %.30

.4.endif:                                         ; preds = %.4
  ret %ExpressionNode.560285* null
}

define i1 @"Array<ExpressionNode>___eq__"(%"Array<ExpressionNode>.560297"* %.1, %"Array<ExpressionNode>.560297"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.28, i64 0, i32 5
  %.30 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.29, align 8
  %.31 = tail call %ExpressionNode.560285* %.30(%"Array<ExpressionNode>.560297"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.35, i64 0, i32 5
  %.37 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.36, align 8
  %.38 = tail call %ExpressionNode.560285* %.37(%"Array<ExpressionNode>.560297"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ExpressionNode.560285* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ExpressionNode.560285* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ExpressionNode>___in__"(%"Array<ExpressionNode>.560297"* %.1, %ExpressionNode.560285* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ExpressionNode.560285* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.19, i64 0, i32 5
  %.21 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.20, align 8
  %.22 = tail call %ExpressionNode.560285* %.21(%"Array<ExpressionNode>.560297"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ExpressionNode.560285* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ExpressionNode>_find"(%"Array<ExpressionNode>.560297"* nocapture readonly %.1, %ExpressionNode.560285* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.1, i64 0, i32 1
  %.19 = load %ExpressionNode.560285**, %ExpressionNode.560285*** %.18, align 8
  %0 = ptrtoint %ExpressionNode.560285* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ExpressionNode.560285*, %ExpressionNode.560285** %.19, i64 %storemerge5
  %1 = bitcast %ExpressionNode.560285** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind
define void @StringExpressionNode_constructor(%StringExpressionNode.560295* nocapture %.1, %StrToken.560255* %.2, %"Array<ExpressionNode>.560297"* %.3) local_unnamed_addr #9 {
.5:
  %.10 = bitcast %StringExpressionNode.560295* %.1 to %ExpressionNode.560285*
  %.12 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.2, i64 0, i32 2
  %.13 = load %FloRange.560223*, %FloRange.560223** %.12, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.10, i64 2, %FloRange.560223* %.13)
  %.17 = getelementptr inbounds %StringExpressionNode.560295, %StringExpressionNode.560295* %.1, i64 0, i32 4
  store %StrToken.560255* %.2, %StrToken.560255** %.17, align 8
  %.21 = getelementptr inbounds %StringExpressionNode.560295, %StringExpressionNode.560295* %.1, i64 0, i32 5
  store %"Array<ExpressionNode>.560297"* %.3, %"Array<ExpressionNode>.560297"** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @VarAccessExpressionNode_constructor(%VarAccessExpressionNode.560299* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #9 {
.4:
  %.8 = bitcast %VarAccessExpressionNode.560299* %.1 to %ExpressionNode.560285*
  %.10 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.2, i64 0, i32 2
  %.11 = load %FloRange.560223*, %FloRange.560223** %.10, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.8, i64 7, %FloRange.560223* %.11)
  %.15 = getelementptr inbounds %VarAccessExpressionNode.560299, %VarAccessExpressionNode.560299* %.1, i64 0, i32 4
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @ArrayExpressionNode_constructor(%ArrayExpressionNode.560301* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #4 {
.4:
  %.8 = bitcast %ArrayExpressionNode.560301* %.1 to %ExpressionNode.560285*
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.8, i64 6, %FloRange.560223* %.2)
  %.13 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<ExpressionNode>_vtable_ty.560298"**
  store %"Array<ExpressionNode>_vtable_ty.560298"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.560298"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %ArrayExpressionNode.560301, %ArrayExpressionNode.560301* %.1, i64 0, i32 4
  %3 = bitcast %"Array<ExpressionNode>.560297"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @NewExpressionNode_constructor(%NewExpressionNode.560303* nocapture %.1, %TypeNode.560269* %.2, %FloRange.560223* %.3) local_unnamed_addr #4 {
.5:
  %.10 = bitcast %NewExpressionNode.560303* %.1 to %ExpressionNode.560285*
  %.13 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.1, i64 0, i32 4
  store %TypeNode.560269* %.2, %TypeNode.560269** %.13, align 8
  %.16 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.1, i64 0, i32 5
  store i1 true, i1* %.16, align 1
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.10, i64 11, %FloRange.560223* %.3)
  %.22 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.24 to %"Array<ExpressionNode>_vtable_ty.560298"**
  store %"Array<ExpressionNode>_vtable_ty.560298"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.560298"** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %0 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %0, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %1 = bitcast i8* %.30 to i64*
  store i64 0, i64* %1, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %2 = bitcast i8* %.32 to i64*
  store i64 8, i64* %2, align 8
  %.34 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.1, i64 0, i32 6
  %3 = bitcast %"Array<ExpressionNode>.560297"** %.34 to i8**
  store i8* %.24, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ExpressionIndexNode_constructor(%ExpressionIndexNode.560305* nocapture %.1, %ExpressionNode.560285* %.2, %ExpressionNode.560285* %.3, %FloRange.560223* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %ExpressionIndexNode.560305* %.1 to %ExpressionNode.560285*
  %.15 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.1, i64 0, i32 4
  store %ExpressionNode.560285* %.2, %ExpressionNode.560285** %.15, align 8
  %.19 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.1, i64 0, i32 5
  store %ExpressionNode.560285* %.3, %ExpressionNode.560285** %.19, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.12, i64 13, %FloRange.560223* %.4)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @MemberExpressionNode_constructor(%MemberExpressionNode.560307* nocapture %.1, %ExpressionNode.560285* %.2, %IdentifierToken.560263* %.3, %FloRange.560223* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %MemberExpressionNode.560307* %.1 to %ExpressionNode.560285*
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.12, i64 12, %FloRange.560223* %.4)
  %.17 = getelementptr inbounds %MemberExpressionNode.560307, %MemberExpressionNode.560307* %.1, i64 0, i32 4
  store %ExpressionNode.560285* %.2, %ExpressionNode.560285** %.17, align 8
  %.21 = getelementptr inbounds %MemberExpressionNode.560307, %MemberExpressionNode.560307* %.1, i64 0, i32 5
  store %IdentifierToken.560263* %.3, %IdentifierToken.560263** %.21, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @CallExpressionNode_constructor(%CallExpressionNode.560309* nocapture %.1, %ExpressionNode.560285* %.2, %FloRange.560223* %.3) local_unnamed_addr #4 {
.5:
  %.10 = bitcast %CallExpressionNode.560309* %.1 to %ExpressionNode.560285*
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.10, i64 14, %FloRange.560223* %.3)
  %.15 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.1, i64 0, i32 4
  store %ExpressionNode.560285* %.2, %ExpressionNode.560285** %.15, align 8
  %.19 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.21 to %"Array<ExpressionNode>_vtable_ty.560298"**
  store %"Array<ExpressionNode>_vtable_ty.560298"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.560298"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  %.31 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.1, i64 0, i32 5
  %3 = bitcast %"Array<ExpressionNode>.560297"** %.31 to i8**
  store i8* %.21, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @TypeCastExpressionNode_constructor(%TypeCastExpressionNode.560311* nocapture %.1, %ExpressionNode.560285* %.2, %TypeNode.560269* %.3) local_unnamed_addr #4 {
.5:
  %.10 = bitcast %TypeCastExpressionNode.560311* %.1 to %ExpressionNode.560285*
  %.12 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.2, i64 0, i32 1
  %.13 = load %FloRange.560223*, %FloRange.560223** %.12, align 8
  %.15 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.3, i64 0, i32 1
  %.16 = load %FloRange.560223*, %FloRange.560223** %.15, align 8
  %.17 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.13, %FloRange.560223* %.16)
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.10, i64 10, %FloRange.560223* %.17)
  %.21 = getelementptr inbounds %TypeCastExpressionNode.560311, %TypeCastExpressionNode.560311* %.1, i64 0, i32 4
  store %ExpressionNode.560285* %.2, %ExpressionNode.560285** %.21, align 8
  %.25 = getelementptr inbounds %TypeCastExpressionNode.560311, %TypeCastExpressionNode.560311* %.1, i64 0, i32 5
  store %TypeNode.560269* %.3, %TypeNode.560269** %.25, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* nocapture %.1, %ExpressionNode.560285* %.2, i64 %.3, %ExpressionNode.560285* %.4) local_unnamed_addr #4 {
.6:
  %.12 = bitcast %BinaryExpressionNode.560313* %.1 to %ExpressionNode.560285*
  %.14 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.2, i64 0, i32 1
  %.15 = load %FloRange.560223*, %FloRange.560223** %.14, align 8
  %.17 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.4, i64 0, i32 1
  %.18 = load %FloRange.560223*, %FloRange.560223** %.17, align 8
  %.19 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.15, %FloRange.560223* %.18)
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.12, i64 8, %FloRange.560223* %.19)
  %.23 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.1, i64 0, i32 4
  store %ExpressionNode.560285* %.2, %ExpressionNode.560285** %.23, align 8
  %.27 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.1, i64 0, i32 5
  store i64 %.3, i64* %.27, align 8
  %.31 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.1, i64 0, i32 6
  store %ExpressionNode.560285* %.4, %ExpressionNode.560285** %.31, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @TernaryExpressionNode_constructor(%TernaryExpressionNode.560315* nocapture %.1, %ExpressionNode.560285* %.2, %ExpressionNode.560285* %.3, %ExpressionNode.560285* %.4) local_unnamed_addr #4 {
.6:
  %.12 = bitcast %TernaryExpressionNode.560315* %.1 to %ExpressionNode.560285*
  %.14 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.2, i64 0, i32 1
  %.15 = load %FloRange.560223*, %FloRange.560223** %.14, align 8
  %.17 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.4, i64 0, i32 1
  %.18 = load %FloRange.560223*, %FloRange.560223** %.17, align 8
  %.19 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.15, %FloRange.560223* %.18)
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.12, i64 15, %FloRange.560223* %.19)
  %.23 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.1, i64 0, i32 4
  store %ExpressionNode.560285* %.2, %ExpressionNode.560285** %.23, align 8
  %.27 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.1, i64 0, i32 5
  store %ExpressionNode.560285* %.3, %ExpressionNode.560285** %.27, align 8
  %.31 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.1, i64 0, i32 6
  store %ExpressionNode.560285* %.4, %ExpressionNode.560285** %.31, align 8
  %.35 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.3, i64 0, i32 1
  %.36 = load %FloRange.560223*, %FloRange.560223** %.35, align 8
  %.39 = load %FloRange.560223*, %FloRange.560223** %.17, align 8
  %.40 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.36, %FloRange.560223* %.39)
  %.41 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.1, i64 0, i32 1
  store %FloRange.560223* %.40, %FloRange.560223** %.41, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @UnaryExpressionNode_constructor(%UnaryExpressionNode.560317* nocapture %.1, i64 %.2, %ExpressionNode.560285* %.3, %FloRange.560223* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %UnaryExpressionNode.560317* %.1 to %ExpressionNode.560285*
  %.15 = getelementptr inbounds %UnaryExpressionNode.560317, %UnaryExpressionNode.560317* %.1, i64 0, i32 4
  store i64 %.2, i64* %.15, align 8
  %.19 = getelementptr inbounds %UnaryExpressionNode.560317, %UnaryExpressionNode.560317* %.1, i64 0, i32 5
  store %ExpressionNode.560285* %.3, %ExpressionNode.560285** %.19, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.12, i64 9, %FloRange.560223* %.4)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IfStatementNode_constructor(%IfStatementNode.560319* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %IfStatementNode.560319* %.1 to %StatementNode.560279*
  tail call void @StatementNode_constructor(%StatementNode.560279* %.8, i64 0, %FloRange.560223* %.2)
  %.12 = getelementptr inbounds %IfStatementNode.560319, %IfStatementNode.560319* %.1, i64 0, i32 5
  store %BlockNode.560281* null, %BlockNode.560281** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @WhileStatementNode_constructor(%WhileStatementNode.560321* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %WhileStatementNode.560321* %.1 to %StatementNode.560279*
  tail call void @StatementNode_constructor(%StatementNode.560279* %.8, i64 4, %FloRange.560223* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ForStatementNode_constructor(%ForStatementNode.560323* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %ForStatementNode.560323* %.1 to %StatementNode.560279*
  %.10 = getelementptr inbounds %ForStatementNode.560323, %ForStatementNode.560323* %.1, i64 0, i32 3
  %.19 = getelementptr inbounds %ForStatementNode.560323, %ForStatementNode.560323* %.1, i64 0, i32 7
  store i64 0, i64* %.19, align 8
  %0 = bitcast %StatementNode.560279** %.10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  tail call void @StatementNode_constructor(%StatementNode.560279* %.8, i64 3, %FloRange.560223* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ReturnStatementNode_constructor(%ReturnStatementNode.560325* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %ReturnStatementNode.560325* %.1 to %StatementNode.560279*
  %.10 = getelementptr inbounds %ReturnStatementNode.560325, %ReturnStatementNode.560325* %.1, i64 0, i32 3
  store %ExpressionNode.560285* null, %ExpressionNode.560285** %.10, align 8
  tail call void @StatementNode_constructor(%StatementNode.560279* %.8, i64 7, %FloRange.560223* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarDeclarationStatement_constructor(%VarDeclarationStatement.560327* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %VarDeclarationStatement.560327* %.1 to %StatementNode.560279*
  tail call void @StatementNode_constructor(%StatementNode.560279* %.8, i64 1, %FloRange.560223* %.2)
  %.12 = getelementptr inbounds %VarDeclarationStatement.560327, %VarDeclarationStatement.560327* %.1, i64 0, i32 4
  %0 = bitcast %TypeNode.560269** %.12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstDeclarationStatement_constructor(%ConstDeclarationStatement.560329* nocapture %.1, %FloRange.560223* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %ConstDeclarationStatement.560329* %.1 to %StatementNode.560279*
  tail call void @StatementNode_constructor(%StatementNode.560279* %.8, i64 2, %FloRange.560223* %.2)
  %.12 = getelementptr inbounds %ConstDeclarationStatement.560329, %ConstDeclarationStatement.560329* %.1, i64 0, i32 4
  store %TypeNode.560269* null, %TypeNode.560269** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ArgNode_constructor(%ArgNode.560331* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %ArgNode.560331, %ArgNode.560331* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  %.12 = getelementptr inbounds %ArgNode.560331, %ArgNode.560331* %.1, i64 0, i32 2
  %0 = bitcast %TypeNode.560269** %.12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ArgNode>_constructor"(%"Array<ArgNode>.560335"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 1
  %0 = bitcast %ArgNode.560331*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ArgNode>_resize"(%"Array<ArgNode>.560335"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 1
  %0 = bitcast %ArgNode.560331*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ArgNode>_swap"(%"Array<ArgNode>.560335"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 1
  %.48 = load %ArgNode.560331**, %ArgNode.560331*** %.47, align 8
  %.49 = getelementptr inbounds %ArgNode.560331*, %ArgNode.560331** %.48, i64 %.2
  %4 = bitcast %ArgNode.560331** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ArgNode.560331*, %ArgNode.560331** %.48, i64 %.3
  %5 = bitcast %ArgNode.560331** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ArgNode.560331**, %ArgNode.560331*** %.47, align 8
  %.69 = getelementptr inbounds %ArgNode.560331*, %ArgNode.560331** %.67, i64 %.3
  %6 = bitcast %ArgNode.560331** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ArgNode>___sl__"(%"Array<ArgNode>.560335"* %.1, %ArgNode.560331* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 0
  %.17 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ArgNode>.560335"*)*, void (%"Array<ArgNode>.560335"*)** %.18, align 8
  tail call void %.19(%"Array<ArgNode>.560335"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 1
  %.31 = load %ArgNode.560331**, %ArgNode.560331*** %.30, align 8
  %.33 = getelementptr inbounds %ArgNode.560331*, %ArgNode.560331** %.31, i64 %.24
  store %ArgNode.560331* %.2, %ArgNode.560331** %.33, align 8
  ret void
}

define void @"Array<ArgNode>___setitem__"(%"Array<ArgNode>.560335"* nocapture readonly %.1, i64 %.2, %ArgNode.560331* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 1
  %.30 = load %ArgNode.560331**, %ArgNode.560331*** %.29, align 8
  %.32 = getelementptr inbounds %ArgNode.560331*, %ArgNode.560331** %.30, i64 %.2
  store %ArgNode.560331* %.3, %ArgNode.560331** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ArgNode>_append"(%"Array<ArgNode>.560335"* %.1, %ArgNode.560331* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 0
  %.9 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)*, void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)** %.10, align 8
  tail call void %.11(%"Array<ArgNode>.560335"* %.1, %ArgNode.560331* %.2)
  ret void
}

define %ArgNode.560331* @"Array<ArgNode>___getitem__"(%"Array<ArgNode>.560335"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 1
  %.28 = load %ArgNode.560331**, %ArgNode.560331*** %.27, align 8
  %.29 = getelementptr inbounds %ArgNode.560331*, %ArgNode.560331** %.28, i64 %.2
  %.30 = load %ArgNode.560331*, %ArgNode.560331** %.29, align 8
  ret %ArgNode.560331* %.30

.4.endif:                                         ; preds = %.4
  ret %ArgNode.560331* null
}

define i1 @"Array<ArgNode>___eq__"(%"Array<ArgNode>.560335"* %.1, %"Array<ArgNode>.560335"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.28, i64 0, i32 5
  %.30 = load %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)*, %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)** %.29, align 8
  %.31 = tail call %ArgNode.560331* %.30(%"Array<ArgNode>.560335"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.35, i64 0, i32 5
  %.37 = load %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)*, %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)** %.36, align 8
  %.38 = tail call %ArgNode.560331* %.37(%"Array<ArgNode>.560335"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ArgNode.560331* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ArgNode.560331* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ArgNode>___in__"(%"Array<ArgNode>.560335"* %.1, %ArgNode.560331* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ArgNode.560331* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.19, i64 0, i32 5
  %.21 = load %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)*, %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)** %.20, align 8
  %.22 = tail call %ArgNode.560331* %.21(%"Array<ArgNode>.560335"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ArgNode.560331* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ArgNode>_find"(%"Array<ArgNode>.560335"* nocapture readonly %.1, %ArgNode.560331* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.1, i64 0, i32 1
  %.19 = load %ArgNode.560331**, %ArgNode.560331*** %.18, align 8
  %0 = ptrtoint %ArgNode.560331* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ArgNode.560331*, %ArgNode.560331** %.19, i64 %storemerge5
  %1 = bitcast %ArgNode.560331** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @FunctionDeclarationNode_constructor(%FunctionDeclarationNode.560333* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<ArgNode>_vtable_ty.560336"**
  store %"Array<ArgNode>_vtable_ty.560336"* @"Array<ArgNode>_vtable_data", %"Array<ArgNode>_vtable_ty.560336"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.1, i64 0, i32 2
  %3 = bitcast %"Array<ArgNode>.560335"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.1, i64 0, i32 5
  store i1 false, i1* %.22, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @MethodNode_constructor(%MethodNode.560337* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #4 {
.4:
  %.9 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  %.13 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<ArgNode>_vtable_ty.560336"**
  store %"Array<ArgNode>_vtable_ty.560336"* @"Array<ArgNode>_vtable_data", %"Array<ArgNode>_vtable_ty.560336"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.1, i64 0, i32 2
  %3 = bitcast %"Array<ArgNode>.560335"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  %.28 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.1, i64 0, i32 6
  store i1 true, i1* %.28, align 1
  %.31 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.1, i64 0, i32 7
  store i1 false, i1* %.31, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FieldNode_constructor(%FieldNode.560339* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %FieldNode.560339, %FieldNode.560339* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  %.12 = getelementptr inbounds %FieldNode.560339, %FieldNode.560339* %.1, i64 0, i32 3
  store %ExpressionNode.560285* null, %ExpressionNode.560285** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @GenericParameterNode_constructor(%GenericParameterNode.560341* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %GenericParameterNode.560341, %GenericParameterNode.560341* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<GenericParameterNode>_constructor"(%"Array<GenericParameterNode>.560345"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 1
  %0 = bitcast %GenericParameterNode.560341*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<GenericParameterNode>_resize"(%"Array<GenericParameterNode>.560345"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 1
  %0 = bitcast %GenericParameterNode.560341*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<GenericParameterNode>_swap"(%"Array<GenericParameterNode>.560345"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 1
  %.48 = load %GenericParameterNode.560341**, %GenericParameterNode.560341*** %.47, align 8
  %.49 = getelementptr inbounds %GenericParameterNode.560341*, %GenericParameterNode.560341** %.48, i64 %.2
  %4 = bitcast %GenericParameterNode.560341** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %GenericParameterNode.560341*, %GenericParameterNode.560341** %.48, i64 %.3
  %5 = bitcast %GenericParameterNode.560341** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %GenericParameterNode.560341**, %GenericParameterNode.560341*** %.47, align 8
  %.69 = getelementptr inbounds %GenericParameterNode.560341*, %GenericParameterNode.560341** %.67, i64 %.3
  %6 = bitcast %GenericParameterNode.560341** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<GenericParameterNode>___sl__"(%"Array<GenericParameterNode>.560345"* %.1, %GenericParameterNode.560341* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 0
  %.17 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<GenericParameterNode>.560345"*)*, void (%"Array<GenericParameterNode>.560345"*)** %.18, align 8
  tail call void %.19(%"Array<GenericParameterNode>.560345"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 1
  %.31 = load %GenericParameterNode.560341**, %GenericParameterNode.560341*** %.30, align 8
  %.33 = getelementptr inbounds %GenericParameterNode.560341*, %GenericParameterNode.560341** %.31, i64 %.24
  store %GenericParameterNode.560341* %.2, %GenericParameterNode.560341** %.33, align 8
  ret void
}

define void @"Array<GenericParameterNode>___setitem__"(%"Array<GenericParameterNode>.560345"* nocapture readonly %.1, i64 %.2, %GenericParameterNode.560341* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 1
  %.30 = load %GenericParameterNode.560341**, %GenericParameterNode.560341*** %.29, align 8
  %.32 = getelementptr inbounds %GenericParameterNode.560341*, %GenericParameterNode.560341** %.30, i64 %.2
  store %GenericParameterNode.560341* %.3, %GenericParameterNode.560341** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<GenericParameterNode>_append"(%"Array<GenericParameterNode>.560345"* %.1, %GenericParameterNode.560341* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 0
  %.9 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)*, void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)** %.10, align 8
  tail call void %.11(%"Array<GenericParameterNode>.560345"* %.1, %GenericParameterNode.560341* %.2)
  ret void
}

define %GenericParameterNode.560341* @"Array<GenericParameterNode>___getitem__"(%"Array<GenericParameterNode>.560345"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 1
  %.28 = load %GenericParameterNode.560341**, %GenericParameterNode.560341*** %.27, align 8
  %.29 = getelementptr inbounds %GenericParameterNode.560341*, %GenericParameterNode.560341** %.28, i64 %.2
  %.30 = load %GenericParameterNode.560341*, %GenericParameterNode.560341** %.29, align 8
  ret %GenericParameterNode.560341* %.30

.4.endif:                                         ; preds = %.4
  ret %GenericParameterNode.560341* null
}

define i1 @"Array<GenericParameterNode>___eq__"(%"Array<GenericParameterNode>.560345"* %.1, %"Array<GenericParameterNode>.560345"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.28, i64 0, i32 5
  %.30 = load %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)*, %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)** %.29, align 8
  %.31 = tail call %GenericParameterNode.560341* %.30(%"Array<GenericParameterNode>.560345"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.35, i64 0, i32 5
  %.37 = load %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)*, %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)** %.36, align 8
  %.38 = tail call %GenericParameterNode.560341* %.37(%"Array<GenericParameterNode>.560345"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %GenericParameterNode.560341* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %GenericParameterNode.560341* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<GenericParameterNode>___in__"(%"Array<GenericParameterNode>.560345"* %.1, %GenericParameterNode.560341* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %GenericParameterNode.560341* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.19, i64 0, i32 5
  %.21 = load %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)*, %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)** %.20, align 8
  %.22 = tail call %GenericParameterNode.560341* %.21(%"Array<GenericParameterNode>.560345"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %GenericParameterNode.560341* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<GenericParameterNode>_find"(%"Array<GenericParameterNode>.560345"* nocapture readonly %.1, %GenericParameterNode.560341* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.1, i64 0, i32 1
  %.19 = load %GenericParameterNode.560341**, %GenericParameterNode.560341*** %.18, align 8
  %0 = ptrtoint %GenericParameterNode.560341* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %GenericParameterNode.560341*, %GenericParameterNode.560341** %.19, i64 %storemerge5
  %1 = bitcast %GenericParameterNode.560341** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<FieldNode>_constructor"(%"Array<FieldNode>.560346"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 1
  %0 = bitcast %FieldNode.560339*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FieldNode>_resize"(%"Array<FieldNode>.560346"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 1
  %0 = bitcast %FieldNode.560339*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FieldNode>_swap"(%"Array<FieldNode>.560346"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 1
  %.48 = load %FieldNode.560339**, %FieldNode.560339*** %.47, align 8
  %.49 = getelementptr inbounds %FieldNode.560339*, %FieldNode.560339** %.48, i64 %.2
  %4 = bitcast %FieldNode.560339** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FieldNode.560339*, %FieldNode.560339** %.48, i64 %.3
  %5 = bitcast %FieldNode.560339** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FieldNode.560339**, %FieldNode.560339*** %.47, align 8
  %.69 = getelementptr inbounds %FieldNode.560339*, %FieldNode.560339** %.67, i64 %.3
  %6 = bitcast %FieldNode.560339** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FieldNode>___sl__"(%"Array<FieldNode>.560346"* %.1, %FieldNode.560339* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 0
  %.17 = load %"Array<FieldNode>_vtable_ty.560349"*, %"Array<FieldNode>_vtable_ty.560349"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.560349", %"Array<FieldNode>_vtable_ty.560349"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FieldNode>.560346"*)*, void (%"Array<FieldNode>.560346"*)** %.18, align 8
  tail call void %.19(%"Array<FieldNode>.560346"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 1
  %.31 = load %FieldNode.560339**, %FieldNode.560339*** %.30, align 8
  %.33 = getelementptr inbounds %FieldNode.560339*, %FieldNode.560339** %.31, i64 %.24
  store %FieldNode.560339* %.2, %FieldNode.560339** %.33, align 8
  ret void
}

define void @"Array<FieldNode>___setitem__"(%"Array<FieldNode>.560346"* nocapture readonly %.1, i64 %.2, %FieldNode.560339* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 1
  %.30 = load %FieldNode.560339**, %FieldNode.560339*** %.29, align 8
  %.32 = getelementptr inbounds %FieldNode.560339*, %FieldNode.560339** %.30, i64 %.2
  store %FieldNode.560339* %.3, %FieldNode.560339** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FieldNode>_append"(%"Array<FieldNode>.560346"* %.1, %FieldNode.560339* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 0
  %.9 = load %"Array<FieldNode>_vtable_ty.560349"*, %"Array<FieldNode>_vtable_ty.560349"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.560349", %"Array<FieldNode>_vtable_ty.560349"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)*, void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)** %.10, align 8
  tail call void %.11(%"Array<FieldNode>.560346"* %.1, %FieldNode.560339* %.2)
  ret void
}

define %FieldNode.560339* @"Array<FieldNode>___getitem__"(%"Array<FieldNode>.560346"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 1
  %.28 = load %FieldNode.560339**, %FieldNode.560339*** %.27, align 8
  %.29 = getelementptr inbounds %FieldNode.560339*, %FieldNode.560339** %.28, i64 %.2
  %.30 = load %FieldNode.560339*, %FieldNode.560339** %.29, align 8
  ret %FieldNode.560339* %.30

.4.endif:                                         ; preds = %.4
  ret %FieldNode.560339* null
}

define i1 @"Array<FieldNode>___eq__"(%"Array<FieldNode>.560346"* %.1, %"Array<FieldNode>.560346"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FieldNode>_vtable_ty.560349"*, %"Array<FieldNode>_vtable_ty.560349"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.560349", %"Array<FieldNode>_vtable_ty.560349"* %.28, i64 0, i32 5
  %.30 = load %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)*, %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)** %.29, align 8
  %.31 = tail call %FieldNode.560339* %.30(%"Array<FieldNode>.560346"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<FieldNode>_vtable_ty.560349"*, %"Array<FieldNode>_vtable_ty.560349"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.560349", %"Array<FieldNode>_vtable_ty.560349"* %.35, i64 0, i32 5
  %.37 = load %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)*, %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)** %.36, align 8
  %.38 = tail call %FieldNode.560339* %.37(%"Array<FieldNode>.560346"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %FieldNode.560339* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FieldNode.560339* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FieldNode>___in__"(%"Array<FieldNode>.560346"* %.1, %FieldNode.560339* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FieldNode.560339* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FieldNode>_vtable_ty.560349"*, %"Array<FieldNode>_vtable_ty.560349"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.560349", %"Array<FieldNode>_vtable_ty.560349"* %.19, i64 0, i32 5
  %.21 = load %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)*, %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)** %.20, align 8
  %.22 = tail call %FieldNode.560339* %.21(%"Array<FieldNode>.560346"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %FieldNode.560339* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FieldNode>_find"(%"Array<FieldNode>.560346"* nocapture readonly %.1, %FieldNode.560339* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1, i64 0, i32 1
  %.19 = load %FieldNode.560339**, %FieldNode.560339*** %.18, align 8
  %0 = ptrtoint %FieldNode.560339* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FieldNode.560339*, %FieldNode.560339** %.19, i64 %storemerge5
  %1 = bitcast %FieldNode.560339** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<MethodNode>_constructor"(%"Array<MethodNode>.560347"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 1
  %0 = bitcast %MethodNode.560337*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<MethodNode>_resize"(%"Array<MethodNode>.560347"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 1
  %0 = bitcast %MethodNode.560337*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<MethodNode>_swap"(%"Array<MethodNode>.560347"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 1
  %.48 = load %MethodNode.560337**, %MethodNode.560337*** %.47, align 8
  %.49 = getelementptr inbounds %MethodNode.560337*, %MethodNode.560337** %.48, i64 %.2
  %4 = bitcast %MethodNode.560337** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %MethodNode.560337*, %MethodNode.560337** %.48, i64 %.3
  %5 = bitcast %MethodNode.560337** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %MethodNode.560337**, %MethodNode.560337*** %.47, align 8
  %.69 = getelementptr inbounds %MethodNode.560337*, %MethodNode.560337** %.67, i64 %.3
  %6 = bitcast %MethodNode.560337** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<MethodNode>___sl__"(%"Array<MethodNode>.560347"* %.1, %MethodNode.560337* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 0
  %.17 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<MethodNode>.560347"*)*, void (%"Array<MethodNode>.560347"*)** %.18, align 8
  tail call void %.19(%"Array<MethodNode>.560347"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 1
  %.31 = load %MethodNode.560337**, %MethodNode.560337*** %.30, align 8
  %.33 = getelementptr inbounds %MethodNode.560337*, %MethodNode.560337** %.31, i64 %.24
  store %MethodNode.560337* %.2, %MethodNode.560337** %.33, align 8
  ret void
}

define void @"Array<MethodNode>___setitem__"(%"Array<MethodNode>.560347"* nocapture readonly %.1, i64 %.2, %MethodNode.560337* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 1
  %.30 = load %MethodNode.560337**, %MethodNode.560337*** %.29, align 8
  %.32 = getelementptr inbounds %MethodNode.560337*, %MethodNode.560337** %.30, i64 %.2
  store %MethodNode.560337* %.3, %MethodNode.560337** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<MethodNode>_append"(%"Array<MethodNode>.560347"* %.1, %MethodNode.560337* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 0
  %.9 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)*, void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)** %.10, align 8
  tail call void %.11(%"Array<MethodNode>.560347"* %.1, %MethodNode.560337* %.2)
  ret void
}

define %MethodNode.560337* @"Array<MethodNode>___getitem__"(%"Array<MethodNode>.560347"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 1
  %.28 = load %MethodNode.560337**, %MethodNode.560337*** %.27, align 8
  %.29 = getelementptr inbounds %MethodNode.560337*, %MethodNode.560337** %.28, i64 %.2
  %.30 = load %MethodNode.560337*, %MethodNode.560337** %.29, align 8
  ret %MethodNode.560337* %.30

.4.endif:                                         ; preds = %.4
  ret %MethodNode.560337* null
}

define i1 @"Array<MethodNode>___eq__"(%"Array<MethodNode>.560347"* %.1, %"Array<MethodNode>.560347"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.28, i64 0, i32 5
  %.30 = load %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)*, %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)** %.29, align 8
  %.31 = tail call %MethodNode.560337* %.30(%"Array<MethodNode>.560347"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.35, i64 0, i32 5
  %.37 = load %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)*, %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)** %.36, align 8
  %.38 = tail call %MethodNode.560337* %.37(%"Array<MethodNode>.560347"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %MethodNode.560337* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %MethodNode.560337* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<MethodNode>___in__"(%"Array<MethodNode>.560347"* %.1, %MethodNode.560337* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %MethodNode.560337* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.19, i64 0, i32 5
  %.21 = load %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)*, %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)** %.20, align 8
  %.22 = tail call %MethodNode.560337* %.21(%"Array<MethodNode>.560347"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %MethodNode.560337* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<MethodNode>_find"(%"Array<MethodNode>.560347"* nocapture readonly %.1, %MethodNode.560337* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1, i64 0, i32 1
  %.19 = load %MethodNode.560337**, %MethodNode.560337*** %.18, align 8
  %0 = ptrtoint %MethodNode.560337* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %MethodNode.560337*, %MethodNode.560337** %.19, i64 %storemerge5
  %1 = bitcast %MethodNode.560337** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @ClassDeclarationNode_constructor(%ClassDeclarationNode.560343* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #4 {
.4:
  %.9 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  %.13 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<FieldNode>_vtable_ty.560349"**
  store %"Array<FieldNode>_vtable_ty.560349"* @"Array<FieldNode>_vtable_data", %"Array<FieldNode>_vtable_ty.560349"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.1, i64 0, i32 4
  %3 = bitcast %"Array<FieldNode>.560346"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  %.29 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.31 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.31 to %"Array<MethodNode>_vtable_ty.560350"**
  store %"Array<MethodNode>_vtable_ty.560350"* @"Array<MethodNode>_vtable_data", %"Array<MethodNode>_vtable_ty.560350"** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %4 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %4, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %5 = bitcast i8* %.37 to i64*
  store i64 0, i64* %5, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %6 = bitcast i8* %.39 to i64*
  store i64 8, i64* %6, align 8
  %.41 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.1, i64 0, i32 5
  %7 = bitcast %"Array<MethodNode>.560347"** %.41 to i8**
  store i8* %.31, i8** %7, align 8
  %.45 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.47 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.47 to %"Array<GenericParameterNode>_vtable_ty.560348"**
  store %"Array<GenericParameterNode>_vtable_ty.560348"* @"Array<GenericParameterNode>_vtable_data", %"Array<GenericParameterNode>_vtable_ty.560348"** %.49, align 8
  %.51 = getelementptr inbounds i8, i8* %.47, i64 8
  %8 = bitcast i8* %.51 to i8**
  store i8* %.45, i8** %8, align 8
  %.53 = getelementptr inbounds i8, i8* %.47, i64 16
  %9 = bitcast i8* %.53 to i64*
  store i64 0, i64* %9, align 8
  %.55 = getelementptr inbounds i8, i8* %.47, i64 24
  %10 = bitcast i8* %.55 to i64*
  store i64 8, i64* %10, align 8
  %.57 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.1, i64 0, i32 2
  %11 = bitcast %"Array<GenericParameterNode>.560345"** %.57 to i8**
  store i8* %.47, i8** %11, align 8
  %.60 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.1, i64 0, i32 3
  store %RecordTypeNode.560271* null, %RecordTypeNode.560271** %.60, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumNodeField_constructor(%EnumNodeField.560351* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %EnumNodeField.560351, %EnumNodeField.560351* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  %.12 = getelementptr inbounds %EnumNodeField.560351, %EnumNodeField.560351* %.1, i64 0, i32 2
  store %ExpressionNode.560285* null, %ExpressionNode.560285** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<EnumNodeField>_constructor"(%"Array<EnumNodeField>.560355"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNodeField.560351*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumNodeField>_resize"(%"Array<EnumNodeField>.560355"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNodeField.560351*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<EnumNodeField>_swap"(%"Array<EnumNodeField>.560355"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 1
  %.48 = load %EnumNodeField.560351**, %EnumNodeField.560351*** %.47, align 8
  %.49 = getelementptr inbounds %EnumNodeField.560351*, %EnumNodeField.560351** %.48, i64 %.2
  %4 = bitcast %EnumNodeField.560351** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %EnumNodeField.560351*, %EnumNodeField.560351** %.48, i64 %.3
  %5 = bitcast %EnumNodeField.560351** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %EnumNodeField.560351**, %EnumNodeField.560351*** %.47, align 8
  %.69 = getelementptr inbounds %EnumNodeField.560351*, %EnumNodeField.560351** %.67, i64 %.3
  %6 = bitcast %EnumNodeField.560351** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNodeField>___sl__"(%"Array<EnumNodeField>.560355"* %.1, %EnumNodeField.560351* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumNodeField>_vtable_ty.560356"*, %"Array<EnumNodeField>_vtable_ty.560356"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.560356", %"Array<EnumNodeField>_vtable_ty.560356"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumNodeField>.560355"*)*, void (%"Array<EnumNodeField>.560355"*)** %.18, align 8
  tail call void %.19(%"Array<EnumNodeField>.560355"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 1
  %.31 = load %EnumNodeField.560351**, %EnumNodeField.560351*** %.30, align 8
  %.33 = getelementptr inbounds %EnumNodeField.560351*, %EnumNodeField.560351** %.31, i64 %.24
  store %EnumNodeField.560351* %.2, %EnumNodeField.560351** %.33, align 8
  ret void
}

define void @"Array<EnumNodeField>___setitem__"(%"Array<EnumNodeField>.560355"* nocapture readonly %.1, i64 %.2, %EnumNodeField.560351* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 1
  %.30 = load %EnumNodeField.560351**, %EnumNodeField.560351*** %.29, align 8
  %.32 = getelementptr inbounds %EnumNodeField.560351*, %EnumNodeField.560351** %.30, i64 %.2
  store %EnumNodeField.560351* %.3, %EnumNodeField.560351** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNodeField>_append"(%"Array<EnumNodeField>.560355"* %.1, %EnumNodeField.560351* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumNodeField>_vtable_ty.560356"*, %"Array<EnumNodeField>_vtable_ty.560356"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.560356", %"Array<EnumNodeField>_vtable_ty.560356"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)*, void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)** %.10, align 8
  tail call void %.11(%"Array<EnumNodeField>.560355"* %.1, %EnumNodeField.560351* %.2)
  ret void
}

define %EnumNodeField.560351* @"Array<EnumNodeField>___getitem__"(%"Array<EnumNodeField>.560355"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 1
  %.28 = load %EnumNodeField.560351**, %EnumNodeField.560351*** %.27, align 8
  %.29 = getelementptr inbounds %EnumNodeField.560351*, %EnumNodeField.560351** %.28, i64 %.2
  %.30 = load %EnumNodeField.560351*, %EnumNodeField.560351** %.29, align 8
  ret %EnumNodeField.560351* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumNodeField.560351* null
}

define i1 @"Array<EnumNodeField>___eq__"(%"Array<EnumNodeField>.560355"* %.1, %"Array<EnumNodeField>.560355"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumNodeField>_vtable_ty.560356"*, %"Array<EnumNodeField>_vtable_ty.560356"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.560356", %"Array<EnumNodeField>_vtable_ty.560356"* %.28, i64 0, i32 5
  %.30 = load %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)*, %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)** %.29, align 8
  %.31 = tail call %EnumNodeField.560351* %.30(%"Array<EnumNodeField>.560355"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumNodeField>_vtable_ty.560356"*, %"Array<EnumNodeField>_vtable_ty.560356"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.560356", %"Array<EnumNodeField>_vtable_ty.560356"* %.35, i64 0, i32 5
  %.37 = load %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)*, %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)** %.36, align 8
  %.38 = tail call %EnumNodeField.560351* %.37(%"Array<EnumNodeField>.560355"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumNodeField.560351* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumNodeField.560351* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumNodeField>___in__"(%"Array<EnumNodeField>.560355"* %.1, %EnumNodeField.560351* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumNodeField.560351* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumNodeField>_vtable_ty.560356"*, %"Array<EnumNodeField>_vtable_ty.560356"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.560356", %"Array<EnumNodeField>_vtable_ty.560356"* %.19, i64 0, i32 5
  %.21 = load %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)*, %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)** %.20, align 8
  %.22 = tail call %EnumNodeField.560351* %.21(%"Array<EnumNodeField>.560355"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumNodeField.560351* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumNodeField>_find"(%"Array<EnumNodeField>.560355"* nocapture readonly %.1, %EnumNodeField.560351* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.1, i64 0, i32 1
  %.19 = load %EnumNodeField.560351**, %EnumNodeField.560351*** %.18, align 8
  %0 = ptrtoint %EnumNodeField.560351* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumNodeField.560351*, %EnumNodeField.560351** %.19, i64 %storemerge5
  %1 = bitcast %EnumNodeField.560351** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @EnumNode_constructor(%EnumNode.560353* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #4 {
.4:
  %.9 = getelementptr inbounds %EnumNode.560353, %EnumNode.560353* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  %.13 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<EnumNodeField>_vtable_ty.560356"**
  store %"Array<EnumNodeField>_vtable_ty.560356"* @"Array<EnumNodeField>_vtable_data", %"Array<EnumNodeField>_vtable_ty.560356"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %EnumNode.560353, %EnumNode.560353* %.1, i64 0, i32 2
  %3 = bitcast %"Array<EnumNodeField>.560355"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  %.28 = getelementptr inbounds %EnumNode.560353, %EnumNode.560353* %.1, i64 0, i32 3
  store %TypeNode.560269* null, %TypeNode.560269** %.28, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<IdentifierToken>_constructor"(%"Array<IdentifierToken>.560359"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 1
  %0 = bitcast %IdentifierToken.560263*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<IdentifierToken>_resize"(%"Array<IdentifierToken>.560359"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 1
  %0 = bitcast %IdentifierToken.560263*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<IdentifierToken>_swap"(%"Array<IdentifierToken>.560359"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 1
  %.48 = load %IdentifierToken.560263**, %IdentifierToken.560263*** %.47, align 8
  %.49 = getelementptr inbounds %IdentifierToken.560263*, %IdentifierToken.560263** %.48, i64 %.2
  %4 = bitcast %IdentifierToken.560263** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %IdentifierToken.560263*, %IdentifierToken.560263** %.48, i64 %.3
  %5 = bitcast %IdentifierToken.560263** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %IdentifierToken.560263**, %IdentifierToken.560263*** %.47, align 8
  %.69 = getelementptr inbounds %IdentifierToken.560263*, %IdentifierToken.560263** %.67, i64 %.3
  %6 = bitcast %IdentifierToken.560263** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<IdentifierToken>___sl__"(%"Array<IdentifierToken>.560359"* %.1, %IdentifierToken.560263* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 0
  %.17 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<IdentifierToken>.560359"*)*, void (%"Array<IdentifierToken>.560359"*)** %.18, align 8
  tail call void %.19(%"Array<IdentifierToken>.560359"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 1
  %.31 = load %IdentifierToken.560263**, %IdentifierToken.560263*** %.30, align 8
  %.33 = getelementptr inbounds %IdentifierToken.560263*, %IdentifierToken.560263** %.31, i64 %.24
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.33, align 8
  ret void
}

define void @"Array<IdentifierToken>___setitem__"(%"Array<IdentifierToken>.560359"* nocapture readonly %.1, i64 %.2, %IdentifierToken.560263* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 1
  %.30 = load %IdentifierToken.560263**, %IdentifierToken.560263*** %.29, align 8
  %.32 = getelementptr inbounds %IdentifierToken.560263*, %IdentifierToken.560263** %.30, i64 %.2
  store %IdentifierToken.560263* %.3, %IdentifierToken.560263** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<IdentifierToken>_append"(%"Array<IdentifierToken>.560359"* %.1, %IdentifierToken.560263* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 0
  %.9 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)*, void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)** %.10, align 8
  tail call void %.11(%"Array<IdentifierToken>.560359"* %.1, %IdentifierToken.560263* %.2)
  ret void
}

define %IdentifierToken.560263* @"Array<IdentifierToken>___getitem__"(%"Array<IdentifierToken>.560359"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 1
  %.28 = load %IdentifierToken.560263**, %IdentifierToken.560263*** %.27, align 8
  %.29 = getelementptr inbounds %IdentifierToken.560263*, %IdentifierToken.560263** %.28, i64 %.2
  %.30 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.29, align 8
  ret %IdentifierToken.560263* %.30

.4.endif:                                         ; preds = %.4
  ret %IdentifierToken.560263* null
}

define i1 @"Array<IdentifierToken>___eq__"(%"Array<IdentifierToken>.560359"* %.1, %"Array<IdentifierToken>.560359"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.28, i64 0, i32 5
  %.30 = load %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)*, %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)** %.29, align 8
  %.31 = tail call %IdentifierToken.560263* %.30(%"Array<IdentifierToken>.560359"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.35, i64 0, i32 5
  %.37 = load %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)*, %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)** %.36, align 8
  %.38 = tail call %IdentifierToken.560263* %.37(%"Array<IdentifierToken>.560359"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %IdentifierToken.560263* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %IdentifierToken.560263* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<IdentifierToken>___in__"(%"Array<IdentifierToken>.560359"* %.1, %IdentifierToken.560263* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %IdentifierToken.560263* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.19, i64 0, i32 5
  %.21 = load %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)*, %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)** %.20, align 8
  %.22 = tail call %IdentifierToken.560263* %.21(%"Array<IdentifierToken>.560359"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %IdentifierToken.560263* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<IdentifierToken>_find"(%"Array<IdentifierToken>.560359"* nocapture readonly %.1, %IdentifierToken.560263* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.1, i64 0, i32 1
  %.19 = load %IdentifierToken.560263**, %IdentifierToken.560263*** %.18, align 8
  %0 = ptrtoint %IdentifierToken.560263* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %IdentifierToken.560263*, %IdentifierToken.560263** %.19, i64 %storemerge5
  %1 = bitcast %IdentifierToken.560263** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @ImportNode_constructor(%ImportNode.560357* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<IdentifierToken>_vtable_ty.560360"**
  store %"Array<IdentifierToken>_vtable_ty.560360"* @"Array<IdentifierToken>_vtable_data", %"Array<IdentifierToken>_vtable_ty.560360"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %ImportNode.560357, %ImportNode.560357* %.1, i64 0, i32 1
  %3 = bitcast %"Array<IdentifierToken>.560359"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @TypeAliasNode_constructor(%TypeAliasNode.560361* nocapture %.1, %IdentifierToken.560263* %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %TypeAliasNode.560361, %TypeAliasNode.560361* %.1, i64 0, i32 1
  store %IdentifierToken.560263* %.2, %IdentifierToken.560263** %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FunctionDeclarationNode>_constructor"(%"Array<FunctionDeclarationNode>.560365"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionDeclarationNode.560333*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FunctionDeclarationNode>_resize"(%"Array<FunctionDeclarationNode>.560365"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionDeclarationNode.560333*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FunctionDeclarationNode>_swap"(%"Array<FunctionDeclarationNode>.560365"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 1
  %.48 = load %FunctionDeclarationNode.560333**, %FunctionDeclarationNode.560333*** %.47, align 8
  %.49 = getelementptr inbounds %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.48, i64 %.2
  %4 = bitcast %FunctionDeclarationNode.560333** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.48, i64 %.3
  %5 = bitcast %FunctionDeclarationNode.560333** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FunctionDeclarationNode.560333**, %FunctionDeclarationNode.560333*** %.47, align 8
  %.69 = getelementptr inbounds %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.67, i64 %.3
  %6 = bitcast %FunctionDeclarationNode.560333** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionDeclarationNode>___sl__"(%"Array<FunctionDeclarationNode>.560365"* %.1, %FunctionDeclarationNode.560333* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 0
  %.17 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FunctionDeclarationNode>.560365"*)*, void (%"Array<FunctionDeclarationNode>.560365"*)** %.18, align 8
  tail call void %.19(%"Array<FunctionDeclarationNode>.560365"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 1
  %.31 = load %FunctionDeclarationNode.560333**, %FunctionDeclarationNode.560333*** %.30, align 8
  %.33 = getelementptr inbounds %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.31, i64 %.24
  store %FunctionDeclarationNode.560333* %.2, %FunctionDeclarationNode.560333** %.33, align 8
  ret void
}

define void @"Array<FunctionDeclarationNode>___setitem__"(%"Array<FunctionDeclarationNode>.560365"* nocapture readonly %.1, i64 %.2, %FunctionDeclarationNode.560333* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 1
  %.30 = load %FunctionDeclarationNode.560333**, %FunctionDeclarationNode.560333*** %.29, align 8
  %.32 = getelementptr inbounds %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.30, i64 %.2
  store %FunctionDeclarationNode.560333* %.3, %FunctionDeclarationNode.560333** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionDeclarationNode>_append"(%"Array<FunctionDeclarationNode>.560365"* %.1, %FunctionDeclarationNode.560333* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 0
  %.9 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)*, void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)** %.10, align 8
  tail call void %.11(%"Array<FunctionDeclarationNode>.560365"* %.1, %FunctionDeclarationNode.560333* %.2)
  ret void
}

define %FunctionDeclarationNode.560333* @"Array<FunctionDeclarationNode>___getitem__"(%"Array<FunctionDeclarationNode>.560365"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 1
  %.28 = load %FunctionDeclarationNode.560333**, %FunctionDeclarationNode.560333*** %.27, align 8
  %.29 = getelementptr inbounds %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.28, i64 %.2
  %.30 = load %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.29, align 8
  ret %FunctionDeclarationNode.560333* %.30

.4.endif:                                         ; preds = %.4
  ret %FunctionDeclarationNode.560333* null
}

define i1 @"Array<FunctionDeclarationNode>___eq__"(%"Array<FunctionDeclarationNode>.560365"* %.1, %"Array<FunctionDeclarationNode>.560365"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.28, i64 0, i32 5
  %.30 = load %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)*, %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)** %.29, align 8
  %.31 = tail call %FunctionDeclarationNode.560333* %.30(%"Array<FunctionDeclarationNode>.560365"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.35, i64 0, i32 5
  %.37 = load %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)*, %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)** %.36, align 8
  %.38 = tail call %FunctionDeclarationNode.560333* %.37(%"Array<FunctionDeclarationNode>.560365"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %FunctionDeclarationNode.560333* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FunctionDeclarationNode.560333* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FunctionDeclarationNode>___in__"(%"Array<FunctionDeclarationNode>.560365"* %.1, %FunctionDeclarationNode.560333* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FunctionDeclarationNode.560333* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.19, i64 0, i32 5
  %.21 = load %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)*, %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)** %.20, align 8
  %.22 = tail call %FunctionDeclarationNode.560333* %.21(%"Array<FunctionDeclarationNode>.560365"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %FunctionDeclarationNode.560333* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FunctionDeclarationNode>_find"(%"Array<FunctionDeclarationNode>.560365"* nocapture readonly %.1, %FunctionDeclarationNode.560333* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.1, i64 0, i32 1
  %.19 = load %FunctionDeclarationNode.560333**, %FunctionDeclarationNode.560333*** %.18, align 8
  %0 = ptrtoint %FunctionDeclarationNode.560333* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FunctionDeclarationNode.560333*, %FunctionDeclarationNode.560333** %.19, i64 %storemerge5
  %1 = bitcast %FunctionDeclarationNode.560333** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<ClassDeclarationNode>_constructor"(%"Array<ClassDeclarationNode>.560366"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 1
  %0 = bitcast %ClassDeclarationNode.560343*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassDeclarationNode>_resize"(%"Array<ClassDeclarationNode>.560366"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 1
  %0 = bitcast %ClassDeclarationNode.560343*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ClassDeclarationNode>_swap"(%"Array<ClassDeclarationNode>.560366"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 1
  %.48 = load %ClassDeclarationNode.560343**, %ClassDeclarationNode.560343*** %.47, align 8
  %.49 = getelementptr inbounds %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.48, i64 %.2
  %4 = bitcast %ClassDeclarationNode.560343** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.48, i64 %.3
  %5 = bitcast %ClassDeclarationNode.560343** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ClassDeclarationNode.560343**, %ClassDeclarationNode.560343*** %.47, align 8
  %.69 = getelementptr inbounds %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.67, i64 %.3
  %6 = bitcast %ClassDeclarationNode.560343** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassDeclarationNode>___sl__"(%"Array<ClassDeclarationNode>.560366"* %.1, %ClassDeclarationNode.560343* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassDeclarationNode>.560366"*)*, void (%"Array<ClassDeclarationNode>.560366"*)** %.18, align 8
  tail call void %.19(%"Array<ClassDeclarationNode>.560366"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 1
  %.31 = load %ClassDeclarationNode.560343**, %ClassDeclarationNode.560343*** %.30, align 8
  %.33 = getelementptr inbounds %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.31, i64 %.24
  store %ClassDeclarationNode.560343* %.2, %ClassDeclarationNode.560343** %.33, align 8
  ret void
}

define void @"Array<ClassDeclarationNode>___setitem__"(%"Array<ClassDeclarationNode>.560366"* nocapture readonly %.1, i64 %.2, %ClassDeclarationNode.560343* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 1
  %.30 = load %ClassDeclarationNode.560343**, %ClassDeclarationNode.560343*** %.29, align 8
  %.32 = getelementptr inbounds %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.30, i64 %.2
  store %ClassDeclarationNode.560343* %.3, %ClassDeclarationNode.560343** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassDeclarationNode>_append"(%"Array<ClassDeclarationNode>.560366"* %.1, %ClassDeclarationNode.560343* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)*, void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)** %.10, align 8
  tail call void %.11(%"Array<ClassDeclarationNode>.560366"* %.1, %ClassDeclarationNode.560343* %.2)
  ret void
}

define %ClassDeclarationNode.560343* @"Array<ClassDeclarationNode>___getitem__"(%"Array<ClassDeclarationNode>.560366"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 1
  %.28 = load %ClassDeclarationNode.560343**, %ClassDeclarationNode.560343*** %.27, align 8
  %.29 = getelementptr inbounds %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.28, i64 %.2
  %.30 = load %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.29, align 8
  ret %ClassDeclarationNode.560343* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassDeclarationNode.560343* null
}

define i1 @"Array<ClassDeclarationNode>___eq__"(%"Array<ClassDeclarationNode>.560366"* %.1, %"Array<ClassDeclarationNode>.560366"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.28, i64 0, i32 5
  %.30 = load %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)*, %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)** %.29, align 8
  %.31 = tail call %ClassDeclarationNode.560343* %.30(%"Array<ClassDeclarationNode>.560366"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.35, i64 0, i32 5
  %.37 = load %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)*, %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)** %.36, align 8
  %.38 = tail call %ClassDeclarationNode.560343* %.37(%"Array<ClassDeclarationNode>.560366"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassDeclarationNode.560343* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassDeclarationNode.560343* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassDeclarationNode>___in__"(%"Array<ClassDeclarationNode>.560366"* %.1, %ClassDeclarationNode.560343* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassDeclarationNode.560343* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.19, i64 0, i32 5
  %.21 = load %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)*, %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)** %.20, align 8
  %.22 = tail call %ClassDeclarationNode.560343* %.21(%"Array<ClassDeclarationNode>.560366"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassDeclarationNode.560343* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassDeclarationNode>_find"(%"Array<ClassDeclarationNode>.560366"* nocapture readonly %.1, %ClassDeclarationNode.560343* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.1, i64 0, i32 1
  %.19 = load %ClassDeclarationNode.560343**, %ClassDeclarationNode.560343*** %.18, align 8
  %0 = ptrtoint %ClassDeclarationNode.560343* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.19, i64 %storemerge5
  %1 = bitcast %ClassDeclarationNode.560343** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<EnumNode>_constructor"(%"Array<EnumNode>.560367"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNode.560353*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumNode>_resize"(%"Array<EnumNode>.560367"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNode.560353*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<EnumNode>_swap"(%"Array<EnumNode>.560367"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 1
  %.48 = load %EnumNode.560353**, %EnumNode.560353*** %.47, align 8
  %.49 = getelementptr inbounds %EnumNode.560353*, %EnumNode.560353** %.48, i64 %.2
  %4 = bitcast %EnumNode.560353** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %EnumNode.560353*, %EnumNode.560353** %.48, i64 %.3
  %5 = bitcast %EnumNode.560353** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %EnumNode.560353**, %EnumNode.560353*** %.47, align 8
  %.69 = getelementptr inbounds %EnumNode.560353*, %EnumNode.560353** %.67, i64 %.3
  %6 = bitcast %EnumNode.560353** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNode>___sl__"(%"Array<EnumNode>.560367"* %.1, %EnumNode.560353* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumNode>.560367"*)*, void (%"Array<EnumNode>.560367"*)** %.18, align 8
  tail call void %.19(%"Array<EnumNode>.560367"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 1
  %.31 = load %EnumNode.560353**, %EnumNode.560353*** %.30, align 8
  %.33 = getelementptr inbounds %EnumNode.560353*, %EnumNode.560353** %.31, i64 %.24
  store %EnumNode.560353* %.2, %EnumNode.560353** %.33, align 8
  ret void
}

define void @"Array<EnumNode>___setitem__"(%"Array<EnumNode>.560367"* nocapture readonly %.1, i64 %.2, %EnumNode.560353* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 1
  %.30 = load %EnumNode.560353**, %EnumNode.560353*** %.29, align 8
  %.32 = getelementptr inbounds %EnumNode.560353*, %EnumNode.560353** %.30, i64 %.2
  store %EnumNode.560353* %.3, %EnumNode.560353** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNode>_append"(%"Array<EnumNode>.560367"* %.1, %EnumNode.560353* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)*, void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)** %.10, align 8
  tail call void %.11(%"Array<EnumNode>.560367"* %.1, %EnumNode.560353* %.2)
  ret void
}

define %EnumNode.560353* @"Array<EnumNode>___getitem__"(%"Array<EnumNode>.560367"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 1
  %.28 = load %EnumNode.560353**, %EnumNode.560353*** %.27, align 8
  %.29 = getelementptr inbounds %EnumNode.560353*, %EnumNode.560353** %.28, i64 %.2
  %.30 = load %EnumNode.560353*, %EnumNode.560353** %.29, align 8
  ret %EnumNode.560353* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumNode.560353* null
}

define i1 @"Array<EnumNode>___eq__"(%"Array<EnumNode>.560367"* %.1, %"Array<EnumNode>.560367"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.28, i64 0, i32 5
  %.30 = load %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)*, %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)** %.29, align 8
  %.31 = tail call %EnumNode.560353* %.30(%"Array<EnumNode>.560367"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.35, i64 0, i32 5
  %.37 = load %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)*, %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)** %.36, align 8
  %.38 = tail call %EnumNode.560353* %.37(%"Array<EnumNode>.560367"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumNode.560353* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumNode.560353* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumNode>___in__"(%"Array<EnumNode>.560367"* %.1, %EnumNode.560353* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumNode.560353* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.19, i64 0, i32 5
  %.21 = load %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)*, %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)** %.20, align 8
  %.22 = tail call %EnumNode.560353* %.21(%"Array<EnumNode>.560367"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumNode.560353* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumNode>_find"(%"Array<EnumNode>.560367"* nocapture readonly %.1, %EnumNode.560353* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.1, i64 0, i32 1
  %.19 = load %EnumNode.560353**, %EnumNode.560353*** %.18, align 8
  %0 = ptrtoint %EnumNode.560353* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumNode.560353*, %EnumNode.560353** %.19, i64 %storemerge5
  %1 = bitcast %EnumNode.560353** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<ImportNode>_constructor"(%"Array<ImportNode>.560368"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 1
  %0 = bitcast %ImportNode.560357*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ImportNode>_resize"(%"Array<ImportNode>.560368"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 1
  %0 = bitcast %ImportNode.560357*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ImportNode>_swap"(%"Array<ImportNode>.560368"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 1
  %.48 = load %ImportNode.560357**, %ImportNode.560357*** %.47, align 8
  %.49 = getelementptr inbounds %ImportNode.560357*, %ImportNode.560357** %.48, i64 %.2
  %4 = bitcast %ImportNode.560357** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ImportNode.560357*, %ImportNode.560357** %.48, i64 %.3
  %5 = bitcast %ImportNode.560357** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ImportNode.560357**, %ImportNode.560357*** %.47, align 8
  %.69 = getelementptr inbounds %ImportNode.560357*, %ImportNode.560357** %.67, i64 %.3
  %6 = bitcast %ImportNode.560357** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ImportNode>___sl__"(%"Array<ImportNode>.560368"* %.1, %ImportNode.560357* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 0
  %.17 = load %"Array<ImportNode>_vtable_ty.560375"*, %"Array<ImportNode>_vtable_ty.560375"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.560375", %"Array<ImportNode>_vtable_ty.560375"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ImportNode>.560368"*)*, void (%"Array<ImportNode>.560368"*)** %.18, align 8
  tail call void %.19(%"Array<ImportNode>.560368"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 1
  %.31 = load %ImportNode.560357**, %ImportNode.560357*** %.30, align 8
  %.33 = getelementptr inbounds %ImportNode.560357*, %ImportNode.560357** %.31, i64 %.24
  store %ImportNode.560357* %.2, %ImportNode.560357** %.33, align 8
  ret void
}

define void @"Array<ImportNode>___setitem__"(%"Array<ImportNode>.560368"* nocapture readonly %.1, i64 %.2, %ImportNode.560357* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 1
  %.30 = load %ImportNode.560357**, %ImportNode.560357*** %.29, align 8
  %.32 = getelementptr inbounds %ImportNode.560357*, %ImportNode.560357** %.30, i64 %.2
  store %ImportNode.560357* %.3, %ImportNode.560357** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ImportNode>_append"(%"Array<ImportNode>.560368"* %.1, %ImportNode.560357* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 0
  %.9 = load %"Array<ImportNode>_vtable_ty.560375"*, %"Array<ImportNode>_vtable_ty.560375"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.560375", %"Array<ImportNode>_vtable_ty.560375"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)*, void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)** %.10, align 8
  tail call void %.11(%"Array<ImportNode>.560368"* %.1, %ImportNode.560357* %.2)
  ret void
}

define %ImportNode.560357* @"Array<ImportNode>___getitem__"(%"Array<ImportNode>.560368"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 1
  %.28 = load %ImportNode.560357**, %ImportNode.560357*** %.27, align 8
  %.29 = getelementptr inbounds %ImportNode.560357*, %ImportNode.560357** %.28, i64 %.2
  %.30 = load %ImportNode.560357*, %ImportNode.560357** %.29, align 8
  ret %ImportNode.560357* %.30

.4.endif:                                         ; preds = %.4
  ret %ImportNode.560357* null
}

define i1 @"Array<ImportNode>___eq__"(%"Array<ImportNode>.560368"* %.1, %"Array<ImportNode>.560368"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ImportNode>_vtable_ty.560375"*, %"Array<ImportNode>_vtable_ty.560375"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.560375", %"Array<ImportNode>_vtable_ty.560375"* %.28, i64 0, i32 5
  %.30 = load %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)*, %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)** %.29, align 8
  %.31 = tail call %ImportNode.560357* %.30(%"Array<ImportNode>.560368"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ImportNode>_vtable_ty.560375"*, %"Array<ImportNode>_vtable_ty.560375"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.560375", %"Array<ImportNode>_vtable_ty.560375"* %.35, i64 0, i32 5
  %.37 = load %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)*, %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)** %.36, align 8
  %.38 = tail call %ImportNode.560357* %.37(%"Array<ImportNode>.560368"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ImportNode.560357* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ImportNode.560357* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ImportNode>___in__"(%"Array<ImportNode>.560368"* %.1, %ImportNode.560357* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ImportNode.560357* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ImportNode>_vtable_ty.560375"*, %"Array<ImportNode>_vtable_ty.560375"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.560375", %"Array<ImportNode>_vtable_ty.560375"* %.19, i64 0, i32 5
  %.21 = load %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)*, %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)** %.20, align 8
  %.22 = tail call %ImportNode.560357* %.21(%"Array<ImportNode>.560368"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ImportNode.560357* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ImportNode>_find"(%"Array<ImportNode>.560368"* nocapture readonly %.1, %ImportNode.560357* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.1, i64 0, i32 1
  %.19 = load %ImportNode.560357**, %ImportNode.560357*** %.18, align 8
  %0 = ptrtoint %ImportNode.560357* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ImportNode.560357*, %ImportNode.560357** %.19, i64 %storemerge5
  %1 = bitcast %ImportNode.560357** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<ConstDeclarationStatement>_constructor"(%"Array<ConstDeclarationStatement>.560369"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclarationStatement.560329*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ConstDeclarationStatement>_resize"(%"Array<ConstDeclarationStatement>.560369"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclarationStatement.560329*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ConstDeclarationStatement>_swap"(%"Array<ConstDeclarationStatement>.560369"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 1
  %.48 = load %ConstDeclarationStatement.560329**, %ConstDeclarationStatement.560329*** %.47, align 8
  %.49 = getelementptr inbounds %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.48, i64 %.2
  %4 = bitcast %ConstDeclarationStatement.560329** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.48, i64 %.3
  %5 = bitcast %ConstDeclarationStatement.560329** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ConstDeclarationStatement.560329**, %ConstDeclarationStatement.560329*** %.47, align 8
  %.69 = getelementptr inbounds %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.67, i64 %.3
  %6 = bitcast %ConstDeclarationStatement.560329** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclarationStatement>___sl__"(%"Array<ConstDeclarationStatement>.560369"* %.1, %ConstDeclarationStatement.560329* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 0
  %.17 = load %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.560376", %"Array<ConstDeclarationStatement>_vtable_ty.560376"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ConstDeclarationStatement>.560369"*)*, void (%"Array<ConstDeclarationStatement>.560369"*)** %.18, align 8
  tail call void %.19(%"Array<ConstDeclarationStatement>.560369"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 1
  %.31 = load %ConstDeclarationStatement.560329**, %ConstDeclarationStatement.560329*** %.30, align 8
  %.33 = getelementptr inbounds %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.31, i64 %.24
  store %ConstDeclarationStatement.560329* %.2, %ConstDeclarationStatement.560329** %.33, align 8
  ret void
}

define void @"Array<ConstDeclarationStatement>___setitem__"(%"Array<ConstDeclarationStatement>.560369"* nocapture readonly %.1, i64 %.2, %ConstDeclarationStatement.560329* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 1
  %.30 = load %ConstDeclarationStatement.560329**, %ConstDeclarationStatement.560329*** %.29, align 8
  %.32 = getelementptr inbounds %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.30, i64 %.2
  store %ConstDeclarationStatement.560329* %.3, %ConstDeclarationStatement.560329** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclarationStatement>_append"(%"Array<ConstDeclarationStatement>.560369"* %.1, %ConstDeclarationStatement.560329* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 0
  %.9 = load %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.560376", %"Array<ConstDeclarationStatement>_vtable_ty.560376"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)*, void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)** %.10, align 8
  tail call void %.11(%"Array<ConstDeclarationStatement>.560369"* %.1, %ConstDeclarationStatement.560329* %.2)
  ret void
}

define %ConstDeclarationStatement.560329* @"Array<ConstDeclarationStatement>___getitem__"(%"Array<ConstDeclarationStatement>.560369"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 1
  %.28 = load %ConstDeclarationStatement.560329**, %ConstDeclarationStatement.560329*** %.27, align 8
  %.29 = getelementptr inbounds %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.28, i64 %.2
  %.30 = load %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.29, align 8
  ret %ConstDeclarationStatement.560329* %.30

.4.endif:                                         ; preds = %.4
  ret %ConstDeclarationStatement.560329* null
}

define i1 @"Array<ConstDeclarationStatement>___eq__"(%"Array<ConstDeclarationStatement>.560369"* %.1, %"Array<ConstDeclarationStatement>.560369"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.560376", %"Array<ConstDeclarationStatement>_vtable_ty.560376"* %.28, i64 0, i32 5
  %.30 = load %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)*, %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)** %.29, align 8
  %.31 = tail call %ConstDeclarationStatement.560329* %.30(%"Array<ConstDeclarationStatement>.560369"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.560376", %"Array<ConstDeclarationStatement>_vtable_ty.560376"* %.35, i64 0, i32 5
  %.37 = load %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)*, %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)** %.36, align 8
  %.38 = tail call %ConstDeclarationStatement.560329* %.37(%"Array<ConstDeclarationStatement>.560369"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ConstDeclarationStatement.560329* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ConstDeclarationStatement.560329* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ConstDeclarationStatement>___in__"(%"Array<ConstDeclarationStatement>.560369"* %.1, %ConstDeclarationStatement.560329* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ConstDeclarationStatement.560329* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.560376", %"Array<ConstDeclarationStatement>_vtable_ty.560376"* %.19, i64 0, i32 5
  %.21 = load %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)*, %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)** %.20, align 8
  %.22 = tail call %ConstDeclarationStatement.560329* %.21(%"Array<ConstDeclarationStatement>.560369"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ConstDeclarationStatement.560329* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ConstDeclarationStatement>_find"(%"Array<ConstDeclarationStatement>.560369"* nocapture readonly %.1, %ConstDeclarationStatement.560329* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.1, i64 0, i32 1
  %.19 = load %ConstDeclarationStatement.560329**, %ConstDeclarationStatement.560329*** %.18, align 8
  %0 = ptrtoint %ConstDeclarationStatement.560329* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ConstDeclarationStatement.560329*, %ConstDeclarationStatement.560329** %.19, i64 %storemerge5
  %1 = bitcast %ConstDeclarationStatement.560329** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<VarDeclarationStatement>_constructor"(%"Array<VarDeclarationStatement>.560370"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclarationStatement.560327*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<VarDeclarationStatement>_resize"(%"Array<VarDeclarationStatement>.560370"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclarationStatement.560327*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<VarDeclarationStatement>_swap"(%"Array<VarDeclarationStatement>.560370"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 1
  %.48 = load %VarDeclarationStatement.560327**, %VarDeclarationStatement.560327*** %.47, align 8
  %.49 = getelementptr inbounds %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.48, i64 %.2
  %4 = bitcast %VarDeclarationStatement.560327** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.48, i64 %.3
  %5 = bitcast %VarDeclarationStatement.560327** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %VarDeclarationStatement.560327**, %VarDeclarationStatement.560327*** %.47, align 8
  %.69 = getelementptr inbounds %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.67, i64 %.3
  %6 = bitcast %VarDeclarationStatement.560327** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclarationStatement>___sl__"(%"Array<VarDeclarationStatement>.560370"* %.1, %VarDeclarationStatement.560327* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 0
  %.17 = load %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.560377", %"Array<VarDeclarationStatement>_vtable_ty.560377"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<VarDeclarationStatement>.560370"*)*, void (%"Array<VarDeclarationStatement>.560370"*)** %.18, align 8
  tail call void %.19(%"Array<VarDeclarationStatement>.560370"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 1
  %.31 = load %VarDeclarationStatement.560327**, %VarDeclarationStatement.560327*** %.30, align 8
  %.33 = getelementptr inbounds %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.31, i64 %.24
  store %VarDeclarationStatement.560327* %.2, %VarDeclarationStatement.560327** %.33, align 8
  ret void
}

define void @"Array<VarDeclarationStatement>___setitem__"(%"Array<VarDeclarationStatement>.560370"* nocapture readonly %.1, i64 %.2, %VarDeclarationStatement.560327* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 1
  %.30 = load %VarDeclarationStatement.560327**, %VarDeclarationStatement.560327*** %.29, align 8
  %.32 = getelementptr inbounds %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.30, i64 %.2
  store %VarDeclarationStatement.560327* %.3, %VarDeclarationStatement.560327** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclarationStatement>_append"(%"Array<VarDeclarationStatement>.560370"* %.1, %VarDeclarationStatement.560327* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 0
  %.9 = load %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.560377", %"Array<VarDeclarationStatement>_vtable_ty.560377"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)*, void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)** %.10, align 8
  tail call void %.11(%"Array<VarDeclarationStatement>.560370"* %.1, %VarDeclarationStatement.560327* %.2)
  ret void
}

define %VarDeclarationStatement.560327* @"Array<VarDeclarationStatement>___getitem__"(%"Array<VarDeclarationStatement>.560370"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 1
  %.28 = load %VarDeclarationStatement.560327**, %VarDeclarationStatement.560327*** %.27, align 8
  %.29 = getelementptr inbounds %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.28, i64 %.2
  %.30 = load %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.29, align 8
  ret %VarDeclarationStatement.560327* %.30

.4.endif:                                         ; preds = %.4
  ret %VarDeclarationStatement.560327* null
}

define i1 @"Array<VarDeclarationStatement>___eq__"(%"Array<VarDeclarationStatement>.560370"* %.1, %"Array<VarDeclarationStatement>.560370"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.560377", %"Array<VarDeclarationStatement>_vtable_ty.560377"* %.28, i64 0, i32 5
  %.30 = load %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)*, %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)** %.29, align 8
  %.31 = tail call %VarDeclarationStatement.560327* %.30(%"Array<VarDeclarationStatement>.560370"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.560377", %"Array<VarDeclarationStatement>_vtable_ty.560377"* %.35, i64 0, i32 5
  %.37 = load %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)*, %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)** %.36, align 8
  %.38 = tail call %VarDeclarationStatement.560327* %.37(%"Array<VarDeclarationStatement>.560370"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %VarDeclarationStatement.560327* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %VarDeclarationStatement.560327* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<VarDeclarationStatement>___in__"(%"Array<VarDeclarationStatement>.560370"* %.1, %VarDeclarationStatement.560327* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %VarDeclarationStatement.560327* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.560377", %"Array<VarDeclarationStatement>_vtable_ty.560377"* %.19, i64 0, i32 5
  %.21 = load %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)*, %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)** %.20, align 8
  %.22 = tail call %VarDeclarationStatement.560327* %.21(%"Array<VarDeclarationStatement>.560370"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %VarDeclarationStatement.560327* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<VarDeclarationStatement>_find"(%"Array<VarDeclarationStatement>.560370"* nocapture readonly %.1, %VarDeclarationStatement.560327* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.1, i64 0, i32 1
  %.19 = load %VarDeclarationStatement.560327**, %VarDeclarationStatement.560327*** %.18, align 8
  %0 = ptrtoint %VarDeclarationStatement.560327* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %VarDeclarationStatement.560327*, %VarDeclarationStatement.560327** %.19, i64 %storemerge5
  %1 = bitcast %VarDeclarationStatement.560327** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<TypeAliasNode>_constructor"(%"Array<TypeAliasNode>.560371"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 1
  %0 = bitcast %TypeAliasNode.560361*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<TypeAliasNode>_resize"(%"Array<TypeAliasNode>.560371"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 1
  %0 = bitcast %TypeAliasNode.560361*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<TypeAliasNode>_swap"(%"Array<TypeAliasNode>.560371"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 1
  %.48 = load %TypeAliasNode.560361**, %TypeAliasNode.560361*** %.47, align 8
  %.49 = getelementptr inbounds %TypeAliasNode.560361*, %TypeAliasNode.560361** %.48, i64 %.2
  %4 = bitcast %TypeAliasNode.560361** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %TypeAliasNode.560361*, %TypeAliasNode.560361** %.48, i64 %.3
  %5 = bitcast %TypeAliasNode.560361** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %TypeAliasNode.560361**, %TypeAliasNode.560361*** %.47, align 8
  %.69 = getelementptr inbounds %TypeAliasNode.560361*, %TypeAliasNode.560361** %.67, i64 %.3
  %6 = bitcast %TypeAliasNode.560361** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeAliasNode>___sl__"(%"Array<TypeAliasNode>.560371"* %.1, %TypeAliasNode.560361* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 0
  %.17 = load %"Array<TypeAliasNode>_vtable_ty.560378"*, %"Array<TypeAliasNode>_vtable_ty.560378"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.560378", %"Array<TypeAliasNode>_vtable_ty.560378"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<TypeAliasNode>.560371"*)*, void (%"Array<TypeAliasNode>.560371"*)** %.18, align 8
  tail call void %.19(%"Array<TypeAliasNode>.560371"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 1
  %.31 = load %TypeAliasNode.560361**, %TypeAliasNode.560361*** %.30, align 8
  %.33 = getelementptr inbounds %TypeAliasNode.560361*, %TypeAliasNode.560361** %.31, i64 %.24
  store %TypeAliasNode.560361* %.2, %TypeAliasNode.560361** %.33, align 8
  ret void
}

define void @"Array<TypeAliasNode>___setitem__"(%"Array<TypeAliasNode>.560371"* nocapture readonly %.1, i64 %.2, %TypeAliasNode.560361* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 1
  %.30 = load %TypeAliasNode.560361**, %TypeAliasNode.560361*** %.29, align 8
  %.32 = getelementptr inbounds %TypeAliasNode.560361*, %TypeAliasNode.560361** %.30, i64 %.2
  store %TypeAliasNode.560361* %.3, %TypeAliasNode.560361** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeAliasNode>_append"(%"Array<TypeAliasNode>.560371"* %.1, %TypeAliasNode.560361* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 0
  %.9 = load %"Array<TypeAliasNode>_vtable_ty.560378"*, %"Array<TypeAliasNode>_vtable_ty.560378"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.560378", %"Array<TypeAliasNode>_vtable_ty.560378"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)*, void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)** %.10, align 8
  tail call void %.11(%"Array<TypeAliasNode>.560371"* %.1, %TypeAliasNode.560361* %.2)
  ret void
}

define %TypeAliasNode.560361* @"Array<TypeAliasNode>___getitem__"(%"Array<TypeAliasNode>.560371"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 1
  %.28 = load %TypeAliasNode.560361**, %TypeAliasNode.560361*** %.27, align 8
  %.29 = getelementptr inbounds %TypeAliasNode.560361*, %TypeAliasNode.560361** %.28, i64 %.2
  %.30 = load %TypeAliasNode.560361*, %TypeAliasNode.560361** %.29, align 8
  ret %TypeAliasNode.560361* %.30

.4.endif:                                         ; preds = %.4
  ret %TypeAliasNode.560361* null
}

define i1 @"Array<TypeAliasNode>___eq__"(%"Array<TypeAliasNode>.560371"* %.1, %"Array<TypeAliasNode>.560371"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<TypeAliasNode>_vtable_ty.560378"*, %"Array<TypeAliasNode>_vtable_ty.560378"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.560378", %"Array<TypeAliasNode>_vtable_ty.560378"* %.28, i64 0, i32 5
  %.30 = load %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)*, %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)** %.29, align 8
  %.31 = tail call %TypeAliasNode.560361* %.30(%"Array<TypeAliasNode>.560371"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<TypeAliasNode>_vtable_ty.560378"*, %"Array<TypeAliasNode>_vtable_ty.560378"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.560378", %"Array<TypeAliasNode>_vtable_ty.560378"* %.35, i64 0, i32 5
  %.37 = load %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)*, %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)** %.36, align 8
  %.38 = tail call %TypeAliasNode.560361* %.37(%"Array<TypeAliasNode>.560371"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %TypeAliasNode.560361* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %TypeAliasNode.560361* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<TypeAliasNode>___in__"(%"Array<TypeAliasNode>.560371"* %.1, %TypeAliasNode.560361* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %TypeAliasNode.560361* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<TypeAliasNode>_vtable_ty.560378"*, %"Array<TypeAliasNode>_vtable_ty.560378"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.560378", %"Array<TypeAliasNode>_vtable_ty.560378"* %.19, i64 0, i32 5
  %.21 = load %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)*, %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)** %.20, align 8
  %.22 = tail call %TypeAliasNode.560361* %.21(%"Array<TypeAliasNode>.560371"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %TypeAliasNode.560361* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<TypeAliasNode>_find"(%"Array<TypeAliasNode>.560371"* nocapture readonly %.1, %TypeAliasNode.560361* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.1, i64 0, i32 1
  %.19 = load %TypeAliasNode.560361**, %TypeAliasNode.560361*** %.18, align 8
  %0 = ptrtoint %TypeAliasNode.560361* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %TypeAliasNode.560361*, %TypeAliasNode.560361** %.19, i64 %storemerge5
  %1 = bitcast %TypeAliasNode.560361** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @ModuleAST_constructor(%ModuleAST.560363* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<FunctionDeclarationNode>_vtable_ty.560372"**
  store %"Array<FunctionDeclarationNode>_vtable_ty.560372"* @"Array<FunctionDeclarationNode>_vtable_data", %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.1, i64 0, i32 1
  %3 = bitcast %"Array<FunctionDeclarationNode>.560365"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.23 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.25 to %"Array<ClassDeclarationNode>_vtable_ty.560373"**
  store %"Array<ClassDeclarationNode>_vtable_ty.560373"* @"Array<ClassDeclarationNode>_vtable_data", %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %4 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %4, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %5 = bitcast i8* %.31 to i64*
  store i64 0, i64* %5, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %6 = bitcast i8* %.33 to i64*
  store i64 8, i64* %6, align 8
  %.35 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.1, i64 0, i32 2
  %7 = bitcast %"Array<ClassDeclarationNode>.560366"** %.35 to i8**
  store i8* %.25, i8** %7, align 8
  %.39 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.41 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.41 to %"Array<ImportNode>_vtable_ty.560375"**
  store %"Array<ImportNode>_vtable_ty.560375"* @"Array<ImportNode>_vtable_data", %"Array<ImportNode>_vtable_ty.560375"** %.43, align 8
  %.45 = getelementptr inbounds i8, i8* %.41, i64 8
  %8 = bitcast i8* %.45 to i8**
  store i8* %.39, i8** %8, align 8
  %.47 = getelementptr inbounds i8, i8* %.41, i64 16
  %9 = bitcast i8* %.47 to i64*
  store i64 0, i64* %9, align 8
  %.49 = getelementptr inbounds i8, i8* %.41, i64 24
  %10 = bitcast i8* %.49 to i64*
  store i64 8, i64* %10, align 8
  %.51 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.1, i64 0, i32 4
  %11 = bitcast %"Array<ImportNode>.560368"** %.51 to i8**
  store i8* %.41, i8** %11, align 8
  %.55 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.57 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.57 to %"Array<ConstDeclarationStatement>_vtable_ty.560376"**
  store %"Array<ConstDeclarationStatement>_vtable_ty.560376"* @"Array<ConstDeclarationStatement>_vtable_data", %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %12 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %12, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %13 = bitcast i8* %.63 to i64*
  store i64 0, i64* %13, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %14 = bitcast i8* %.65 to i64*
  store i64 8, i64* %14, align 8
  %.67 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.1, i64 0, i32 5
  %15 = bitcast %"Array<ConstDeclarationStatement>.560369"** %.67 to i8**
  store i8* %.57, i8** %15, align 8
  %.71 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.73 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.73 to %"Array<VarDeclarationStatement>_vtable_ty.560377"**
  store %"Array<VarDeclarationStatement>_vtable_ty.560377"* @"Array<VarDeclarationStatement>_vtable_data", %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %16 = bitcast i8* %.77 to i8**
  store i8* %.71, i8** %16, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %17 = bitcast i8* %.79 to i64*
  store i64 0, i64* %17, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %18 = bitcast i8* %.81 to i64*
  store i64 8, i64* %18, align 8
  %.83 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.1, i64 0, i32 6
  %19 = bitcast %"Array<VarDeclarationStatement>.560370"** %.83 to i8**
  store i8* %.73, i8** %19, align 8
  %.87 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.89 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<EnumNode>_vtable_ty.560374"**
  store %"Array<EnumNode>_vtable_ty.560374"* @"Array<EnumNode>_vtable_data", %"Array<EnumNode>_vtable_ty.560374"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %20 = bitcast i8* %.93 to i8**
  store i8* %.87, i8** %20, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %21 = bitcast i8* %.95 to i64*
  store i64 0, i64* %21, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %22 = bitcast i8* %.97 to i64*
  store i64 8, i64* %22, align 8
  %.99 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.1, i64 0, i32 3
  %23 = bitcast %"Array<EnumNode>.560367"** %.99 to i8**
  store i8* %.89, i8** %23, align 8
  %.103 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.105 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.105 to %"Array<TypeAliasNode>_vtable_ty.560378"**
  store %"Array<TypeAliasNode>_vtable_ty.560378"* @"Array<TypeAliasNode>_vtable_data", %"Array<TypeAliasNode>_vtable_ty.560378"** %.107, align 8
  %.109 = getelementptr inbounds i8, i8* %.105, i64 8
  %24 = bitcast i8* %.109 to i8**
  store i8* %.103, i8** %24, align 8
  %.111 = getelementptr inbounds i8, i8* %.105, i64 16
  %25 = bitcast i8* %.111 to i64*
  store i64 0, i64* %25, align 8
  %.113 = getelementptr inbounds i8, i8* %.105, i64 24
  %26 = bitcast i8* %.113 to i64*
  store i64 8, i64* %26, align 8
  %.115 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.1, i64 0, i32 7
  %27 = bitcast %"Array<TypeAliasNode>.560371"** %.115 to i8**
  store i8* %.105, i8** %27, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Parser_constructor(%Parser.560379* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.7 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 4
  store i64 -1, i64* %.7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Parser_can_parse(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp ne i64 %.9, 44
  %.12 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 2
  %.13 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.13, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 0
  %.17 = and i1 %.10, %.16
  ret i1 %.17
}

define void @Parser_error(%Parser.560379* nocapture readonly %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 2
  %.9 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.8, align 8
  %.12 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.13 = load %Token.560247*, %Token.560247** %.12, align 8
  %.14 = getelementptr inbounds %Token.560247, %Token.560247* %.13, i64 0, i32 2
  %.15 = load %FloRange.560223*, %FloRange.560223** %.14, align 8
  %.16 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %FloError.560225*
  %.18 = bitcast i8* %.16 to %FloError_vtable_ty.560226**
  store %FloError_vtable_ty.560226* @FloError_vtable_data, %FloError_vtable_ty.560226** %.18, align 8
  tail call void @FloError_constructor(%FloError.560225* %.17, i64 2, %string.560217* %.2, %FloRange.560223* %.15)
  %.21 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.9, i64 0, i32 0
  %.22 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.22, i64 0, i32 2
  %.24 = load void (%"Array<FloError>.560238"*, %FloError.560225*)*, void (%"Array<FloError>.560238"*, %FloError.560225*)** %.23, align 8
  tail call void %.24(%"Array<FloError>.560238"* %.9, %FloError.560225* %.17)
  ret void
}

define void @Parser_advance(%Parser.560379* nocapture %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 4
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 1
  %.10 = load %"Array<Token>.560259"*, %"Array<Token>.560259"** %.9, align 8
  %.11 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.10, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp slt i64 %.7, %.12
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.19 = add nsw i64 %.7, 1
  store i64 %.19, i64* %.6, align 8
  %.26 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.10, i64 0, i32 0
  %.27 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.27, i64 0, i32 5
  %.29 = load %Token.560247* (%"Array<Token>.560259"*, i64)*, %Token.560247* (%"Array<Token>.560259"*, i64)** %.28, align 8
  %.30 = tail call %Token.560247* %.29(%"Array<Token>.560259"* %.10, i64 %.19)
  %.31 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  store %Token.560247* %.30, %Token.560247** %.31, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret void
}

define %Token.560247* @Parser_peek(%Parser.560379* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = add i64 %.9, %.2
  %.15 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 1
  %.16 = load %"Array<Token>.560259"*, %"Array<Token>.560259"** %.15, align 8
  %.17 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.16, i64 0, i32 2
  %.18 = load i64, i64* %.17, align 8
  %.19 = icmp slt i64 %.11, %.18
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.25 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.16, i64 0, i32 0
  %.26 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.26, i64 0, i32 5
  %.28 = load %Token.560247* (%"Array<Token>.560259"*, i64)*, %Token.560247* (%"Array<Token>.560259"*, i64)** %.27, align 8
  %.29 = tail call %Token.560247* %.28(%"Array<Token>.560259"* %.16, i64 %.11)
  ret %Token.560247* %.29

.4.endif:                                         ; preds = %.4
  %.36 = add i64 %.18, -1
  %.40 = getelementptr inbounds %"Array<Token>.560259", %"Array<Token>.560259"* %.16, i64 0, i32 0
  %.41 = load %"Array<Token>_vtable_ty.560260"*, %"Array<Token>_vtable_ty.560260"** %.40, align 8
  %.42 = getelementptr inbounds %"Array<Token>_vtable_ty.560260", %"Array<Token>_vtable_ty.560260"* %.41, i64 0, i32 5
  %.43 = load %Token.560247* (%"Array<Token>.560259"*, i64)*, %Token.560247* (%"Array<Token>.560259"*, i64)** %.42, align 8
  %.44 = tail call %Token.560247* %.43(%"Array<Token>.560259"* %.16, i64 %.36)
  ret %Token.560247* %.44
}

define %Token.560247* @Parser_eat(%Parser.560379* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.9 = load %Token.560247*, %Token.560247** %.8, align 8
  %.13 = getelementptr inbounds %Token.560247, %Token.560247* %.9, i64 0, i32 1
  %.14 = load i64, i64* %.13, align 8
  %.15 = icmp eq i64 %.14, %.2
  br i1 %.15, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.18 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.19 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.19, i64 0, i32 2
  %.21 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.20, align 8
  tail call void %.21(%Parser.560379* nonnull %.1)
  ret %Token.560247* %.9

.4.else:                                          ; preds = %.4
  switch i64 %.2, label %.4.else.endif [
    i64 51, label %.4.else.if
    i64 36, label %.4.else.else.if
    i64 1, label %.4.else.else.else.if
    i64 23, label %.4.else.else.else.else.if
    i64 24, label %.4.else.else.else.else.else.if
    i64 25, label %.4.else.else.else.else.else.else.if
    i64 26, label %.4.else.else.else.else.else.else.else.if
    i64 3, label %.4.else.else.else.else.else.else.else.else.if
    i64 40, label %.4.else.else.else.else.else.else.else.else.else.if
    i64 39, label %.4.else.else.else.else.el...if
    i64 43, label %.4.else.else.else.else.el...else.if
  ]

.4.else.if:                                       ; preds = %.4.else
  %.29 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.30 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.29, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.30, i64 0, i32 1
  %.32 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.31, align 8
  %.33 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.560217*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.34.repack, align 8
  %.34.repack31 = getelementptr inbounds i8, i8* %.33, i64 8
  %0 = bitcast i8* %.34.repack31 to i8**
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.144, i64 0, i64 0), i8** %0, align 8
  %.34.repack32 = getelementptr inbounds i8, i8* %.33, i64 16
  %1 = bitcast i8* %.34.repack32 to i64*
  store i64 22, i64* %1, align 8
  %.34.repack33 = getelementptr inbounds i8, i8* %.33, i64 24
  %2 = bitcast i8* %.34.repack33 to i64*
  store i64 22, i64* %2, align 8
  tail call void %.32(%Parser.560379* nonnull %.1, %string.560217* %.34)
  br label %.4.else.endif

.4.else.endif:                                    ; preds = %.4.else.else.else.else.el...else.if, %.4.else, %.4.else.else.else.else.el...if, %.4.else.else.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.if, %.4.else.else.else.else.else.if, %.4.else.else.else.else.if, %.4.else.else.else.if, %.4.else.else.if, %.4.else.if
  %.180 = getelementptr inbounds %Token.560247, %Token.560247* %.9, i64 0, i32 2
  %.181 = load %FloRange.560223*, %FloRange.560223** %.180, align 8
  %.182 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.183 = bitcast i8* %.182 to %Token.560247*
  %.184 = bitcast i8* %.182 to %Token_vtable_ty.560248**
  store %Token_vtable_ty.560248* @Token_vtable_data, %Token_vtable_ty.560248** %.184, align 8
  tail call void @Token_constructor(%Token.560247* %.183, i64 44, %FloRange.560223* %.181)
  ret %Token.560247* %.183

.4.else.else.if:                                  ; preds = %.4.else
  %.42 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.43 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.42, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.43, i64 0, i32 1
  %.45 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.44, align 8
  %.46 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.47 = bitcast i8* %.46 to %string.560217*
  %.47.repack = bitcast i8* %.46 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.47.repack, align 8
  %.47.repack28 = getelementptr inbounds i8, i8* %.46, i64 8
  %3 = bitcast i8* %.47.repack28 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.145, i64 0, i64 0), i8** %3, align 8
  %.47.repack29 = getelementptr inbounds i8, i8* %.46, i64 16
  %4 = bitcast i8* %.47.repack29 to i64*
  store i64 12, i64* %4, align 8
  %.47.repack30 = getelementptr inbounds i8, i8* %.46, i64 24
  %5 = bitcast i8* %.47.repack30 to i64*
  store i64 12, i64* %5, align 8
  tail call void %.45(%Parser.560379* nonnull %.1, %string.560217* %.47)
  br label %.4.else.endif

.4.else.else.else.if:                             ; preds = %.4.else
  %.55 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.56 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.55, align 8
  %.57 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.56, i64 0, i32 1
  %.58 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.57, align 8
  %.59 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.560217*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.60.repack, align 8
  %.60.repack25 = getelementptr inbounds i8, i8* %.59, i64 8
  %6 = bitcast i8* %.60.repack25 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.146, i64 0, i64 0), i8** %6, align 8
  %.60.repack26 = getelementptr inbounds i8, i8* %.59, i64 16
  %7 = bitcast i8* %.60.repack26 to i64*
  store i64 12, i64* %7, align 8
  %.60.repack27 = getelementptr inbounds i8, i8* %.59, i64 24
  %8 = bitcast i8* %.60.repack27 to i64*
  store i64 12, i64* %8, align 8
  tail call void %.58(%Parser.560379* nonnull %.1, %string.560217* %.60)
  br label %.4.else.endif

.4.else.else.else.else.if:                        ; preds = %.4.else
  %.68 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.69 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.68, align 8
  %.70 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.69, i64 0, i32 1
  %.71 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.70, align 8
  %.72 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.560217*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.73.repack, align 8
  %.73.repack22 = getelementptr inbounds i8, i8* %.72, i64 8
  %9 = bitcast i8* %.73.repack22 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.147, i64 0, i64 0), i8** %9, align 8
  %.73.repack23 = getelementptr inbounds i8, i8* %.72, i64 16
  %10 = bitcast i8* %.73.repack23 to i64*
  store i64 12, i64* %10, align 8
  %.73.repack24 = getelementptr inbounds i8, i8* %.72, i64 24
  %11 = bitcast i8* %.73.repack24 to i64*
  store i64 12, i64* %11, align 8
  tail call void %.71(%Parser.560379* nonnull %.1, %string.560217* %.73)
  br label %.4.else.endif

.4.else.else.else.else.else.if:                   ; preds = %.4.else
  %.81 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.82 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.81, align 8
  %.83 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.82, i64 0, i32 1
  %.84 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.83, align 8
  %.85 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.560217*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.86.repack, align 8
  %.86.repack19 = getelementptr inbounds i8, i8* %.85, i64 8
  %12 = bitcast i8* %.86.repack19 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.148, i64 0, i64 0), i8** %12, align 8
  %.86.repack20 = getelementptr inbounds i8, i8* %.85, i64 16
  %13 = bitcast i8* %.86.repack20 to i64*
  store i64 12, i64* %13, align 8
  %.86.repack21 = getelementptr inbounds i8, i8* %.85, i64 24
  %14 = bitcast i8* %.86.repack21 to i64*
  store i64 12, i64* %14, align 8
  tail call void %.84(%Parser.560379* nonnull %.1, %string.560217* %.86)
  br label %.4.else.endif

.4.else.else.else.else.else.else.if:              ; preds = %.4.else
  %.94 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.95 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.94, align 8
  %.96 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.95, i64 0, i32 1
  %.97 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.96, align 8
  %.98 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.99 = bitcast i8* %.98 to %string.560217*
  %.99.repack = bitcast i8* %.98 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.99.repack, align 8
  %.99.repack16 = getelementptr inbounds i8, i8* %.98, i64 8
  %15 = bitcast i8* %.99.repack16 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.149, i64 0, i64 0), i8** %15, align 8
  %.99.repack17 = getelementptr inbounds i8, i8* %.98, i64 16
  %16 = bitcast i8* %.99.repack17 to i64*
  store i64 12, i64* %16, align 8
  %.99.repack18 = getelementptr inbounds i8, i8* %.98, i64 24
  %17 = bitcast i8* %.99.repack18 to i64*
  store i64 12, i64* %17, align 8
  tail call void %.97(%Parser.560379* nonnull %.1, %string.560217* %.99)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.if:         ; preds = %.4.else
  %.107 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.108 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.107, align 8
  %.109 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.108, i64 0, i32 1
  %.110 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.109, align 8
  %.111 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.112 = bitcast i8* %.111 to %string.560217*
  %.112.repack = bitcast i8* %.111 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.112.repack, align 8
  %.112.repack13 = getelementptr inbounds i8, i8* %.111, i64 8
  %18 = bitcast i8* %.112.repack13 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.150, i64 0, i64 0), i8** %18, align 8
  %.112.repack14 = getelementptr inbounds i8, i8* %.111, i64 16
  %19 = bitcast i8* %.112.repack14 to i64*
  store i64 12, i64* %19, align 8
  %.112.repack15 = getelementptr inbounds i8, i8* %.111, i64 24
  %20 = bitcast i8* %.112.repack15 to i64*
  store i64 12, i64* %20, align 8
  tail call void %.110(%Parser.560379* nonnull %.1, %string.560217* %.112)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.else.if:    ; preds = %.4.else
  %.120 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.121 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.120, align 8
  %.122 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.121, i64 0, i32 1
  %.123 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.122, align 8
  %.124 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.125 = bitcast i8* %.124 to %string.560217*
  %.125.repack = bitcast i8* %.124 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.125.repack, align 8
  %.125.repack10 = getelementptr inbounds i8, i8* %.124, i64 8
  %21 = bitcast i8* %.125.repack10 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.151, i64 0, i64 0), i8** %21, align 8
  %.125.repack11 = getelementptr inbounds i8, i8* %.124, i64 16
  %22 = bitcast i8* %.125.repack11 to i64*
  store i64 12, i64* %22, align 8
  %.125.repack12 = getelementptr inbounds i8, i8* %.124, i64 24
  %23 = bitcast i8* %.125.repack12 to i64*
  store i64 12, i64* %23, align 8
  tail call void %.123(%Parser.560379* nonnull %.1, %string.560217* %.125)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.else.else.if: ; preds = %.4.else
  %.133 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.134 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.133, align 8
  %.135 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.134, i64 0, i32 1
  %.136 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.135, align 8
  %.137 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.138 = bitcast i8* %.137 to %string.560217*
  %.138.repack = bitcast i8* %.137 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.138.repack, align 8
  %.138.repack7 = getelementptr inbounds i8, i8* %.137, i64 8
  %24 = bitcast i8* %.138.repack7 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.152, i64 0, i64 0), i8** %24, align 8
  %.138.repack8 = getelementptr inbounds i8, i8* %.137, i64 16
  %25 = bitcast i8* %.138.repack8 to i64*
  store i64 12, i64* %25, align 8
  %.138.repack9 = getelementptr inbounds i8, i8* %.137, i64 24
  %26 = bitcast i8* %.138.repack9 to i64*
  store i64 12, i64* %26, align 8
  tail call void %.136(%Parser.560379* nonnull %.1, %string.560217* %.138)
  br label %.4.else.endif

.4.else.else.else.else.el...if:                   ; preds = %.4.else
  %.146 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.147 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.146, align 8
  %.148 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.147, i64 0, i32 1
  %.149 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.148, align 8
  %.150 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.151 = bitcast i8* %.150 to %string.560217*
  %.151.repack = bitcast i8* %.150 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.151.repack, align 8
  %.151.repack4 = getelementptr inbounds i8, i8* %.150, i64 8
  %27 = bitcast i8* %.151.repack4 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.153, i64 0, i64 0), i8** %27, align 8
  %.151.repack5 = getelementptr inbounds i8, i8* %.150, i64 16
  %28 = bitcast i8* %.151.repack5 to i64*
  store i64 12, i64* %28, align 8
  %.151.repack6 = getelementptr inbounds i8, i8* %.150, i64 24
  %29 = bitcast i8* %.151.repack6 to i64*
  store i64 12, i64* %29, align 8
  tail call void %.149(%Parser.560379* nonnull %.1, %string.560217* %.151)
  br label %.4.else.endif

.4.else.else.else.else.el...else.if:              ; preds = %.4.else
  %.159 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.160 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.159, align 8
  %.161 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.160, i64 0, i32 1
  %.162 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.161, align 8
  %.163 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.164 = bitcast i8* %.163 to %string.560217*
  %.164.repack = bitcast i8* %.163 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.164.repack, align 8
  %.164.repack1 = getelementptr inbounds i8, i8* %.163, i64 8
  %30 = bitcast i8* %.164.repack1 to i8**
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.154, i64 0, i64 0), i8** %30, align 8
  %.164.repack2 = getelementptr inbounds i8, i8* %.163, i64 16
  %31 = bitcast i8* %.164.repack2 to i64*
  store i64 13, i64* %31, align 8
  %.164.repack3 = getelementptr inbounds i8, i8* %.163, i64 24
  %32 = bitcast i8* %.164.repack3 to i64*
  store i64 13, i64* %32, align 8
  tail call void %.162(%Parser.560379* nonnull %.1, %string.560217* %.164)
  br label %.4.else.endif
}

define void @Parser_new_lines(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp eq i64 %.9, 31
  %.12 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.13, i64 0, i32 0
  %.15 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.14, align 8
  %.16 = tail call i1 %.15(%Parser.560379* %.1)
  %.17 = and i1 %.10, %.16
  br i1 %.17, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %.21 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.22 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.21, i64 0, i32 2
  %.23 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.22, align 8
  tail call void %.23(%Parser.560379* nonnull %.1)
  %.27 = load %Token.560247*, %Token.560247** %.6, align 8
  %.28 = getelementptr inbounds %Token.560247, %Token.560247* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30 = icmp eq i64 %.29, 31
  %.33 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.33, i64 0, i32 0
  %.35 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.34, align 8
  %.36 = tail call i1 %.35(%Parser.560379* nonnull %.1)
  %.37 = and i1 %.30, %.36
  br i1 %.37, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3
  ret void
}

define noalias %TypeNode.560269* @Parser_parse_primitive_type(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %TypeNode.560269*
  %.12 = bitcast i8* %.10 to %TypeNode_vtable_ty.560270**
  store %TypeNode_vtable_ty.560270* @TypeNode_vtable_data, %TypeNode_vtable_ty.560270** %.12, align 8
  tail call void @TypeNode_constructor(%TypeNode.560269* %.11, i64 12, %FloRange.560223* %.9)
  %.18 = load %Token.560247*, %Token.560247** %.6, align 8
  %.19 = getelementptr inbounds %Token.560247, %Token.560247* %.18, i64 0, i32 1
  %.20 = load i64, i64* %.19, align 8
  switch i64 %.20, label %.3.else.else.else.else.el...else.else.if [
    i64 59, label %.3.if
    i64 60, label %.3.else.if
    i64 61, label %.3.else.else.if
    i64 62, label %.3.else.else.else.if
    i64 63, label %.3.else.else.else.else.if
    i64 64, label %.3.else.else.else.else.else.if
    i64 65, label %.3.else.else.else.else.else.else.if
    i64 66, label %.3.else.else.else.else.else.else.else.if
    i64 67, label %.3.else.else.else.else.else.else.else.else.if
    i64 68, label %.3.else.else.else.else.else.else.else.else.else.if
    i64 69, label %.3.else.else.else.else.el...if
    i64 70, label %.3.else.else.else.else.el...else.if
    i64 71, label %.3.endif
  ]

.3.if:                                            ; preds = %.3
  %.24 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.24 to i64*
  store i64 0, i64* %0, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.else.else.else.else.el...else.else.if, %.3.else.else.else.else.el...else.if, %.3.else.else.else.else.el...if, %.3.else.else.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.if, %.3.else.else.else.else.else.if, %.3.else.else.else.else.if, %.3.else.else.else.if, %.3.else.else.if, %.3.else.if, %.3.if
  %.178 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.179 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.178, align 8
  %.180 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.179, i64 0, i32 2
  %.181 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.180, align 8
  tail call void %.181(%Parser.560379* nonnull %.1)
  ret %TypeNode.560269* %.11

.3.else.if:                                       ; preds = %.3
  %.35 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.35 to i64*
  store i64 1, i64* %1, align 8
  br label %.3.endif

.3.else.else.if:                                  ; preds = %.3
  %.46 = getelementptr inbounds i8, i8* %.10, i64 16
  %2 = bitcast i8* %.46 to i64*
  store i64 2, i64* %2, align 8
  br label %.3.endif

.3.else.else.else.if:                             ; preds = %.3
  %.57 = getelementptr inbounds i8, i8* %.10, i64 16
  %3 = bitcast i8* %.57 to i64*
  store i64 3, i64* %3, align 8
  br label %.3.endif

.3.else.else.else.else.if:                        ; preds = %.3
  %.68 = getelementptr inbounds i8, i8* %.10, i64 16
  %4 = bitcast i8* %.68 to i64*
  store i64 4, i64* %4, align 8
  br label %.3.endif

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.79 = getelementptr inbounds i8, i8* %.10, i64 16
  %5 = bitcast i8* %.79 to i64*
  store i64 5, i64* %5, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.90 = getelementptr inbounds i8, i8* %.10, i64 16
  %6 = bitcast i8* %.90 to i64*
  store i64 6, i64* %6, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.if:         ; preds = %.3
  %.101 = getelementptr inbounds i8, i8* %.10, i64 16
  %7 = bitcast i8* %.101 to i64*
  store i64 7, i64* %7, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.else.if:    ; preds = %.3
  %.112 = getelementptr inbounds i8, i8* %.10, i64 16
  %8 = bitcast i8* %.112 to i64*
  store i64 8, i64* %8, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.else.else.if: ; preds = %.3
  %.123 = getelementptr inbounds i8, i8* %.10, i64 16
  %9 = bitcast i8* %.123 to i64*
  store i64 9, i64* %9, align 8
  br label %.3.endif

.3.else.else.else.else.el...if:                   ; preds = %.3
  %.134 = getelementptr inbounds i8, i8* %.10, i64 16
  %10 = bitcast i8* %.134 to i64*
  store i64 10, i64* %10, align 8
  br label %.3.endif

.3.else.else.else.else.el...else.if:              ; preds = %.3
  %.145 = getelementptr inbounds i8, i8* %.10, i64 16
  %11 = bitcast i8* %.145 to i64*
  store i64 11, i64* %11, align 8
  br label %.3.endif

.3.else.else.else.else.el...else.else.if:         ; preds = %.3
  %.156 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.157 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.156, align 8
  %.158 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.157, i64 0, i32 1
  %.159 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.158, align 8
  %.160 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.560217*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.161.repack, align 8
  %.161.repack1 = getelementptr inbounds i8, i8* %.160, i64 8
  %12 = bitcast i8* %.161.repack1 to i8**
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.155, i64 0, i64 0), i8** %12, align 8
  %.161.repack2 = getelementptr inbounds i8, i8* %.160, i64 16
  %13 = bitcast i8* %.161.repack2 to i64*
  store i64 26, i64* %13, align 8
  %.161.repack3 = getelementptr inbounds i8, i8* %.160, i64 24
  %14 = bitcast i8* %.161.repack3 to i64*
  store i64 26, i64* %14, align 8
  tail call void %.159(%Parser.560379* nonnull %.1, %string.560217* %.161)
  br label %.3.endif
}

define void @Parser_parse_type_list(%Parser.560379* %.1, %"Array<TypeNode>.560273"* %.2) {
.4:
  %.9 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.10 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.11 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.10, i64 0, i32 10
  %.12 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.11, align 8
  %.13 = tail call %TypeNode.560269* %.12(%Parser.560379* %.1)
  %.14 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.2, i64 0, i32 0
  %.15 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.15, i64 0, i32 2
  %.17 = load void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)*, void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)** %.16, align 8
  tail call void %.17(%"Array<TypeNode>.560273"* %.2, %TypeNode.560269* %.13)
  %.20 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.21 = load %Token.560247*, %Token.560247** %.20, align 8
  %.22 = getelementptr inbounds %Token.560247, %Token.560247* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 3
  %.27 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.28, align 8
  %.30 = tail call i1 %.29(%Parser.560379* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.35 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.35, i64 0, i32 2
  %.37 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.36, align 8
  tail call void %.37(%Parser.560379* nonnull %.1)
  %.42 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.42, i64 0, i32 10
  %.44 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.43, align 8
  %.45 = tail call %TypeNode.560269* %.44(%Parser.560379* nonnull %.1)
  %.47 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.14, align 8
  %.48 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.47, i64 0, i32 2
  %.49 = load void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)*, void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)** %.48, align 8
  tail call void %.49(%"Array<TypeNode>.560273"* nonnull %.2, %TypeNode.560269* %.45)
  %.53 = load %Token.560247*, %Token.560247** %.20, align 8
  %.54 = getelementptr inbounds %Token.560247, %Token.560247* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 3
  %.59 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.59, i64 0, i32 0
  %.61 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.60, align 8
  %.62 = tail call i1 %.61(%Parser.560379* nonnull %.1)
  %.63 = and i1 %.56, %.62
  br i1 %.63, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  ret void
}

define noalias %RecordTypeNode.560271* @Parser_parse_object_type(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 4
  %.9 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.8, align 8
  %.10 = tail call %Token.560247* %.9(%Parser.560379* %.1, i64 51)
  %.11 = bitcast %Token.560247* %.10 to %IdentifierToken.560263*
  %0 = getelementptr inbounds %Token.560247, %Token.560247* %.10, i64 0, i32 2
  %.16 = load %FloRange.560223*, %FloRange.560223** %0, align 8
  %.17 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.18 = bitcast i8* %.17 to %RecordTypeNode.560271*
  %.19 = bitcast i8* %.17 to %RecordTypeNode_vtable_ty.560272**
  store %RecordTypeNode_vtable_ty.560272* @RecordTypeNode_vtable_data, %RecordTypeNode_vtable_ty.560272** %.19, align 8
  tail call void @RecordTypeNode_constructor(%RecordTypeNode.560271* %.18, %IdentifierToken.560263* %.11, %FloRange.560223* %.16)
  %.24 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.25 = load %Token.560247*, %Token.560247** %.24, align 8
  %.26 = getelementptr inbounds %Token.560247, %Token.560247* %.25, i64 0, i32 1
  %.27 = load i64, i64* %.26, align 8
  %.28 = icmp eq i64 %.27, 40
  br i1 %.28, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.32 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.33 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.32, i64 0, i32 2
  %.34 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.33, align 8
  tail call void %.34(%Parser.560379* nonnull %.1)
  %.38 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.38, i64 0, i32 7
  %.40 = load void (%Parser.560379*, %"Array<TypeNode>.560273"*)*, void (%Parser.560379*, %"Array<TypeNode>.560273"*)** %.39, align 8
  %.42 = getelementptr inbounds i8, i8* %.17, i64 32
  %1 = bitcast i8* %.42 to %"Array<TypeNode>.560273"**
  %.43 = load %"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"** %1, align 8
  tail call void %.40(%Parser.560379* nonnull %.1, %"Array<TypeNode>.560273"* %.43)
  %.47 = getelementptr inbounds i8, i8* %.17, i64 8
  %2 = bitcast i8* %.47 to %FloRange.560223**
  %.48 = load %FloRange.560223*, %FloRange.560223** %2, align 8
  %.51 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.51, i64 0, i32 4
  %.53 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.52, align 8
  %.54 = tail call %Token.560247* %.53(%Parser.560379* nonnull %.1, i64 39)
  %.55 = getelementptr inbounds %Token.560247, %Token.560247* %.54, i64 0, i32 2
  %.56 = load %FloRange.560223*, %FloRange.560223** %.55, align 8
  %.57 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.48, %FloRange.560223* %.56)
  store %FloRange.560223* %.57, %FloRange.560223** %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %RecordTypeNode.560271* %.18
}

define noalias %FunctionTypeNode.560275* @Parser_parse_function_type(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %FunctionTypeNode.560275*
  %.12 = bitcast i8* %.10 to %FunctionTypeNode_vtable_ty.560276**
  store %FunctionTypeNode_vtable_ty.560276* @FunctionTypeNode_vtable_data, %FunctionTypeNode_vtable_ty.560276** %.12, align 8
  tail call void @FunctionTypeNode_constructor(%FunctionTypeNode.560275* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.24 = load %Token.560247*, %Token.560247** %.6, align 8
  %.25 = getelementptr inbounds %Token.560247, %Token.560247* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp eq i64 %.26, 24
  br i1 %.27.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 7
  %.33 = load void (%Parser.560379*, %"Array<TypeNode>.560273"*)*, void (%Parser.560379*, %"Array<TypeNode>.560273"*)** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.35 to %"Array<TypeNode>.560273"**
  %.36 = load %"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"** %0, align 8
  tail call void %.33(%Parser.560379* nonnull %.1, %"Array<TypeNode>.560273"* %.36)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.41 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.41, i64 0, i32 4
  %.43 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.42, align 8
  %.44 = tail call %Token.560247* %.43(%Parser.560379* nonnull %.1, i64 24)
  %.47 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.47, i64 0, i32 4
  %.49 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.48, align 8
  %.50 = tail call %Token.560247* %.49(%Parser.560379* nonnull %.1, i64 43)
  %.54 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.54, i64 0, i32 10
  %.56 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.55, align 8
  %.57 = tail call %TypeNode.560269* %.56(%Parser.560379* nonnull %.1)
  %.58 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.58 to %TypeNode.560269**
  store %TypeNode.560269* %.57, %TypeNode.560269** %1, align 8
  %.62 = getelementptr inbounds i8, i8* %.10, i64 8
  %2 = bitcast i8* %.62 to %FloRange.560223**
  %.63 = load %FloRange.560223*, %FloRange.560223** %2, align 8
  %.67 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.57, i64 0, i32 1
  %.68 = load %FloRange.560223*, %FloRange.560223** %.67, align 8
  %.69 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.63, %FloRange.560223* %.68)
  store %FloRange.560223* %.69, %FloRange.560223** %2, align 8
  ret %FunctionTypeNode.560275* %.11
}

define %TypeNode.560269* @Parser_parse_type(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %TypeNode.560269*
  %.12 = bitcast i8* %.10 to %TypeNode_vtable_ty.560270**
  store %TypeNode_vtable_ty.560270* @TypeNode_vtable_data, %TypeNode_vtable_ty.560270** %.12, align 8
  tail call void @TypeNode_constructor(%TypeNode.560269* %.11, i64 12, %FloRange.560223* %.9)
  %.18 = load %Token.560247*, %Token.560247** %.6, align 8
  %.19 = getelementptr inbounds %Token.560247, %Token.560247* %.18, i64 0, i32 1
  %.20 = load i64, i64* %.19, align 8
  %.21 = icmp eq i64 %.20, 51
  br i1 %.21, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.24 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.25 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.24, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.25, i64 0, i32 8
  %.27 = load %RecordTypeNode.560271* (%Parser.560379*)*, %RecordTypeNode.560271* (%Parser.560379*)** %.26, align 8
  %.28 = tail call %RecordTypeNode.560271* %.27(%Parser.560379* nonnull %.1)
  %.29 = bitcast %RecordTypeNode.560271* %.28 to %TypeNode.560269*
  br label %.3.endif

.3.else:                                          ; preds = %.3
  %.37 = icmp eq i64 %.20, 23
  %.40 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.41 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.40, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.else

.3.endif:                                         ; preds = %.3.else.if, %.3.else.else, %.3.if
  %type_node.0 = phi %TypeNode.560269* [ %.29, %.3.if ], [ %.45, %.3.else.if ], [ %.53, %.3.else.else ]
  %.59 = load %Token.560247*, %Token.560247** %.6, align 8
  %.60 = getelementptr inbounds %Token.560247, %Token.560247* %.59, i64 0, i32 1
  %.61 = load i64, i64* %.60, align 8
  %.62 = icmp eq i64 %.61, 27
  %.68 = icmp eq i64 %.61, 4
  %.69 = or i1 %.62, %.68
  %.71 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.72 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.71, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.72, i64 0, i32 0
  %.74 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.73, align 8
  %.75 = tail call i1 %.74(%Parser.560379* nonnull %.1)
  %.76 = and i1 %.69, %.75
  br i1 %.76, label %while.entry, label %while.exit

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.41, i64 0, i32 9
  %.43 = load %FunctionTypeNode.560275* (%Parser.560379*)*, %FunctionTypeNode.560275* (%Parser.560379*)** %.42, align 8
  %.44 = tail call %FunctionTypeNode.560275* %.43(%Parser.560379* nonnull %.1)
  %.45 = bitcast %FunctionTypeNode.560275* %.44 to %TypeNode.560269*
  br label %.3.endif

.3.else.else:                                     ; preds = %.3.else
  %.51 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.41, i64 0, i32 6
  %.52 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.51, align 8
  %.53 = tail call %TypeNode.560269* %.52(%Parser.560379* nonnull %.1)
  br label %.3.endif

while.entry:                                      ; preds = %.3.endif, %while.entry.endif
  %type_node.2 = phi %TypeNode.560269* [ %type_node.4, %while.entry.endif ], [ %type_node.0, %.3.endif ]
  %.80 = load %Token.560247*, %Token.560247** %.6, align 8
  %.81 = getelementptr inbounds %Token.560247, %Token.560247* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83 = icmp eq i64 %.82, 27
  br i1 %.83, label %while.entry.if, label %while.entry.else

while.exit.loopexit:                              ; preds = %while.entry.endif
  %type_node.4.le = bitcast i8* %type_node.4.in to %TypeNode.560269*
  br label %while.exit

while.exit:                                       ; preds = %while.exit.loopexit, %.3.endif
  %type_node.3 = phi %TypeNode.560269* [ %type_node.0, %.3.endif ], [ %type_node.4.le, %while.exit.loopexit ]
  ret %TypeNode.560269* %type_node.3

while.entry.if:                                   ; preds = %while.entry
  %.87 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.71, align 8
  %.88 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.87, i64 0, i32 2
  %.89 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.88, align 8
  tail call void %.89(%Parser.560379* nonnull %.1)
  %.93 = load %Token.560247*, %Token.560247** %.6, align 8
  %.94 = getelementptr inbounds %Token.560247, %Token.560247* %.93, i64 0, i32 1
  %.95 = load i64, i64* %.94, align 8
  %.96 = icmp eq i64 %.95, 28
  br i1 %.96, label %while.entry.if.if, label %while.entry.if.else

while.entry.else:                                 ; preds = %while.entry
  %.176 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %type_node.2, i64 0, i32 1
  %.177 = load %FloRange.560223*, %FloRange.560223** %.176, align 8
  %.180 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.71, align 8
  %.181 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.180, i64 0, i32 4
  %.182 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.181, align 8
  %.183 = tail call %Token.560247* %.182(%Parser.560379* nonnull %.1, i64 4)
  %.184 = getelementptr inbounds %Token.560247, %Token.560247* %.183, i64 0, i32 2
  %.185 = load %FloRange.560223*, %FloRange.560223** %.184, align 8
  %.186 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.177, %FloRange.560223* %.185)
  %.187 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.188 = bitcast i8* %.187 to %PointerTypeNode.560277*
  %.189 = bitcast i8* %.187 to %PointerTypeNode_vtable_ty.560278**
  store %PointerTypeNode_vtable_ty.560278* @PointerTypeNode_vtable_data, %PointerTypeNode_vtable_ty.560278** %.189, align 8
  tail call void @PointerTypeNode_constructor(%PointerTypeNode.560277* %.188, %TypeNode.560269* %type_node.2, %FloRange.560223* %.186)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if.endif, %while.entry.else
  %type_node.4.in = phi i8* [ %type_node.5.in, %while.entry.if.endif ], [ %.187, %while.entry.else ]
  %type_node.4 = bitcast i8* %type_node.4.in to %TypeNode.560269*
  %.197 = load %Token.560247*, %Token.560247** %.6, align 8
  %.198 = getelementptr inbounds %Token.560247, %Token.560247* %.197, i64 0, i32 1
  %.199 = load i64, i64* %.198, align 8
  %.200 = icmp eq i64 %.199, 27
  %.206 = icmp eq i64 %.199, 4
  %.207 = or i1 %.200, %.206
  %.210 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.71, align 8
  %.211 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.210, i64 0, i32 0
  %.212 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.211, align 8
  %.213 = tail call i1 %.212(%Parser.560379* nonnull %.1)
  %.214 = and i1 %.207, %.213
  br i1 %.214, label %while.entry, label %while.exit.loopexit

while.entry.if.if:                                ; preds = %while.entry.if
  %.98 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.99 = bitcast i8* %.98 to %string.560217*
  %.99.repack = bitcast i8* %.98 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.99.repack, align 8
  %.99.repack1 = getelementptr inbounds i8, i8* %.98, i64 8
  %0 = bitcast i8* %.99.repack1 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.156, i64 0, i64 0), i8** %0, align 8
  %.99.repack2 = getelementptr inbounds i8, i8* %.98, i64 16
  %1 = bitcast i8* %.99.repack2 to i64*
  store i64 5, i64* %1, align 8
  %.99.repack3 = getelementptr inbounds i8, i8* %.98, i64 24
  %2 = bitcast i8* %.99.repack3 to i64*
  store i64 5, i64* %2, align 8
  %.104 = getelementptr inbounds %Token.560247, %Token.560247* %.93, i64 0, i32 2
  %.105 = load %FloRange.560223*, %FloRange.560223** %.104, align 8
  %.106 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %IdentifierToken.560263*
  %.108 = bitcast i8* %.106 to %IdentifierToken_vtable_ty.560264**
  store %IdentifierToken_vtable_ty.560264* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.560264** %.108, align 8
  tail call void @IdentifierToken_constructor(%IdentifierToken.560263* %.107, %string.560217* %.99, %FloRange.560223* %.105)
  %.113 = load %Token.560247*, %Token.560247** %.6, align 8
  %.114 = getelementptr inbounds %Token.560247, %Token.560247* %.113, i64 0, i32 2
  %.115 = load %FloRange.560223*, %FloRange.560223** %.114, align 8
  %.116 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.117 = bitcast i8* %.116 to %RecordTypeNode.560271*
  %.118 = bitcast i8* %.116 to %RecordTypeNode_vtable_ty.560272**
  store %RecordTypeNode_vtable_ty.560272* @RecordTypeNode_vtable_data, %RecordTypeNode_vtable_ty.560272** %.118, align 8
  tail call void @RecordTypeNode_constructor(%RecordTypeNode.560271* %.117, %IdentifierToken.560263* %.107, %FloRange.560223* %.115)
  %.123 = getelementptr inbounds i8, i8* %.116, i64 32
  %3 = bitcast i8* %.123 to %"Array<TypeNode>.560273"**
  %.124 = load %"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"** %3, align 8
  %.126 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.124, i64 0, i32 0
  %.127 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.126, align 8
  %.128 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.127, i64 0, i32 2
  %.129 = load void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)*, void (%"Array<TypeNode>.560273"*, %TypeNode.560269*)** %.128, align 8
  tail call void %.129(%"Array<TypeNode>.560273"* %.124, %TypeNode.560269* %type_node.2)
  br label %while.entry.if.endif

while.entry.if.else:                              ; preds = %while.entry.if
  %.138 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.71, align 8
  %.139 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.138, i64 0, i32 37
  %.140 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.139, align 8
  %.141 = tail call %ExpressionNode.560285* %.140(%Parser.560379* nonnull %.1)
  %.144 = load %Token.560247*, %Token.560247** %.6, align 8
  %.145 = getelementptr inbounds %Token.560247, %Token.560247* %.144, i64 0, i32 2
  %.146 = load %FloRange.560223*, %FloRange.560223** %.145, align 8
  %.147 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.148 = bitcast i8* %.147 to %ArrayTypeNode.560287*
  %.149 = bitcast i8* %.147 to %ArrayTypeNode_vtable_ty.560288**
  store %ArrayTypeNode_vtable_ty.560288* @ArrayTypeNode_vtable_data, %ArrayTypeNode_vtable_ty.560288** %.149, align 8
  tail call void @ArrayTypeNode_constructor(%ArrayTypeNode.560287* %.148, %TypeNode.560269* %type_node.2, %ExpressionNode.560285* %.141, %FloRange.560223* %.146)
  br label %while.entry.if.endif

while.entry.if.endif:                             ; preds = %while.entry.if.else, %while.entry.if.if
  %type_node.5.in = phi i8* [ %.116, %while.entry.if.if ], [ %.147, %while.entry.if.else ]
  %.157 = getelementptr inbounds i8, i8* %type_node.5.in, i64 8
  %4 = bitcast i8* %.157 to %FloRange.560223**
  %.158 = load %FloRange.560223*, %FloRange.560223** %4, align 8
  %.161 = load %Token.560247*, %Token.560247** %.6, align 8
  %.162 = getelementptr inbounds %Token.560247, %Token.560247* %.161, i64 0, i32 2
  %.163 = load %FloRange.560223*, %FloRange.560223** %.162, align 8
  %.164 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.158, %FloRange.560223* %.163)
  store %FloRange.560223* %.164, %FloRange.560223** %4, align 8
  %.169 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.71, align 8
  %.170 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.169, i64 0, i32 4
  %.171 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.170, align 8
  %.172 = tail call %Token.560247* %.171(%Parser.560379* nonnull %.1, i64 28)
  br label %while.entry.endif
}

define void @Parser_parse_expression_list(%Parser.560379* %.1, %"Array<ExpressionNode>.560297"* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.9, i64 0, i32 5
  %.11 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.10, align 8
  tail call void %.11(%Parser.560379* %.1)
  %.16 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.16, i64 0, i32 37
  %.18 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.17, align 8
  %.19 = tail call %ExpressionNode.560285* %.18(%Parser.560379* %.1)
  %.20 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.2, i64 0, i32 0
  %.21 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.21, i64 0, i32 2
  %.23 = load void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)*, void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)** %.22, align 8
  tail call void %.23(%"Array<ExpressionNode>.560297"* %.2, %ExpressionNode.560285* %.19)
  %.27 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.27, i64 0, i32 5
  %.29 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.28, align 8
  tail call void %.29(%Parser.560379* %.1)
  %.32 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.33 = load %Token.560247*, %Token.560247** %.32, align 8
  %.34 = getelementptr inbounds %Token.560247, %Token.560247* %.33, i64 0, i32 1
  %.35 = load i64, i64* %.34, align 8
  %.36 = icmp eq i64 %.35, 3
  %.39 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.39, i64 0, i32 0
  %.41 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.40, align 8
  %.42 = tail call i1 %.41(%Parser.560379* %.1)
  %.43 = and i1 %.36, %.42
  br i1 %.43, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.47 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.47, i64 0, i32 2
  %.49 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.48, align 8
  tail call void %.49(%Parser.560379* nonnull %.1)
  %.53 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.54 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.53, i64 0, i32 5
  %.55 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.54, align 8
  tail call void %.55(%Parser.560379* nonnull %.1)
  %.60 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.60, i64 0, i32 37
  %.62 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.61, align 8
  %.63 = tail call %ExpressionNode.560285* %.62(%Parser.560379* nonnull %.1)
  %.65 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.20, align 8
  %.66 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)*, void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)** %.66, align 8
  tail call void %.67(%"Array<ExpressionNode>.560297"* nonnull %.2, %ExpressionNode.560285* %.63)
  %.71 = load %Token.560247*, %Token.560247** %.32, align 8
  %.72 = getelementptr inbounds %Token.560247, %Token.560247* %.71, i64 0, i32 1
  %.73 = load i64, i64* %.72, align 8
  %.74 = icmp eq i64 %.73, 3
  %.77 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.78, align 8
  %.80 = tail call i1 %.79(%Parser.560379* nonnull %.1)
  %.81 = and i1 %.74, %.80
  br i1 %.81, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %.85 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.86 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.85, i64 0, i32 5
  %.87 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.86, align 8
  tail call void %.87(%Parser.560379* nonnull %.1)
  ret void
}

define noalias %ArrayExpressionNode.560301* @Parser_parse_array_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %ArrayExpressionNode.560301*
  %.12 = bitcast i8* %.10 to %ArrayExpressionNode_vtable_ty.560302**
  store %ArrayExpressionNode_vtable_ty.560302* @ArrayExpressionNode_vtable_data, %ArrayExpressionNode_vtable_ty.560302** %.12, align 8
  tail call void @ArrayExpressionNode_constructor(%ArrayExpressionNode.560301* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.24 = load %Token.560247*, %Token.560247** %.6, align 8
  %.25 = getelementptr inbounds %Token.560247, %Token.560247* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp eq i64 %.26, 28
  br i1 %.27.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 11
  %.33 = load void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)*, void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.10, i64 32
  %0 = bitcast i8* %.35 to %"Array<ExpressionNode>.560297"**
  %.36 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %0, align 8
  tail call void %.33(%Parser.560379* nonnull %.1, %"Array<ExpressionNode>.560297"* %.36)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.41 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.41 to %FloRange.560223**
  %.42 = load %FloRange.560223*, %FloRange.560223** %1, align 8
  %.45 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.45, i64 0, i32 4
  %.47 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.46, align 8
  %.48 = tail call %Token.560247* %.47(%Parser.560379* nonnull %.1, i64 28)
  %.49 = getelementptr inbounds %Token.560247, %Token.560247* %.48, i64 0, i32 2
  %.50 = load %FloRange.560223*, %FloRange.560223** %.49, align 8
  %.51 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.42, %FloRange.560223* %.50)
  store %FloRange.560223* %.51, %FloRange.560223** %1, align 8
  ret %ArrayExpressionNode.560301* %.11
}

define noalias %NewExpressionNode.560303* @Parser_parse_new_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.12 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.13, i64 0, i32 2
  %.15 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.14, align 8
  tail call void %.15(%Parser.560379* %.1)
  %.19 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.19, i64 0, i32 10
  %.21 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.20, align 8
  %.22 = tail call %TypeNode.560269* %.21(%Parser.560379* %.1)
  %.24 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.25 = bitcast i8* %.24 to %NewExpressionNode.560303*
  %.26 = bitcast i8* %.24 to %NewExpressionNode_vtable_ty.560304**
  store %NewExpressionNode_vtable_ty.560304* @NewExpressionNode_vtable_data, %NewExpressionNode_vtable_ty.560304** %.26, align 8
  tail call void @NewExpressionNode_constructor(%NewExpressionNode.560303* %.25, %TypeNode.560269* %.22, %FloRange.560223* %.9)
  %.32 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.33 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.32, i64 0, i32 4
  %.34 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.33, align 8
  %.35 = tail call %Token.560247* %.34(%Parser.560379* %.1, i64 23)
  %.38 = load %Token.560247*, %Token.560247** %.6, align 8
  %.39 = getelementptr inbounds %Token.560247, %Token.560247* %.38, i64 0, i32 1
  %.40 = load i64, i64* %.39, align 8
  %.41 = icmp ne i64 %.40, 24
  %.44 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.44, i64 0, i32 0
  %.46 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.45, align 8
  %.47 = tail call i1 %.46(%Parser.560379* %.1)
  %.48 = and i1 %.41, %.47
  br i1 %.48, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.52 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.52, i64 0, i32 11
  %.54 = load void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)*, void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)** %.53, align 8
  %.56 = getelementptr inbounds i8, i8* %.24, i64 48
  %0 = bitcast i8* %.56 to %"Array<ExpressionNode>.560297"**
  %.57 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %0, align 8
  tail call void %.54(%Parser.560379* nonnull %.1, %"Array<ExpressionNode>.560297"* %.57)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.62 = getelementptr inbounds i8, i8* %.24, i64 8
  %1 = bitcast i8* %.62 to %FloRange.560223**
  %.63 = load %FloRange.560223*, %FloRange.560223** %1, align 8
  %.66 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.67 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.66, i64 0, i32 4
  %.68 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.67, align 8
  %.69 = tail call %Token.560247* %.68(%Parser.560379* nonnull %.1, i64 24)
  %.70 = getelementptr inbounds %Token.560247, %Token.560247* %.69, i64 0, i32 2
  %.71 = load %FloRange.560223*, %FloRange.560223** %.70, align 8
  %.72 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.63, %FloRange.560223* %.71)
  store %FloRange.560223* %.72, %FloRange.560223** %1, align 8
  ret %NewExpressionNode.560303* %.25
}

define noalias %StringExpressionNode.560295* @Parser_parse_string(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 4
  %.9 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.8, align 8
  %.10 = tail call %Token.560247* %.9(%Parser.560379* %.1, i64 32)
  %.13 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.14 = bitcast i8* %.13 to %Parser.560379*
  %.15 = bitcast i8* %.13 to %Parser_vtable_ty.560380**
  store %Parser_vtable_ty.560380* @Parser_vtable_data, %Parser_vtable_ty.560380** %.15, align 8
  tail call void @Parser_constructor(%Parser.560379* %.14)
  %.21 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 2
  %0 = bitcast %"Array<FloError>.560238"** %.21 to i64*
  %.221 = load i64, i64* %0, align 8
  %.23 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.23 to i64*
  store i64 %.221, i64* %1, align 8
  %.26 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.28 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %"Array<ExpressionNode>.560297"*
  %.30 = bitcast i8* %.28 to %"Array<ExpressionNode>_vtable_ty.560298"**
  store %"Array<ExpressionNode>_vtable_ty.560298"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.560298"** %.30, align 8
  %.32 = getelementptr inbounds i8, i8* %.28, i64 8
  %2 = bitcast i8* %.32 to i8**
  store i8* %.26, i8** %2, align 8
  %.34 = getelementptr inbounds i8, i8* %.28, i64 16
  %3 = bitcast i8* %.34 to i64*
  store i64 0, i64* %3, align 8
  %.36 = getelementptr inbounds i8, i8* %.28, i64 24
  %4 = bitcast i8* %.36 to i64*
  store i64 8, i64* %4, align 8
  %.44 = getelementptr inbounds %Token.560247, %Token.560247* %.10, i64 1, i32 2
  %5 = bitcast %FloRange.560223** %.44 to %"Array<Array<Token>>.560258"**
  %.453 = load %"Array<Array<Token>>.560258"*, %"Array<Array<Token>>.560258"** %5, align 8
  %.464 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.453, i64 0, i32 2
  %.475 = load i64, i64* %.464, align 8
  %.486 = icmp sgt i64 %.475, 0
  %.517 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.528 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.517, i64 0, i32 0
  %.539 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.528, align 8
  %.5410 = tail call i1 %.539(%Parser.560379* nonnull %.1)
  %.5511 = and i1 %.486, %.5410
  br i1 %.5511, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.67 = getelementptr inbounds i8, i8* %.13, i64 8
  %6 = bitcast i8* %.67 to %"Array<Token>.560259"**
  %.71 = getelementptr inbounds i8, i8* %.13, i64 32
  %7 = bitcast i8* %.71 to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge12 = phi i64 [ 0, %for.body.lr.ph ], [ %.95, %for.body ]
  %.61 = load %"Array<Array<Token>>.560258"*, %"Array<Array<Token>>.560258"** %5, align 8
  %.62 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.61, i64 0, i32 0
  %.63 = load %"Array<Array<Token>>_vtable_ty.560261"*, %"Array<Array<Token>>_vtable_ty.560261"** %.62, align 8
  %.64 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.560261", %"Array<Array<Token>>_vtable_ty.560261"* %.63, i64 0, i32 5
  %.65 = load %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)*, %"Array<Token>.560259"* (%"Array<Array<Token>>.560258"*, i64)** %.64, align 8
  %.66 = tail call %"Array<Token>.560259"* %.65(%"Array<Array<Token>>.560258"* %.61, i64 %storemerge12)
  store %"Array<Token>.560259"* %.66, %"Array<Token>.560259"** %6, align 8
  store i64 -1, i64* %7, align 8
  %.75 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.15, align 8
  %.76 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.75, i64 0, i32 2
  %.77 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.76, align 8
  tail call void %.77(%Parser.560379* %.14)
  %.82 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.15, align 8
  %.83 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.82, i64 0, i32 37
  %.84 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.83, align 8
  %.85 = tail call %ExpressionNode.560285* %.84(%Parser.560379* %.14)
  %.87 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.30, align 8
  %.88 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.87, i64 0, i32 2
  %.89 = load void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)*, void (%"Array<ExpressionNode>.560297"*, %ExpressionNode.560285*)** %.88, align 8
  tail call void %.89(%"Array<ExpressionNode>.560297"* %.29, %ExpressionNode.560285* %.85)
  %.95 = add nuw nsw i64 %storemerge12, 1
  %.45 = load %"Array<Array<Token>>.560258"*, %"Array<Array<Token>>.560258"** %5, align 8
  %.46 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.45, i64 0, i32 2
  %.47 = load i64, i64* %.46, align 8
  %.48 = icmp slt i64 %.95, %.47
  %.51 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.51, i64 0, i32 0
  %.53 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.52, align 8
  %.54 = tail call i1 %.53(%Parser.560379* nonnull %.1)
  %.55 = and i1 %.48, %.54
  br i1 %.55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  %.11 = bitcast %Token.560247* %.10 to %StrToken.560255*
  %.100 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.101 = bitcast i8* %.100 to %StringExpressionNode.560295*
  %.102 = bitcast i8* %.100 to %StringExpressionNode_vtable_ty.560296**
  store %StringExpressionNode_vtable_ty.560296* @StringExpressionNode_vtable_data, %StringExpressionNode_vtable_ty.560296** %.102, align 8
  tail call void @StringExpressionNode_constructor(%StringExpressionNode.560295* %.101, %StrToken.560255* %.11, %"Array<ExpressionNode>.560297"* %.29)
  ret %StringExpressionNode.560295* %.101
}

define %ExpressionNode.560285* @Parser_parse_atom(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.else.else.else.else.else.else.else [
    i64 32, label %.3.if
    i64 29, label %.3.else.if
    i64 30, label %.3.else.else.if
    i64 33, label %.3.else.else.else.if
    i64 51, label %.3.else.else.else.else.if
    i64 27, label %.3.else.else.else.else.else.if
    i64 85, label %.3.else.else.else.else.else.else.if
  ]

.3.if:                                            ; preds = %.3
  %.13 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.14, i64 0, i32 14
  %.16 = load %StringExpressionNode.560295* (%Parser.560379*)*, %StringExpressionNode.560295* (%Parser.560379*)** %.15, align 8
  %.17 = tail call %StringExpressionNode.560295* %.16(%Parser.560379* nonnull %.1)
  %.18 = bitcast %StringExpressionNode.560295* %.17 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.18

.3.else.if:                                       ; preds = %.3
  %.28 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.29 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.28, align 8
  %.30 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.29, i64 0, i32 4
  %.31 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.30, align 8
  %.32 = tail call %Token.560247* %.31(%Parser.560379* nonnull %.1, i64 29)
  %.33 = bitcast %Token.560247* %.32 to %IntToken.560249*
  %.34 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.35 = bitcast i8* %.34 to %IntExpressionNode.560289*
  %.36 = bitcast i8* %.34 to %IntExpressionNode_vtable_ty.560290**
  store %IntExpressionNode_vtable_ty.560290* @IntExpressionNode_vtable_data, %IntExpressionNode_vtable_ty.560290** %.36, align 8
  tail call void @IntExpressionNode_constructor(%IntExpressionNode.560289* %.35, %IntToken.560249* %.33)
  %.39 = bitcast i8* %.34 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.39

.3.else.else.if:                                  ; preds = %.3
  %.49 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.50 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.49, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.50, i64 0, i32 4
  %.52 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.51, align 8
  %.53 = tail call %Token.560247* %.52(%Parser.560379* nonnull %.1, i64 30)
  %.54 = bitcast %Token.560247* %.53 to %FloatToken.560251*
  %.55 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.56 = bitcast i8* %.55 to %FloatExpressionNode.560291*
  %.57 = bitcast i8* %.55 to %FloatExpressionNode_vtable_ty.560292**
  store %FloatExpressionNode_vtable_ty.560292* @FloatExpressionNode_vtable_data, %FloatExpressionNode_vtable_ty.560292** %.57, align 8
  tail call void @FloatExpressionNode_constructor(%FloatExpressionNode.560291* %.56, %FloatToken.560251* %.54)
  %.60 = bitcast i8* %.55 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.60

.3.else.else.else.if:                             ; preds = %.3
  %.70 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.71 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.70, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.71, i64 0, i32 4
  %.73 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.72, align 8
  %.74 = tail call %Token.560247* %.73(%Parser.560379* nonnull %.1, i64 33)
  %.75 = bitcast %Token.560247* %.74 to %CharToken.560253*
  %.76 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.77 = bitcast i8* %.76 to %CharExpressionNode.560293*
  %.78 = bitcast i8* %.76 to %CharExpressionNode_vtable_ty.560294**
  store %CharExpressionNode_vtable_ty.560294* @CharExpressionNode_vtable_data, %CharExpressionNode_vtable_ty.560294** %.78, align 8
  tail call void @CharExpressionNode_constructor(%CharExpressionNode.560293* %.77, %CharToken.560253* %.75)
  %.81 = bitcast i8* %.76 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.81

.3.else.else.else.else.if:                        ; preds = %.3
  %.91 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.92 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.91, align 8
  %.93 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.92, i64 0, i32 4
  %.94 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.93, align 8
  %.95 = tail call %Token.560247* %.94(%Parser.560379* nonnull %.1, i64 51)
  %.96 = bitcast %Token.560247* %.95 to %IdentifierToken.560263*
  %.97 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.98 = bitcast i8* %.97 to %VarAccessExpressionNode.560299*
  %.99 = bitcast i8* %.97 to %VarAccessExpressionNode_vtable_ty.560300**
  store %VarAccessExpressionNode_vtable_ty.560300* @VarAccessExpressionNode_vtable_data, %VarAccessExpressionNode_vtable_ty.560300** %.99, align 8
  tail call void @VarAccessExpressionNode_constructor(%VarAccessExpressionNode.560299* %.98, %IdentifierToken.560263* %.96)
  %.102 = bitcast i8* %.97 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.102

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.112 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.113 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.112, align 8
  %.114 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.113, i64 0, i32 12
  %.115 = load %ArrayExpressionNode.560301* (%Parser.560379*)*, %ArrayExpressionNode.560301* (%Parser.560379*)** %.114, align 8
  %.116 = tail call %ArrayExpressionNode.560301* %.115(%Parser.560379* nonnull %.1)
  %.117 = bitcast %ArrayExpressionNode.560301* %.116 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.117

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.127 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.128 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.127, align 8
  %.129 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.128, i64 0, i32 13
  %.130 = load %NewExpressionNode.560303* (%Parser.560379*)*, %NewExpressionNode.560303* (%Parser.560379*)** %.129, align 8
  %.131 = tail call %NewExpressionNode.560303* %.130(%Parser.560379* nonnull %.1)
  %.132 = bitcast %NewExpressionNode.560303* %.131 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.132

.3.else.else.else.else.else.else.else:            ; preds = %.3
  %.139 = icmp eq i64 %.9, 23
  %.142 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.143 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.142, align 8
  br i1 %.139, label %.3.else.else.else.else.else.else.else.if, label %.3.else.else.else.else.else.else.else.else

.3.else.else.else.else.else.else.else.if:         ; preds = %.3.else.else.else.else.else.else.else
  %.144 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.143, i64 0, i32 2
  %.145 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.144, align 8
  tail call void %.145(%Parser.560379* nonnull %.1)
  %.149 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.142, align 8
  %.150 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.149, i64 0, i32 37
  %.151 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.150, align 8
  %.152 = tail call %ExpressionNode.560285* %.151(%Parser.560379* nonnull %.1)
  %.156 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.142, align 8
  %.157 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.156, i64 0, i32 4
  %.158 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.157, align 8
  %.159 = tail call %Token.560247* %.158(%Parser.560379* nonnull %.1, i64 24)
  ret %ExpressionNode.560285* %.152

.3.else.else.else.else.else.else.else.else:       ; preds = %.3.else.else.else.else.else.else.else
  %.165 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.143, i64 0, i32 1
  %.166 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.165, align 8
  %.167 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.168 = bitcast i8* %.167 to %string.560217*
  %.168.repack = bitcast i8* %.167 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.168.repack, align 8
  %.168.repack1 = getelementptr inbounds i8, i8* %.167, i64 8
  %0 = bitcast i8* %.168.repack1 to i8**
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.157, i64 0, i64 0), i8** %0, align 8
  %.168.repack2 = getelementptr inbounds i8, i8* %.167, i64 16
  %1 = bitcast i8* %.168.repack2 to i64*
  store i64 28, i64* %1, align 8
  %.168.repack3 = getelementptr inbounds i8, i8* %.167, i64 24
  %2 = bitcast i8* %.168.repack3 to i64*
  store i64 28, i64* %2, align 8
  tail call void %.166(%Parser.560379* nonnull %.1, %string.560217* %.168)
  %.181 = load %Token.560247*, %Token.560247** %.6, align 8
  %.182 = getelementptr inbounds %Token.560247, %Token.560247* %.181, i64 0, i32 2
  %.183 = load %FloRange.560223*, %FloRange.560223** %.182, align 8
  %.184 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.184 to %ExpressionNode.560285*
  %.186 = bitcast i8* %.184 to %ExpressionNode_vtable_ty.560286**
  store %ExpressionNode_vtable_ty.560286* @ExpressionNode_vtable_data, %ExpressionNode_vtable_ty.560286** %.186, align 8
  tail call void @ExpressionNode_constructor(%ExpressionNode.560285* %.185, i64 7, %FloRange.560223* %.183)
  ret %ExpressionNode.560285* %.185
}

define noalias %ExpressionIndexNode.560305* @Parser_parse_index_expression(%Parser.560379* %.1, %ExpressionNode.560285* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.9, i64 0, i32 4
  %.11 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.10, align 8
  %.12 = tail call %Token.560247* %.11(%Parser.560379* %.1, i64 27)
  %.16 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.16, i64 0, i32 37
  %.18 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.17, align 8
  %.19 = tail call %ExpressionNode.560285* %.18(%Parser.560379* %.1)
  %.21 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.22 = load %Token.560247*, %Token.560247** %.21, align 8
  %.23 = getelementptr inbounds %Token.560247, %Token.560247* %.22, i64 0, i32 2
  %.24 = load %FloRange.560223*, %FloRange.560223** %.23, align 8
  %.25 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.26 = bitcast i8* %.25 to %ExpressionIndexNode.560305*
  %.27 = bitcast i8* %.25 to %ExpressionIndexNode_vtable_ty.560306**
  store %ExpressionIndexNode_vtable_ty.560306* @ExpressionIndexNode_vtable_data, %ExpressionIndexNode_vtable_ty.560306** %.27, align 8
  tail call void @ExpressionIndexNode_constructor(%ExpressionIndexNode.560305* %.26, %ExpressionNode.560285* %.2, %ExpressionNode.560285* %.19, %FloRange.560223* %.24)
  %.33 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.2, i64 0, i32 1
  %.34 = load %FloRange.560223*, %FloRange.560223** %.33, align 8
  %.37 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.37, i64 0, i32 4
  %.39 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.38, align 8
  %.40 = tail call %Token.560247* %.39(%Parser.560379* %.1, i64 28)
  %.41 = getelementptr inbounds %Token.560247, %Token.560247* %.40, i64 0, i32 2
  %.42 = load %FloRange.560223*, %FloRange.560223** %.41, align 8
  %.43 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.34, %FloRange.560223* %.42)
  %.44 = getelementptr inbounds i8, i8* %.25, i64 8
  %0 = bitcast i8* %.44 to %FloRange.560223**
  store %FloRange.560223* %.43, %FloRange.560223** %0, align 8
  ret %ExpressionIndexNode.560305* %.26
}

define noalias %CallExpressionNode.560309* @Parser_parse_call_expression(%Parser.560379* %.1, %ExpressionNode.560285* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.9, i64 0, i32 4
  %.11 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.10, align 8
  %.12 = tail call %Token.560247* %.11(%Parser.560379* %.1, i64 23)
  %.15 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.16 = load %Token.560247*, %Token.560247** %.15, align 8
  %.17 = getelementptr inbounds %Token.560247, %Token.560247* %.16, i64 0, i32 2
  %.18 = load %FloRange.560223*, %FloRange.560223** %.17, align 8
  %.19 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.20 = bitcast i8* %.19 to %CallExpressionNode.560309*
  %.21 = bitcast i8* %.19 to %CallExpressionNode_vtable_ty.560310**
  store %CallExpressionNode_vtable_ty.560310* @CallExpressionNode_vtable_data, %CallExpressionNode_vtable_ty.560310** %.21, align 8
  tail call void @CallExpressionNode_constructor(%CallExpressionNode.560309* %.20, %ExpressionNode.560285* %.2, %FloRange.560223* %.18)
  %.27 = load %Token.560247*, %Token.560247** %.15, align 8
  %.28 = getelementptr inbounds %Token.560247, %Token.560247* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30.not = icmp eq i64 %.29, 24
  br i1 %.30.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.34 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.35 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.34, i64 0, i32 11
  %.36 = load void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)*, void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)** %.35, align 8
  %.38 = getelementptr inbounds i8, i8* %.19, i64 40
  %0 = bitcast i8* %.38 to %"Array<ExpressionNode>.560297"**
  %.39 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %0, align 8
  tail call void %.36(%Parser.560379* nonnull %.1, %"Array<ExpressionNode>.560297"* %.39)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.44 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.2, i64 0, i32 1
  %.45 = load %FloRange.560223*, %FloRange.560223** %.44, align 8
  %.48 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.48, i64 0, i32 4
  %.50 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.49, align 8
  %.51 = tail call %Token.560247* %.50(%Parser.560379* nonnull %.1, i64 24)
  %.52 = getelementptr inbounds %Token.560247, %Token.560247* %.51, i64 0, i32 2
  %.53 = load %FloRange.560223*, %FloRange.560223** %.52, align 8
  %.54 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.45, %FloRange.560223* %.53)
  %.55 = getelementptr inbounds i8, i8* %.19, i64 8
  %1 = bitcast i8* %.55 to %FloRange.560223**
  store %FloRange.560223* %.54, %FloRange.560223** %1, align 8
  ret %CallExpressionNode.560309* %.20
}

define noalias %MemberExpressionNode.560307* @Parser_parse_member_expression(%Parser.560379* %.1, %ExpressionNode.560285* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.9, i64 0, i32 4
  %.11 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.10, align 8
  %.12 = tail call %Token.560247* %.11(%Parser.560379* %.1, i64 48)
  %.15 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.15, i64 0, i32 4
  %.17 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.16, align 8
  %.18 = tail call %Token.560247* %.17(%Parser.560379* %.1, i64 51)
  %.19 = bitcast %Token.560247* %.18 to %IdentifierToken.560263*
  %.24 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.2, i64 0, i32 1
  %.25 = load %FloRange.560223*, %FloRange.560223** %.24, align 8
  %0 = getelementptr inbounds %Token.560247, %Token.560247* %.18, i64 0, i32 2
  %.28 = load %FloRange.560223*, %FloRange.560223** %0, align 8
  %.29 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.25, %FloRange.560223* %.28)
  %.30 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.31 = bitcast i8* %.30 to %MemberExpressionNode.560307*
  %.32 = bitcast i8* %.30 to %MemberExpressionNode_vtable_ty.560308**
  store %MemberExpressionNode_vtable_ty.560308* @MemberExpressionNode_vtable_data, %MemberExpressionNode_vtable_ty.560308** %.32, align 8
  tail call void @MemberExpressionNode_constructor(%MemberExpressionNode.560307* %.31, %ExpressionNode.560285* %.2, %IdentifierToken.560263* %.19, %FloRange.560223* %.29)
  ret %MemberExpressionNode.560307* %.31
}

define %ExpressionNode.560285* @Parser_parse_lhs_expression_allow_call(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 15
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.14 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.14, i64 0, i32 0
  %.16 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.15, align 8
  %.17 = tail call i1 %.16(%Parser.560379* %.1)
  br i1 %.17, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3
  %.20 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %expression.0 = phi %ExpressionNode.560285* [ %expression.2, %while.entry.endif ], [ %.10, %while.entry.preheader ]
  %.21 = load %Token.560247*, %Token.560247** %.20, align 8
  %.22 = getelementptr inbounds %Token.560247, %Token.560247* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  switch i64 %.23, label %while.exit [
    i64 23, label %while.entry.if
    i64 27, label %while.entry.else.if
    i64 48, label %while.entry.else.else.if
  ]

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3
  %expression.1 = phi %ExpressionNode.560285* [ %.10, %.3 ], [ %expression.0, %while.entry ], [ %expression.2, %while.entry.endif ]
  ret %ExpressionNode.560285* %expression.1

while.entry.if:                                   ; preds = %while.entry
  %.28 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.29 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.28, i64 0, i32 17
  %.30 = load %CallExpressionNode.560309* (%Parser.560379*, %ExpressionNode.560285*)*, %CallExpressionNode.560309* (%Parser.560379*, %ExpressionNode.560285*)** %.29, align 8
  %.32 = tail call %CallExpressionNode.560309* %.30(%Parser.560379* nonnull %.1, %ExpressionNode.560285* %expression.0)
  %.33 = bitcast %CallExpressionNode.560309* %.32 to %ExpressionNode.560285*
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else.if, %while.entry.else.else.if, %while.entry.if
  %expression.2 = phi %ExpressionNode.560285* [ %.33, %while.entry.if ], [ %.50, %while.entry.else.if ], [ %.67, %while.entry.else.else.if ]
  %.75 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.76 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.75, i64 0, i32 0
  %.77 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.76, align 8
  %.78 = tail call i1 %.77(%Parser.560379* nonnull %.1)
  br i1 %.78, label %while.entry, label %while.exit

while.entry.else.if:                              ; preds = %while.entry
  %.45 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.45, i64 0, i32 16
  %.47 = load %ExpressionIndexNode.560305* (%Parser.560379*, %ExpressionNode.560285*)*, %ExpressionIndexNode.560305* (%Parser.560379*, %ExpressionNode.560285*)** %.46, align 8
  %.49 = tail call %ExpressionIndexNode.560305* %.47(%Parser.560379* nonnull %.1, %ExpressionNode.560285* %expression.0)
  %.50 = bitcast %ExpressionIndexNode.560305* %.49 to %ExpressionNode.560285*
  br label %while.entry.endif

while.entry.else.else.if:                         ; preds = %while.entry
  %.62 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.63 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.62, i64 0, i32 18
  %.64 = load %MemberExpressionNode.560307* (%Parser.560379*, %ExpressionNode.560285*)*, %MemberExpressionNode.560307* (%Parser.560379*, %ExpressionNode.560285*)** %.63, align 8
  %.66 = tail call %MemberExpressionNode.560307* %.64(%Parser.560379* nonnull %.1, %ExpressionNode.560285* %expression.0)
  %.67 = bitcast %MemberExpressionNode.560307* %.66 to %ExpressionNode.560285*
  br label %while.entry.endif
}

define %ExpressionNode.560285* @Parser_parse_unary_expression_post(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 19
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.14 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.15 = load %Token.560247*, %Token.560247** %.14, align 8
  %.18 = getelementptr inbounds %Token.560247, %Token.560247* %.15, i64 0, i32 1
  %.19 = load i64, i64* %.18, align 8
  switch i64 %.19, label %.3.else.else [
    i64 21, label %.3.endif
    i64 22, label %.3.endif.fold.split
  ]

.3.endif.fold.split:                              ; preds = %.3
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.endif.fold.split
  %op.0 = phi i64 [ 3, %.3 ], [ 4, %.3.endif.fold.split ]
  %.36 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.37 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.36, i64 0, i32 2
  %.38 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.37, align 8
  tail call void %.38(%Parser.560379* nonnull %.1)
  %.43 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.10, i64 0, i32 1
  %.44 = load %FloRange.560223*, %FloRange.560223** %.43, align 8
  %.46 = getelementptr inbounds %Token.560247, %Token.560247* %.15, i64 0, i32 2
  %.47 = load %FloRange.560223*, %FloRange.560223** %.46, align 8
  %.48 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.44, %FloRange.560223* %.47)
  %.49 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.50 = bitcast i8* %.49 to %UnaryExpressionNode.560317*
  %.51 = bitcast i8* %.49 to %UnaryExpressionNode_vtable_ty.560318**
  store %UnaryExpressionNode_vtable_ty.560318* @UnaryExpressionNode_vtable_data, %UnaryExpressionNode_vtable_ty.560318** %.51, align 8
  tail call void @UnaryExpressionNode_constructor(%UnaryExpressionNode.560317* %.50, i64 %op.0, %ExpressionNode.560285* %.10, %FloRange.560223* %.48)
  %.54 = bitcast i8* %.49 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.54

.3.else.else:                                     ; preds = %.3
  ret %ExpressionNode.560285* %.10
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_unary_op(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif [
    i64 21, label %.3.if
    i64 22, label %.3.endif.if
    i64 5, label %.3.endif.endif.if
    i64 35, label %.3.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 1, %.3 ], [ 2, %.3.endif.if ], [ 5, %.3.endif.endif.if ], [ 7, %.3.endif.endif.endif.if ], [ 0, %.3.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif:                       ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.560285* @Parser_parse_unary_expression_pre(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.12 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.13, i64 0, i32 21
  %.15 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.14, align 8
  %.16 = tail call i64 %.15(%Parser.560379* %.1)
  %.19 = icmp eq i64 %.16, 0
  %.23 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  br i1 %.19, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.24 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 20
  %.25 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.24, align 8
  %.26 = tail call %ExpressionNode.560285* %.25(%Parser.560379* nonnull %.1)
  ret %ExpressionNode.560285* %.26

.3.endif:                                         ; preds = %.3
  %.31 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 2
  %.32 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.31, align 8
  tail call void %.32(%Parser.560379* nonnull %.1)
  %.36 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.37 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.36, i64 0, i32 22
  %.38 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.37, align 8
  %.39 = tail call %ExpressionNode.560285* %.38(%Parser.560379* nonnull %.1)
  %.45 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.39, i64 0, i32 1
  %.46 = load %FloRange.560223*, %FloRange.560223** %.45, align 8
  %.47 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.9, %FloRange.560223* %.46)
  %.48 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.49 = bitcast i8* %.48 to %UnaryExpressionNode.560317*
  %.50 = bitcast i8* %.48 to %UnaryExpressionNode_vtable_ty.560318**
  store %UnaryExpressionNode_vtable_ty.560318* @UnaryExpressionNode_vtable_data, %UnaryExpressionNode_vtable_ty.560318** %.50, align 8
  tail call void @UnaryExpressionNode_constructor(%UnaryExpressionNode.560317* %.49, i64 %.16, %ExpressionNode.560285* %.39, %FloRange.560223* %.47)
  %.53 = bitcast i8* %.48 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.53
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_term_expr_op(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif [
    i64 4, label %.3.if
    i64 7, label %.3.endif.if
    i64 8, label %.3.endif.endif.if
    i64 9, label %.3.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 3, %.3 ], [ 4, %.3.endif.if ], [ 5, %.3.endif.endif.if ], [ 6, %.3.endif.endif.endif.if ], [ 0, %.3.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif:                       ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.560285* @Parser_parse_term_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 22
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.14 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.14, i64 0, i32 23
  %.16 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.15, align 8
  %.17 = tail call i64 %.16(%Parser.560379* %.1)
  %.20 = icmp ne i64 %.17, 0
  %.23 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 0
  %.25 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.24, align 8
  %.26 = tail call i1 %.25(%Parser.560379* %.1)
  %.27 = and i1 %.20, %.26
  br i1 %.27, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %unary.0 = phi %ExpressionNode.560285* [ %.48, %while.entry ], [ %.10, %.3 ]
  %op.0 = phi i64 [ %.55, %while.entry ], [ %.17, %.3 ]
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 2
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* nonnull %.1)
  %.39 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.39, i64 0, i32 22
  %.41 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.40, align 8
  %.42 = tail call %ExpressionNode.560285* %.41(%Parser.560379* nonnull %.1)
  %.43 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.44 = bitcast i8* %.43 to %BinaryExpressionNode.560313*
  %.45 = bitcast i8* %.43 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.45, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.44, %ExpressionNode.560285* %unary.0, i64 %op.0, %ExpressionNode.560285* %.42)
  %.48 = bitcast i8* %.43 to %ExpressionNode.560285*
  %.52 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.52, i64 0, i32 23
  %.54 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.53, align 8
  %.55 = tail call i64 %.54(%Parser.560379* nonnull %.1)
  %.58 = icmp ne i64 %.55, 0
  %.61 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.61, i64 0, i32 0
  %.63 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.62, align 8
  %.64 = tail call i1 %.63(%Parser.560379* nonnull %.1)
  %.65 = and i1 %.58, %.64
  br i1 %.65, label %while.entry, label %while.exit.loopexit

while.exit.loopexit:                              ; preds = %while.entry
  %.48.le = bitcast i8* %.43 to %ExpressionNode.560285*
  br label %while.exit

while.exit:                                       ; preds = %while.exit.loopexit, %.3
  %unary.1 = phi %ExpressionNode.560285* [ %.10, %.3 ], [ %.48.le, %while.exit.loopexit ]
  ret %ExpressionNode.560285* %unary.1
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_arith_expr_op(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %switch.selectcmp = icmp eq i64 %.9, 5
  %switch.select = select i1 %switch.selectcmp, i64 2, i64 0
  %switch.selectcmp1 = icmp eq i64 %.9, 6
  %switch.select2 = select i1 %switch.selectcmp1, i64 1, i64 %switch.select
  ret i64 %switch.select2
}

define %ExpressionNode.560285* @Parser_parse_arithmetic_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 24
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.14 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.14, i64 0, i32 25
  %.16 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.15, align 8
  %.17 = tail call i64 %.16(%Parser.560379* %.1)
  %.20 = icmp ne i64 %.17, 0
  %.23 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 0
  %.25 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.24, align 8
  %.26 = tail call i1 %.25(%Parser.560379* %.1)
  %.27 = and i1 %.20, %.26
  br i1 %.27, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %term.0 = phi %ExpressionNode.560285* [ %.48, %while.entry ], [ %.10, %.3 ]
  %op.0 = phi i64 [ %.55, %while.entry ], [ %.17, %.3 ]
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 2
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* nonnull %.1)
  %.39 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.39, i64 0, i32 24
  %.41 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.40, align 8
  %.42 = tail call %ExpressionNode.560285* %.41(%Parser.560379* nonnull %.1)
  %.43 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.44 = bitcast i8* %.43 to %BinaryExpressionNode.560313*
  %.45 = bitcast i8* %.43 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.45, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.44, %ExpressionNode.560285* %term.0, i64 %op.0, %ExpressionNode.560285* %.42)
  %.48 = bitcast i8* %.43 to %ExpressionNode.560285*
  %.52 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.52, i64 0, i32 25
  %.54 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.53, align 8
  %.55 = tail call i64 %.54(%Parser.560379* nonnull %.1)
  %.58 = icmp ne i64 %.55, 0
  %.61 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.61, i64 0, i32 0
  %.63 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.62, align 8
  %.64 = tail call i1 %.63(%Parser.560379* nonnull %.1)
  %.65 = and i1 %.58, %.64
  br i1 %.65, label %while.entry, label %while.exit.loopexit

while.exit.loopexit:                              ; preds = %while.entry
  %.48.le = bitcast i8* %.43 to %ExpressionNode.560285*
  br label %while.exit

while.exit:                                       ; preds = %while.exit.loopexit, %.3
  %term.1 = phi %ExpressionNode.560285* [ %.10, %.3 ], [ %.48.le, %while.exit.loopexit ]
  ret %ExpressionNode.560285* %term.1
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_bitshift_expr_op(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif [
    i64 46, label %.3.if
    i64 47, label %.3.endif.if
    i64 54, label %.3.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 13, %.3 ], [ 14, %.3.endif.if ], [ 17, %.3.endif.endif.if ], [ 0, %.3.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif:                             ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.560285* @Parser_parse_bitshift_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 26
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.14 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.14, i64 0, i32 27
  %.16 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.15, align 8
  %.17 = tail call i64 %.16(%Parser.560379* %.1)
  %.20 = icmp ne i64 %.17, 0
  %.23 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 0
  %.25 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.24, align 8
  %.26 = tail call i1 %.25(%Parser.560379* %.1)
  %.27 = and i1 %.20, %.26
  br i1 %.27, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %arith.0 = phi %ExpressionNode.560285* [ %.48, %while.entry ], [ %.10, %.3 ]
  %op.0 = phi i64 [ %.55, %while.entry ], [ %.17, %.3 ]
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 2
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* nonnull %.1)
  %.39 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.39, i64 0, i32 26
  %.41 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.40, align 8
  %.42 = tail call %ExpressionNode.560285* %.41(%Parser.560379* nonnull %.1)
  %.43 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.44 = bitcast i8* %.43 to %BinaryExpressionNode.560313*
  %.45 = bitcast i8* %.43 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.45, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.44, %ExpressionNode.560285* %arith.0, i64 %op.0, %ExpressionNode.560285* %.42)
  %.48 = bitcast i8* %.43 to %ExpressionNode.560285*
  %.52 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.52, i64 0, i32 27
  %.54 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.53, align 8
  %.55 = tail call i64 %.54(%Parser.560379* nonnull %.1)
  %.58 = icmp ne i64 %.55, 0
  %.61 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.61, i64 0, i32 0
  %.63 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.62, align 8
  %.64 = tail call i1 %.63(%Parser.560379* nonnull %.1)
  %.65 = and i1 %.58, %.64
  br i1 %.65, label %while.entry, label %while.exit.loopexit

while.exit.loopexit:                              ; preds = %while.entry
  %.48.le = bitcast i8* %.43 to %ExpressionNode.560285*
  br label %while.exit

while.exit:                                       ; preds = %while.exit.loopexit, %.3
  %arith.1 = phi %ExpressionNode.560285* [ %.10, %.3 ], [ %.48.le, %while.exit.loopexit ]
  ret %ExpressionNode.560285* %arith.1
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_comp_expr_op(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif.endif.endif [
    i64 39, label %.3.if
    i64 40, label %.3.endif.if
    i64 42, label %.3.endif.endif.if
    i64 41, label %.3.endif.endif.endif.if
    i64 37, label %.3.endif.endif.endif.endif.if
    i64 38, label %.3.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 7, %.3 ], [ 9, %.3.endif.if ], [ 8, %.3.endif.endif.if ], [ 10, %.3.endif.endif.endif.if ], [ 11, %.3.endif.endif.endif.endif.if ], [ 12, %.3.endif.endif.endif.endif.endif.if ], [ 0, %.3.endif.endif.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.560285* @Parser_parse_comparasion_expression(%Parser.560379* %.1) {
.3:
  %.12 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.13 = load %Token.560247*, %Token.560247** %.12, align 8
  %.14 = getelementptr inbounds %Token.560247, %Token.560247* %.13, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 45
  br i1 %.16, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.13, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.19 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.20 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.19, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.20, i64 0, i32 2
  %.22 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.21, align 8
  tail call void %.22(%Parser.560379* nonnull %.1)
  %.26 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.19, align 8
  %.27 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.26, i64 0, i32 30
  %.28 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.27, align 8
  %.29 = tail call %ExpressionNode.560285* %.28(%Parser.560379* nonnull %.1)
  %.34 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.29, i64 0, i32 1
  %.35 = load %FloRange.560223*, %FloRange.560223** %.34, align 8
  %.36 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.9, %FloRange.560223* %.35)
  %.37 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.38 = bitcast i8* %.37 to %UnaryExpressionNode.560317*
  %.39 = bitcast i8* %.37 to %UnaryExpressionNode_vtable_ty.560318**
  store %UnaryExpressionNode_vtable_ty.560318* @UnaryExpressionNode_vtable_data, %UnaryExpressionNode_vtable_ty.560318** %.39, align 8
  tail call void @UnaryExpressionNode_constructor(%UnaryExpressionNode.560317* %.38, i64 6, %ExpressionNode.560285* %.29, %FloRange.560223* %.36)
  %.42 = bitcast i8* %.37 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.42

.3.endif:                                         ; preds = %.3
  %.45 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.46 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.45, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.46, i64 0, i32 28
  %.48 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.47, align 8
  %.49 = tail call %ExpressionNode.560285* %.48(%Parser.560379* nonnull %.1)
  %.53 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.45, align 8
  %.54 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.53, i64 0, i32 29
  %.55 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.54, align 8
  %.56 = tail call i64 %.55(%Parser.560379* nonnull %.1)
  %.59 = icmp ne i64 %.56, 0
  %.62 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.45, align 8
  %.63 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.62, i64 0, i32 0
  %.64 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.63, align 8
  %.65 = tail call i1 %.64(%Parser.560379* nonnull %.1)
  %.66 = and i1 %.59, %.65
  br i1 %.66, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3.endif, %while.entry
  %.74 = phi %ExpressionNode.560285* [ %0, %while.entry ], [ %.49, %.3.endif ]
  %.941 = phi i64 [ %.94, %while.entry ], [ %.56, %.3.endif ]
  %.70 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.45, align 8
  %.71 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.70, i64 0, i32 2
  %.72 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.71, align 8
  tail call void %.72(%Parser.560379* nonnull %.1)
  %.78 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.45, align 8
  %.79 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.78, i64 0, i32 28
  %.80 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.79, align 8
  %.81 = tail call %ExpressionNode.560285* %.80(%Parser.560379* nonnull %.1)
  %.82 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.83 = bitcast i8* %.82 to %BinaryExpressionNode.560313*
  %.84 = bitcast i8* %.82 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.84, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.83, %ExpressionNode.560285* %.74, i64 %.941, %ExpressionNode.560285* %.81)
  %.91 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.45, align 8
  %.92 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.91, i64 0, i32 29
  %.93 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.92, align 8
  %.94 = tail call i64 %.93(%Parser.560379* nonnull %.1)
  %.97 = icmp ne i64 %.94, 0
  %.100 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.45, align 8
  %.101 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.100, i64 0, i32 0
  %.102 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.101, align 8
  %.103 = tail call i1 %.102(%Parser.560379* nonnull %.1)
  %.104 = and i1 %.97, %.103
  %0 = bitcast i8* %.82 to %ExpressionNode.560285*
  br i1 %.104, label %while.entry, label %while.exit.loopexit

while.exit.loopexit:                              ; preds = %while.entry
  %1 = bitcast i8* %.82 to %ExpressionNode.560285*
  br label %while.exit

while.exit:                                       ; preds = %while.exit.loopexit, %.3.endif
  %.106 = phi %ExpressionNode.560285* [ %.49, %.3.endif ], [ %1, %while.exit.loopexit ]
  ret %ExpressionNode.560285* %.106
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_logic_expr_op(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %switch.selectcmp = icmp eq i64 %.9, 52
  %switch.select = select i1 %switch.selectcmp, i64 16, i64 0
  %switch.selectcmp1 = icmp eq i64 %.9, 53
  %switch.select2 = select i1 %switch.selectcmp1, i64 15, i64 %switch.select
  ret i64 %switch.select2
}

define %ExpressionNode.560285* @Parser_parse_bit_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 30
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.14 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.14, i64 0, i32 31
  %.16 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.15, align 8
  %.17 = tail call i64 %.16(%Parser.560379* %.1)
  %.20 = icmp ne i64 %.17, 0
  %.23 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 0
  %.25 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.24, align 8
  %.26 = tail call i1 %.25(%Parser.560379* %.1)
  %.27 = and i1 %.20, %.26
  br i1 %.27, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %cmp.0 = phi %ExpressionNode.560285* [ %.48, %while.entry ], [ %.10, %.3 ]
  %op.0 = phi i64 [ %.55, %while.entry ], [ %.17, %.3 ]
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 2
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* nonnull %.1)
  %.39 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.39, i64 0, i32 30
  %.41 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.40, align 8
  %.42 = tail call %ExpressionNode.560285* %.41(%Parser.560379* nonnull %.1)
  %.43 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.44 = bitcast i8* %.43 to %BinaryExpressionNode.560313*
  %.45 = bitcast i8* %.43 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.45, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.44, %ExpressionNode.560285* %cmp.0, i64 %op.0, %ExpressionNode.560285* %.42)
  %.48 = bitcast i8* %.43 to %ExpressionNode.560285*
  %.52 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.52, i64 0, i32 31
  %.54 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.53, align 8
  %.55 = tail call i64 %.54(%Parser.560379* nonnull %.1)
  %.58 = icmp ne i64 %.55, 0
  %.61 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.61, i64 0, i32 0
  %.63 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.62, align 8
  %.64 = tail call i1 %.63(%Parser.560379* nonnull %.1)
  %.65 = and i1 %.58, %.64
  br i1 %.65, label %while.entry, label %while.exit.loopexit

while.exit.loopexit:                              ; preds = %while.entry
  %.48.le = bitcast i8* %.43 to %ExpressionNode.560285*
  br label %while.exit

while.exit:                                       ; preds = %while.exit.loopexit, %.3
  %cmp.1 = phi %ExpressionNode.560285* [ %.10, %.3 ], [ %.48.le, %while.exit.loopexit ]
  ret %ExpressionNode.560285* %cmp.1
}

define %ExpressionNode.560285* @Parser_parse_range_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 32
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.13 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.14 = load %Token.560247*, %Token.560247** %.13, align 8
  %.15 = getelementptr inbounds %Token.560247, %Token.560247* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp ne i64 %.16, 49
  %.20 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.21, align 8
  %.23 = tail call i1 %.22(%Parser.560379* %.1)
  %.24 = xor i1 %.23, true
  %.25 = or i1 %.17, %.24
  br i1 %.25, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.560285* %.10

.3.endif:                                         ; preds = %.3
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 2
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* nonnull %.1)
  %.38 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.38, i64 0, i32 37
  %.40 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.39, align 8
  %.41 = tail call %ExpressionNode.560285* %.40(%Parser.560379* nonnull %.1)
  %.42 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.43 = bitcast i8* %.42 to %BinaryExpressionNode.560313*
  %.44 = bitcast i8* %.42 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.44, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.43, %ExpressionNode.560285* %.10, i64 31, %ExpressionNode.560285* %.41)
  %.47 = bitcast i8* %.42 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.47
}

define %ExpressionNode.560285* @Parser_parse_typecast_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 33
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.13 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.14 = load %Token.560247*, %Token.560247** %.13, align 8
  %.15 = getelementptr inbounds %Token.560247, %Token.560247* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.16, 86
  br i1 %.17.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.560285* %.10

.3.endif:                                         ; preds = %.3
  %.23 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 2
  %.25 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.24, align 8
  tail call void %.25(%Parser.560379* nonnull %.1)
  %.30 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.30, i64 0, i32 10
  %.32 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.31, align 8
  %.33 = tail call %TypeNode.560269* %.32(%Parser.560379* nonnull %.1)
  %.34 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.35 = bitcast i8* %.34 to %TypeCastExpressionNode.560311*
  %.36 = bitcast i8* %.34 to %TypeCastExpressionNode_vtable_ty.560312**
  store %TypeCastExpressionNode_vtable_ty.560312* @TypeCastExpressionNode_vtable_data, %TypeCastExpressionNode_vtable_ty.560312** %.36, align 8
  tail call void @TypeCastExpressionNode_constructor(%TypeCastExpressionNode.560311* %.35, %ExpressionNode.560285* %.10, %TypeNode.560269* %.33)
  %.401.cast = bitcast i8* %.34 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.401.cast
}

define %ExpressionNode.560285* @Parser_parse_ternary_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 34
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.13 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.14 = load %Token.560247*, %Token.560247** %.13, align 8
  %.15 = getelementptr inbounds %Token.560247, %Token.560247* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp ne i64 %.16, 34
  %.20 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.21, align 8
  %.23 = tail call i1 %.22(%Parser.560379* %.1)
  %.24 = xor i1 %.23, true
  %.25 = or i1 %.17, %.24
  br i1 %.25, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.560285* %.10

.3.endif:                                         ; preds = %.3
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 2
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* nonnull %.1)
  %.37 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.37, i64 0, i32 37
  %.39 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.38, align 8
  %.40 = tail call %ExpressionNode.560285* %.39(%Parser.560379* nonnull %.1)
  %.44 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.44, i64 0, i32 4
  %.46 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.45, align 8
  %.47 = tail call %Token.560247* %.46(%Parser.560379* nonnull %.1, i64 1)
  %.50 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.50, i64 0, i32 37
  %.52 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.51, align 8
  %.53 = tail call %ExpressionNode.560285* %.52(%Parser.560379* nonnull %.1)
  %.58 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.59 = bitcast i8* %.58 to %TernaryExpressionNode.560315*
  %.60 = bitcast i8* %.58 to %TernaryExpressionNode_vtable_ty.560316**
  store %TernaryExpressionNode_vtable_ty.560316* @TernaryExpressionNode_vtable_data, %TernaryExpressionNode_vtable_ty.560316** %.60, align 8
  tail call void @TernaryExpressionNode_constructor(%TernaryExpressionNode.560315* %.59, %ExpressionNode.560285* %.10, %ExpressionNode.560285* %.40, %ExpressionNode.560285* %.53)
  %.63 = bitcast i8* %.58 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.63
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_assign_op(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endi...endif.endif [
    i64 36, label %.3.if
    i64 10, label %.3.if.fold.split
    i64 11, label %.3.if.fold.split1
    i64 12, label %.3.if.fold.split2
    i64 13, label %.3.if.fold.split3
    i64 14, label %.3.if.fold.split4
    i64 15, label %.3.if.fold.split5
    i64 16, label %.3.if.fold.split6
    i64 17, label %.3.if.fold.split7
    i64 18, label %.3.if.fold.split8
    i64 20, label %.3.if.fold.split9
  ]

.3.if.fold.split:                                 ; preds = %.3
  br label %.3.if

.3.if.fold.split1:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split2:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split3:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split4:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split5:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split6:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split7:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split8:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split9:                                ; preds = %.3
  br label %.3.if

.3.if:                                            ; preds = %.3, %.3.if.fold.split9, %.3.if.fold.split8, %.3.if.fold.split7, %.3.if.fold.split6, %.3.if.fold.split5, %.3.if.fold.split4, %.3.if.fold.split3, %.3.if.fold.split2, %.3.if.fold.split1, %.3.if.fold.split, %.3.endif.endif.endif.endi...endif.endif
  %merge = phi i64 [ 19, %.3 ], [ %., %.3.endif.endif.endif.endi...endif.endif ], [ 22, %.3.if.fold.split ], [ 21, %.3.if.fold.split1 ], [ 20, %.3.if.fold.split2 ], [ 23, %.3.if.fold.split3 ], [ 24, %.3.if.fold.split4 ], [ 25, %.3.if.fold.split5 ], [ 26, %.3.if.fold.split6 ], [ 27, %.3.if.fold.split7 ], [ 28, %.3.if.fold.split8 ], [ 29, %.3.if.fold.split9 ]
  ret i64 %merge

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3
  %.98 = icmp eq i64 %.9, 19
  %. = select i1 %.98, i64 30, i64 0
  br label %.3.if
}

define %ExpressionNode.560285* @Parser_parse_expression(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 35
  %.9 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.8, align 8
  %.10 = tail call %ExpressionNode.560285* %.9(%Parser.560379* %.1)
  %.13 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.14 = load %Token.560247*, %Token.560247** %.13, align 8
  %.15 = getelementptr inbounds %Token.560247, %Token.560247* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 82
  %.20 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.21, align 8
  %.23 = tail call i1 %.22(%Parser.560379* %.1)
  %.24 = and i1 %.17, %.23
  %.28 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  br i1 %.24, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.29 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.28, i64 0, i32 2
  %.30 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.29, align 8
  tail call void %.30(%Parser.560379* nonnull %.1)
  %.35 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.35, i64 0, i32 37
  %.37 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.36, align 8
  %.38 = tail call %ExpressionNode.560285* %.37(%Parser.560379* nonnull %.1)
  %.39 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.40 = bitcast i8* %.39 to %BinaryExpressionNode.560313*
  %.41 = bitcast i8* %.39 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.41, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.40, %ExpressionNode.560285* %.10, i64 18, %ExpressionNode.560285* %.38)
  %.44 = bitcast i8* %.39 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.44

.3.endif:                                         ; preds = %.3
  %.49 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.28, i64 0, i32 36
  %.50 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.49, align 8
  %.51 = tail call i64 %.50(%Parser.560379* nonnull %.1)
  %.54 = icmp eq i64 %.51, 0
  %.57 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.58 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.57, i64 0, i32 0
  %.59 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.58, align 8
  %.60 = tail call i1 %.59(%Parser.560379* nonnull %.1)
  %.61 = xor i1 %.60, true
  %.62 = or i1 %.54, %.61
  br i1 %.62, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  ret %ExpressionNode.560285* %.10

.3.endif.endif:                                   ; preds = %.3.endif
  %.68 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.69 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.68, i64 0, i32 2
  %.70 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.69, align 8
  tail call void %.70(%Parser.560379* nonnull %.1)
  %.76 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.77 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.76, i64 0, i32 37
  %.78 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.77, align 8
  %.79 = tail call %ExpressionNode.560285* %.78(%Parser.560379* nonnull %.1)
  %.80 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.81 = bitcast i8* %.80 to %BinaryExpressionNode.560313*
  %.82 = bitcast i8* %.80 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.82, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.81, %ExpressionNode.560285* %.10, i64 %.51, %ExpressionNode.560285* %.79)
  %.85 = bitcast i8* %.80 to %ExpressionNode.560285*
  ret %ExpressionNode.560285* %.85
}

define noalias %IfStatementNode.560319* @Parser_parse_if_statement(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %IfStatementNode.560319*
  %.12 = bitcast i8* %.10 to %IfStatementNode_vtable_ty.560320**
  store %IfStatementNode_vtable_ty.560320* @IfStatementNode_vtable_data, %IfStatementNode_vtable_ty.560320** %.12, align 8
  tail call void @IfStatementNode_constructor(%IfStatementNode.560319* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.25 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.25, i64 0, i32 37
  %.27 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.26, align 8
  %.28 = tail call %ExpressionNode.560285* %.27(%Parser.560379* %.1)
  %.29 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.29 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.28, %ExpressionNode.560285** %0, align 8
  %.33 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.33 to %FloRange.560223**
  %.34 = load %FloRange.560223*, %FloRange.560223** %1, align 8
  %.38 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.28, i64 0, i32 1
  %.39 = load %FloRange.560223*, %FloRange.560223** %.38, align 8
  %.40 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.34, %FloRange.560223* %.39)
  store %FloRange.560223* %.40, %FloRange.560223** %1, align 8
  %.46 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.46, i64 0, i32 44
  %.48 = load %BlockNode.560281* (%Parser.560379*)*, %BlockNode.560281* (%Parser.560379*)** %.47, align 8
  %.49 = tail call %BlockNode.560281* %.48(%Parser.560379* %.1)
  %.50 = getelementptr inbounds i8, i8* %.10, i64 32
  %2 = bitcast i8* %.50 to %BlockNode.560281**
  store %BlockNode.560281* %.49, %BlockNode.560281** %2, align 8
  %.54 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.54, i64 0, i32 5
  %.56 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.55, align 8
  tail call void %.56(%Parser.560379* %.1)
  %.60 = load %Token.560247*, %Token.560247** %.6, align 8
  %.61 = getelementptr inbounds %Token.560247, %Token.560247* %.60, i64 0, i32 1
  %.62 = load i64, i64* %.61, align 8
  %.63 = icmp eq i64 %.62, 58
  br i1 %.63, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.67 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.68 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.67, i64 0, i32 2
  %.69 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.68, align 8
  tail call void %.69(%Parser.560379* nonnull %.1)
  %.74 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.75 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.74, i64 0, i32 44
  %.76 = load %BlockNode.560281* (%Parser.560379*)*, %BlockNode.560281* (%Parser.560379*)** %.75, align 8
  %.77 = tail call %BlockNode.560281* %.76(%Parser.560379* nonnull %.1)
  %.78 = getelementptr inbounds i8, i8* %.10, i64 40
  %3 = bitcast i8* %.78 to %BlockNode.560281**
  store %BlockNode.560281* %.77, %BlockNode.560281** %3, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %IfStatementNode.560319* %.11
}

define noalias %WhileStatementNode.560321* @Parser_parse_while_statement(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %WhileStatementNode.560321*
  %.12 = bitcast i8* %.10 to %WhileStatementNode_vtable_ty.560322**
  store %WhileStatementNode_vtable_ty.560322* @WhileStatementNode_vtable_data, %WhileStatementNode_vtable_ty.560322** %.12, align 8
  tail call void @WhileStatementNode_constructor(%WhileStatementNode.560321* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.25 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.25, i64 0, i32 37
  %.27 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.26, align 8
  %.28 = tail call %ExpressionNode.560285* %.27(%Parser.560379* %.1)
  %.29 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.29 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.28, %ExpressionNode.560285** %0, align 8
  %.33 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.33 to %FloRange.560223**
  %.34 = load %FloRange.560223*, %FloRange.560223** %1, align 8
  %.38 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.28, i64 0, i32 1
  %.39 = load %FloRange.560223*, %FloRange.560223** %.38, align 8
  %.40 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.34, %FloRange.560223* %.39)
  store %FloRange.560223* %.40, %FloRange.560223** %1, align 8
  %.46 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.46, i64 0, i32 44
  %.48 = load %BlockNode.560281* (%Parser.560379*)*, %BlockNode.560281* (%Parser.560379*)** %.47, align 8
  %.49 = tail call %BlockNode.560281* %.48(%Parser.560379* %.1)
  %.50 = getelementptr inbounds i8, i8* %.10, i64 32
  %2 = bitcast i8* %.50 to %BlockNode.560281**
  store %BlockNode.560281* %.49, %BlockNode.560281** %2, align 8
  ret %WhileStatementNode.560321* %.11
}

define noalias %ForStatementNode.560323* @Parser_parse_for_statement(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(80) i8* @malloc(i64 80)
  %.11 = bitcast i8* %.10 to %ForStatementNode.560323*
  %.12 = bitcast i8* %.10 to %ForStatementNode_vtable_ty.560324**
  store %ForStatementNode_vtable_ty.560324* @ForStatementNode_vtable_data, %ForStatementNode_vtable_ty.560324** %.12, align 8
  tail call void @ForStatementNode_constructor(%ForStatementNode.560323* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.24 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.24, i64 0, i32 3
  %.26 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.25, align 8
  %.27 = tail call %Token.560247* %.26(%Parser.560379* %.1, i64 1)
  %.28 = getelementptr inbounds %Token.560247, %Token.560247* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30.not = icmp eq i64 %.29, 82
  br i1 %.30.not, label %.3.else, label %.3.if

.3.if:                                            ; preds = %.3
  %.34 = load %Token.560247*, %Token.560247** %.6, align 8
  %.35 = getelementptr inbounds %Token.560247, %Token.560247* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37.not = icmp eq i64 %.36, 2
  br i1 %.37.not, label %.3.if.endif, label %.3.if.if

.3.else:                                          ; preds = %.3
  %.97 = getelementptr inbounds i8, i8* %.10, i64 56
  %0 = bitcast i8* %.97 to i64*
  store i64 1, i64* %0, align 8
  %.102 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.103 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.102, i64 0, i32 4
  %.104 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.103, align 8
  %.105 = tail call %Token.560247* %.104(%Parser.560379* nonnull %.1, i64 51)
  %.107 = getelementptr inbounds i8, i8* %.10, i64 64
  %1 = bitcast i8* %.107 to %Token.560247**
  store %Token.560247* %.105, %Token.560247** %1, align 8
  %.111 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.112 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.111, i64 0, i32 4
  %.113 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.112, align 8
  %.114 = tail call %Token.560247* %.113(%Parser.560379* nonnull %.1, i64 82)
  %.118 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.119 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.118, i64 0, i32 37
  %.120 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.119, align 8
  %.121 = tail call %ExpressionNode.560285* %.120(%Parser.560379* nonnull %.1)
  br label %.3.endif.sink.split

.3.endif.sink.split:                              ; preds = %.3.else, %.3.if.endif.endif.if
  %.sink = phi i64 [ 40, %.3.if.endif.endif.if ], [ 48, %.3.else ]
  %.91.sink = phi %ExpressionNode.560285* [ %.91, %.3.if.endif.endif.if ], [ %.121, %.3.else ]
  %.92 = getelementptr inbounds i8, i8* %.10, i64 %.sink
  %2 = bitcast i8* %.92 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.91.sink, %ExpressionNode.560285** %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.endif.sink.split, %.3.if.endif.endif
  %.127 = getelementptr inbounds i8, i8* %.10, i64 8
  %3 = bitcast i8* %.127 to %FloRange.560223**
  %.128 = load %FloRange.560223*, %FloRange.560223** %3, align 8
  %.131 = load %Token.560247*, %Token.560247** %.6, align 8
  %.132 = getelementptr inbounds %Token.560247, %Token.560247* %.131, i64 0, i32 2
  %.133 = load %FloRange.560223*, %FloRange.560223** %.132, align 8
  %.134 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.128, %FloRange.560223* %.133)
  store %FloRange.560223* %.134, %FloRange.560223** %3, align 8
  %.139 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.140 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.139, i64 0, i32 0
  %.141 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.140, align 8
  %.142 = tail call i1 %.141(%Parser.560379* nonnull %.1)
  br i1 %.142, label %.3.endif.if, label %.3.endif.endif

.3.if.if:                                         ; preds = %.3.if
  %.42 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.42, i64 0, i32 43
  %.44 = load %StatementNode.560279* (%Parser.560379*)*, %StatementNode.560279* (%Parser.560379*)** %.43, align 8
  %.45 = tail call %StatementNode.560279* %.44(%Parser.560379* nonnull %.1)
  %.46 = getelementptr inbounds i8, i8* %.10, i64 24
  %4 = bitcast i8* %.46 to %StatementNode.560279**
  store %StatementNode.560279* %.45, %StatementNode.560279** %4, align 8
  br label %.3.if.endif

.3.if.endif:                                      ; preds = %.3.if, %.3.if.if
  %.51 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.51, i64 0, i32 4
  %.53 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.52, align 8
  %.54 = tail call %Token.560247* %.53(%Parser.560379* nonnull %.1, i64 2)
  %.57 = load %Token.560247*, %Token.560247** %.6, align 8
  %.58 = getelementptr inbounds %Token.560247, %Token.560247* %.57, i64 0, i32 1
  %.59 = load i64, i64* %.58, align 8
  %.60.not = icmp eq i64 %.59, 2
  br i1 %.60.not, label %.3.if.endif.endif, label %.3.if.endif.if

.3.if.endif.if:                                   ; preds = %.3.if.endif
  %.65 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.65, i64 0, i32 37
  %.67 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.66, align 8
  %.68 = tail call %ExpressionNode.560285* %.67(%Parser.560379* nonnull %.1)
  %.69 = getelementptr inbounds i8, i8* %.10, i64 32
  %5 = bitcast i8* %.69 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.68, %ExpressionNode.560285** %5, align 8
  br label %.3.if.endif.endif

.3.if.endif.endif:                                ; preds = %.3.if.endif, %.3.if.endif.if
  %.74 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.75 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.74, i64 0, i32 4
  %.76 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.75, align 8
  %.77 = tail call %Token.560247* %.76(%Parser.560379* nonnull %.1, i64 2)
  %.80 = load %Token.560247*, %Token.560247** %.6, align 8
  %.81 = getelementptr inbounds %Token.560247, %Token.560247* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83.not = icmp eq i64 %.82, 25
  br i1 %.83.not, label %.3.endif, label %.3.if.endif.endif.if

.3.if.endif.endif.if:                             ; preds = %.3.if.endif.endif
  %.88 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.89 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.88, i64 0, i32 37
  %.90 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.89, align 8
  %.91 = tail call %ExpressionNode.560285* %.90(%Parser.560379* nonnull %.1)
  br label %.3.endif.sink.split

.3.endif.if:                                      ; preds = %.3.endif
  %.147 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.148 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.147, i64 0, i32 44
  %.149 = load %BlockNode.560281* (%Parser.560379*)*, %BlockNode.560281* (%Parser.560379*)** %.148, align 8
  %.150 = tail call %BlockNode.560281* %.149(%Parser.560379* nonnull %.1)
  %.151 = getelementptr inbounds i8, i8* %.10, i64 72
  %6 = bitcast i8* %.151 to %BlockNode.560281**
  store %BlockNode.560281* %.150, %BlockNode.560281** %6, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  ret %ForStatementNode.560323* %.11
}

define noalias %VarDeclarationStatement.560327* @Parser_parse_variable_declaration_statement(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %VarDeclarationStatement.560327*
  %.12 = bitcast i8* %.10 to %VarDeclarationStatement_vtable_ty.560328**
  store %VarDeclarationStatement_vtable_ty.560328* @VarDeclarationStatement_vtable_data, %VarDeclarationStatement_vtable_ty.560328** %.12, align 8
  tail call void @VarDeclarationStatement_constructor(%VarDeclarationStatement.560327* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.25 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.25, i64 0, i32 4
  %.27 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.26, align 8
  %.28 = tail call %Token.560247* %.27(%Parser.560379* %.1, i64 51)
  %.30 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.30 to %Token.560247**
  store %Token.560247* %.28, %Token.560247** %0, align 8
  %.34 = load %Token.560247*, %Token.560247** %.6, align 8
  %.35 = getelementptr inbounds %Token.560247, %Token.560247* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 1
  br i1 %.37, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.41 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.41, i64 0, i32 2
  %.43 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.42, align 8
  tail call void %.43(%Parser.560379* nonnull %.1)
  %.48 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.48, i64 0, i32 10
  %.50 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.49, align 8
  %.51 = tail call %TypeNode.560269* %.50(%Parser.560379* nonnull %.1)
  %.52 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.52 to %TypeNode.560269**
  store %TypeNode.560269* %.51, %TypeNode.560269** %1, align 8
  %.57.pre = load %Token.560247*, %Token.560247** %.6, align 8
  %.64.phi.trans.insert = getelementptr inbounds %Token.560247, %Token.560247* %.57.pre, i64 0, i32 1
  %.65.pre = load i64, i64* %.64.phi.trans.insert, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.65 = phi i64 [ %.65.pre, %.3.if ], [ %.36, %.3 ]
  %.57 = phi %Token.560247* [ %.57.pre, %.3.if ], [ %.34, %.3 ]
  %.58 = getelementptr inbounds %Token.560247, %Token.560247* %.57, i64 0, i32 2
  %.5919 = load %FloRange.560223*, %FloRange.560223** %.58, align 8
  %.66 = icmp eq i64 %.65, 36
  br i1 %.66, label %.3.endif.if, label %.3.endif.else

.3.endif.if:                                      ; preds = %.3.endif
  %.70 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.71 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.70, i64 0, i32 2
  %.72 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.71, align 8
  tail call void %.72(%Parser.560379* nonnull %.1)
  %.77 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.77, i64 0, i32 37
  %.79 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.78, align 8
  %.80 = tail call %ExpressionNode.560285* %.79(%Parser.560379* nonnull %.1)
  %.81 = getelementptr inbounds i8, i8* %.10, i64 40
  %2 = bitcast i8* %.81 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.80, %ExpressionNode.560285** %2, align 8
  %.86 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.80, i64 0, i32 1
  %.87510 = load %FloRange.560223*, %FloRange.560223** %.86, align 8
  br label %.3.endif.endif

.3.endif.else:                                    ; preds = %.3.endif
  %.91 = getelementptr inbounds i8, i8* %.10, i64 32
  %3 = bitcast i8* %.91 to i64*
  %.922 = load i64, i64* %3, align 8
  %.93 = trunc i64 %.922 to i32
  %.95 = icmp ne i32 %.93, 0
  %.101 = icmp eq i64 %.65, 23
  %.102 = and i1 %.101, %.95
  %4 = inttoptr i64 %.922 to %TypeNode.560269*
  br i1 %.102, label %.3.endif.else.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.else, %.3.endif.else.if.endif, %.3.endif.if
  %.170 = phi %FloRange.560223* [ %.5919, %.3.endif.else ], [ %.5919, %.3.endif.else.if.endif ], [ %.87510, %.3.endif.if ]
  %.168 = getelementptr inbounds i8, i8* %.10, i64 8
  %5 = bitcast i8* %.168 to %FloRange.560223**
  %.169 = load %FloRange.560223*, %FloRange.560223** %5, align 8
  %.171 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.169, %FloRange.560223* %.170)
  store %FloRange.560223* %.171, %FloRange.560223** %5, align 8
  ret %VarDeclarationStatement.560327* %.11

.3.endif.else.if:                                 ; preds = %.3.endif.else
  %.110 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %4, i64 0, i32 1
  %.111 = load %FloRange.560223*, %FloRange.560223** %.110, align 8
  %.112 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.113 = bitcast i8* %.112 to %NewExpressionNode.560303*
  %.114 = bitcast i8* %.112 to %NewExpressionNode_vtable_ty.560304**
  store %NewExpressionNode_vtable_ty.560304* @NewExpressionNode_vtable_data, %NewExpressionNode_vtable_ty.560304** %.114, align 8
  tail call void @NewExpressionNode_constructor(%NewExpressionNode.560303* %.113, %TypeNode.560269* %4, %FloRange.560223* %.111)
  %.119 = getelementptr inbounds i8, i8* %.112, i64 40
  %6 = bitcast i8* %.119 to i1*
  store i1 false, i1* %6, align 1
  %.123 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.124 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.123, i64 0, i32 2
  %.125 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.124, align 8
  tail call void %.125(%Parser.560379* nonnull %.1)
  %.129 = load %Token.560247*, %Token.560247** %.6, align 8
  %.130 = getelementptr inbounds %Token.560247, %Token.560247* %.129, i64 0, i32 1
  %.131 = load i64, i64* %.130, align 8
  %.132.not = icmp eq i64 %.131, 24
  %7 = ptrtoint i8* %.112 to i64
  br i1 %.132.not, label %.3.endif.else.if.endif, label %.3.endif.else.if.if

.3.endif.else.if.if:                              ; preds = %.3.endif.else.if
  %.136 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.137 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.136, i64 0, i32 11
  %.138 = load void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)*, void (%Parser.560379*, %"Array<ExpressionNode>.560297"*)** %.137, align 8
  %.140 = getelementptr inbounds i8, i8* %.112, i64 48
  %8 = bitcast i8* %.140 to %"Array<ExpressionNode>.560297"**
  %.141 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %8, align 8
  tail call void %.138(%Parser.560379* nonnull %.1, %"Array<ExpressionNode>.560297"* %.141)
  br label %.3.endif.else.if.endif

.3.endif.else.if.endif:                           ; preds = %.3.endif.else.if, %.3.endif.else.if.if
  %.146 = getelementptr inbounds i8, i8* %.112, i64 8
  %9 = bitcast i8* %.146 to %FloRange.560223**
  %.147 = load %FloRange.560223*, %FloRange.560223** %9, align 8
  %.150 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.151 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.150, i64 0, i32 4
  %.152 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.151, align 8
  %.153 = tail call %Token.560247* %.152(%Parser.560379* nonnull %.1, i64 24)
  %.154 = getelementptr inbounds %Token.560247, %Token.560247* %.153, i64 0, i32 2
  %.155 = load %FloRange.560223*, %FloRange.560223** %.154, align 8
  %.156 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.147, %FloRange.560223* %.155)
  store %FloRange.560223* %.156, %FloRange.560223** %9, align 8
  %.162 = getelementptr inbounds i8, i8* %.10, i64 40
  %10 = bitcast i8* %.162 to i64*
  store i64 %7, i64* %10, align 8
  br label %.3.endif.endif
}

define noalias %ReturnStatementNode.560325* @Parser_parse_return_statement(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %ReturnStatementNode.560325*
  %.12 = bitcast i8* %.10 to %ReturnStatementNode_vtable_ty.560326**
  store %ReturnStatementNode_vtable_ty.560326* @ReturnStatementNode_vtable_data, %ReturnStatementNode_vtable_ty.560326** %.12, align 8
  tail call void @ReturnStatementNode_constructor(%ReturnStatementNode.560325* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.24 = load %Token.560247*, %Token.560247** %.6, align 8
  %.25 = getelementptr inbounds %Token.560247, %Token.560247* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27 = icmp ne i64 %.26, 31
  %.30 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.30, i64 0, i32 0
  %.32 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.31, align 8
  %.33 = tail call i1 %.32(%Parser.560379* %.1)
  %.34 = and i1 %.27, %.33
  %.37 = load %Token.560247*, %Token.560247** %.6, align 8
  %.38 = getelementptr inbounds %Token.560247, %Token.560247* %.37, i64 0, i32 1
  %.39 = load i64, i64* %.38, align 8
  %.40 = icmp ne i64 %.39, 26
  %.41 = and i1 %.34, %.40
  br i1 %.41, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.45 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.45, i64 0, i32 37
  %.47 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.46, align 8
  %.48 = tail call %ExpressionNode.560285* %.47(%Parser.560379* nonnull %.1)
  %.52 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.52 to %FloRange.560223**
  %.53 = load %FloRange.560223*, %FloRange.560223** %0, align 8
  %.55 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.48, i64 0, i32 1
  %.56 = load %FloRange.560223*, %FloRange.560223** %.55, align 8
  %.57 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.53, %FloRange.560223* %.56)
  store %FloRange.560223* %.57, %FloRange.560223** %0, align 8
  %1 = ptrtoint %ExpressionNode.560285* %.48 to i64
  %.62 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.62 to i64*
  store i64 %1, i64* %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %ReturnStatementNode.560325* %.11
}

define %StatementNode.560279* @Parser_parse_statement(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.14 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  switch i64 %.15, label %.3.else.else.else.else.else.else.else [
    i64 57, label %.3.if
    i64 73, label %.3.else.if
    i64 72, label %.3.else.else.if
    i64 77, label %.3.else.else.else.if
    i64 56, label %.3.else.else.else.else.if
    i64 55, label %.3.else.else.else.else.else.if
    i64 76, label %.3.else.else.else.else.else.else.if
  ]

.3.if:                                            ; preds = %.3
  %.19 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.20 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.19, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.20, i64 0, i32 38
  %.22 = load %IfStatementNode.560319* (%Parser.560379*)*, %IfStatementNode.560319* (%Parser.560379*)** %.21, align 8
  %.23 = tail call %IfStatementNode.560319* %.22(%Parser.560379* nonnull %.1)
  %.24 = bitcast %IfStatementNode.560319* %.23 to %StatementNode.560279*
  ret %StatementNode.560279* %.24

.3.else.if:                                       ; preds = %.3
  %.34 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.35 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.34, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.35, i64 0, i32 39
  %.37 = load %WhileStatementNode.560321* (%Parser.560379*)*, %WhileStatementNode.560321* (%Parser.560379*)** %.36, align 8
  %.38 = tail call %WhileStatementNode.560321* %.37(%Parser.560379* nonnull %.1)
  %.39 = bitcast %WhileStatementNode.560321* %.38 to %StatementNode.560279*
  ret %StatementNode.560279* %.39

.3.else.else.if:                                  ; preds = %.3
  %.49 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.50 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.49, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.50, i64 0, i32 40
  %.52 = load %ForStatementNode.560323* (%Parser.560379*)*, %ForStatementNode.560323* (%Parser.560379*)** %.51, align 8
  %.53 = tail call %ForStatementNode.560323* %.52(%Parser.560379* nonnull %.1)
  %.54 = bitcast %ForStatementNode.560323* %.53 to %StatementNode.560279*
  ret %StatementNode.560279* %.54

.3.else.else.else.if:                             ; preds = %.3
  %.64 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.65 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.64, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.65, i64 0, i32 42
  %.67 = load %ReturnStatementNode.560325* (%Parser.560379*)*, %ReturnStatementNode.560325* (%Parser.560379*)** %.66, align 8
  %.68 = tail call %ReturnStatementNode.560325* %.67(%Parser.560379* nonnull %.1)
  %.69 = bitcast %ReturnStatementNode.560325* %.68 to %StatementNode.560279*
  ret %StatementNode.560279* %.69

.3.else.else.else.else.if:                        ; preds = %.3
  %.79 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.80 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.79, align 8
  %.81 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.80, i64 0, i32 41
  %.82 = load %VarDeclarationStatement.560327* (%Parser.560379*)*, %VarDeclarationStatement.560327* (%Parser.560379*)** %.81, align 8
  %.83 = tail call %VarDeclarationStatement.560327* %.82(%Parser.560379* nonnull %.1)
  %.84 = bitcast %VarDeclarationStatement.560327* %.83 to %StatementNode.560279*
  ret %StatementNode.560279* %.84

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.94 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.95 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.94, align 8
  %.96 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.95, i64 0, i32 54
  %.97 = load %ConstDeclarationStatement.560329* (%Parser.560379*)*, %ConstDeclarationStatement.560329* (%Parser.560379*)** %.96, align 8
  %.98 = tail call %ConstDeclarationStatement.560329* %.97(%Parser.560379* nonnull %.1)
  %.99 = bitcast %ConstDeclarationStatement.560329* %.98 to %StatementNode.560279*
  ret %StatementNode.560279* %.99

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.109 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.110 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.109, align 8
  %.111 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.110, i64 0, i32 2
  %.112 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.111, align 8
  tail call void %.112(%Parser.560379* nonnull %.1)
  %.115 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.116 = bitcast i8* %.115 to %StatementNode.560279*
  %.117 = bitcast i8* %.115 to %StatementNode_vtable_ty.560280**
  store %StatementNode_vtable_ty.560280* @StatementNode_vtable_data, %StatementNode_vtable_ty.560280** %.117, align 8
  tail call void @StatementNode_constructor(%StatementNode.560279* %.116, i64 5, %FloRange.560223* %.9)
  ret %StatementNode.560279* %.116

.3.else.else.else.else.else.else.else:            ; preds = %.3
  %.126 = icmp eq i64 %.15, 75
  %.129 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.130 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.129, align 8
  br i1 %.126, label %.3.else.else.else.else.else.else.else.if, label %.3.else.else.else.else.else.else.else.endif

.3.else.else.else.else.else.else.else.if:         ; preds = %.3.else.else.else.else.else.else.else
  %.131 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.130, i64 0, i32 2
  %.132 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.131, align 8
  tail call void %.132(%Parser.560379* nonnull %.1)
  %.135 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.136 = bitcast i8* %.135 to %StatementNode.560279*
  %.137 = bitcast i8* %.135 to %StatementNode_vtable_ty.560280**
  store %StatementNode_vtable_ty.560280* @StatementNode_vtable_data, %StatementNode_vtable_ty.560280** %.137, align 8
  tail call void @StatementNode_constructor(%StatementNode.560279* %.136, i64 6, %FloRange.560223* %.9)
  ret %StatementNode.560279* %.136

.3.else.else.else.else.else.else.else.endif:      ; preds = %.3.else.else.else.else.else.else.else
  %.151 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.130, i64 0, i32 37
  %.152 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.151, align 8
  %.153 = tail call %ExpressionNode.560285* %.152(%Parser.560379* nonnull %.1)
  %.154 = bitcast %ExpressionNode.560285* %.153 to %StatementNode.560279*
  ret %StatementNode.560279* %.154
}

define noalias %BlockNode.560281* @Parser_parse_block(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %BlockNode.560281*
  %.12 = bitcast i8* %.10 to %BlockNode_vtable_ty.560282**
  store %BlockNode_vtable_ty.560282* @BlockNode_vtable_data, %BlockNode_vtable_ty.560282** %.12, align 8
  tail call void @BlockNode_constructor(%BlockNode.560281* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 5
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.24 = load %Token.560247*, %Token.560247** %.6, align 8
  %.25 = getelementptr inbounds %Token.560247, %Token.560247* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27 = icmp eq i64 %.26, 25
  br i1 %.27, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 2
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* nonnull %.1)
  %.37 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.37, i64 0, i32 5
  %.39 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.38, align 8
  tail call void %.39(%Parser.560379* nonnull %.1)
  %.43 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.43, i64 0, i32 0
  %.45 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.44, align 8
  %.46 = tail call i1 %.45(%Parser.560379* nonnull %.1)
  %.49 = load %Token.560247*, %Token.560247** %.6, align 8
  %.50 = getelementptr inbounds %Token.560247, %Token.560247* %.49, i64 0, i32 1
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp ne i64 %.51, 26
  %.53 = and i1 %.46, %.52
  br i1 %.53, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3.if
  %.56 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.56 to %"Array<StatementNode>.560283"**
  %.57 = load %"Array<StatementNode>.560283"*, %"Array<StatementNode>.560283"** %0, align 8
  %.64 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.57, i64 0, i32 0
  br label %while.entry

.3.else:                                          ; preds = %.3
  %.97 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.97 to %"Array<StatementNode>.560283"**
  %.98 = load %"Array<StatementNode>.560283"*, %"Array<StatementNode>.560283"** %1, align 8
  %.101 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.102 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.101, i64 0, i32 43
  %.103 = load %StatementNode.560279* (%Parser.560379*)*, %StatementNode.560279* (%Parser.560379*)** %.102, align 8
  %.104 = tail call %StatementNode.560279* %.103(%Parser.560379* nonnull %.1)
  %.105 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.98, i64 0, i32 0
  %.106 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.105, align 8
  %.107 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.106, i64 0, i32 2
  %.108 = load void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)*, void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)** %.107, align 8
  tail call void %.108(%"Array<StatementNode>.560283"* %.98, %StatementNode.560279* %.104)
  br label %.3.endif

.3.endif:                                         ; preds = %while.exit, %.3.else
  ret %BlockNode.560281* %.11

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %.60 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.60, i64 0, i32 43
  %.62 = load %StatementNode.560279* (%Parser.560379*)*, %StatementNode.560279* (%Parser.560379*)** %.61, align 8
  %.63 = tail call %StatementNode.560279* %.62(%Parser.560379* nonnull %.1)
  %.65 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.64, align 8
  %.66 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)*, void (%"Array<StatementNode>.560283"*, %StatementNode.560279*)** %.66, align 8
  tail call void %.67(%"Array<StatementNode>.560283"* %.57, %StatementNode.560279* %.63)
  %.71 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.71, i64 0, i32 5
  %.73 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.72, align 8
  tail call void %.73(%Parser.560379* nonnull %.1)
  %.77 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.78, align 8
  %.80 = tail call i1 %.79(%Parser.560379* nonnull %.1)
  %.83 = load %Token.560247*, %Token.560247** %.6, align 8
  %.84 = getelementptr inbounds %Token.560247, %Token.560247* %.83, i64 0, i32 1
  %.85 = load i64, i64* %.84, align 8
  %.86 = icmp ne i64 %.85, 26
  %.87 = and i1 %.80, %.86
  br i1 %.87, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3.if
  %.91 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.92 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.91, i64 0, i32 4
  %.93 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.92, align 8
  %.94 = tail call %Token.560247* %.93(%Parser.560379* nonnull %.1, i64 26)
  br label %.3.endif
}

define noalias %TypeAliasNode.560361* @Parser_parse_type_alias(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 2
  %.9 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.8, align 8
  tail call void %.9(%Parser.560379* %.1)
  %.13 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.13, i64 0, i32 4
  %.15 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.14, align 8
  %.16 = tail call %Token.560247* %.15(%Parser.560379* %.1, i64 51)
  %.17 = bitcast %Token.560247* %.16 to %IdentifierToken.560263*
  %.18 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.19 = bitcast i8* %.18 to %TypeAliasNode.560361*
  %.20 = bitcast i8* %.18 to %TypeAliasNode_vtable_ty.560362**
  store %TypeAliasNode_vtable_ty.560362* @TypeAliasNode_vtable_data, %TypeAliasNode_vtable_ty.560362** %.20, align 8
  tail call void @TypeAliasNode_constructor(%TypeAliasNode.560361* %.19, %IdentifierToken.560263* %.17)
  %.26 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.27 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.26, i64 0, i32 4
  %.28 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.27, align 8
  %.29 = tail call %Token.560247* %.28(%Parser.560379* %.1, i64 36)
  %.33 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.33, i64 0, i32 10
  %.35 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.34, align 8
  %.36 = tail call %TypeNode.560269* %.35(%Parser.560379* %.1)
  %.37 = getelementptr inbounds i8, i8* %.18, i64 16
  %0 = bitcast i8* %.37 to %TypeNode.560269**
  store %TypeNode.560269* %.36, %TypeNode.560269** %0, align 8
  ret %TypeAliasNode.560361* %.19
}

define noalias %ArgNode.560331* @Parser_parse_arg(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 4
  %.9 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.8, align 8
  %.10 = tail call %Token.560247* %.9(%Parser.560379* %.1, i64 51)
  %.11 = bitcast %Token.560247* %.10 to %IdentifierToken.560263*
  %.12 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %ArgNode.560331*
  %.14 = bitcast i8* %.12 to %ArgNode_vtable_ty.560332**
  store %ArgNode_vtable_ty.560332* @ArgNode_vtable_data, %ArgNode_vtable_ty.560332** %.14, align 8
  tail call void @ArgNode_constructor(%ArgNode.560331* %.13, %IdentifierToken.560263* %.11)
  %.20 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.21, align 8
  %.23 = tail call i1 %.22(%Parser.560379* %.1)
  br i1 %.23, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3.endif.endif.endif, %.3.endif.endif.endif.if, %.3.endif.if, %.3
  ret %ArgNode.560331* %.13

.3.endif:                                         ; preds = %.3
  %.29 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.30 = load %Token.560247*, %Token.560247** %.29, align 8
  %.31 = getelementptr inbounds %Token.560247, %Token.560247* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33 = icmp eq i64 %.32, 1
  br i1 %.33, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.37 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.37, i64 0, i32 2
  %.39 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.38, align 8
  tail call void %.39(%Parser.560379* nonnull %.1)
  %.44 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.44, i64 0, i32 10
  %.46 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.45, align 8
  %.47 = tail call %TypeNode.560269* %.46(%Parser.560379* nonnull %.1)
  %.48 = getelementptr inbounds i8, i8* %.12, i64 16
  %0 = bitcast i8* %.48 to %TypeNode.560269**
  store %TypeNode.560269* %.47, %TypeNode.560269** %0, align 8
  %.52 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.52, i64 0, i32 0
  %.54 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.53, align 8
  %.55 = tail call i1 %.54(%Parser.560379* nonnull %.1)
  br i1 %.55, label %.3.endif.if..3.endif.endif_crit_edge, label %.3.if

.3.endif.if..3.endif.endif_crit_edge:             ; preds = %.3.endif.if
  %.63.pre = load %Token.560247*, %Token.560247** %.29, align 8
  %.64.phi.trans.insert = getelementptr inbounds %Token.560247, %Token.560247* %.63.pre, i64 0, i32 1
  %.65.pre = load i64, i64* %.64.phi.trans.insert, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if..3.endif.endif_crit_edge, %.3.endif
  %.65 = phi i64 [ %.65.pre, %.3.endif.if..3.endif.endif_crit_edge ], [ %.32, %.3.endif ]
  %.66 = icmp eq i64 %.65, 36
  br i1 %.66, label %.3.endif.endif.if, label %.3.endif.endif..3.endif.endif.endif_crit_edge

.3.endif.endif..3.endif.endif.endif_crit_edge:    ; preds = %.3.endif.endif
  %.91.phi.trans.insert = getelementptr inbounds i8, i8* %.12, i64 24
  %.phi.trans.insert = bitcast i8* %.91.phi.trans.insert to i64*
  %.922.pre = load i64, i64* %.phi.trans.insert, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.70 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.71 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.70, i64 0, i32 2
  %.72 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.71, align 8
  tail call void %.72(%Parser.560379* nonnull %.1)
  %.77 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.77, i64 0, i32 37
  %.79 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.78, align 8
  %.80 = tail call %ExpressionNode.560285* %.79(%Parser.560379* nonnull %.1)
  %.81 = getelementptr inbounds i8, i8* %.12, i64 24
  %1 = bitcast i8* %.81 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.80, %ExpressionNode.560285** %1, align 8
  %2 = ptrtoint %ExpressionNode.560285* %.80 to i64
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif..3.endif.endif.endif_crit_edge, %.3.endif.endif.if
  %.922 = phi i64 [ %.922.pre, %.3.endif.endif..3.endif.endif.endif_crit_edge ], [ %2, %.3.endif.endif.if ]
  %.85 = getelementptr inbounds i8, i8* %.12, i64 16
  %3 = bitcast i8* %.85 to i64*
  %.861 = load i64, i64* %3, align 8
  %4 = or i64 %.922, %.861
  %5 = trunc i64 %4 to i32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %.3.endif.endif.endif.if, label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.100 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.101 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.100, i64 0, i32 1
  %.102 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.101, align 8
  %.104 = getelementptr inbounds i8, i8* %.12, i64 8
  %7 = bitcast i8* %.104 to %IdentifierToken.560263**
  %.105 = load %IdentifierToken.560263*, %IdentifierToken.560263** %7, align 8
  %.106 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.105, i64 0, i32 3
  %.107 = load %string.560217*, %string.560217** %.106, align 8
  %.108 = getelementptr inbounds %string.560217, %string.560217* %.107, i64 0, i32 0
  %.109 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.108, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.109, i64 0, i32 11
  %.111 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.110, align 8
  %.112 = tail call i8* %.111(%string.560217* %.107)
  %.114 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.158, i64 0, i64 0), i8* %.112)
  %.115 = add i64 %.114, 1
  %.117 = tail call i8* @malloc(i64 %.115)
  %.118 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.117, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.158, i64 0, i64 0), i8* %.112)
  %.119 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.120 = bitcast i8* %.119 to %string.560217*
  %.121 = bitcast i8* %.119 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.121, align 8
  %.123 = getelementptr inbounds i8, i8* %.119, i64 8
  %8 = bitcast i8* %.123 to i8**
  store i8* %.117, i8** %8, align 8
  %.125 = getelementptr inbounds i8, i8* %.119, i64 16
  %9 = bitcast i8* %.125 to i64*
  store i64 %.114, i64* %9, align 8
  %.127 = getelementptr inbounds i8, i8* %.119, i64 24
  %10 = bitcast i8* %.127 to i64*
  store i64 %.114, i64* %10, align 8
  tail call void %.102(%Parser.560379* nonnull %.1, %string.560217* %.120)
  %.131 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 2
  %.132 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.131, align 8
  %.133 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.132, i64 0, i32 2
  %.134 = load i64, i64* %.133, align 8
  %.135 = add i64 %.134, -1
  %.139 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.132, i64 0, i32 0
  %.140 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.139, align 8
  %.141 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.140, i64 0, i32 5
  %.142 = load %FloError.560225* (%"Array<FloError>.560238"*, i64)*, %FloError.560225* (%"Array<FloError>.560238"*, i64)** %.141, align 8
  %.143 = tail call %FloError.560225* %.142(%"Array<FloError>.560238"* %.132, i64 %.135)
  %.147 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.105, i64 0, i32 2
  %11 = bitcast %FloRange.560223** %.147 to i64*
  %.1483 = load i64, i64* %11, align 8
  %.149 = getelementptr inbounds %FloError.560225, %FloError.560225* %.143, i64 0, i32 3
  %12 = bitcast %FloRange.560223** %.149 to i64*
  store i64 %.1483, i64* %12, align 8
  br label %.3.if
}

define void @Parser_parse_args(%Parser.560379* %.1, %"Array<ArgNode>.560335"* %.2) {
.4:
  %.9 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.10 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.11 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.10, i64 0, i32 46
  %.12 = load %ArgNode.560331* (%Parser.560379*)*, %ArgNode.560331* (%Parser.560379*)** %.11, align 8
  %.13 = tail call %ArgNode.560331* %.12(%Parser.560379* %.1)
  %.14 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.2, i64 0, i32 0
  %.15 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.15, i64 0, i32 2
  %.17 = load void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)*, void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)** %.16, align 8
  tail call void %.17(%"Array<ArgNode>.560335"* %.2, %ArgNode.560331* %.13)
  %.20 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.21 = load %Token.560247*, %Token.560247** %.20, align 8
  %.22 = getelementptr inbounds %Token.560247, %Token.560247* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 3
  %.27 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.28, align 8
  %.30 = tail call i1 %.29(%Parser.560379* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.35 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.35, i64 0, i32 4
  %.37 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.36, align 8
  %.38 = tail call %Token.560247* %.37(%Parser.560379* nonnull %.1, i64 3)
  %.42 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.42, i64 0, i32 46
  %.44 = load %ArgNode.560331* (%Parser.560379*)*, %ArgNode.560331* (%Parser.560379*)** %.43, align 8
  %.45 = tail call %ArgNode.560331* %.44(%Parser.560379* nonnull %.1)
  %.47 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.14, align 8
  %.48 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.47, i64 0, i32 2
  %.49 = load void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)*, void (%"Array<ArgNode>.560335"*, %ArgNode.560331*)** %.48, align 8
  tail call void %.49(%"Array<ArgNode>.560335"* nonnull %.2, %ArgNode.560331* %.45)
  %.53 = load %Token.560247*, %Token.560247** %.20, align 8
  %.54 = getelementptr inbounds %Token.560247, %Token.560247* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 3
  %.59 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.9, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.59, i64 0, i32 0
  %.61 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.60, align 8
  %.62 = tail call i1 %.61(%Parser.560379* nonnull %.1)
  %.63 = and i1 %.56, %.62
  br i1 %.63, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  ret void
}

define noalias %FunctionDeclarationNode.560333* @Parser_parse_function(%Parser.560379* %.1) {
.3:
  %.5 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.6 = bitcast i8* %.5 to %FunctionDeclarationNode.560333*
  %.7 = bitcast i8* %.5 to %FunctionDeclarationNode_vtable_ty.560334**
  store %FunctionDeclarationNode_vtable_ty.560334* @FunctionDeclarationNode_vtable_data, %FunctionDeclarationNode_vtable_ty.560334** %.7, align 8
  tail call void @FunctionDeclarationNode_constructor(%FunctionDeclarationNode.560333* %.6)
  %.13 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.14, i64 0, i32 4
  %.16 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.15, align 8
  %.17 = tail call %Token.560247* %.16(%Parser.560379* %.1, i64 51)
  %.19 = getelementptr inbounds i8, i8* %.5, i64 8
  %0 = bitcast i8* %.19 to %Token.560247**
  store %Token.560247* %.17, %Token.560247** %0, align 8
  %.23 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.23, i64 0, i32 4
  %.25 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.24, align 8
  %.26 = tail call %Token.560247* %.25(%Parser.560379* %.1, i64 23)
  %.28 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.29 = load %Token.560247*, %Token.560247** %.28, align 8
  %.30 = getelementptr inbounds %Token.560247, %Token.560247* %.29, i64 0, i32 1
  %.31 = load i64, i64* %.30, align 8
  %.32.not = icmp eq i64 %.31, 24
  br i1 %.32.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.36 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.37 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.36, i64 0, i32 47
  %.38 = load void (%Parser.560379*, %"Array<ArgNode>.560335"*)*, void (%Parser.560379*, %"Array<ArgNode>.560335"*)** %.37, align 8
  %.40 = getelementptr inbounds i8, i8* %.5, i64 16
  %1 = bitcast i8* %.40 to %"Array<ArgNode>.560335"**
  %.41 = load %"Array<ArgNode>.560335"*, %"Array<ArgNode>.560335"** %1, align 8
  tail call void %.38(%Parser.560379* nonnull %.1, %"Array<ArgNode>.560335"* %.41)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.46 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.46, i64 0, i32 4
  %.48 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.47, align 8
  %.49 = tail call %Token.560247* %.48(%Parser.560379* nonnull %.1, i64 24)
  %.52 = load %Token.560247*, %Token.560247** %.28, align 8
  %.53 = getelementptr inbounds %Token.560247, %Token.560247* %.52, i64 0, i32 1
  %.54 = load i64, i64* %.53, align 8
  %.55 = icmp eq i64 %.54, 1
  br i1 %.55, label %.3.endif.if, label %.3.endif.else

.3.endif.if:                                      ; preds = %.3.endif
  %.59 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.59, i64 0, i32 2
  %.61 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.60, align 8
  tail call void %.61(%Parser.560379* nonnull %.1)
  %.66 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.67 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.66, i64 0, i32 10
  %.68 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.67, align 8
  %.69 = tail call %TypeNode.560269* %.68(%Parser.560379* nonnull %.1)
  %.70 = getelementptr inbounds i8, i8* %.5, i64 32
  %2 = bitcast i8* %.70 to %TypeNode.560269**
  store %TypeNode.560269* %.69, %TypeNode.560269** %2, align 8
  br label %.3.endif.endif

.3.endif.else:                                    ; preds = %.3.endif
  %.74 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.75 = bitcast i8* %.74 to %FloRange.560223*
  %.76 = bitcast i8* %.74 to %FloRange_vtable_ty.560224**
  store %FloRange_vtable_ty.560224* @FloRange_vtable_data, %FloRange_vtable_ty.560224** %.76, align 8
  tail call void @FloRange_constructor(%FloRange.560223* %.75, i64 0, i64 0, i64 0, i64 0)
  %.79 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.80 = bitcast i8* %.79 to %TypeNode.560269*
  %.81 = bitcast i8* %.79 to %TypeNode_vtable_ty.560270**
  store %TypeNode_vtable_ty.560270* @TypeNode_vtable_data, %TypeNode_vtable_ty.560270** %.81, align 8
  tail call void @TypeNode_constructor(%TypeNode.560269* %.80, i64 12, %FloRange.560223* %.75)
  %.84 = getelementptr inbounds i8, i8* %.5, i64 32
  %3 = bitcast i8* %.84 to i8**
  store i8* %.79, i8** %3, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.else, %.3.endif.if
  %.89 = load %Token.560247*, %Token.560247** %.28, align 8
  %.90 = getelementptr inbounds %Token.560247, %Token.560247* %.89, i64 0, i32 1
  %.91 = load i64, i64* %.90, align 8
  %.92 = icmp eq i64 %.91, 25
  br i1 %.92, label %.3.endif.endif.if, label %.3.endif.endif.else

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.97 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.13, align 8
  %.98 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.97, i64 0, i32 44
  %.99 = load %BlockNode.560281* (%Parser.560379*)*, %BlockNode.560281* (%Parser.560379*)** %.98, align 8
  %.100 = tail call %BlockNode.560281* %.99(%Parser.560379* nonnull %.1)
  %.101 = getelementptr inbounds i8, i8* %.5, i64 24
  %4 = bitcast i8* %.101 to %BlockNode.560281**
  store %BlockNode.560281* %.100, %BlockNode.560281** %4, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.else:                              ; preds = %.3.endif.endif
  %.105 = getelementptr inbounds i8, i8* %.5, i64 40
  %5 = bitcast i8* %.105 to i1*
  store i1 true, i1* %5, align 1
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.else, %.3.endif.endif.if
  ret %FunctionDeclarationNode.560333* %.6
}

define noalias %MethodNode.560337* @Parser_parse_method(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 4
  %.9 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.8, align 8
  %.10 = tail call %Token.560247* %.9(%Parser.560379* %.1, i64 51)
  %.11 = bitcast %Token.560247* %.10 to %IdentifierToken.560263*
  %.12 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.13 = bitcast i8* %.12 to %MethodNode.560337*
  %.14 = bitcast i8* %.12 to %MethodNode_vtable_ty.560338**
  store %MethodNode_vtable_ty.560338* @MethodNode_vtable_data, %MethodNode_vtable_ty.560338** %.14, align 8
  tail call void @MethodNode_constructor(%MethodNode.560337* %.13, %IdentifierToken.560263* %.11)
  %.20 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.20, i64 0, i32 4
  %.22 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.21, align 8
  %.23 = tail call %Token.560247* %.22(%Parser.560379* %.1, i64 23)
  %.25 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.26 = load %Token.560247*, %Token.560247** %.25, align 8
  %.27 = getelementptr inbounds %Token.560247, %Token.560247* %.26, i64 0, i32 1
  %.28 = load i64, i64* %.27, align 8
  %.29.not = icmp eq i64 %.28, 24
  br i1 %.29.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.35 = getelementptr inbounds %Token.560247, %Token.560247* %.26, i64 1
  %0 = bitcast %Token.560247* %.35 to %string.560217**
  %.36 = load %string.560217*, %string.560217** %0, align 8
  %.37 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.560217*
  %.38.repack = bitcast i8* %.37 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.38.repack, align 8
  %.38.repack2 = getelementptr inbounds i8, i8* %.37, i64 8
  %1 = bitcast i8* %.38.repack2 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.159, i64 0, i64 0), i8** %1, align 8
  %.38.repack3 = getelementptr inbounds i8, i8* %.37, i64 16
  %2 = bitcast i8* %.38.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.38.repack4 = getelementptr inbounds i8, i8* %.37, i64 24
  %3 = bitcast i8* %.38.repack4 to i64*
  store i64 4, i64* %3, align 8
  %.40 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.41 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.40, align 8
  %.42 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.41, i64 0, i32 4
  %.43 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.42, align 8
  %.44 = tail call i1 %.43(%string.560217* %.36, %string.560217* %.38)
  br i1 %.44, label %.3.if.if, label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3.if.if, %.3
  %.59 = load %Token.560247*, %Token.560247** %.25, align 8
  %.60 = getelementptr inbounds %Token.560247, %Token.560247* %.59, i64 0, i32 1
  %.61 = load i64, i64* %.60, align 8
  %.62.not = icmp eq i64 %.61, 24
  br i1 %.62.not, label %.3.endif.endif, label %.3.endif.if

.3.if.if:                                         ; preds = %.3.if
  %.47 = getelementptr inbounds i8, i8* %.12, i64 48
  %4 = bitcast i8* %.47 to i1*
  store i1 false, i1* %4, align 1
  %.51 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.51, i64 0, i32 2
  %.53 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.52, align 8
  tail call void %.53(%Parser.560379* nonnull %.1)
  br label %.3.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.65 = getelementptr inbounds i8, i8* %.12, i64 48
  %5 = bitcast i8* %.65 to i1*
  %.66 = load i1, i1* %5, align 1
  br i1 %.66, label %.3.endif.if.endif, label %.3.endif.if.if

.3.endif.endif:                                   ; preds = %.3.endif, %.3.endif.if.endif
  %.88 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.89 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.88, i64 0, i32 4
  %.90 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.89, align 8
  %.91 = tail call %Token.560247* %.90(%Parser.560379* nonnull %.1, i64 24)
  %.94 = load %Token.560247*, %Token.560247** %.25, align 8
  %.95 = getelementptr inbounds %Token.560247, %Token.560247* %.94, i64 0, i32 1
  %.96 = load i64, i64* %.95, align 8
  %.97 = icmp eq i64 %.96, 1
  br i1 %.97, label %.3.endif.endif.if, label %.3.endif.endif.else

.3.endif.if.if:                                   ; preds = %.3.endif.if
  %.71 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.71, i64 0, i32 4
  %.73 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.72, align 8
  %.74 = tail call %Token.560247* %.73(%Parser.560379* nonnull %.1, i64 3)
  br label %.3.endif.if.endif

.3.endif.if.endif:                                ; preds = %.3.endif.if, %.3.endif.if.if
  %.78 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.79 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.78, i64 0, i32 47
  %.80 = load void (%Parser.560379*, %"Array<ArgNode>.560335"*)*, void (%Parser.560379*, %"Array<ArgNode>.560335"*)** %.79, align 8
  %.82 = getelementptr inbounds i8, i8* %.12, i64 16
  %6 = bitcast i8* %.82 to %"Array<ArgNode>.560335"**
  %.83 = load %"Array<ArgNode>.560335"*, %"Array<ArgNode>.560335"** %6, align 8
  tail call void %.80(%Parser.560379* nonnull %.1, %"Array<ArgNode>.560335"* %.83)
  br label %.3.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.101 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.102 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.101, i64 0, i32 2
  %.103 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.102, align 8
  tail call void %.103(%Parser.560379* nonnull %.1)
  %.108 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.109 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.108, i64 0, i32 10
  %.110 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.109, align 8
  %.111 = tail call %TypeNode.560269* %.110(%Parser.560379* nonnull %.1)
  %.112 = getelementptr inbounds i8, i8* %.12, i64 40
  %7 = bitcast i8* %.112 to %TypeNode.560269**
  store %TypeNode.560269* %.111, %TypeNode.560269** %7, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.else:                              ; preds = %.3.endif.endif
  %.116 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.117 = bitcast i8* %.116 to %FloRange.560223*
  %.118 = bitcast i8* %.116 to %FloRange_vtable_ty.560224**
  store %FloRange_vtable_ty.560224* @FloRange_vtable_data, %FloRange_vtable_ty.560224** %.118, align 8
  tail call void @FloRange_constructor(%FloRange.560223* %.117, i64 0, i64 0, i64 0, i64 0)
  %.121 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.122 = bitcast i8* %.121 to %TypeNode.560269*
  %.123 = bitcast i8* %.121 to %TypeNode_vtable_ty.560270**
  store %TypeNode_vtable_ty.560270* @TypeNode_vtable_data, %TypeNode_vtable_ty.560270** %.123, align 8
  tail call void @TypeNode_constructor(%TypeNode.560269* %.122, i64 12, %FloRange.560223* %.117)
  %.126 = getelementptr inbounds i8, i8* %.12, i64 40
  %8 = bitcast i8* %.126 to i8**
  store i8* %.121, i8** %8, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.else, %.3.endif.endif.if
  %.131 = load %Token.560247*, %Token.560247** %.25, align 8
  %.132 = getelementptr inbounds %Token.560247, %Token.560247* %.131, i64 0, i32 1
  %.133 = load i64, i64* %.132, align 8
  %.134 = icmp eq i64 %.133, 25
  br i1 %.134, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.else

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.139 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.140 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.139, i64 0, i32 44
  %.141 = load %BlockNode.560281* (%Parser.560379*)*, %BlockNode.560281* (%Parser.560379*)** %.140, align 8
  %.142 = tail call %BlockNode.560281* %.141(%Parser.560379* nonnull %.1)
  %.143 = getelementptr inbounds i8, i8* %.12, i64 24
  %9 = bitcast i8* %.143 to %BlockNode.560281**
  store %BlockNode.560281* %.142, %BlockNode.560281** %9, align 8
  br label %.3.endif.endif.endif.endif

.3.endif.endif.endif.else:                        ; preds = %.3.endif.endif.endif
  %.147 = getelementptr inbounds i8, i8* %.12, i64 49
  %10 = bitcast i8* %.147 to i1*
  store i1 true, i1* %10, align 1
  br label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif.else, %.3.endif.endif.endif.if
  ret %MethodNode.560337* %.13
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_parse_access_modifier(%Parser.560379* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif [
    i64 80, label %.3.if
    i64 79, label %.3.if.fold.split
  ]

.3.if.fold.split:                                 ; preds = %.3
  br label %.3.if

.3.if:                                            ; preds = %.3, %.3.if.fold.split, %.3.endif.endif
  %merge = phi i64 [ 2, %.3 ], [ %., %.3.endif.endif ], [ 1, %.3.if.fold.split ]
  ret i64 %merge

.3.endif.endif:                                   ; preds = %.3
  %.26 = icmp eq i64 %.9, 81
  %. = select i1 %.26, i64 3, i64 0
  br label %.3.if
}

define void @Parser_parse_class_block(%Parser.560379* %.1, %ClassDeclarationNode.560343* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.9, i64 0, i32 4
  %.11 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.10, align 8
  %.12 = tail call %Token.560247* %.11(%Parser.560379* %.1, i64 25)
  %.15 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.15, i64 0, i32 5
  %.17 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.16, align 8
  tail call void %.17(%Parser.560379* %.1)
  %.20 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.21 = load %Token.560247*, %Token.560247** %.20, align 8
  %.22 = getelementptr inbounds %Token.560247, %Token.560247* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp ne i64 %.23, 26
  %.27 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.28, align 8
  %.30 = tail call i1 %.29(%Parser.560379* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.4
  %.149 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.2, i64 0, i32 5
  %.118 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.2, i64 0, i32 4
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif.endif
  %.35 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.35, i64 0, i32 50
  %.37 = load i64 (%Parser.560379*)*, i64 (%Parser.560379*)** %.36, align 8
  %.38 = tail call i64 %.37(%Parser.560379* nonnull %.1)
  %.41 = icmp eq i64 %.38, 0
  br i1 %.41, label %while.entry.endif, label %while.entry.else

while.exit:                                       ; preds = %while.entry.endif.endif, %.4
  %.191 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.192 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.191, i64 0, i32 4
  %.193 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.192, align 8
  %.194 = tail call %Token.560247* %.193(%Parser.560379* nonnull %.1, i64 26)
  ret void

while.entry.else:                                 ; preds = %while.entry
  %.47 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.47, i64 0, i32 2
  %.49 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.48, align 8
  tail call void %.49(%Parser.560379* nonnull %.1)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry, %while.entry.else
  %.114 = phi i64 [ %.38, %while.entry.else ], [ 2, %while.entry ]
  %.54 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.54, i64 0, i32 3
  %.56 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.55, align 8
  %.57 = tail call %Token.560247* %.56(%Parser.560379* nonnull %.1, i64 1)
  %.58 = getelementptr inbounds %Token.560247, %Token.560247* %.57, i64 0, i32 1
  %.59 = load i64, i64* %.58, align 8
  %.60 = icmp eq i64 %.59, 1
  %.64 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  br i1 %.60, label %while.entry.endif.if, label %while.entry.endif.else

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.65 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.64, i64 0, i32 4
  %.66 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.65, align 8
  %.67 = tail call %Token.560247* %.66(%Parser.560379* nonnull %.1, i64 51)
  %.68 = bitcast %Token.560247* %.67 to %IdentifierToken.560263*
  %.69 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.70 = bitcast i8* %.69 to %FieldNode.560339*
  %.71 = bitcast i8* %.69 to %FieldNode_vtable_ty.560340**
  store %FieldNode_vtable_ty.560340* @FieldNode_vtable_data, %FieldNode_vtable_ty.560340** %.71, align 8
  tail call void @FieldNode_constructor(%FieldNode.560339* %.70, %IdentifierToken.560263* %.68)
  %.77 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.77, i64 0, i32 4
  %.79 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.78, align 8
  %.80 = tail call %Token.560247* %.79(%Parser.560379* nonnull %.1, i64 1)
  %.84 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.85 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.84, i64 0, i32 10
  %.86 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.85, align 8
  %.87 = tail call %TypeNode.560269* %.86(%Parser.560379* nonnull %.1)
  %.88 = getelementptr inbounds i8, i8* %.69, i64 32
  %0 = bitcast i8* %.88 to %TypeNode.560269**
  store %TypeNode.560269* %.87, %TypeNode.560269** %0, align 8
  %.92 = load %Token.560247*, %Token.560247** %.20, align 8
  %.93 = getelementptr inbounds %Token.560247, %Token.560247* %.92, i64 0, i32 1
  %.94 = load i64, i64* %.93, align 8
  %.95 = icmp eq i64 %.94, 36
  br i1 %.95, label %while.entry.endif.if.if, label %while.entry.endif.if.endif

while.entry.endif.else:                           ; preds = %while.entry.endif
  %.130 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.64, i64 0, i32 3
  %.131 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.130, align 8
  %.132 = tail call %Token.560247* %.131(%Parser.560379* nonnull %.1, i64 1)
  %.133 = getelementptr inbounds %Token.560247, %Token.560247* %.132, i64 0, i32 1
  %.134 = load i64, i64* %.133, align 8
  %.135 = icmp eq i64 %.134, 23
  %.139 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  br i1 %.135, label %while.entry.endif.else.if, label %while.entry.endif.else.else

while.entry.endif.endif:                          ; preds = %while.entry.endif.else.if, %while.entry.endif.if.endif
  %.171 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.172 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.171, i64 0, i32 5
  %.173 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.172, align 8
  tail call void %.173(%Parser.560379* nonnull %.1)
  %.177 = load %Token.560247*, %Token.560247** %.20, align 8
  %.178 = getelementptr inbounds %Token.560247, %Token.560247* %.177, i64 0, i32 1
  %.179 = load i64, i64* %.178, align 8
  %.180 = icmp ne i64 %.179, 26
  %.183 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.184 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.183, i64 0, i32 0
  %.185 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.184, align 8
  %.186 = tail call i1 %.185(%Parser.560379* nonnull %.1)
  %.187 = and i1 %.180, %.186
  br i1 %.187, label %while.entry, label %while.exit

while.entry.endif.if.if:                          ; preds = %while.entry.endif.if
  %.99 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.100 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.99, i64 0, i32 2
  %.101 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.100, align 8
  tail call void %.101(%Parser.560379* nonnull %.1)
  %.106 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.107 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.106, i64 0, i32 37
  %.108 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.107, align 8
  %.109 = tail call %ExpressionNode.560285* %.108(%Parser.560379* nonnull %.1)
  %.110 = getelementptr inbounds i8, i8* %.69, i64 24
  %1 = bitcast i8* %.110 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.109, %ExpressionNode.560285** %1, align 8
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif:                       ; preds = %while.entry.endif.if.if, %while.entry.endif.if
  %.115 = getelementptr inbounds i8, i8* %.69, i64 16
  %2 = bitcast i8* %.115 to i64*
  store i64 %.114, i64* %2, align 8
  %.119 = load %"Array<FieldNode>.560346"*, %"Array<FieldNode>.560346"** %.118, align 8
  %.121 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.119, i64 0, i32 0
  %.122 = load %"Array<FieldNode>_vtable_ty.560349"*, %"Array<FieldNode>_vtable_ty.560349"** %.121, align 8
  %.123 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.560349", %"Array<FieldNode>_vtable_ty.560349"* %.122, i64 0, i32 2
  %.124 = load void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)*, void (%"Array<FieldNode>.560346"*, %FieldNode.560339*)** %.123, align 8
  tail call void %.124(%"Array<FieldNode>.560346"* %.119, %FieldNode.560339* %.70)
  br label %while.entry.endif.endif

while.entry.endif.else.if:                        ; preds = %while.entry.endif.else
  %.140 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.139, i64 0, i32 49
  %.141 = load %MethodNode.560337* (%Parser.560379*)*, %MethodNode.560337* (%Parser.560379*)** %.140, align 8
  %.142 = tail call %MethodNode.560337* %.141(%Parser.560379* nonnull %.1)
  %.146 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.142, i64 0, i32 4
  store i64 %.114, i64* %.146, align 8
  %.150 = load %"Array<MethodNode>.560347"*, %"Array<MethodNode>.560347"** %.149, align 8
  %.152 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.150, i64 0, i32 0
  %.153 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.152, align 8
  %.154 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.153, i64 0, i32 2
  %.155 = load void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)*, void (%"Array<MethodNode>.560347"*, %MethodNode.560337*)** %.154, align 8
  tail call void %.155(%"Array<MethodNode>.560347"* %.150, %MethodNode.560337* %.142)
  br label %while.entry.endif.endif

while.entry.endif.else.else:                      ; preds = %while.entry.endif.else
  %.161 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.139, i64 0, i32 1
  %.162 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.161, align 8
  %.163 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.164 = bitcast i8* %.163 to %string.560217*
  %.164.repack = bitcast i8* %.163 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.164.repack, align 8
  %.164.repack1 = getelementptr inbounds i8, i8* %.163, i64 8
  %3 = bitcast i8* %.164.repack1 to i8**
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.160, i64 0, i64 0), i8** %3, align 8
  %.164.repack2 = getelementptr inbounds i8, i8* %.163, i64 16
  %4 = bitcast i8* %.164.repack2 to i64*
  store i64 19, i64* %4, align 8
  %.164.repack3 = getelementptr inbounds i8, i8* %.163, i64 24
  %5 = bitcast i8* %.164.repack3 to i64*
  store i64 19, i64* %5, align 8
  tail call void %.162(%Parser.560379* nonnull %.1, %string.560217* %.164)
  ret void
}

define void @Parser_parse_generic_parameters(%Parser.560379* %.1, %"Array<GenericParameterNode>.560345"* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.9, i64 0, i32 2
  %.11 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.10, align 8
  tail call void %.11(%Parser.560379* %.1)
  %.16 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.16, i64 0, i32 4
  %.18 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.17, align 8
  %.19 = tail call %Token.560247* %.18(%Parser.560379* %.1, i64 51)
  %.20 = bitcast %Token.560247* %.19 to %IdentifierToken.560263*
  %.21 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.22 = bitcast i8* %.21 to %GenericParameterNode.560341*
  %.23 = bitcast i8* %.21 to %GenericParameterNode_vtable_ty.560342**
  store %GenericParameterNode_vtable_ty.560342* @GenericParameterNode_vtable_data, %GenericParameterNode_vtable_ty.560342** %.23, align 8
  tail call void @GenericParameterNode_constructor(%GenericParameterNode.560341* %.22, %IdentifierToken.560263* %.20)
  %.26 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.2, i64 0, i32 0
  %.27 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.27, i64 0, i32 2
  %.29 = load void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)*, void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)** %.28, align 8
  tail call void %.29(%"Array<GenericParameterNode>.560345"* %.2, %GenericParameterNode.560341* %.22)
  %.32 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.33 = load %Token.560247*, %Token.560247** %.32, align 8
  %.34 = getelementptr inbounds %Token.560247, %Token.560247* %.33, i64 0, i32 1
  %.35 = load i64, i64* %.34, align 8
  %.36 = icmp eq i64 %.35, 3
  %.39 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.39, i64 0, i32 0
  %.41 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.40, align 8
  %.42 = tail call i1 %.41(%Parser.560379* %.1)
  %.43 = and i1 %.36, %.42
  br i1 %.43, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.47 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.47, i64 0, i32 2
  %.49 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.48, align 8
  tail call void %.49(%Parser.560379* nonnull %.1)
  %.54 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.54, i64 0, i32 4
  %.56 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.55, align 8
  %.57 = tail call %Token.560247* %.56(%Parser.560379* nonnull %.1, i64 51)
  %.58 = bitcast %Token.560247* %.57 to %IdentifierToken.560263*
  %.59 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.60 = bitcast i8* %.59 to %GenericParameterNode.560341*
  %.61 = bitcast i8* %.59 to %GenericParameterNode_vtable_ty.560342**
  store %GenericParameterNode_vtable_ty.560342* @GenericParameterNode_vtable_data, %GenericParameterNode_vtable_ty.560342** %.61, align 8
  tail call void @GenericParameterNode_constructor(%GenericParameterNode.560341* %.60, %IdentifierToken.560263* %.58)
  %.65 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.26, align 8
  %.66 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)*, void (%"Array<GenericParameterNode>.560345"*, %GenericParameterNode.560341*)** %.66, align 8
  tail call void %.67(%"Array<GenericParameterNode>.560345"* nonnull %.2, %GenericParameterNode.560341* %.60)
  %.71 = load %Token.560247*, %Token.560247** %.32, align 8
  %.72 = getelementptr inbounds %Token.560247, %Token.560247* %.71, i64 0, i32 1
  %.73 = load i64, i64* %.72, align 8
  %.74 = icmp eq i64 %.73, 3
  %.77 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.78, align 8
  %.80 = tail call i1 %.79(%Parser.560379* nonnull %.1)
  %.81 = and i1 %.74, %.80
  br i1 %.81, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %.85 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.8, align 8
  %.86 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.85, i64 0, i32 4
  %.87 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.86, align 8
  %.88 = tail call %Token.560247* %.87(%Parser.560379* nonnull %.1, i64 39)
  ret void
}

define %ClassDeclarationNode.560343* @Parser_parse_class(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 2
  %.9 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.8, align 8
  tail call void %.9(%Parser.560379* %.1)
  %.13 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.13, i64 0, i32 4
  %.15 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.14, align 8
  %.16 = tail call %Token.560247* %.15(%Parser.560379* %.1, i64 51)
  %.17 = bitcast %Token.560247* %.16 to %IdentifierToken.560263*
  %.18 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.19 = bitcast i8* %.18 to %ClassDeclarationNode.560343*
  %.20 = bitcast i8* %.18 to %ClassDeclarationNode_vtable_ty.560344**
  store %ClassDeclarationNode_vtable_ty.560344* @ClassDeclarationNode_vtable_data, %ClassDeclarationNode_vtable_ty.560344** %.20, align 8
  tail call void @ClassDeclarationNode_constructor(%ClassDeclarationNode.560343* %.19, %IdentifierToken.560263* %.17)
  %.25 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.26 = load %Token.560247*, %Token.560247** %.25, align 8
  %.27 = getelementptr inbounds %Token.560247, %Token.560247* %.26, i64 0, i32 1
  %.28 = load i64, i64* %.27, align 8
  %.29 = icmp eq i64 %.28, 40
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.33 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.33, i64 0, i32 52
  %.35 = load void (%Parser.560379*, %"Array<GenericParameterNode>.560345"*)*, void (%Parser.560379*, %"Array<GenericParameterNode>.560345"*)** %.34, align 8
  %.37 = getelementptr inbounds i8, i8* %.18, i64 16
  %0 = bitcast i8* %.37 to %"Array<GenericParameterNode>.560345"**
  %.38 = load %"Array<GenericParameterNode>.560345"*, %"Array<GenericParameterNode>.560345"** %0, align 8
  tail call void %.35(%Parser.560379* nonnull %.1, %"Array<GenericParameterNode>.560345"* %.38)
  %.43.pre = load %Token.560247*, %Token.560247** %.25, align 8
  %.44.phi.trans.insert = getelementptr inbounds %Token.560247, %Token.560247* %.43.pre, i64 0, i32 1
  %.45.pre = load i64, i64* %.44.phi.trans.insert, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.45 = phi i64 [ %.45.pre, %.3.if ], [ %.28, %.3 ]
  %.46 = icmp eq i64 %.45, 23
  br i1 %.46, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.50 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.50, i64 0, i32 2
  %.52 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.51, align 8
  tail call void %.52(%Parser.560379* nonnull %.1)
  %.57 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.58 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.57, i64 0, i32 8
  %.59 = load %RecordTypeNode.560271* (%Parser.560379*)*, %RecordTypeNode.560271* (%Parser.560379*)** %.58, align 8
  %.60 = tail call %RecordTypeNode.560271* %.59(%Parser.560379* nonnull %.1)
  %.61 = getelementptr inbounds i8, i8* %.18, i64 24
  %1 = bitcast i8* %.61 to %RecordTypeNode.560271**
  store %RecordTypeNode.560271* %.60, %RecordTypeNode.560271** %1, align 8
  %.65 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.65, i64 0, i32 4
  %.67 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.66, align 8
  %.68 = tail call %Token.560247* %.67(%Parser.560379* nonnull %.1, i64 24)
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  %.72 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.72, i64 0, i32 5
  %.74 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.73, align 8
  tail call void %.74(%Parser.560379* nonnull %.1)
  %.78 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.79 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.78, i64 0, i32 51
  %.80 = load void (%Parser.560379*, %ClassDeclarationNode.560343*)*, void (%Parser.560379*, %ClassDeclarationNode.560343*)** %.79, align 8
  tail call void %.80(%Parser.560379* nonnull %.1, %ClassDeclarationNode.560343* %.19)
  ret %ClassDeclarationNode.560343* %.19
}

define noalias %ConstDeclarationStatement.560329* @Parser_parse_const_declaration_statement(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.7 = load %Token.560247*, %Token.560247** %.6, align 8
  %.8 = getelementptr inbounds %Token.560247, %Token.560247* %.7, i64 0, i32 2
  %.9 = load %FloRange.560223*, %FloRange.560223** %.8, align 8
  %.10 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %ConstDeclarationStatement.560329*
  %.12 = bitcast i8* %.10 to %ConstDeclarationStatement_vtable_ty.560330**
  store %ConstDeclarationStatement_vtable_ty.560330* @ConstDeclarationStatement_vtable_data, %ConstDeclarationStatement_vtable_ty.560330** %.12, align 8
  tail call void @ConstDeclarationStatement_constructor(%ConstDeclarationStatement.560329* %.11, %FloRange.560223* %.9)
  %.17 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.18, i64 0, i32 2
  %.20 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.19, align 8
  tail call void %.20(%Parser.560379* %.1)
  %.25 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.25, i64 0, i32 4
  %.27 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.26, align 8
  %.28 = tail call %Token.560247* %.27(%Parser.560379* %.1, i64 51)
  %.30 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.30 to %Token.560247**
  store %Token.560247* %.28, %Token.560247** %0, align 8
  %.34 = load %Token.560247*, %Token.560247** %.6, align 8
  %.35 = getelementptr inbounds %Token.560247, %Token.560247* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 1
  br i1 %.37, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.41 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.41, i64 0, i32 2
  %.43 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.42, align 8
  tail call void %.43(%Parser.560379* nonnull %.1)
  %.48 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.48, i64 0, i32 10
  %.50 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.49, align 8
  %.51 = tail call %TypeNode.560269* %.50(%Parser.560379* nonnull %.1)
  %.52 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.52 to %TypeNode.560269**
  store %TypeNode.560269* %.51, %TypeNode.560269** %1, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.57 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.58 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.57, i64 0, i32 4
  %.59 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.58, align 8
  %.60 = tail call %Token.560247* %.59(%Parser.560379* nonnull %.1, i64 36)
  %.64 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.17, align 8
  %.65 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.64, i64 0, i32 37
  %.66 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.65, align 8
  %.67 = tail call %ExpressionNode.560285* %.66(%Parser.560379* nonnull %.1)
  %.68 = getelementptr inbounds i8, i8* %.10, i64 40
  %2 = bitcast i8* %.68 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.67, %ExpressionNode.560285** %2, align 8
  %.72 = getelementptr inbounds i8, i8* %.10, i64 8
  %3 = bitcast i8* %.72 to %FloRange.560223**
  %.73 = load %FloRange.560223*, %FloRange.560223** %3, align 8
  %.77 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.67, i64 0, i32 1
  %.78 = load %FloRange.560223*, %FloRange.560223** %.77, align 8
  %.79 = tail call %FloRange.560223* @FloRange_merge(%FloRange.560223* %.73, %FloRange.560223* %.78)
  store %FloRange.560223* %.79, %FloRange.560223** %3, align 8
  ret %ConstDeclarationStatement.560329* %.11
}

define noalias %ImportNode.560357* @Parser_parse_import(%Parser.560379* %.1) {
.3:
  %.5 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.6 = bitcast i8* %.5 to %ImportNode.560357*
  %.7 = bitcast i8* %.5 to %ImportNode_vtable_ty.560358**
  store %ImportNode_vtable_ty.560358* @ImportNode_vtable_data, %ImportNode_vtable_ty.560358** %.7, align 8
  tail call void @ImportNode_constructor(%ImportNode.560357* %.6)
  %.12 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.13, i64 0, i32 2
  %.15 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.14, align 8
  tail call void %.15(%Parser.560379* %.1)
  %.18 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.19 = load %Token.560247*, %Token.560247** %.18, align 8
  %.20 = getelementptr inbounds %Token.560247, %Token.560247* %.19, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp eq i64 %.21, 51
  br i1 %.22, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %0 = bitcast %Token.560247* %.19 to %IdentifierToken.560263*
  %.25 = getelementptr inbounds i8, i8* %.5, i64 8
  %1 = bitcast i8* %.25 to %"Array<IdentifierToken>.560359"**
  %.26 = load %"Array<IdentifierToken>.560359"*, %"Array<IdentifierToken>.560359"** %1, align 8
  %.31 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.26, i64 0, i32 0
  %.32 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.32, i64 0, i32 2
  %.34 = load void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)*, void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)** %.33, align 8
  tail call void %.34(%"Array<IdentifierToken>.560359"* %.26, %IdentifierToken.560263* %0)
  %.38 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.38, i64 0, i32 2
  %.40 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.39, align 8
  tail call void %.40(%Parser.560379* nonnull %.1)
  %.44 = load %Token.560247*, %Token.560247** %.18, align 8
  %.45 = getelementptr inbounds %Token.560247, %Token.560247* %.44, i64 0, i32 1
  %.46 = load i64, i64* %.45, align 8
  %.47 = icmp eq i64 %.46, 3
  %.50 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.50, i64 0, i32 0
  %.52 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.51, align 8
  %.53 = tail call i1 %.52(%Parser.560379* nonnull %.1)
  %.54 = and i1 %.47, %.53
  br i1 %.54, label %while.entry, label %while.exit

.3.endif:                                         ; preds = %while.exit, %.3
  %.101 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.102 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.101, i64 0, i32 4
  %.103 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.102, align 8
  %.104 = tail call %Token.560247* %.103(%Parser.560379* nonnull %.1, i64 32)
  %.106 = getelementptr inbounds i8, i8* %.5, i64 16
  %2 = bitcast i8* %.106 to %Token.560247**
  store %Token.560247* %.104, %Token.560247** %2, align 8
  ret %ImportNode.560357* %.6

while.entry:                                      ; preds = %.3.if, %while.entry
  %.58 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.59 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.58, i64 0, i32 2
  %.60 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.59, align 8
  tail call void %.60(%Parser.560379* nonnull %.1)
  %.67 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.68 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.67, i64 0, i32 4
  %.69 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.68, align 8
  %.70 = tail call %Token.560247* %.69(%Parser.560379* nonnull %.1, i64 51)
  %.71 = bitcast %Token.560247* %.70 to %IdentifierToken.560263*
  %.73 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.31, align 8
  %.74 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.73, i64 0, i32 2
  %.75 = load void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)*, void (%"Array<IdentifierToken>.560359"*, %IdentifierToken.560263*)** %.74, align 8
  tail call void %.75(%"Array<IdentifierToken>.560359"* %.26, %IdentifierToken.560263* %.71)
  %.79 = load %Token.560247*, %Token.560247** %.18, align 8
  %.80 = getelementptr inbounds %Token.560247, %Token.560247* %.79, i64 0, i32 1
  %.81 = load i64, i64* %.80, align 8
  %.82 = icmp eq i64 %.81, 3
  %.85 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.86 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.85, i64 0, i32 0
  %.87 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.86, align 8
  %.88 = tail call i1 %.87(%Parser.560379* nonnull %.1)
  %.89 = and i1 %.82, %.88
  br i1 %.89, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3.if
  %.93 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.12, align 8
  %.94 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.93, i64 0, i32 4
  %.95 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.94, align 8
  %.96 = tail call %Token.560247* %.95(%Parser.560379* nonnull %.1, i64 82)
  br label %.3.endif
}

define noalias %EnumNode.560353* @Parser_parse_enum(%Parser.560379* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.7, i64 0, i32 2
  %.9 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.8, align 8
  tail call void %.9(%Parser.560379* %.1)
  %.13 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.13, i64 0, i32 4
  %.15 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.14, align 8
  %.16 = tail call %Token.560247* %.15(%Parser.560379* %.1, i64 51)
  %.17 = bitcast %Token.560247* %.16 to %IdentifierToken.560263*
  %.18 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.19 = bitcast i8* %.18 to %EnumNode.560353*
  %.20 = bitcast i8* %.18 to %EnumNode_vtable_ty.560354**
  store %EnumNode_vtable_ty.560354* @EnumNode_vtable_data, %EnumNode_vtable_ty.560354** %.20, align 8
  tail call void @EnumNode_constructor(%EnumNode.560353* %.19, %IdentifierToken.560263* %.17)
  %.25 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.26 = load %Token.560247*, %Token.560247** %.25, align 8
  %.27 = getelementptr inbounds %Token.560247, %Token.560247* %.26, i64 0, i32 1
  %.28 = load i64, i64* %.27, align 8
  %.29 = icmp eq i64 %.28, 23
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.33 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.33, i64 0, i32 2
  %.35 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.34, align 8
  tail call void %.35(%Parser.560379* nonnull %.1)
  %.40 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.41 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.40, i64 0, i32 10
  %.42 = load %TypeNode.560269* (%Parser.560379*)*, %TypeNode.560269* (%Parser.560379*)** %.41, align 8
  %.43 = tail call %TypeNode.560269* %.42(%Parser.560379* nonnull %.1)
  %.44 = getelementptr inbounds i8, i8* %.18, i64 24
  %0 = bitcast i8* %.44 to %TypeNode.560269**
  store %TypeNode.560269* %.43, %TypeNode.560269** %0, align 8
  %.48 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.48, i64 0, i32 4
  %.50 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.49, align 8
  %.51 = tail call %Token.560247* %.50(%Parser.560379* nonnull %.1, i64 24)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.55 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.56 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.55, i64 0, i32 5
  %.57 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.56, align 8
  tail call void %.57(%Parser.560379* nonnull %.1)
  %.61 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.61, i64 0, i32 4
  %.63 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.62, align 8
  %.64 = tail call %Token.560247* %.63(%Parser.560379* nonnull %.1, i64 25)
  %.67 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.68 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.67, i64 0, i32 5
  %.69 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.68, align 8
  tail call void %.69(%Parser.560379* nonnull %.1)
  %.73 = load %Token.560247*, %Token.560247** %.25, align 8
  %.74 = getelementptr inbounds %Token.560247, %Token.560247* %.73, i64 0, i32 1
  %.75 = load i64, i64* %.74, align 8
  %.76 = icmp eq i64 %.75, 51
  br i1 %.76, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3.endif
  %.115 = getelementptr inbounds i8, i8* %.18, i64 16
  %1 = bitcast i8* %.115 to %"Array<EnumNodeField>.560355"**
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.80 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.81 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.80, i64 0, i32 4
  %.82 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.81, align 8
  %.83 = tail call %Token.560247* %.82(%Parser.560379* nonnull %.1, i64 51)
  %.84 = bitcast %Token.560247* %.83 to %IdentifierToken.560263*
  %.85 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.86 = bitcast i8* %.85 to %EnumNodeField.560351*
  %.87 = bitcast i8* %.85 to %EnumNodeField_vtable_ty.560352**
  store %EnumNodeField_vtable_ty.560352* @EnumNodeField_vtable_data, %EnumNodeField_vtable_ty.560352** %.87, align 8
  tail call void @EnumNodeField_constructor(%EnumNodeField.560351* %.86, %IdentifierToken.560263* %.84)
  %.93 = load %Token.560247*, %Token.560247** %.25, align 8
  %.94 = getelementptr inbounds %Token.560247, %Token.560247* %.93, i64 0, i32 1
  %.95 = load i64, i64* %.94, align 8
  %.96 = icmp eq i64 %.95, 36
  br i1 %.96, label %while.entry.if, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.endif, %.3.endif
  %.138 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.139 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.138, i64 0, i32 4
  %.140 = load %Token.560247* (%Parser.560379*, i64)*, %Token.560247* (%Parser.560379*, i64)** %.139, align 8
  %.141 = tail call %Token.560247* %.140(%Parser.560379* nonnull %.1, i64 26)
  ret %EnumNode.560353* %.19

while.entry.if:                                   ; preds = %while.entry
  %.100 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.101 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.100, i64 0, i32 2
  %.102 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.101, align 8
  tail call void %.102(%Parser.560379* nonnull %.1)
  %.107 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.108 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.107, i64 0, i32 37
  %.109 = load %ExpressionNode.560285* (%Parser.560379*)*, %ExpressionNode.560285* (%Parser.560379*)** %.108, align 8
  %.110 = tail call %ExpressionNode.560285* %.109(%Parser.560379* nonnull %.1)
  %.111 = getelementptr inbounds i8, i8* %.85, i64 16
  %2 = bitcast i8* %.111 to %ExpressionNode.560285**
  store %ExpressionNode.560285* %.110, %ExpressionNode.560285** %2, align 8
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if, %while.entry
  %.116 = load %"Array<EnumNodeField>.560355"*, %"Array<EnumNodeField>.560355"** %1, align 8
  %.118 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.116, i64 0, i32 0
  %.119 = load %"Array<EnumNodeField>_vtable_ty.560356"*, %"Array<EnumNodeField>_vtable_ty.560356"** %.118, align 8
  %.120 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.560356", %"Array<EnumNodeField>_vtable_ty.560356"* %.119, i64 0, i32 2
  %.121 = load void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)*, void (%"Array<EnumNodeField>.560355"*, %EnumNodeField.560351*)** %.120, align 8
  tail call void %.121(%"Array<EnumNodeField>.560355"* %.116, %EnumNodeField.560351* %.86)
  %.125 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.6, align 8
  %.126 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.125, i64 0, i32 5
  %.127 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.126, align 8
  tail call void %.127(%Parser.560379* nonnull %.1)
  %.131 = load %Token.560247*, %Token.560247** %.25, align 8
  %.132 = getelementptr inbounds %Token.560247, %Token.560247* %.131, i64 0, i32 1
  %.133 = load i64, i64* %.132, align 8
  %.134 = icmp eq i64 %.133, 51
  br i1 %.134, label %while.entry, label %while.exit
}

define noalias %ModuleAST.560363* @Parser_parse(%Parser.560379* %.1, %"Array<Token>.560259"* %.2, %"Array<FloError>.560238"* %.3) {
.5:
  %.11 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 1
  store %"Array<Token>.560259"* %.2, %"Array<Token>.560259"** %.11, align 8
  %.15 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 2
  store %"Array<FloError>.560238"* %.3, %"Array<FloError>.560238"** %.15, align 8
  %.18 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 0
  %.19 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.19, i64 0, i32 2
  %.21 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.20, align 8
  tail call void %.21(%Parser.560379* %.1)
  %.23 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.24 = bitcast i8* %.23 to %ModuleAST.560363*
  %.25 = bitcast i8* %.23 to %ModuleAST_vtable_ty.560364**
  store %ModuleAST_vtable_ty.560364* @ModuleAST_vtable_data, %ModuleAST_vtable_ty.560364** %.25, align 8
  tail call void @ModuleAST_constructor(%ModuleAST.560363* %.24)
  %.31 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.31, i64 0, i32 5
  %.33 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.32, align 8
  tail call void %.33(%Parser.560379* %.1)
  %.37 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.37, i64 0, i32 0
  %.39 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.38, align 8
  %.40 = tail call i1 %.39(%Parser.560379* %.1)
  br i1 %.40, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.5
  %.43 = getelementptr inbounds %Parser.560379, %Parser.560379* %.1, i64 0, i32 3
  %.166 = getelementptr inbounds i8, i8* %.23, i64 48
  %0 = bitcast i8* %.166 to %"Array<VarDeclarationStatement>.560370"**
  %.144 = getelementptr inbounds i8, i8* %.23, i64 40
  %1 = bitcast i8* %.144 to %"Array<ConstDeclarationStatement>.560369"**
  %.122 = getelementptr inbounds i8, i8* %.23, i64 32
  %2 = bitcast i8* %.122 to %"Array<ImportNode>.560368"**
  %.100 = getelementptr inbounds i8, i8* %.23, i64 24
  %3 = bitcast i8* %.100 to %"Array<EnumNode>.560367"**
  %.78 = getelementptr inbounds i8, i8* %.23, i64 16
  %4 = bitcast i8* %.78 to %"Array<ClassDeclarationNode>.560366"**
  %.56 = getelementptr inbounds i8, i8* %.23, i64 8
  %5 = bitcast i8* %.56 to %"Array<FunctionDeclarationNode>.560365"**
  %.203 = getelementptr inbounds i8, i8* %.23, i64 56
  %6 = bitcast i8* %.203 to %"Array<TypeAliasNode>.560371"**
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.44 = load %Token.560247*, %Token.560247** %.43, align 8
  %.45 = getelementptr inbounds %Token.560247, %Token.560247* %.44, i64 0, i32 1
  %.46 = load i64, i64* %.45, align 8
  switch i64 %.46, label %while.entry.else.else.else.else.else.else [
    i64 74, label %while.entry.if
    i64 83, label %while.entry.else.if
    i64 84, label %while.entry.else.else.if
    i64 78, label %while.entry.else.else.else.if
    i64 55, label %while.entry.else.else.else.else.if
    i64 56, label %while.entry.else.else.else.else.else.if
  ]

while.exit:                                       ; preds = %while.entry.endif, %.5
  ret %ModuleAST.560363* %.24

while.entry.if:                                   ; preds = %while.entry
  %.51 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.51, i64 0, i32 2
  %.53 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.52, align 8
  tail call void %.53(%Parser.560379* nonnull %.1)
  %.57 = load %"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"** %5, align 8
  %.60 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.60, i64 0, i32 48
  %.62 = load %FunctionDeclarationNode.560333* (%Parser.560379*)*, %FunctionDeclarationNode.560333* (%Parser.560379*)** %.61, align 8
  %.63 = tail call %FunctionDeclarationNode.560333* %.62(%Parser.560379* nonnull %.1)
  %.64 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.57, i64 0, i32 0
  %.65 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.64, align 8
  %.66 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)*, void (%"Array<FunctionDeclarationNode>.560365"*, %FunctionDeclarationNode.560333*)** %.66, align 8
  tail call void %.67(%"Array<FunctionDeclarationNode>.560365"* %.57, %FunctionDeclarationNode.560333* %.63)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else.else.else.else.else.else.if, %while.entry.else.else.else.else.else.else.else, %while.entry.else.else.else.else.else.if, %while.entry.else.else.else.else.if, %while.entry.else.else.else.if, %while.entry.else.else.if, %while.entry.else.if, %while.entry.if
  %.235 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.236 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.235, i64 0, i32 5
  %.237 = load void (%Parser.560379*)*, void (%Parser.560379*)** %.236, align 8
  tail call void %.237(%Parser.560379* nonnull %.1)
  %.241 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.242 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.241, i64 0, i32 0
  %.243 = load i1 (%Parser.560379*)*, i1 (%Parser.560379*)** %.242, align 8
  %.244 = tail call i1 %.243(%Parser.560379* nonnull %.1)
  br i1 %.244, label %while.entry, label %while.exit

while.entry.else.if:                              ; preds = %while.entry
  %.79 = load %"Array<ClassDeclarationNode>.560366"*, %"Array<ClassDeclarationNode>.560366"** %4, align 8
  %.82 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.83 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.82, i64 0, i32 53
  %.84 = load %ClassDeclarationNode.560343* (%Parser.560379*)*, %ClassDeclarationNode.560343* (%Parser.560379*)** %.83, align 8
  %.85 = tail call %ClassDeclarationNode.560343* %.84(%Parser.560379* nonnull %.1)
  %.86 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.79, i64 0, i32 0
  %.87 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.86, align 8
  %.88 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.87, i64 0, i32 2
  %.89 = load void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)*, void (%"Array<ClassDeclarationNode>.560366"*, %ClassDeclarationNode.560343*)** %.88, align 8
  tail call void %.89(%"Array<ClassDeclarationNode>.560366"* %.79, %ClassDeclarationNode.560343* %.85)
  br label %while.entry.endif

while.entry.else.else.if:                         ; preds = %while.entry
  %.101 = load %"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"** %3, align 8
  %.104 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.105 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.104, i64 0, i32 56
  %.106 = load %EnumNode.560353* (%Parser.560379*)*, %EnumNode.560353* (%Parser.560379*)** %.105, align 8
  %.107 = tail call %EnumNode.560353* %.106(%Parser.560379* nonnull %.1)
  %.108 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.101, i64 0, i32 0
  %.109 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.108, align 8
  %.110 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.109, i64 0, i32 2
  %.111 = load void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)*, void (%"Array<EnumNode>.560367"*, %EnumNode.560353*)** %.110, align 8
  tail call void %.111(%"Array<EnumNode>.560367"* %.101, %EnumNode.560353* %.107)
  br label %while.entry.endif

while.entry.else.else.else.if:                    ; preds = %while.entry
  %.123 = load %"Array<ImportNode>.560368"*, %"Array<ImportNode>.560368"** %2, align 8
  %.126 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.127 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.126, i64 0, i32 55
  %.128 = load %ImportNode.560357* (%Parser.560379*)*, %ImportNode.560357* (%Parser.560379*)** %.127, align 8
  %.129 = tail call %ImportNode.560357* %.128(%Parser.560379* nonnull %.1)
  %.130 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.123, i64 0, i32 0
  %.131 = load %"Array<ImportNode>_vtable_ty.560375"*, %"Array<ImportNode>_vtable_ty.560375"** %.130, align 8
  %.132 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.560375", %"Array<ImportNode>_vtable_ty.560375"* %.131, i64 0, i32 2
  %.133 = load void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)*, void (%"Array<ImportNode>.560368"*, %ImportNode.560357*)** %.132, align 8
  tail call void %.133(%"Array<ImportNode>.560368"* %.123, %ImportNode.560357* %.129)
  br label %while.entry.endif

while.entry.else.else.else.else.if:               ; preds = %while.entry
  %.145 = load %"Array<ConstDeclarationStatement>.560369"*, %"Array<ConstDeclarationStatement>.560369"** %1, align 8
  %.148 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.149 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.148, i64 0, i32 54
  %.150 = load %ConstDeclarationStatement.560329* (%Parser.560379*)*, %ConstDeclarationStatement.560329* (%Parser.560379*)** %.149, align 8
  %.151 = tail call %ConstDeclarationStatement.560329* %.150(%Parser.560379* nonnull %.1)
  %.152 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.145, i64 0, i32 0
  %.153 = load %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.152, align 8
  %.154 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.560376", %"Array<ConstDeclarationStatement>_vtable_ty.560376"* %.153, i64 0, i32 2
  %.155 = load void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)*, void (%"Array<ConstDeclarationStatement>.560369"*, %ConstDeclarationStatement.560329*)** %.154, align 8
  tail call void %.155(%"Array<ConstDeclarationStatement>.560369"* %.145, %ConstDeclarationStatement.560329* %.151)
  br label %while.entry.endif

while.entry.else.else.else.else.else.if:          ; preds = %while.entry
  %.167 = load %"Array<VarDeclarationStatement>.560370"*, %"Array<VarDeclarationStatement>.560370"** %0, align 8
  %.170 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.171 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.170, i64 0, i32 41
  %.172 = load %VarDeclarationStatement.560327* (%Parser.560379*)*, %VarDeclarationStatement.560327* (%Parser.560379*)** %.171, align 8
  %.173 = tail call %VarDeclarationStatement.560327* %.172(%Parser.560379* nonnull %.1)
  %.174 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.167, i64 0, i32 0
  %.175 = load %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.174, align 8
  %.176 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.560377", %"Array<VarDeclarationStatement>_vtable_ty.560377"* %.175, i64 0, i32 2
  %.177 = load void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)*, void (%"Array<VarDeclarationStatement>.560370"*, %VarDeclarationStatement.560327*)** %.176, align 8
  tail call void %.177(%"Array<VarDeclarationStatement>.560370"* %.167, %VarDeclarationStatement.560327* %.173)
  br label %while.entry.endif

while.entry.else.else.else.else.else.else:        ; preds = %while.entry
  %.185 = icmp eq i64 %.46, 51
  %.190 = getelementptr inbounds %Token.560247, %Token.560247* %.44, i64 1
  %7 = bitcast %Token.560247* %.190 to %string.560217**
  %.191 = load %string.560217*, %string.560217** %7, align 8
  %.192 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.193 = bitcast i8* %.192 to %string.560217*
  %.193.repack = bitcast i8* %.192 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.193.repack, align 8
  %.193.repack2 = getelementptr inbounds i8, i8* %.192, i64 8
  %8 = bitcast i8* %.193.repack2 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.161, i64 0, i64 0), i8** %8, align 8
  %.193.repack3 = getelementptr inbounds i8, i8* %.192, i64 16
  %9 = bitcast i8* %.193.repack3 to i64*
  store i64 4, i64* %9, align 8
  %.193.repack4 = getelementptr inbounds i8, i8* %.192, i64 24
  %10 = bitcast i8* %.193.repack4 to i64*
  store i64 4, i64* %10, align 8
  %.195 = getelementptr inbounds %string.560217, %string.560217* %.191, i64 0, i32 0
  %.196 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.195, align 8
  %.197 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.196, i64 0, i32 4
  %.198 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.197, align 8
  %.199 = tail call i1 %.198(%string.560217* %.191, %string.560217* %.193)
  %.200 = and i1 %.185, %.199
  br i1 %.200, label %while.entry.else.else.else.else.else.else.if, label %while.entry.else.else.else.else.else.else.else

while.entry.else.else.else.else.else.else.if:     ; preds = %while.entry.else.else.else.else.else.else
  %.204 = load %"Array<TypeAliasNode>.560371"*, %"Array<TypeAliasNode>.560371"** %6, align 8
  %.207 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.208 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.207, i64 0, i32 45
  %.209 = load %TypeAliasNode.560361* (%Parser.560379*)*, %TypeAliasNode.560361* (%Parser.560379*)** %.208, align 8
  %.210 = tail call %TypeAliasNode.560361* %.209(%Parser.560379* nonnull %.1)
  %.211 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.204, i64 0, i32 0
  %.212 = load %"Array<TypeAliasNode>_vtable_ty.560378"*, %"Array<TypeAliasNode>_vtable_ty.560378"** %.211, align 8
  %.213 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.560378", %"Array<TypeAliasNode>_vtable_ty.560378"* %.212, i64 0, i32 2
  %.214 = load void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)*, void (%"Array<TypeAliasNode>.560371"*, %TypeAliasNode.560361*)** %.213, align 8
  tail call void %.214(%"Array<TypeAliasNode>.560371"* %.204, %TypeAliasNode.560361* %.210)
  br label %while.entry.endif

while.entry.else.else.else.else.else.else.else:   ; preds = %while.entry.else.else.else.else.else.else
  %.219 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.18, align 8
  %.220 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.219, i64 0, i32 1
  %.221 = load void (%Parser.560379*, %string.560217*)*, void (%Parser.560379*, %string.560217*)** %.220, align 8
  %.222 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.223 = bitcast i8* %.222 to %string.560217*
  %.223.repack = bitcast i8* %.222 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.223.repack, align 8
  %.223.repack5 = getelementptr inbounds i8, i8* %.222, i64 8
  %11 = bitcast i8* %.223.repack5 to i8**
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @str.162, i64 0, i64 0), i8** %11, align 8
  %.223.repack6 = getelementptr inbounds i8, i8* %.222, i64 16
  %12 = bitcast i8* %.223.repack6 to i64*
  store i64 79, i64* %12, align 8
  %.223.repack7 = getelementptr inbounds i8, i8* %.222, i64 24
  %13 = bitcast i8* %.223.repack7 to i64*
  store i64 79, i64* %13, align 8
  tail call void %.221(%Parser.560379* nonnull %.1, %string.560217* %.223)
  br label %while.entry.endif
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Type_constructor(%Type.560381* nocapture %.1, i64 %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %Type.560381* @Type_unknown() local_unnamed_addr #4 {
.2:
  %.3 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.4 = bitcast i8* %.3 to %Type.560381*
  %.5 = bitcast i8* %.3 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.5, align 8
  tail call void @Type_constructor(%Type.560381* %.4, i64 21)
  ret %Type.560381* %.4
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @BooleanType_constructor(%BooleanType.560383* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = bitcast %BooleanType.560383* %.1 to %Type.560381*
  tail call void @Type_constructor(%Type.560381* %.6, i64 0)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PointerType_constructor(%PointerType.560385* nocapture %.1, %Type.560381* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %PointerType.560385* %.1 to %Type.560381*
  tail call void @Type_constructor(%Type.560381* %.8, i64 15)
  %.12 = getelementptr inbounds %PointerType.560385, %PointerType.560385* %.1, i64 0, i32 2
  store %Type.560381* %.2, %Type.560381** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Type>_constructor"(%"Array<Type>.560389"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 1
  %0 = bitcast %Type.560381*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Type>_resize"(%"Array<Type>.560389"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 1
  %0 = bitcast %Type.560381*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Type>_swap"(%"Array<Type>.560389"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 1
  %.48 = load %Type.560381**, %Type.560381*** %.47, align 8
  %.49 = getelementptr inbounds %Type.560381*, %Type.560381** %.48, i64 %.2
  %4 = bitcast %Type.560381** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Type.560381*, %Type.560381** %.48, i64 %.3
  %5 = bitcast %Type.560381** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Type.560381**, %Type.560381*** %.47, align 8
  %.69 = getelementptr inbounds %Type.560381*, %Type.560381** %.67, i64 %.3
  %6 = bitcast %Type.560381** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Type>___sl__"(%"Array<Type>.560389"* %.1, %Type.560381* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 0
  %.17 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Type>.560389"*)*, void (%"Array<Type>.560389"*)** %.18, align 8
  tail call void %.19(%"Array<Type>.560389"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 1
  %.31 = load %Type.560381**, %Type.560381*** %.30, align 8
  %.33 = getelementptr inbounds %Type.560381*, %Type.560381** %.31, i64 %.24
  store %Type.560381* %.2, %Type.560381** %.33, align 8
  ret void
}

define void @"Array<Type>___setitem__"(%"Array<Type>.560389"* nocapture readonly %.1, i64 %.2, %Type.560381* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 1
  %.30 = load %Type.560381**, %Type.560381*** %.29, align 8
  %.32 = getelementptr inbounds %Type.560381*, %Type.560381** %.30, i64 %.2
  store %Type.560381* %.3, %Type.560381** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Type>_append"(%"Array<Type>.560389"* %.1, %Type.560381* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 0
  %.9 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.10, align 8
  tail call void %.11(%"Array<Type>.560389"* %.1, %Type.560381* %.2)
  ret void
}

define %Type.560381* @"Array<Type>___getitem__"(%"Array<Type>.560389"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 1
  %.28 = load %Type.560381**, %Type.560381*** %.27, align 8
  %.29 = getelementptr inbounds %Type.560381*, %Type.560381** %.28, i64 %.2
  %.30 = load %Type.560381*, %Type.560381** %.29, align 8
  ret %Type.560381* %.30

.4.endif:                                         ; preds = %.4
  ret %Type.560381* null
}

define i1 @"Array<Type>___eq__"(%"Array<Type>.560389"* %.1, %"Array<Type>.560389"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.28, i64 0, i32 5
  %.30 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.29, align 8
  %.31 = tail call %Type.560381* %.30(%"Array<Type>.560389"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.35, i64 0, i32 5
  %.37 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.36, align 8
  %.38 = tail call %Type.560381* %.37(%"Array<Type>.560389"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Type.560381* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Type.560381* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Type>___in__"(%"Array<Type>.560389"* %.1, %Type.560381* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Type.560381* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.19, i64 0, i32 5
  %.21 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.20, align 8
  %.22 = tail call %Type.560381* %.21(%"Array<Type>.560389"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Type.560381* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Type>_find"(%"Array<Type>.560389"* nocapture readonly %.1, %Type.560381* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1, i64 0, i32 1
  %.19 = load %Type.560381**, %Type.560381*** %.18, align 8
  %0 = ptrtoint %Type.560381* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Type.560381*, %Type.560381** %.19, i64 %storemerge5
  %1 = bitcast %Type.560381** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FunctionType_constructor(%FunctionType.560387* nocapture %.1, %"Array<Type>.560389"* %.2, %Type.560381* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %FunctionType.560387* %.1 to %Type.560381*
  tail call void @Type_constructor(%Type.560381* %.10, i64 17)
  %.14 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.1, i64 0, i32 2
  store %"Array<Type>.560389"* %.2, %"Array<Type>.560389"** %.14, align 8
  %.18 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.1, i64 0, i32 3
  store %Type.560381* %.3, %Type.560381** %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Statement_constructor(%Statement.560393* nocapture %.1, i64 %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %Statement.560393, %Statement.560393* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @TypeId_constructor(%TypeId.560395* nocapture %.1, i64 %.2, i64 %.3, i64 %.4) local_unnamed_addr #2 {
.6:
  %.13 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1, i64 0, i32 2
  store i64 %.3, i64* %.17, align 8
  %.21 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ClassId_constructor(%ClassId.560397* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %ClassId.560397* %.1 to %TypeId.560395*
  tail call void @TypeId_constructor(%TypeId.560395* %.10, i64 %.2, i64 0, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumId_constructor(%EnumId.560399* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %EnumId.560399* %.1 to %TypeId.560395*
  tail call void @TypeId_constructor(%TypeId.560395* %.10, i64 %.2, i64 1, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Expression_constructor(%Expression.560401* nocapture %.1, i64 %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %Expression.560401* %.1 to %Statement.560393*
  tail call void @Statement_constructor(%Statement.560393* %.8, i64 8)
  %.12 = getelementptr inbounds %Expression.560401, %Expression.560401* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.15 = getelementptr inbounds %Expression.560401, %Expression.560401* %.1, i64 0, i32 2
  store i1 false, i1* %.15, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ArrayType_constructor(%ArrayType.560403* nocapture %.1, %Type.560381* %.2, i64 %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %ArrayType.560403* %.1 to %Type.560381*
  tail call void @Type_constructor(%Type.560381* %.10, i64 16)
  %.14 = getelementptr inbounds %ArrayType.560403, %ArrayType.560403* %.1, i64 0, i32 2
  store %Type.560381* %.2, %Type.560381** %.14, align 8
  %.18 = getelementptr inbounds %ArrayType.560403, %ArrayType.560403* %.1, i64 0, i32 3
  store i64 %.3, i64* %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @GenericType_constructor(%GenericType.560405* nocapture %.1, %string.560217* %.2, %"Array<Type>.560389"* %.3, %Type.560381* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %GenericType.560405* %.1 to %Type.560381*
  tail call void @Type_constructor(%Type.560381* %.12, i64 20)
  %.16 = getelementptr inbounds %GenericType.560405, %GenericType.560405* %.1, i64 0, i32 2
  store %string.560217* %.2, %string.560217** %.16, align 8
  %.20 = getelementptr inbounds %GenericType.560405, %GenericType.560405* %.1, i64 0, i32 3
  store %"Array<Type>.560389"* %.3, %"Array<Type>.560389"** %.20, align 8
  %.24 = getelementptr inbounds %GenericType.560405, %GenericType.560405* %.1, i64 0, i32 4
  store %Type.560381* %.4, %Type.560381** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ObjectType_constructor(%ObjectType.560407* nocapture %.1, %ClassId.560397* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %ObjectType.560407* %.1 to %Type.560381*
  tail call void @Type_constructor(%Type.560381* %.8, i64 13)
  %.12 = getelementptr inbounds %ObjectType.560407, %ObjectType.560407* %.1, i64 0, i32 2
  store %ClassId.560397* %.2, %ClassId.560397** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumType_constructor(%EnumType.560409* nocapture %.1, %EnumId.560399* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %EnumType.560409* %.1 to %Type.560381*
  tail call void @Type_constructor(%Type.560381* %.8, i64 14)
  %.12 = getelementptr inbounds %EnumType.560409, %EnumType.560409* %.1, i64 0, i32 2
  store %EnumId.560399* %.2, %EnumId.560399** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @IntExpression_constructor(%IntExpression.560411* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = bitcast %IntExpression.560411* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.8, i64 0)
  %.11 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %Type.560381*
  %.13 = bitcast i8* %.11 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.13, align 8
  tail call void @Type_constructor(%Type.560381* %.12, i64 7)
  %.16 = getelementptr inbounds %IntExpression.560411, %IntExpression.560411* %.1, i64 0, i32 4
  %0 = bitcast %Type.560381** %.16 to i8**
  store i8* %.11, i8** %0, align 8
  %.20 = getelementptr inbounds %IntExpression.560411, %IntExpression.560411* %.1, i64 0, i32 5
  store i64 %.2, i64* %.20, align 8
  %.23 = getelementptr inbounds %IntExpression.560411, %IntExpression.560411* %.1, i64 0, i32 2
  store i1 true, i1* %.23, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @BooleanExpression_constructor(%BooleanExpression.560413* nocapture %.1, i1 %.2) local_unnamed_addr #4 {
.4:
  %.8 = bitcast %BooleanExpression.560413* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.8, i64 4)
  %.10 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.11 = bitcast i8* %.10 to %BooleanType.560383*
  %.12 = bitcast i8* %.10 to %BooleanType_vtable_ty.560384**
  store %BooleanType_vtable_ty.560384* @BooleanType_vtable_data, %BooleanType_vtable_ty.560384** %.12, align 8
  tail call void @BooleanType_constructor(%BooleanType.560383* %.11)
  %.19 = getelementptr inbounds %BooleanExpression.560413, %BooleanExpression.560413* %.1, i64 0, i32 4
  %0 = bitcast %Type.560381** %.19 to i8**
  store i8* %.10, i8** %0, align 8
  %.23 = getelementptr inbounds %BooleanExpression.560413, %BooleanExpression.560413* %.1, i64 0, i32 5
  store i1 %.2, i1* %.23, align 1
  %.26 = getelementptr inbounds %BooleanExpression.560413, %BooleanExpression.560413* %.1, i64 0, i32 2
  store i1 true, i1* %.26, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @FloatExpression_constructor(%FloatExpression.560415* nocapture %.1, double %.2) local_unnamed_addr #4 {
.4:
  %.8 = bitcast %FloatExpression.560415* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.8, i64 1)
  %.11 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %Type.560381*
  %.13 = bitcast i8* %.11 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.13, align 8
  tail call void @Type_constructor(%Type.560381* %.12, i64 11)
  %.16 = getelementptr inbounds %FloatExpression.560415, %FloatExpression.560415* %.1, i64 0, i32 4
  %0 = bitcast %Type.560381** %.16 to i8**
  store i8* %.11, i8** %0, align 8
  %.20 = getelementptr inbounds %FloatExpression.560415, %FloatExpression.560415* %.1, i64 0, i32 5
  store double %.2, double* %.20, align 8
  %.23 = getelementptr inbounds %FloatExpression.560415, %FloatExpression.560415* %.1, i64 0, i32 2
  store i1 true, i1* %.23, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Expression>_constructor"(%"Array<Expression>.560419"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 1
  %0 = bitcast %Expression.560401*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Expression>_resize"(%"Array<Expression>.560419"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 1
  %0 = bitcast %Expression.560401*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Expression>_swap"(%"Array<Expression>.560419"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 1
  %.48 = load %Expression.560401**, %Expression.560401*** %.47, align 8
  %.49 = getelementptr inbounds %Expression.560401*, %Expression.560401** %.48, i64 %.2
  %4 = bitcast %Expression.560401** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Expression.560401*, %Expression.560401** %.48, i64 %.3
  %5 = bitcast %Expression.560401** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Expression.560401**, %Expression.560401*** %.47, align 8
  %.69 = getelementptr inbounds %Expression.560401*, %Expression.560401** %.67, i64 %.3
  %6 = bitcast %Expression.560401** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Expression>___sl__"(%"Array<Expression>.560419"* %.1, %Expression.560401* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 0
  %.17 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Expression>.560419"*)*, void (%"Array<Expression>.560419"*)** %.18, align 8
  tail call void %.19(%"Array<Expression>.560419"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 1
  %.31 = load %Expression.560401**, %Expression.560401*** %.30, align 8
  %.33 = getelementptr inbounds %Expression.560401*, %Expression.560401** %.31, i64 %.24
  store %Expression.560401* %.2, %Expression.560401** %.33, align 8
  ret void
}

define void @"Array<Expression>___setitem__"(%"Array<Expression>.560419"* nocapture readonly %.1, i64 %.2, %Expression.560401* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 1
  %.30 = load %Expression.560401**, %Expression.560401*** %.29, align 8
  %.32 = getelementptr inbounds %Expression.560401*, %Expression.560401** %.30, i64 %.2
  store %Expression.560401* %.3, %Expression.560401** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Expression>_append"(%"Array<Expression>.560419"* %.1, %Expression.560401* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 0
  %.9 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.10, align 8
  tail call void %.11(%"Array<Expression>.560419"* %.1, %Expression.560401* %.2)
  ret void
}

define %Expression.560401* @"Array<Expression>___getitem__"(%"Array<Expression>.560419"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 1
  %.28 = load %Expression.560401**, %Expression.560401*** %.27, align 8
  %.29 = getelementptr inbounds %Expression.560401*, %Expression.560401** %.28, i64 %.2
  %.30 = load %Expression.560401*, %Expression.560401** %.29, align 8
  ret %Expression.560401* %.30

.4.endif:                                         ; preds = %.4
  ret %Expression.560401* null
}

define i1 @"Array<Expression>___eq__"(%"Array<Expression>.560419"* %.1, %"Array<Expression>.560419"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.28, i64 0, i32 5
  %.30 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.29, align 8
  %.31 = tail call %Expression.560401* %.30(%"Array<Expression>.560419"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.35, i64 0, i32 5
  %.37 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.36, align 8
  %.38 = tail call %Expression.560401* %.37(%"Array<Expression>.560419"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Expression.560401* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Expression.560401* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Expression>___in__"(%"Array<Expression>.560419"* %.1, %Expression.560401* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Expression.560401* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.19, i64 0, i32 5
  %.21 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.20, align 8
  %.22 = tail call %Expression.560401* %.21(%"Array<Expression>.560419"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Expression.560401* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Expression>_find"(%"Array<Expression>.560419"* nocapture readonly %.1, %Expression.560401* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1, i64 0, i32 1
  %.19 = load %Expression.560401**, %Expression.560401*** %.18, align 8
  %0 = ptrtoint %Expression.560401* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Expression.560401*, %Expression.560401** %.19, i64 %storemerge5
  %1 = bitcast %Expression.560401** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StringExpression_constructor(%StringExpression.560417* nocapture %.1, %string.560217* %.2, %"Array<int>.560257"* %.3, %"Array<Expression>.560419"* %.4, %Type.560381* %.5) local_unnamed_addr #2 {
.7:
  %.14 = bitcast %StringExpression.560417* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.14, i64 2)
  %.18 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.1, i64 0, i32 7
  store %"Array<Expression>.560419"* %.4, %"Array<Expression>.560419"** %.18, align 8
  %.22 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.1, i64 0, i32 6
  store %"Array<int>.560257"* %.3, %"Array<int>.560257"** %.22, align 8
  %.26 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.1, i64 0, i32 4
  store %Type.560381* %.5, %Type.560381** %.26, align 8
  %.30 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.1, i64 0, i32 5
  store %string.560217* %.2, %string.560217** %.30, align 8
  %.33 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.1, i64 0, i32 2
  store i1 true, i1* %.33, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @NullExpression_constructor(%NullExpression.560421* nocapture %.1, %Type.560381* %.2) local_unnamed_addr #2 {
.4:
  %.8 = bitcast %NullExpression.560421* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.8, i64 5)
  %.12 = getelementptr inbounds %NullExpression.560421, %NullExpression.560421* %.1, i64 0, i32 4
  store %Type.560381* %.2, %Type.560381** %.12, align 8
  %.15 = getelementptr inbounds %NullExpression.560421, %NullExpression.560421* %.1, i64 0, i32 2
  store i1 true, i1* %.15, align 1
  ret void
}

define void @ArrayExpression_constructor(%ArrayExpression.560423* nocapture %.1, %"Array<Expression>.560419"* %.2) local_unnamed_addr {
.4:
  %.8 = bitcast %ArrayExpression.560423* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.8, i64 6)
  %.12 = getelementptr inbounds %ArrayExpression.560423, %ArrayExpression.560423* %.1, i64 0, i32 5
  store %"Array<Expression>.560419"* %.2, %"Array<Expression>.560419"** %.12, align 8
  %.15 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.2, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp sgt i64 %.16, 0
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.21 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.2, i64 0, i32 0
  %.22 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.22, i64 0, i32 5
  %.24 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.23, align 8
  %.25 = tail call %Expression.560401* %.24(%"Array<Expression>.560419"* nonnull %.2, i64 0)
  %.26 = getelementptr inbounds %Expression.560401, %Expression.560401* %.25, i64 0, i32 4
  %.27 = load %Type.560381*, %Type.560381** %.26, align 8
  %.30 = load i64, i64* %.15, align 8
  %.31 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %ArrayType.560403*
  %.33 = bitcast i8* %.31 to %ArrayType_vtable_ty.560404**
  store %ArrayType_vtable_ty.560404* @ArrayType_vtable_data, %ArrayType_vtable_ty.560404** %.33, align 8
  tail call void @ArrayType_constructor(%ArrayType.560403* %.32, %Type.560381* %.27, i64 %.30)
  %.37 = getelementptr inbounds %ArrayExpression.560423, %ArrayExpression.560423* %.1, i64 0, i32 4
  %0 = bitcast %Type.560381** %.37 to i8**
  store i8* %.31, i8** %0, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4.if, %.4
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @BinaryExpression_constructor(%BinaryExpression.560425* nocapture %.1, %Expression.560401* %.2, i64 %.3, %Expression.560401* %.4, %Type.560381* %.5, i1 %.6) local_unnamed_addr #2 {
.8:
  %.16 = bitcast %BinaryExpression.560425* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.16, i64 8)
  %.20 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.1, i64 0, i32 5
  store %Expression.560401* %.2, %Expression.560401** %.20, align 8
  %.24 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.1, i64 0, i32 6
  store i64 %.3, i64* %.24, align 8
  %.28 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.1, i64 0, i32 7
  store %Expression.560401* %.4, %Expression.560401** %.28, align 8
  %.32 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.1, i64 0, i32 4
  store %Type.560381* %.5, %Type.560381** %.32, align 8
  %.36 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.1, i64 0, i32 2
  store i1 %.6, i1* %.36, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @UnaryExpression_constructor(%UnaryExpression.560427* nocapture %.1, i64 %.2, %Expression.560401* %.3, %Type.560381* %.4, i1 %.5) local_unnamed_addr #2 {
.7:
  %.14 = bitcast %UnaryExpression.560427* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.14, i64 9)
  %.18 = getelementptr inbounds %UnaryExpression.560427, %UnaryExpression.560427* %.1, i64 0, i32 5
  store i64 %.2, i64* %.18, align 8
  %.22 = getelementptr inbounds %UnaryExpression.560427, %UnaryExpression.560427* %.1, i64 0, i32 6
  store %Expression.560401* %.3, %Expression.560401** %.22, align 8
  %.26 = getelementptr inbounds %UnaryExpression.560427, %UnaryExpression.560427* %.1, i64 0, i32 4
  store %Type.560381* %.4, %Type.560381** %.26, align 8
  %.30 = getelementptr inbounds %UnaryExpression.560427, %UnaryExpression.560427* %.1, i64 0, i32 2
  store i1 %.5, i1* %.30, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @TernaryExpression_constructor(%TernaryExpression.560429* nocapture %.1, %Expression.560401* %.2, %Expression.560401* %.3, %Expression.560401* %.4) local_unnamed_addr #9 {
.6:
  %.12 = bitcast %TernaryExpression.560429* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.12, i64 15)
  %.16 = getelementptr inbounds %TernaryExpression.560429, %TernaryExpression.560429* %.1, i64 0, i32 5
  store %Expression.560401* %.2, %Expression.560401** %.16, align 8
  %.20 = getelementptr inbounds %TernaryExpression.560429, %TernaryExpression.560429* %.1, i64 0, i32 6
  store %Expression.560401* %.3, %Expression.560401** %.20, align 8
  %.24 = getelementptr inbounds %TernaryExpression.560429, %TernaryExpression.560429* %.1, i64 0, i32 7
  store %Expression.560401* %.4, %Expression.560401** %.24, align 8
  %.28 = getelementptr inbounds %Expression.560401, %Expression.560401* %.3, i64 0, i32 4
  %0 = bitcast %Type.560381** %.28 to i64*
  %.291 = load i64, i64* %0, align 8
  %.30 = getelementptr inbounds %TernaryExpression.560429, %TernaryExpression.560429* %.1, i64 0, i32 4
  %1 = bitcast %Type.560381** %.30 to i64*
  store i64 %.291, i64* %1, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @TypeCastExpression_constructor(%TypeCastExpression.560431* nocapture %.1, %Expression.560401* %.2, %Type.560381* %.3) local_unnamed_addr #9 {
.5:
  %.10 = bitcast %TypeCastExpression.560431* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.10, i64 10)
  %.14 = getelementptr inbounds %TypeCastExpression.560431, %TypeCastExpression.560431* %.1, i64 0, i32 5
  store %Expression.560401* %.2, %Expression.560401** %.14, align 8
  %.18 = getelementptr inbounds %TypeCastExpression.560431, %TypeCastExpression.560431* %.1, i64 0, i32 4
  store %Type.560381* %.3, %Type.560381** %.18, align 8
  %.22 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 2
  %.23 = load i1, i1* %.22, align 1
  %.24 = getelementptr inbounds %TypeCastExpression.560431, %TypeCastExpression.560431* %.1, i64 0, i32 2
  store i1 %.23, i1* %.24, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @NewExpression_constructor(%NewExpression.560433* nocapture %.1, %Type.560381* %.2, %Type.560381* %.3, %"Array<Expression>.560419"* %.4, i1 %.5) local_unnamed_addr #2 {
.7:
  %.14 = bitcast %NewExpression.560433* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.14, i64 11)
  %.18 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.1, i64 0, i32 7
  store %Type.560381* %.2, %Type.560381** %.18, align 8
  %.22 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.1, i64 0, i32 6
  store i1 %.5, i1* %.22, align 1
  %.26 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.1, i64 0, i32 5
  store %"Array<Expression>.560419"* %.4, %"Array<Expression>.560419"** %.26, align 8
  %.30 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.1, i64 0, i32 4
  store %Type.560381* %.3, %Type.560381** %.30, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IndexExpression_constructor(%IndexExpression.560435* nocapture %.1, %Expression.560401* %.2, %Expression.560401* %.3, %Type.560381* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %IndexExpression.560435* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.12, i64 13)
  %.16 = getelementptr inbounds %IndexExpression.560435, %IndexExpression.560435* %.1, i64 0, i32 5
  store %Expression.560401* %.2, %Expression.560401** %.16, align 8
  %.20 = getelementptr inbounds %IndexExpression.560435, %IndexExpression.560435* %.1, i64 0, i32 6
  store %Expression.560401* %.3, %Expression.560401** %.20, align 8
  %.24 = getelementptr inbounds %IndexExpression.560435, %IndexExpression.560435* %.1, i64 0, i32 4
  store %Type.560381* %.4, %Type.560381** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @CallExpression_constructor(%CallExpression.560437* nocapture %.1, %Expression.560401* %.2, %"Array<Expression>.560419"* %.3, %Type.560381* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %CallExpression.560437* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.12, i64 14)
  %.16 = getelementptr inbounds %CallExpression.560437, %CallExpression.560437* %.1, i64 0, i32 5
  store %Expression.560401* %.2, %Expression.560401** %.16, align 8
  %.20 = getelementptr inbounds %CallExpression.560437, %CallExpression.560437* %.1, i64 0, i32 6
  store %"Array<Expression>.560419"* %.3, %"Array<Expression>.560419"** %.20, align 8
  %.24 = getelementptr inbounds %CallExpression.560437, %CallExpression.560437* %.1, i64 0, i32 4
  store %Type.560381* %.4, %Type.560381** %.24, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @IntrinsicCall_constructor(%IntrinsicCall.560439* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = bitcast %IntrinsicCall.560439* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.8, i64 16)
  %.12 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.1, i64 0, i32 5
  store i64 %.2, i64* %.12, align 8
  %.16 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.18 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.18 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.20, align 8
  %.22 = getelementptr inbounds i8, i8* %.18, i64 8
  %0 = bitcast i8* %.22 to i8**
  store i8* %.16, i8** %0, align 8
  %.24 = getelementptr inbounds i8, i8* %.18, i64 16
  %1 = bitcast i8* %.24 to i64*
  store i64 0, i64* %1, align 8
  %.26 = getelementptr inbounds i8, i8* %.18, i64 24
  %2 = bitcast i8* %.26 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.1, i64 0, i32 6
  %3 = bitcast %"Array<Expression>.560419"** %.28 to i8**
  store i8* %.18, i8** %3, align 8
  %.31 = tail call %Type.560381* @Type_unknown()
  %.32 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.1, i64 0, i32 4
  store %Type.560381* %.31, %Type.560381** %.32, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarId_constructor(%VarId.560441* nocapture %.1, i64 %.2, i64 %.3, i64 %.4) local_unnamed_addr #2 {
.6:
  %.13 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 2
  store i64 %.3, i64* %.17, align 8
  %.21 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @ClassVarId_constructor(%ClassVarId.560443* nocapture %.1, %ClassId.560397* nocapture readonly %.2) local_unnamed_addr #9 {
.4:
  %.8 = bitcast %ClassVarId.560443* %.1 to %VarId.560441*
  %.10 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %.2, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  tail call void @VarId_constructor(%VarId.560441* %.8, i64 3, i64 %.11, i64 %.14)
  ret void
}

; Function Attrs: nofree nounwind
define noalias %ClassId.560397* @ClassVarId_to_classId(%ClassVarId.560443* nocapture readonly %.1) #4 {
.3:
  %.8 = getelementptr inbounds %ClassVarId.560443, %ClassVarId.560443* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ClassVarId.560443, %ClassVarId.560443* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %ClassId.560397*
  %.15 = bitcast i8* %.13 to %ClassId_vtable_ty.560398**
  store %ClassId_vtable_ty.560398* @ClassId_vtable_data, %ClassId_vtable_ty.560398** %.15, align 8
  tail call void @ClassId_constructor(%ClassId.560397* %.14, i64 %.9, i64 %.12)
  ret %ClassId.560397* %.14
}

; Function Attrs: nofree norecurse nounwind
define void @EnumVarId_constructor(%EnumVarId.560445* nocapture %.1, %EnumId.560399* nocapture readonly %.2) local_unnamed_addr #9 {
.4:
  %.8 = bitcast %EnumVarId.560445* %.1 to %VarId.560441*
  %.10 = getelementptr inbounds %EnumId.560399, %EnumId.560399* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %EnumId.560399, %EnumId.560399* %.2, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  tail call void @VarId_constructor(%VarId.560441* %.8, i64 4, i64 %.11, i64 %.14)
  ret void
}

; Function Attrs: nofree nounwind
define noalias %EnumId.560399* @EnumVarId_to_enumId(%EnumVarId.560445* nocapture readonly %.1) #4 {
.3:
  %.8 = getelementptr inbounds %EnumVarId.560445, %EnumVarId.560445* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %EnumVarId.560445, %EnumVarId.560445* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %EnumId.560399*
  %.15 = bitcast i8* %.13 to %EnumId_vtable_ty.560400**
  store %EnumId_vtable_ty.560400* @EnumId_vtable_data, %EnumId_vtable_ty.560400** %.15, align 8
  tail call void @EnumId_constructor(%EnumId.560399* %.14, i64 %.9, i64 %.12)
  ret %EnumId.560399* %.14
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstId_constructor(%ConstId.560447* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %ConstId.560447* %.1 to %VarId.560441*
  tail call void @VarId_constructor(%VarId.560441* %.10, i64 2, i64 %.2, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PropId_constructor(%PropId.560449* nocapture %.1, i64 %.2, %TypeId.560395* %.3, i64 %.4) local_unnamed_addr #2 {
.6:
  %.13 = getelementptr inbounds %PropId.560449, %PropId.560449* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %PropId.560449, %PropId.560449* %.1, i64 0, i32 2
  store %TypeId.560395* %.3, %TypeId.560395** %.17, align 8
  %.21 = getelementptr inbounds %PropId.560449, %PropId.560449* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @MemberExpression_constructor(%MemberExpression.560451* nocapture %.1, %Expression.560401* %.2, %PropId.560449* %.3, %Type.560381* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %MemberExpression.560451* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.12, i64 12)
  %.16 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.1, i64 0, i32 5
  store %Expression.560401* %.2, %Expression.560401** %.16, align 8
  %.20 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.1, i64 0, i32 6
  store %PropId.560449* %.3, %PropId.560449** %.20, align 8
  %.24 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.1, i64 0, i32 4
  store %Type.560381* %.4, %Type.560381** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @VarAccessExpression_constructor(%VarAccessExpression.560453* nocapture %.1, %VarId.560441* %.2, %Type.560381* %.3) local_unnamed_addr #9 {
.5:
  %.10 = bitcast %VarAccessExpression.560453* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.10, i64 7)
  %.14 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.1, i64 0, i32 5
  store %VarId.560441* %.2, %VarId.560441** %.14, align 8
  %.18 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.1, i64 0, i32 4
  store %Type.560381* %.3, %Type.560381** %.18, align 8
  %.22 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  %.25 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.1, i64 0, i32 2
  store i1 %.24, i1* %.25, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Statement>_constructor"(%"Array<Statement>.560457"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 1
  %0 = bitcast %Statement.560393*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Statement>_resize"(%"Array<Statement>.560457"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 1
  %0 = bitcast %Statement.560393*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Statement>_swap"(%"Array<Statement>.560457"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 1
  %.48 = load %Statement.560393**, %Statement.560393*** %.47, align 8
  %.49 = getelementptr inbounds %Statement.560393*, %Statement.560393** %.48, i64 %.2
  %4 = bitcast %Statement.560393** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Statement.560393*, %Statement.560393** %.48, i64 %.3
  %5 = bitcast %Statement.560393** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Statement.560393**, %Statement.560393*** %.47, align 8
  %.69 = getelementptr inbounds %Statement.560393*, %Statement.560393** %.67, i64 %.3
  %6 = bitcast %Statement.560393** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Statement>___sl__"(%"Array<Statement>.560457"* %.1, %Statement.560393* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 0
  %.17 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Statement>.560457"*)*, void (%"Array<Statement>.560457"*)** %.18, align 8
  tail call void %.19(%"Array<Statement>.560457"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 1
  %.31 = load %Statement.560393**, %Statement.560393*** %.30, align 8
  %.33 = getelementptr inbounds %Statement.560393*, %Statement.560393** %.31, i64 %.24
  store %Statement.560393* %.2, %Statement.560393** %.33, align 8
  ret void
}

define void @"Array<Statement>___setitem__"(%"Array<Statement>.560457"* nocapture readonly %.1, i64 %.2, %Statement.560393* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 1
  %.30 = load %Statement.560393**, %Statement.560393*** %.29, align 8
  %.32 = getelementptr inbounds %Statement.560393*, %Statement.560393** %.30, i64 %.2
  store %Statement.560393* %.3, %Statement.560393** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Statement>_append"(%"Array<Statement>.560457"* %.1, %Statement.560393* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 0
  %.9 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Statement>.560457"*, %Statement.560393*)*, void (%"Array<Statement>.560457"*, %Statement.560393*)** %.10, align 8
  tail call void %.11(%"Array<Statement>.560457"* %.1, %Statement.560393* %.2)
  ret void
}

define %Statement.560393* @"Array<Statement>___getitem__"(%"Array<Statement>.560457"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 1
  %.28 = load %Statement.560393**, %Statement.560393*** %.27, align 8
  %.29 = getelementptr inbounds %Statement.560393*, %Statement.560393** %.28, i64 %.2
  %.30 = load %Statement.560393*, %Statement.560393** %.29, align 8
  ret %Statement.560393* %.30

.4.endif:                                         ; preds = %.4
  ret %Statement.560393* null
}

define i1 @"Array<Statement>___eq__"(%"Array<Statement>.560457"* %.1, %"Array<Statement>.560457"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.28, i64 0, i32 5
  %.30 = load %Statement.560393* (%"Array<Statement>.560457"*, i64)*, %Statement.560393* (%"Array<Statement>.560457"*, i64)** %.29, align 8
  %.31 = tail call %Statement.560393* %.30(%"Array<Statement>.560457"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.35, i64 0, i32 5
  %.37 = load %Statement.560393* (%"Array<Statement>.560457"*, i64)*, %Statement.560393* (%"Array<Statement>.560457"*, i64)** %.36, align 8
  %.38 = tail call %Statement.560393* %.37(%"Array<Statement>.560457"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Statement.560393* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Statement.560393* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Statement>___in__"(%"Array<Statement>.560457"* %.1, %Statement.560393* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Statement.560393* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.19, i64 0, i32 5
  %.21 = load %Statement.560393* (%"Array<Statement>.560457"*, i64)*, %Statement.560393* (%"Array<Statement>.560457"*, i64)** %.20, align 8
  %.22 = tail call %Statement.560393* %.21(%"Array<Statement>.560457"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Statement.560393* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Statement>_find"(%"Array<Statement>.560457"* nocapture readonly %.1, %Statement.560393* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.1, i64 0, i32 1
  %.19 = load %Statement.560393**, %Statement.560393*** %.18, align 8
  %0 = ptrtoint %Statement.560393* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Statement.560393*, %Statement.560393** %.19, i64 %storemerge5
  %1 = bitcast %Statement.560393** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Block_constructor(%Block.560455* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<Statement>_vtable_ty.560458"**
  store %"Array<Statement>_vtable_ty.560458"* @"Array<Statement>_vtable_data", %"Array<Statement>_vtable_ty.560458"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Block.560455, %Block.560455* %.1, i64 0, i32 1
  %3 = bitcast %"Array<Statement>.560457"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %Block.560455, %Block.560455* %.1, i64 0, i32 2
  store i1 false, i1* %.22, align 1
  %.25 = getelementptr inbounds %Block.560455, %Block.560455* %.1, i64 0, i32 3
  store i1 false, i1* %.25, align 1
  %.28 = getelementptr inbounds %Block.560455, %Block.560455* %.1, i64 0, i32 4
  store i1 false, i1* %.28, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IfStatement_constructor(%IfStatement.560459* nocapture %.1, %Expression.560401* %.2, %Block.560455* %.3, %Block.560455* %.4) local_unnamed_addr #2 {
.6:
  %.12 = bitcast %IfStatement.560459* %.1 to %Statement.560393*
  tail call void @Statement_constructor(%Statement.560393* %.12, i64 0)
  %.16 = getelementptr inbounds %IfStatement.560459, %IfStatement.560459* %.1, i64 0, i32 2
  store %Expression.560401* %.2, %Expression.560401** %.16, align 8
  %.20 = getelementptr inbounds %IfStatement.560459, %IfStatement.560459* %.1, i64 0, i32 3
  store %Block.560455* %.3, %Block.560455** %.20, align 8
  %.24 = getelementptr inbounds %IfStatement.560459, %IfStatement.560459* %.1, i64 0, i32 4
  store %Block.560455* %.4, %Block.560455** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarDeclaration_constructor(%VarDeclaration.560461* nocapture %.1, %string.560217* %.2, %VarId.560441* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %VarDeclaration.560461* %.1 to %Statement.560393*
  tail call void @Statement_constructor(%Statement.560393* %.10, i64 1)
  %.14 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.1, i64 0, i32 3
  store %VarId.560441* %.3, %VarId.560441** %.14, align 8
  %.18 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.1, i64 0, i32 2
  store %string.560217* %.2, %string.560217** %.18, align 8
  %.21 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.1, i64 0, i32 4
  store i1 false, i1* %.21, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstDeclaration_constructor(%ConstDeclaration.560463* nocapture %.1, %string.560217* %.2, %ConstId.560447* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %ConstDeclaration.560463* %.1 to %Statement.560393*
  tail call void @Statement_constructor(%Statement.560393* %.10, i64 2)
  %.14 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.1, i64 0, i32 3
  store %ConstId.560447* %.3, %ConstId.560447** %.14, align 8
  %.18 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.1, i64 0, i32 2
  store %string.560217* %.2, %string.560217** %.18, align 8
  %.21 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.1, i64 0, i32 4
  store i1 false, i1* %.21, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ForStatement_constructor(%ForStatement.560465* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = bitcast %ForStatement.560465* %.1 to %Statement.560393*
  tail call void @Statement_constructor(%Statement.560393* %.6, i64 3)
  %.9 = getelementptr inbounds %ForStatement.560465, %ForStatement.560465* %.1, i64 0, i32 2
  %0 = bitcast %Statement.560393** %.9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @WhileStatement_constructor(%WhileStatement.560467* nocapture %.1, %Expression.560401* %.2, %Block.560455* %.3) local_unnamed_addr #2 {
.5:
  %.10 = bitcast %WhileStatement.560467* %.1 to %Statement.560393*
  tail call void @Statement_constructor(%Statement.560393* %.10, i64 4)
  %.14 = getelementptr inbounds %WhileStatement.560467, %WhileStatement.560467* %.1, i64 0, i32 2
  store %Expression.560401* %.2, %Expression.560401** %.14, align 8
  %.18 = getelementptr inbounds %WhileStatement.560467, %WhileStatement.560467* %.1, i64 0, i32 3
  store %Block.560455* %.3, %Block.560455** %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ReturnStatement_constructor(%ReturnStatement.560469* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = bitcast %ReturnStatement.560469* %.1 to %Statement.560393*
  tail call void @Statement_constructor(%Statement.560393* %.6, i64 7)
  %.9 = getelementptr inbounds %ReturnStatement.560469, %ReturnStatement.560469* %.1, i64 0, i32 2
  store %Expression.560401* null, %Expression.560401** %.9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_numeric(%Type.560381* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.7.off = add i64 %.7, -1
  %0 = icmp ult i64 %.7.off, 11
  ret i1 %0
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_float(%Type.560381* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %0 = and i64 %.7, -4
  %1 = icmp eq i64 %0, 8
  ret i1 %1
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_int(%Type.560381* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.7.off = add i64 %.7, -1
  %0 = icmp ult i64 %.7.off, 7
  ret i1 %0
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_bool(%Type.560381* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 0
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_i8_ptr(%Type.560381* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 15
  br i1 %.8, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.12 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 1
  %0 = bitcast %Type.560381* %.12 to %Type.560381**
  %.13 = load %Type.560381*, %Type.560381** %0, align 8
  %.14 = getelementptr inbounds %Type.560381, %Type.560381* %.13, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 2
  ret i1 %.16

.3.endif:                                         ; preds = %.3
  ret i1 false
}

; Function Attrs: nounwind readonly
define i1 @is_object(%Type.560381* nocapture readonly %.1) local_unnamed_addr #10 {
.3:
  %.61 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.72 = load i64, i64* %.61, align 8
  %.83 = icmp eq i64 %.72, 20
  br i1 %.83, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3, %.3.if
  %.1.tr4 = phi %Type.560381* [ %.13, %.3.if ], [ %.1, %.3 ]
  %.12 = getelementptr inbounds %Type.560381, %Type.560381* %.1.tr4, i64 2
  %0 = bitcast %Type.560381* %.12 to %Type.560381**
  %.13 = load %Type.560381*, %Type.560381** %0, align 8
  %.6 = getelementptr inbounds %Type.560381, %Type.560381* %.13, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 20
  br i1 %.8, label %.3.if, label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.7.lcssa = phi i64 [ %.72, %.3 ], [ %.7, %.3.if ]
  %.19 = icmp eq i64 %.7.lcssa, 13
  ret i1 %.19
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_pointer(%Type.560381* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 15
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_null(%Expression.560401* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Expression.560401, %Expression.560401* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 5
  ret i1 %.8
}

; Function Attrs: nofree nounwind
define noalias %Expression.560401* @cast_exp_to_type(%Expression.560401* %.1, %Type.560381* %.2) local_unnamed_addr #4 {
.4:
  %.9 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.10 = bitcast i8* %.9 to %TypeCastExpression.560431*
  %.11 = bitcast i8* %.9 to %TypeCastExpression_vtable_ty.560432**
  store %TypeCastExpression_vtable_ty.560432* @TypeCastExpression_vtable_data, %TypeCastExpression_vtable_ty.560432** %.11, align 8
  tail call void @TypeCastExpression_constructor(%TypeCastExpression.560431* %.10, %Expression.560401* %.1, %Type.560381* %.2)
  %.14 = bitcast i8* %.9 to %Expression.560401*
  ret %Expression.560401* %.14
}

; Function Attrs: norecurse nounwind readonly
define %Type.560381* @max_type(%Type.560381* readonly %.1, %Type.560381* readonly %.2) local_unnamed_addr #5 {
.4:
  %.8 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp sgt i64 %.9, %.12
  %.1..2 = select i1 %.13, %Type.560381* %.1, %Type.560381* %.2
  ret %Type.560381* %.1..2
}

; Function Attrs: nofree nounwind
define void @check_cast_lower_bits(%Expression.560401** nocapture %.1, %Expression.560401** nocapture %.2) local_unnamed_addr #4 {
.4:
  %.9 = load %Expression.560401*, %Expression.560401** %.1, align 8
  %.10 = getelementptr inbounds %Expression.560401, %Expression.560401* %.9, i64 0, i32 4
  %.11 = load %Type.560381*, %Type.560381** %.10, align 8
  %.15 = load %Expression.560401*, %Expression.560401** %.2, align 8
  %.16 = getelementptr inbounds %Expression.560401, %Expression.560401* %.15, i64 0, i32 4
  %.17 = load %Type.560381*, %Type.560381** %.16, align 8
  %.20 = getelementptr inbounds %Type.560381, %Type.560381* %.11, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.23 = getelementptr inbounds %Type.560381, %Type.560381* %.17, i64 0, i32 1
  %.24 = load i64, i64* %.23, align 8
  %.25.not = icmp eq i64 %.21, %.24
  br i1 %.25.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.28 = tail call i1 @is_float(%Type.560381* %.11)
  %.30 = tail call i1 @is_int(%Type.560381* %.17)
  %.31 = and i1 %.28, %.30
  br i1 %.31, label %.4.if.if, label %.4.if.else

.4.endif.sink.split:                              ; preds = %.4.if.if, %.4.if.else.else, %.4.if.else.if
  %.1.sink = phi %Expression.560401** [ %.1, %.4.if.else.if ], [ %.2, %.4.if.else.else ], [ %.2, %.4.if.if ]
  %.53.sink = phi %Expression.560401* [ %.53, %.4.if.else.if ], [ %.74, %.4.if.else.else ], [ %.38, %.4.if.if ]
  store %Expression.560401* %.53.sink, %Expression.560401** %.1.sink, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4.endif.sink.split, %.4
  ret void

.4.if.if:                                         ; preds = %.4.if
  %.38 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* %.15, %Type.560381* %.11)
  br label %.4.endif.sink.split

.4.if.else:                                       ; preds = %.4.if
  %.43 = tail call i1 @is_int(%Type.560381* %.11)
  %.45 = tail call i1 @is_float(%Type.560381* %.17)
  %.46 = and i1 %.43, %.45
  br i1 %.46, label %.4.if.else.if, label %.4.if.else.else

.4.if.else.if:                                    ; preds = %.4.if.else
  %.53 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* %.9, %Type.560381* %.17)
  br label %.4.endif.sink.split

.4.if.else.else:                                  ; preds = %.4.if.else
  %.59 = tail call %Type.560381* @max_type(%Type.560381* %.11, %Type.560381* %.17)
  %.66 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* %.9, %Type.560381* %.59)
  store %Expression.560401* %.66, %Expression.560401** %.1, align 8
  %.72 = load %Expression.560401*, %Expression.560401** %.2, align 8
  %.74 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* %.72, %Type.560381* %.59)
  br label %.4.endif.sink.split
}

; Function Attrs: norecurse nounwind readonly
define i1 @check_is_var(%Expression.560401* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Expression.560401, %Expression.560401* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  switch i64 %.7, label %.3.endif.endif [
    i64 7, label %.3.if
    i64 12, label %.3.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.12 = getelementptr inbounds %Expression.560401, %Expression.560401* %.1, i64 1
  %0 = bitcast %Expression.560401* %.12 to %VarId.560441**
  %.13 = load %VarId.560441*, %VarId.560441** %0, align 8
  %.14 = getelementptr inbounds %VarId.560441, %VarId.560441* %.13, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 1
  ret i1 %.16

.3.endif.if:                                      ; preds = %.3
  %.25 = getelementptr inbounds %Expression.560401, %Expression.560401* %.1, i64 1, i32 1
  %1 = bitcast i64* %.25 to %PropId.560449**
  %.2612 = load %PropId.560449*, %PropId.560449** %1, align 8
  %.29 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2612, i64 0, i32 1
  %.30 = load i64, i64* %.29, align 8
  %.31 = icmp eq i64 %.30, 1
  ret i1 %.31

.3.endif.endif:                                   ; preds = %.3
  %.36 = icmp eq i64 %.7, 13
  ret i1 %.36
}

define noalias %string.560217* @dump_type(%Type.560381* nocapture readonly %.1, i1 %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endi...endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 2, label %.4.endif.endif.if
    i64 3, label %.4.endif.endif.endif.if
    i64 4, label %.4.endif.endif.endif.endif.if
    i64 5, label %.4.endif.endif.endif.endif.endif.if
    i64 6, label %.4.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.4.endif.endif.endif.endi...if
    i64 10, label %.4.endif.endif.endif.endi...endif.if
    i64 11, label %.4.endif.endif.endif.endi...endif.endif.if
    i64 12, label %.4.endif.endif.endif.endi...endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.12 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %string.560217*
  %.13.repack = bitcast i8* %.12 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.13.repack, align 8
  %.13.repack43 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.13.repack43 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.27, i64 0, i64 0), i8** %0, align 8
  %.13.repack44 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.13.repack44 to i64*
  store i64 4, i64* %1, align 8
  %.13.repack45 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.13.repack45 to i64*
  store i64 4, i64* %2, align 8
  ret %string.560217* %.13

.4.endif.if:                                      ; preds = %.4
  %.21 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %string.560217*
  %.22.repack = bitcast i8* %.21 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.22.repack, align 8
  %.22.repack40 = getelementptr inbounds i8, i8* %.21, i64 8
  %3 = bitcast i8* %.22.repack40 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.28, i64 0, i64 0), i8** %3, align 8
  %.22.repack41 = getelementptr inbounds i8, i8* %.21, i64 16
  %4 = bitcast i8* %.22.repack41 to i64*
  store i64 2, i64* %4, align 8
  %.22.repack42 = getelementptr inbounds i8, i8* %.21, i64 24
  %5 = bitcast i8* %.22.repack42 to i64*
  store i64 2, i64* %5, align 8
  ret %string.560217* %.22

.4.endif.endif.if:                                ; preds = %.4
  %.30 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.31 = bitcast i8* %.30 to %string.560217*
  %.31.repack = bitcast i8* %.30 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.31.repack, align 8
  %.31.repack37 = getelementptr inbounds i8, i8* %.30, i64 8
  %6 = bitcast i8* %.31.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.29, i64 0, i64 0), i8** %6, align 8
  %.31.repack38 = getelementptr inbounds i8, i8* %.30, i64 16
  %7 = bitcast i8* %.31.repack38 to i64*
  store i64 2, i64* %7, align 8
  %.31.repack39 = getelementptr inbounds i8, i8* %.30, i64 24
  %8 = bitcast i8* %.31.repack39 to i64*
  store i64 2, i64* %8, align 8
  ret %string.560217* %.31

.4.endif.endif.endif.if:                          ; preds = %.4
  %.39 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.560217*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.40.repack, align 8
  %.40.repack34 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack34 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.30, i64 0, i64 0), i8** %9, align 8
  %.40.repack35 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack35 to i64*
  store i64 3, i64* %10, align 8
  %.40.repack36 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack36 to i64*
  store i64 3, i64* %11, align 8
  ret %string.560217* %.40

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %string.560217*
  %.49.repack = bitcast i8* %.48 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.49.repack, align 8
  %.49.repack31 = getelementptr inbounds i8, i8* %.48, i64 8
  %12 = bitcast i8* %.49.repack31 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.31, i64 0, i64 0), i8** %12, align 8
  %.49.repack32 = getelementptr inbounds i8, i8* %.48, i64 16
  %13 = bitcast i8* %.49.repack32 to i64*
  store i64 3, i64* %13, align 8
  %.49.repack33 = getelementptr inbounds i8, i8* %.48, i64 24
  %14 = bitcast i8* %.49.repack33 to i64*
  store i64 3, i64* %14, align 8
  ret %string.560217* %.49

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4
  %.57 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.560217*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.58.repack, align 8
  %.58.repack28 = getelementptr inbounds i8, i8* %.57, i64 8
  %15 = bitcast i8* %.58.repack28 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.32, i64 0, i64 0), i8** %15, align 8
  %.58.repack29 = getelementptr inbounds i8, i8* %.57, i64 16
  %16 = bitcast i8* %.58.repack29 to i64*
  store i64 3, i64* %16, align 8
  %.58.repack30 = getelementptr inbounds i8, i8* %.57, i64 24
  %17 = bitcast i8* %.58.repack30 to i64*
  store i64 3, i64* %17, align 8
  ret %string.560217* %.58

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4
  %.66 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.67 = bitcast i8* %.66 to %string.560217*
  %.67.repack = bitcast i8* %.66 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.67.repack, align 8
  %.67.repack25 = getelementptr inbounds i8, i8* %.66, i64 8
  %18 = bitcast i8* %.67.repack25 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.33, i64 0, i64 0), i8** %18, align 8
  %.67.repack26 = getelementptr inbounds i8, i8* %.66, i64 16
  %19 = bitcast i8* %.67.repack26 to i64*
  store i64 4, i64* %19, align 8
  %.67.repack27 = getelementptr inbounds i8, i8* %.66, i64 24
  %20 = bitcast i8* %.67.repack27 to i64*
  store i64 4, i64* %20, align 8
  ret %string.560217* %.67

.4.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.4
  br i1 %.2, label %true_block, label %false_block

true_block:                                       ; preds = %.4.endif.endif.endif.endif.endif.endif.endif.if
  %.78 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.163, i64 0, i64 0), i64 64)
  %.79 = add i64 %.78, 1
  %.81 = tail call i8* @malloc(i64 %.79)
  %.82 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.163, i64 0, i64 0), i64 64)
  %.83 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end

false_block:                                      ; preds = %.4.endif.endif.endif.endif.endif.endif.endif.if
  %.94 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.94.sink53 = phi i8* [ %.94, %false_block ], [ %.83, %true_block ]
  %.sink50 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @str.34, i64 0, i64 0), %false_block ], [ %.81, %true_block ]
  %.sink47 = phi i64 [ 3, %false_block ], [ %.78, %true_block ]
  %.95.repack = bitcast i8* %.94.sink53 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.95.repack, align 8
  %.95.repack22 = getelementptr inbounds i8, i8* %.94.sink53, i64 8
  %21 = bitcast i8* %.95.repack22 to i8**
  store i8* %.sink50, i8** %21, align 8
  %.95.repack23 = getelementptr inbounds i8, i8* %.94.sink53, i64 16
  %22 = bitcast i8* %.95.repack23 to i64*
  store i64 %.sink47, i64* %22, align 8
  %.95.repack24 = getelementptr inbounds i8, i8* %.94.sink53, i64 24
  %23 = bitcast i8* %.95.repack24 to i64*
  store i64 %.sink47, i64* %23, align 8
  %.98 = bitcast i8* %.94.sink53 to %string.560217*
  ret %string.560217* %.98

.4.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4
  %.105 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.560217*
  %.106.repack = bitcast i8* %.105 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.106.repack, align 8
  %.106.repack19 = getelementptr inbounds i8, i8* %.105, i64 8
  %24 = bitcast i8* %.106.repack19 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.35, i64 0, i64 0), i8** %24, align 8
  %.106.repack20 = getelementptr inbounds i8, i8* %.105, i64 16
  %25 = bitcast i8* %.106.repack20 to i64*
  store i64 3, i64* %25, align 8
  %.106.repack21 = getelementptr inbounds i8, i8* %.105, i64 24
  %26 = bitcast i8* %.106.repack21 to i64*
  store i64 3, i64* %26, align 8
  ret %string.560217* %.106

.4.endif.endif.endif.endi...if:                   ; preds = %.4
  %.114 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.115 = bitcast i8* %.114 to %string.560217*
  %.115.repack = bitcast i8* %.114 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.115.repack, align 8
  %.115.repack16 = getelementptr inbounds i8, i8* %.114, i64 8
  %27 = bitcast i8* %.115.repack16 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i64 0, i64 0), i8** %27, align 8
  %.115.repack17 = getelementptr inbounds i8, i8* %.114, i64 16
  %28 = bitcast i8* %.115.repack17 to i64*
  store i64 3, i64* %28, align 8
  %.115.repack18 = getelementptr inbounds i8, i8* %.114, i64 24
  %29 = bitcast i8* %.115.repack18 to i64*
  store i64 3, i64* %29, align 8
  ret %string.560217* %.115

.4.endif.endif.endif.endi...endif.if:             ; preds = %.4
  %.123 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.124 = bitcast i8* %.123 to %string.560217*
  %.124.repack = bitcast i8* %.123 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.124.repack, align 8
  %.124.repack13 = getelementptr inbounds i8, i8* %.123, i64 8
  %30 = bitcast i8* %.124.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.37, i64 0, i64 0), i8** %30, align 8
  %.124.repack14 = getelementptr inbounds i8, i8* %.123, i64 16
  %31 = bitcast i8* %.124.repack14 to i64*
  store i64 3, i64* %31, align 8
  %.124.repack15 = getelementptr inbounds i8, i8* %.123, i64 24
  %32 = bitcast i8* %.124.repack15 to i64*
  store i64 3, i64* %32, align 8
  ret %string.560217* %.124

.4.endif.endif.endif.endi...endif.endif.if:       ; preds = %.4
  br i1 %.2, label %true_block.1, label %false_block.1

true_block.1:                                     ; preds = %.4.endif.endif.endif.endi...endif.endif.if
  %.135 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.164, i64 0, i64 0), i64 64)
  %.136 = add i64 %.135, 1
  %.138 = tail call i8* @malloc(i64 %.136)
  %.139 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.138, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.164, i64 0, i64 0), i64 64)
  %.140 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end.1

false_block.1:                                    ; preds = %.4.endif.endif.endif.endi...endif.endif.if
  %.151 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end.1

end.1:                                            ; preds = %false_block.1, %true_block.1
  %.151.sink62 = phi i8* [ %.151, %false_block.1 ], [ %.140, %true_block.1 ]
  %.sink59 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.38, i64 0, i64 0), %false_block.1 ], [ %.138, %true_block.1 ]
  %.sink56 = phi i64 [ 5, %false_block.1 ], [ %.135, %true_block.1 ]
  %.152.repack = bitcast i8* %.151.sink62 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.152.repack, align 8
  %.152.repack10 = getelementptr inbounds i8, i8* %.151.sink62, i64 8
  %33 = bitcast i8* %.152.repack10 to i8**
  store i8* %.sink59, i8** %33, align 8
  %.152.repack11 = getelementptr inbounds i8, i8* %.151.sink62, i64 16
  %34 = bitcast i8* %.152.repack11 to i64*
  store i64 %.sink56, i64* %34, align 8
  %.152.repack12 = getelementptr inbounds i8, i8* %.151.sink62, i64 24
  %35 = bitcast i8* %.152.repack12 to i64*
  store i64 %.sink56, i64* %35, align 8
  %.155 = bitcast i8* %.151.sink62 to %string.560217*
  ret %string.560217* %.155

.4.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.4
  %.162 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.560217*
  %.163.repack = bitcast i8* %.162 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.163.repack, align 8
  %.163.repack7 = getelementptr inbounds i8, i8* %.162, i64 8
  %36 = bitcast i8* %.163.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.39, i64 0, i64 0), i8** %36, align 8
  %.163.repack8 = getelementptr inbounds i8, i8* %.162, i64 16
  %37 = bitcast i8* %.163.repack8 to i64*
  store i64 4, i64* %37, align 8
  %.163.repack9 = getelementptr inbounds i8, i8* %.162, i64 24
  %38 = bitcast i8* %.163.repack9 to i64*
  store i64 4, i64* %38, align 8
  ret %string.560217* %.163

.4.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.4
  %.169 = icmp eq i64 %.9, 18
  %.171 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.560217*
  %.172.repack = bitcast i8* %.171 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.172.repack, align 8
  %.172.repack4 = getelementptr inbounds i8, i8* %.171, i64 8
  %39 = bitcast i8* %.172.repack4 to i8**
  br i1 %.169, label %.4.endif.endif.endif.endi...if.1, label %.4.endif.endif.endif.endi...endif.1

.4.endif.endif.endif.endi...if.1:                 ; preds = %.4.endif.endif.endif.endi...endif.endif.endif.endif
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.165, i64 0, i64 0), i8** %39, align 8
  %.172.repack5 = getelementptr inbounds i8, i8* %.171, i64 16
  %40 = bitcast i8* %.172.repack5 to i64*
  store i64 6, i64* %40, align 8
  %.172.repack6 = getelementptr inbounds i8, i8* %.171, i64 24
  %41 = bitcast i8* %.172.repack6 to i64*
  store i64 6, i64* %41, align 8
  ret %string.560217* %.172

.4.endif.endif.endif.endi...endif.1:              ; preds = %.4.endif.endif.endif.endi...endif.endif.endif.endif
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.166, i64 0, i64 0), i8** %39, align 8
  %.176.repack2 = getelementptr inbounds i8, i8* %.171, i64 16
  %42 = bitcast i8* %.176.repack2 to i64*
  store i64 7, i64* %42, align 8
  %.176.repack3 = getelementptr inbounds i8, i8* %.171, i64 24
  %43 = bitcast i8* %.176.repack3 to i64*
  store i64 7, i64* %43, align 8
  ret %string.560217* %.172
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @dump_bin_op(i64 %.1) local_unnamed_addr #4 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.2.endif [
    i64 1, label %.3.if
    i64 2, label %.3.endif.if
    i64 3, label %.3.endif.endif.if
    i64 4, label %.3.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.if
    i64 6, label %.3.endif.endif.endif.endif.endif.if
    i64 7, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 10, label %.3.endif.endif.endif.endi...if
    i64 11, label %.3.endif.endif.endif.endi...endif.if
    i64 12, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 13, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 14, label %.3.endif.endif.endif.endi...if.1
    i64 15, label %.3.endif.endif.endif.endi...endif.1.if
    i64 16, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 17, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 18, label %.3.endif.endif.endif.endi...if.2
    i64 19, label %.3.endif.endif.endif.endi...endif.2.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.560217*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.9.repack, align 8
  %.9.repack58 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack58 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.167, i64 0, i64 0), i8** %0, align 8
  %.9.repack59 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack59 to i64*
  store i64 1, i64* %1, align 8
  %.9.repack60 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack60 to i64*
  store i64 1, i64* %2, align 8
  ret %string.560217* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.560217*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.16.repack, align 8
  %.16.repack55 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack55 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.168, i64 0, i64 0), i8** %3, align 8
  %.16.repack56 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack56 to i64*
  store i64 1, i64* %4, align 8
  %.16.repack57 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack57 to i64*
  store i64 1, i64* %5, align 8
  ret %string.560217* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.560217*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.23.repack, align 8
  %.23.repack52 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack52 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.169, i64 0, i64 0), i8** %6, align 8
  %.23.repack53 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack53 to i64*
  store i64 1, i64* %7, align 8
  %.23.repack54 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack54 to i64*
  store i64 1, i64* %8, align 8
  ret %string.560217* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.560217*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.30.repack, align 8
  %.30.repack49 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack49 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.170, i64 0, i64 0), i8** %9, align 8
  %.30.repack50 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack50 to i64*
  store i64 1, i64* %10, align 8
  %.30.repack51 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack51 to i64*
  store i64 1, i64* %11, align 8
  ret %string.560217* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.560217*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.37.repack, align 8
  %.37.repack46 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack46 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.171, i64 0, i64 0), i8** %12, align 8
  %.37.repack47 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack47 to i64*
  store i64 1, i64* %13, align 8
  %.37.repack48 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack48 to i64*
  store i64 1, i64* %14, align 8
  ret %string.560217* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.560217*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.44.repack, align 8
  %.44.repack43 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack43 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0), i8** %15, align 8
  %.44.repack44 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack44 to i64*
  store i64 1, i64* %16, align 8
  %.44.repack45 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack45 to i64*
  store i64 1, i64* %17, align 8
  ret %string.560217* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.560217*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.51.repack, align 8
  %.51.repack40 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack40 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.172, i64 0, i64 0), i8** %18, align 8
  %.51.repack41 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack41 to i64*
  store i64 1, i64* %19, align 8
  %.51.repack42 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack42 to i64*
  store i64 1, i64* %20, align 8
  ret %string.560217* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.560217*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.58.repack, align 8
  %.58.repack37 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.173, i64 0, i64 0), i8** %21, align 8
  %.58.repack38 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack38 to i64*
  store i64 2, i64* %22, align 8
  %.58.repack39 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack39 to i64*
  store i64 2, i64* %23, align 8
  ret %string.560217* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.560217*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.65.repack, align 8
  %.65.repack34 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack34 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.174, i64 0, i64 0), i8** %24, align 8
  %.65.repack35 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack35 to i64*
  store i64 1, i64* %25, align 8
  %.65.repack36 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack36 to i64*
  store i64 1, i64* %26, align 8
  ret %string.560217* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.560217*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.72.repack, align 8
  %.72.repack31 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack31 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.175, i64 0, i64 0), i8** %27, align 8
  %.72.repack32 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack32 to i64*
  store i64 2, i64* %28, align 8
  %.72.repack33 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack33 to i64*
  store i64 2, i64* %29, align 8
  ret %string.560217* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.560217*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.79.repack, align 8
  %.79.repack28 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack28 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.176, i64 0, i64 0), i8** %30, align 8
  %.79.repack29 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack29 to i64*
  store i64 2, i64* %31, align 8
  %.79.repack30 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack30 to i64*
  store i64 2, i64* %32, align 8
  ret %string.560217* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.560217*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.86.repack, align 8
  %.86.repack25 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack25 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.177, i64 0, i64 0), i8** %33, align 8
  %.86.repack26 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack26 to i64*
  store i64 2, i64* %34, align 8
  %.86.repack27 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack27 to i64*
  store i64 2, i64* %35, align 8
  ret %string.560217* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.560217*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.93.repack, align 8
  %.93.repack22 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack22 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.178, i64 0, i64 0), i8** %36, align 8
  %.93.repack23 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack23 to i64*
  store i64 2, i64* %37, align 8
  %.93.repack24 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack24 to i64*
  store i64 2, i64* %38, align 8
  ret %string.560217* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.560217*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.100.repack, align 8
  %.100.repack19 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack19 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.179, i64 0, i64 0), i8** %39, align 8
  %.100.repack20 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack20 to i64*
  store i64 2, i64* %40, align 8
  %.100.repack21 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack21 to i64*
  store i64 2, i64* %41, align 8
  ret %string.560217* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.560217*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.107.repack, align 8
  %.107.repack16 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack16 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.21, i64 0, i64 0), i8** %42, align 8
  %.107.repack17 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack17 to i64*
  store i64 2, i64* %43, align 8
  %.107.repack18 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack18 to i64*
  store i64 2, i64* %44, align 8
  ret %string.560217* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.560217*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.114.repack, align 8
  %.114.repack13 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.20, i64 0, i64 0), i8** %45, align 8
  %.114.repack14 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack14 to i64*
  store i64 3, i64* %46, align 8
  %.114.repack15 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack15 to i64*
  store i64 3, i64* %47, align 8
  ret %string.560217* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.560217*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.121.repack, align 8
  %.121.repack10 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack10 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.22, i64 0, i64 0), i8** %48, align 8
  %.121.repack11 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack11 to i64*
  store i64 3, i64* %49, align 8
  %.121.repack12 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack12 to i64*
  store i64 3, i64* %50, align 8
  ret %string.560217* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.560217*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.128.repack, align 8
  %.128.repack7 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack7 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.50, i64 0, i64 0), i8** %51, align 8
  %.128.repack8 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack8 to i64*
  store i64 2, i64* %52, align 8
  %.128.repack9 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack9 to i64*
  store i64 2, i64* %53, align 8
  ret %string.560217* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.560217*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.135.repack, align 8
  %.135.repack4 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.180, i64 0, i64 0), i8** %54, align 8
  %.135.repack5 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack5 to i64*
  store i64 1, i64* %55, align 8
  %.135.repack6 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack6 to i64*
  store i64 1, i64* %56, align 8
  ret %string.560217* %.135

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3
  %.138 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.560217*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.139.repack, align 8
  %.139.repack1 = getelementptr inbounds i8, i8* %.138, i64 8
  %57 = bitcast i8* %.139.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.181, i64 0, i64 0), i8** %57, align 8
  %.139.repack2 = getelementptr inbounds i8, i8* %.138, i64 16
  %58 = bitcast i8* %.139.repack2 to i64*
  store i64 2, i64* %58, align 8
  %.139.repack3 = getelementptr inbounds i8, i8* %.138, i64 24
  %59 = bitcast i8* %.139.repack3 to i64*
  store i64 2, i64* %59, align 8
  ret %string.560217* %.139
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @dump_unary_op(i64 %.1) local_unnamed_addr #4 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endif.endif.endif [
    i64 1, label %.3.if
    i64 2, label %.3.endif.if
    i64 3, label %.3.endif.endif.if
    i64 4, label %.3.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.if
    i64 6, label %.3.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.560217*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.9.repack, align 8
  %.9.repack19 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack19 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.182, i64 0, i64 0), i8** %0, align 8
  %.9.repack20 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack20 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack21 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack21 to i64*
  store i64 7, i64* %2, align 8
  ret %string.560217* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.560217*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.16.repack, align 8
  %.16.repack16 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack16 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.183, i64 0, i64 0), i8** %3, align 8
  %.16.repack17 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack17 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack18 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack18 to i64*
  store i64 7, i64* %5, align 8
  ret %string.560217* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.560217*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.23.repack, align 8
  %.23.repack13 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack13 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.184, i64 0, i64 0), i8** %6, align 8
  %.23.repack14 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack14 to i64*
  store i64 8, i64* %7, align 8
  %.23.repack15 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack15 to i64*
  store i64 8, i64* %8, align 8
  ret %string.560217* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.560217*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.30.repack, align 8
  %.30.repack10 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack10 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.185, i64 0, i64 0), i8** %9, align 8
  %.30.repack11 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack11 to i64*
  store i64 8, i64* %10, align 8
  %.30.repack12 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack12 to i64*
  store i64 8, i64* %11, align 8
  ret %string.560217* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.560217*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.37.repack, align 8
  %.37.repack7 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack7 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.168, i64 0, i64 0), i8** %12, align 8
  %.37.repack8 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack8 to i64*
  store i64 1, i64* %13, align 8
  %.37.repack9 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack9 to i64*
  store i64 1, i64* %14, align 8
  ret %string.560217* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.560217*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.44.repack, align 8
  %.44.repack4 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.186, i64 0, i64 0), i8** %15, align 8
  %.44.repack5 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack5 to i64*
  store i64 1, i64* %16, align 8
  %.44.repack6 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack6 to i64*
  store i64 1, i64* %17, align 8
  ret %string.560217* %.44

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3
  %.47 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.47 to %string.560217*
  %.48.repack = bitcast i8* %.47 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.48.repack, align 8
  %.48.repack1 = getelementptr inbounds i8, i8* %.47, i64 8
  %18 = bitcast i8* %.48.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.187, i64 0, i64 0), i8** %18, align 8
  %.48.repack2 = getelementptr inbounds i8, i8* %.47, i64 16
  %19 = bitcast i8* %.48.repack2 to i64*
  store i64 1, i64* %19, align 8
  %.48.repack3 = getelementptr inbounds i8, i8* %.47, i64 24
  %20 = bitcast i8* %.48.repack3 to i64*
  store i64 1, i64* %20, align 8
  ret %string.560217* %.48
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @dump_access(i64 %.1) local_unnamed_addr #4 {
.3:
  switch i64 %.1, label %.3.endif.endif [
    i64 1, label %.3.if
    i64 2, label %.3.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.560217*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.9.repack, align 8
  %.9.repack7 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack7 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.47, i64 0, i64 0), i8** %0, align 8
  %.9.repack8 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack8 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack9 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack9 to i64*
  store i64 7, i64* %2, align 8
  ret %string.560217* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.560217*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.16.repack, align 8
  %.16.repack4 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack4 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.48, i64 0, i64 0), i8** %3, align 8
  %.16.repack5 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack5 to i64*
  store i64 6, i64* %4, align 8
  %.16.repack6 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack6 to i64*
  store i64 6, i64* %5, align 8
  ret %string.560217* %.16

.3.endif.endif:                                   ; preds = %.3
  %.19 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.560217*
  %.20.repack = bitcast i8* %.19 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.20.repack, align 8
  %.20.repack1 = getelementptr inbounds i8, i8* %.19, i64 8
  %6 = bitcast i8* %.20.repack1 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.49, i64 0, i64 0), i8** %6, align 8
  %.20.repack2 = getelementptr inbounds i8, i8* %.19, i64 16
  %7 = bitcast i8* %.20.repack2 to i64*
  store i64 9, i64* %7, align 8
  %.20.repack3 = getelementptr inbounds i8, i8* %.19, i64 24
  %8 = bitcast i8* %.20.repack3 to i64*
  store i64 9, i64* %8, align 8
  ret %string.560217* %.20
}

; Function Attrs: nofree nounwind
define noalias %BinaryExpressionNode.560313* @lower_bin_assign_node(%BinaryExpressionNode.560313* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.1, i64 0, i32 5
  %.7 = load i64, i64* %.6, align 8
  %.10 = icmp eq i64 %.7, 20
  %spec.select = select i1 %.10, i64 1, i64 %.7
  %.15 = icmp eq i64 %spec.select, 21
  %op.1 = select i1 %.15, i64 2, i64 %spec.select
  %.20 = icmp eq i64 %op.1, 22
  %spec.select1 = select i1 %.20, i64 3, i64 %op.1
  %.25 = icmp eq i64 %spec.select1, 23
  %op.3 = select i1 %.25, i64 4, i64 %spec.select1
  %.30 = icmp eq i64 %op.3, 24
  %spec.select2 = select i1 %.30, i64 5, i64 %op.3
  %.35 = icmp eq i64 %spec.select2, 25
  %op.5 = select i1 %.35, i64 6, i64 %spec.select2
  %.40 = icmp eq i64 %op.5, 26
  %spec.select3 = select i1 %.40, i64 16, i64 %op.5
  %.45 = icmp eq i64 %spec.select3, 27
  %op.7 = select i1 %.45, i64 15, i64 %spec.select3
  %.50 = icmp eq i64 %op.7, 29
  %spec.select4 = select i1 %.50, i64 13, i64 %op.7
  %.55 = icmp eq i64 %spec.select4, 30
  %op.9 = select i1 %.55, i64 14, i64 %spec.select4
  %.60 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.1, i64 0, i32 4
  %.61 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.60, align 8
  %.64 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.1, i64 0, i32 6
  %.65 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.64, align 8
  %.66 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.67 = bitcast i8* %.66 to %BinaryExpressionNode.560313*
  %.68 = bitcast i8* %.66 to %BinaryExpressionNode_vtable_ty.560314**
  store %BinaryExpressionNode_vtable_ty.560314* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.560314** %.68, align 8
  tail call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.560313* %.67, %ExpressionNode.560285* %.61, i64 %op.9, %ExpressionNode.560285* %.65)
  ret %BinaryExpressionNode.560313* %.67
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ScopeId_constructor(%ScopeId.560471* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %ScopeId.560471, %ScopeId.560471* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %ScopeId.560471, %ScopeId.560471* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.560480"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, VarId>_set"(%"Bucket<string, VarId>.560480"* nocapture %.1, %string.560217* %.2, %VarId.560441* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.1, i64 0, i32 2
  store %VarId.560441* %.3, %VarId.560441** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.560475"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.560480"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, VarId>.560480"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, VarId>_vtable_ty.560481"**
  store %"Bucket<string, VarId>_vtable_ty.560481"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.560481"** %.266, align 8
  tail call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.560480"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, VarId>.560480"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, VarId>_vtable_ty.560481"**
  store %"Bucket<string, VarId>_vtable_ty.560481"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.560481"** %.26, align 8
  tail call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.560480"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, VarId>.560480"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, VarId>_hash_fnc"(%"Map<string, VarId>.560475"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, VarId>_resize"(%"Map<string, VarId>.560475"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, VarId>>.560482"* (%"Map<string, VarId>.560475"*)*, %"Array<Bucket<string, VarId>>.560482"* (%"Map<string, VarId>.560475"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, VarId>>.560482"* %.9(%"Map<string, VarId>.560475"* %.1)
  %.14 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.560480"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, VarId>.560480"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, VarId>_vtable_ty.560481"**
  store %"Bucket<string, VarId>_vtable_ty.560481"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.560481"** %.5016, align 8
  tail call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.560480"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, VarId>.560480"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, VarId>_vtable_ty.560481"**
  store %"Bucket<string, VarId>_vtable_ty.560481"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.560481"** %.50, align 8
  tail call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.560480"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, VarId>.560480"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)*, %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, VarId>.560480"* %.81(%"Array<Bucket<string, VarId>>.560482"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)*, %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, VarId>.560480"* %.90(%"Array<Bucket<string, VarId>>.560482"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.91, i64 0, i32 2
  %.93 = load %VarId.560441*, %VarId.560441** %.92, align 8
  tail call void %.75(%"Map<string, VarId>.560475"* nonnull %.1, %string.560217* %.84, %VarId.560441* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, VarId>_set"(%"Map<string, VarId>.560475"* %.1, %string.560217* %.2, %VarId.560441* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, VarId>.560475"*)*, void (%"Map<string, VarId>.560475"*)** %.25, align 8
  tail call void %.26(%"Map<string, VarId>.560475"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, VarId>.560475"*, %string.560217*)*, i64 (%"Map<string, VarId>.560475"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, VarId>.560475"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.44, i64 %.39
  %.46 = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, VarId>.560480"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, VarId>.560480"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.94, i64 %.91
  %.96 = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, VarId>_vtable_ty.560481"*, %"Bucket<string, VarId>_vtable_ty.560481"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, VarId>_vtable_ty.560481", %"Bucket<string, VarId>_vtable_ty.560481"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, VarId>.560480"*, %string.560217*, %VarId.560441*)*, void (%"Bucket<string, VarId>.560480"*, %string.560217*, %VarId.560441*)** %.99, align 8
  tail call void %.100(%"Bucket<string, VarId>.560480"* %.96, %string.560217* %.2, %VarId.560441* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.77, i64 %.72
  %.79 = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %VarId.560441* @"Map<string, VarId>_get"(%"Map<string, VarId>.560475"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, VarId>.560475"*, %string.560217*)*, i64 (%"Map<string, VarId>.560475"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, VarId>.560475"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.22, i64 %.17
  %.24 = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, VarId>.560480"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.56, i64 %.50
  %.58 = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %VarId.560441*, %VarId.560441** %.79, align 8
  ret %VarId.560441* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %VarId.560441* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, VarId>>_constructor"(%"Array<Bucket<string, VarId>>.560482"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.560480"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, VarId>>_resize"(%"Array<Bucket<string, VarId>>.560482"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.560480"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, VarId>>_swap"(%"Array<Bucket<string, VarId>>.560482"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, VarId>.560480"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, VarId>.560480"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, VarId>.560480"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, VarId>>___sl__"(%"Array<Bucket<string, VarId>>.560482"* %.1, %"Bucket<string, VarId>.560480"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, VarId>>.560482"*)*, void (%"Array<Bucket<string, VarId>>.560482"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, VarId>>.560482"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.31, i64 %.24
  store %"Bucket<string, VarId>.560480"* %.2, %"Bucket<string, VarId>.560480"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, VarId>>___setitem__"(%"Array<Bucket<string, VarId>>.560482"* nocapture readonly %.1, i64 %.2, %"Bucket<string, VarId>.560480"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.30, i64 %.2
  store %"Bucket<string, VarId>.560480"* %.3, %"Bucket<string, VarId>.560480"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, VarId>>_append"(%"Array<Bucket<string, VarId>>.560482"* %.1, %"Bucket<string, VarId>.560480"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)*, void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, VarId>>.560482"* %.1, %"Bucket<string, VarId>.560480"* %.2)
  ret void
}

define %"Bucket<string, VarId>.560480"* @"Array<Bucket<string, VarId>>___getitem__"(%"Array<Bucket<string, VarId>>.560482"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.28, i64 %.2
  %.30 = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.29, align 8
  ret %"Bucket<string, VarId>.560480"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, VarId>.560480"* null
}

define i1 @"Array<Bucket<string, VarId>>___eq__"(%"Array<Bucket<string, VarId>>.560482"* %.1, %"Array<Bucket<string, VarId>>.560482"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)*, %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, VarId>.560480"* %.30(%"Array<Bucket<string, VarId>>.560482"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)*, %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, VarId>.560480"* %.37(%"Array<Bucket<string, VarId>>.560482"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, VarId>.560480"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, VarId>.560480"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, VarId>>___in__"(%"Array<Bucket<string, VarId>>.560482"* %.1, %"Bucket<string, VarId>.560480"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, VarId>.560480"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)*, %"Bucket<string, VarId>.560480"* (%"Array<Bucket<string, VarId>>.560482"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, VarId>.560480"* %.21(%"Array<Bucket<string, VarId>>.560482"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, VarId>.560480"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, VarId>>_find"(%"Array<Bucket<string, VarId>>.560482"* nocapture readonly %.1, %"Bucket<string, VarId>.560480"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>.560482", %"Array<Bucket<string, VarId>>.560482"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, VarId>.560480"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, VarId>.560480"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, VarId>>.560482"* @"Map<string, VarId>_get_buckets"(%"Map<string, VarId>.560475"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, VarId>>.560482"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, VarId>>_vtable_ty.560483"**
  store %"Array<Bucket<string, VarId>>_vtable_ty.560483"* @"Array<Bucket<string, VarId>>_vtable_data", %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, VarId>.560480"**, %"Bucket<string, VarId>.560480"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, VarId>.560480"*, %"Bucket<string, VarId>.560480"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, VarId>.560480", %"Bucket<string, VarId>.560480"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, VarId>>.560482"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, VarId>>_vtable_ty.560483"*, %"Array<Bucket<string, VarId>>_vtable_ty.560483"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.560483", %"Array<Bucket<string, VarId>>_vtable_ty.560483"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)*, void (%"Array<Bucket<string, VarId>>.560482"*, %"Bucket<string, VarId>.560480"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, VarId>>.560482"* %.9, %"Bucket<string, VarId>.560480"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.560485"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassId>_set"(%"Bucket<string, ClassId>.560485"* nocapture %.1, %string.560217* %.2, %ClassId.560397* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.1, i64 0, i32 2
  store %ClassId.560397* %.3, %ClassId.560397** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, ClassId>_constructor"(%"Map<string, ClassId>.560476"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.560485"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, ClassId>.560485"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, ClassId>_vtable_ty.560486"**
  store %"Bucket<string, ClassId>_vtable_ty.560486"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.560486"** %.266, align 8
  tail call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.560485"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, ClassId>.560485"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, ClassId>_vtable_ty.560486"**
  store %"Bucket<string, ClassId>_vtable_ty.560486"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.560486"** %.26, align 8
  tail call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.560485"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, ClassId>.560485"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, ClassId>_hash_fnc"(%"Map<string, ClassId>.560476"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, ClassId>_resize"(%"Map<string, ClassId>.560476"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, ClassId>>.560487"* (%"Map<string, ClassId>.560476"*)*, %"Array<Bucket<string, ClassId>>.560487"* (%"Map<string, ClassId>.560476"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, ClassId>>.560487"* %.9(%"Map<string, ClassId>.560476"* %.1)
  %.14 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.560485"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, ClassId>.560485"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, ClassId>_vtable_ty.560486"**
  store %"Bucket<string, ClassId>_vtable_ty.560486"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.560486"** %.5016, align 8
  tail call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.560485"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, ClassId>.560485"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, ClassId>_vtable_ty.560486"**
  store %"Bucket<string, ClassId>_vtable_ty.560486"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.560486"** %.50, align 8
  tail call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.560485"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, ClassId>.560485"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)*, void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)*, %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, ClassId>.560485"* %.81(%"Array<Bucket<string, ClassId>>.560487"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)*, %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, ClassId>.560485"* %.90(%"Array<Bucket<string, ClassId>>.560487"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.91, i64 0, i32 2
  %.93 = load %ClassId.560397*, %ClassId.560397** %.92, align 8
  tail call void %.75(%"Map<string, ClassId>.560476"* nonnull %.1, %string.560217* %.84, %ClassId.560397* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, ClassId>_set"(%"Map<string, ClassId>.560476"* %.1, %string.560217* %.2, %ClassId.560397* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, ClassId>.560476"*)*, void (%"Map<string, ClassId>.560476"*)** %.25, align 8
  tail call void %.26(%"Map<string, ClassId>.560476"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, ClassId>.560476"*, %string.560217*)*, i64 (%"Map<string, ClassId>.560476"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, ClassId>.560476"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.44, i64 %.39
  %.46 = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, ClassId>.560485"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, ClassId>.560485"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.94, i64 %.91
  %.96 = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, ClassId>_vtable_ty.560486"*, %"Bucket<string, ClassId>_vtable_ty.560486"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, ClassId>_vtable_ty.560486", %"Bucket<string, ClassId>_vtable_ty.560486"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, ClassId>.560485"*, %string.560217*, %ClassId.560397*)*, void (%"Bucket<string, ClassId>.560485"*, %string.560217*, %ClassId.560397*)** %.99, align 8
  tail call void %.100(%"Bucket<string, ClassId>.560485"* %.96, %string.560217* %.2, %ClassId.560397* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.77, i64 %.72
  %.79 = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %ClassId.560397* @"Map<string, ClassId>_get"(%"Map<string, ClassId>.560476"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, ClassId>.560476"*, %string.560217*)*, i64 (%"Map<string, ClassId>.560476"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, ClassId>.560476"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.22, i64 %.17
  %.24 = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, ClassId>.560485"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.56, i64 %.50
  %.58 = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %ClassId.560397*, %ClassId.560397** %.79, align 8
  ret %ClassId.560397* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %ClassId.560397* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, ClassId>>_constructor"(%"Array<Bucket<string, ClassId>>.560487"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.560485"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, ClassId>>_resize"(%"Array<Bucket<string, ClassId>>.560487"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.560485"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, ClassId>>_swap"(%"Array<Bucket<string, ClassId>>.560487"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, ClassId>.560485"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, ClassId>.560485"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, ClassId>.560485"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassId>>___sl__"(%"Array<Bucket<string, ClassId>>.560487"* %.1, %"Bucket<string, ClassId>.560485"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, ClassId>>.560487"*)*, void (%"Array<Bucket<string, ClassId>>.560487"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, ClassId>>.560487"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.31, i64 %.24
  store %"Bucket<string, ClassId>.560485"* %.2, %"Bucket<string, ClassId>.560485"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, ClassId>>___setitem__"(%"Array<Bucket<string, ClassId>>.560487"* nocapture readonly %.1, i64 %.2, %"Bucket<string, ClassId>.560485"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.30, i64 %.2
  store %"Bucket<string, ClassId>.560485"* %.3, %"Bucket<string, ClassId>.560485"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassId>>_append"(%"Array<Bucket<string, ClassId>>.560487"* %.1, %"Bucket<string, ClassId>.560485"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)*, void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, ClassId>>.560487"* %.1, %"Bucket<string, ClassId>.560485"* %.2)
  ret void
}

define %"Bucket<string, ClassId>.560485"* @"Array<Bucket<string, ClassId>>___getitem__"(%"Array<Bucket<string, ClassId>>.560487"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.28, i64 %.2
  %.30 = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.29, align 8
  ret %"Bucket<string, ClassId>.560485"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, ClassId>.560485"* null
}

define i1 @"Array<Bucket<string, ClassId>>___eq__"(%"Array<Bucket<string, ClassId>>.560487"* %.1, %"Array<Bucket<string, ClassId>>.560487"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)*, %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, ClassId>.560485"* %.30(%"Array<Bucket<string, ClassId>>.560487"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)*, %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, ClassId>.560485"* %.37(%"Array<Bucket<string, ClassId>>.560487"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, ClassId>.560485"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, ClassId>.560485"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, ClassId>>___in__"(%"Array<Bucket<string, ClassId>>.560487"* %.1, %"Bucket<string, ClassId>.560485"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, ClassId>.560485"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)*, %"Bucket<string, ClassId>.560485"* (%"Array<Bucket<string, ClassId>>.560487"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, ClassId>.560485"* %.21(%"Array<Bucket<string, ClassId>>.560487"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, ClassId>.560485"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, ClassId>>_find"(%"Array<Bucket<string, ClassId>>.560487"* nocapture readonly %.1, %"Bucket<string, ClassId>.560485"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.560487", %"Array<Bucket<string, ClassId>>.560487"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, ClassId>.560485"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassId>.560485"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, ClassId>>.560487"* @"Map<string, ClassId>_get_buckets"(%"Map<string, ClassId>.560476"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, ClassId>>.560487"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, ClassId>>_vtable_ty.560488"**
  store %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* @"Array<Bucket<string, ClassId>>_vtable_data", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, ClassId>.560485"**, %"Bucket<string, ClassId>.560485"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, ClassId>.560485"*, %"Bucket<string, ClassId>.560485"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, ClassId>.560485", %"Bucket<string, ClassId>.560485"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, ClassId>>.560487"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, ClassId>>_vtable_ty.560488"*, %"Array<Bucket<string, ClassId>>_vtable_ty.560488"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.560488", %"Array<Bucket<string, ClassId>>_vtable_ty.560488"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)*, void (%"Array<Bucket<string, ClassId>>.560487"*, %"Bucket<string, ClassId>.560485"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, ClassId>>.560487"* %.9, %"Bucket<string, ClassId>.560485"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.560490"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, EnumId>_set"(%"Bucket<string, EnumId>.560490"* nocapture %.1, %string.560217* %.2, %EnumId.560399* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.1, i64 0, i32 2
  store %EnumId.560399* %.3, %EnumId.560399** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, EnumId>_constructor"(%"Map<string, EnumId>.560477"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.560490"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, EnumId>.560490"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, EnumId>_vtable_ty.560491"**
  store %"Bucket<string, EnumId>_vtable_ty.560491"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.560491"** %.266, align 8
  tail call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.560490"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, EnumId>.560490"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, EnumId>_vtable_ty.560491"**
  store %"Bucket<string, EnumId>_vtable_ty.560491"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.560491"** %.26, align 8
  tail call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.560490"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, EnumId>.560490"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, EnumId>_hash_fnc"(%"Map<string, EnumId>.560477"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, EnumId>_resize"(%"Map<string, EnumId>.560477"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, EnumId>>.560492"* (%"Map<string, EnumId>.560477"*)*, %"Array<Bucket<string, EnumId>>.560492"* (%"Map<string, EnumId>.560477"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, EnumId>>.560492"* %.9(%"Map<string, EnumId>.560477"* %.1)
  %.14 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.560490"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, EnumId>.560490"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, EnumId>_vtable_ty.560491"**
  store %"Bucket<string, EnumId>_vtable_ty.560491"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.560491"** %.5016, align 8
  tail call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.560490"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, EnumId>.560490"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, EnumId>_vtable_ty.560491"**
  store %"Bucket<string, EnumId>_vtable_ty.560491"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.560491"** %.50, align 8
  tail call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.560490"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, EnumId>.560490"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)*, void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)*, %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, EnumId>.560490"* %.81(%"Array<Bucket<string, EnumId>>.560492"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)*, %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, EnumId>.560490"* %.90(%"Array<Bucket<string, EnumId>>.560492"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.91, i64 0, i32 2
  %.93 = load %EnumId.560399*, %EnumId.560399** %.92, align 8
  tail call void %.75(%"Map<string, EnumId>.560477"* nonnull %.1, %string.560217* %.84, %EnumId.560399* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, EnumId>_set"(%"Map<string, EnumId>.560477"* %.1, %string.560217* %.2, %EnumId.560399* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, EnumId>.560477"*)*, void (%"Map<string, EnumId>.560477"*)** %.25, align 8
  tail call void %.26(%"Map<string, EnumId>.560477"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, EnumId>.560477"*, %string.560217*)*, i64 (%"Map<string, EnumId>.560477"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, EnumId>.560477"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.44, i64 %.39
  %.46 = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, EnumId>.560490"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, EnumId>.560490"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.94, i64 %.91
  %.96 = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, EnumId>_vtable_ty.560491"*, %"Bucket<string, EnumId>_vtable_ty.560491"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, EnumId>_vtable_ty.560491", %"Bucket<string, EnumId>_vtable_ty.560491"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, EnumId>.560490"*, %string.560217*, %EnumId.560399*)*, void (%"Bucket<string, EnumId>.560490"*, %string.560217*, %EnumId.560399*)** %.99, align 8
  tail call void %.100(%"Bucket<string, EnumId>.560490"* %.96, %string.560217* %.2, %EnumId.560399* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.77, i64 %.72
  %.79 = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %EnumId.560399* @"Map<string, EnumId>_get"(%"Map<string, EnumId>.560477"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, EnumId>.560477"*, %string.560217*)*, i64 (%"Map<string, EnumId>.560477"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, EnumId>.560477"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.22, i64 %.17
  %.24 = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, EnumId>.560490"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.56, i64 %.50
  %.58 = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %EnumId.560399*, %EnumId.560399** %.79, align 8
  ret %EnumId.560399* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %EnumId.560399* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, EnumId>>_constructor"(%"Array<Bucket<string, EnumId>>.560492"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.560490"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, EnumId>>_resize"(%"Array<Bucket<string, EnumId>>.560492"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.560490"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, EnumId>>_swap"(%"Array<Bucket<string, EnumId>>.560492"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, EnumId>.560490"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, EnumId>.560490"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, EnumId>.560490"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, EnumId>>___sl__"(%"Array<Bucket<string, EnumId>>.560492"* %.1, %"Bucket<string, EnumId>.560490"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, EnumId>>.560492"*)*, void (%"Array<Bucket<string, EnumId>>.560492"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, EnumId>>.560492"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.31, i64 %.24
  store %"Bucket<string, EnumId>.560490"* %.2, %"Bucket<string, EnumId>.560490"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, EnumId>>___setitem__"(%"Array<Bucket<string, EnumId>>.560492"* nocapture readonly %.1, i64 %.2, %"Bucket<string, EnumId>.560490"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.30, i64 %.2
  store %"Bucket<string, EnumId>.560490"* %.3, %"Bucket<string, EnumId>.560490"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, EnumId>>_append"(%"Array<Bucket<string, EnumId>>.560492"* %.1, %"Bucket<string, EnumId>.560490"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)*, void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, EnumId>>.560492"* %.1, %"Bucket<string, EnumId>.560490"* %.2)
  ret void
}

define %"Bucket<string, EnumId>.560490"* @"Array<Bucket<string, EnumId>>___getitem__"(%"Array<Bucket<string, EnumId>>.560492"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.28, i64 %.2
  %.30 = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.29, align 8
  ret %"Bucket<string, EnumId>.560490"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, EnumId>.560490"* null
}

define i1 @"Array<Bucket<string, EnumId>>___eq__"(%"Array<Bucket<string, EnumId>>.560492"* %.1, %"Array<Bucket<string, EnumId>>.560492"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)*, %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, EnumId>.560490"* %.30(%"Array<Bucket<string, EnumId>>.560492"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)*, %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, EnumId>.560490"* %.37(%"Array<Bucket<string, EnumId>>.560492"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, EnumId>.560490"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, EnumId>.560490"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, EnumId>>___in__"(%"Array<Bucket<string, EnumId>>.560492"* %.1, %"Bucket<string, EnumId>.560490"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, EnumId>.560490"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)*, %"Bucket<string, EnumId>.560490"* (%"Array<Bucket<string, EnumId>>.560492"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, EnumId>.560490"* %.21(%"Array<Bucket<string, EnumId>>.560492"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, EnumId>.560490"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, EnumId>>_find"(%"Array<Bucket<string, EnumId>>.560492"* nocapture readonly %.1, %"Bucket<string, EnumId>.560490"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.560492", %"Array<Bucket<string, EnumId>>.560492"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, EnumId>.560490"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, EnumId>.560490"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, EnumId>>.560492"* @"Map<string, EnumId>_get_buckets"(%"Map<string, EnumId>.560477"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, EnumId>>.560492"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, EnumId>>_vtable_ty.560493"**
  store %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* @"Array<Bucket<string, EnumId>>_vtable_data", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, EnumId>.560490"**, %"Bucket<string, EnumId>.560490"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, EnumId>.560490"*, %"Bucket<string, EnumId>.560490"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, EnumId>.560490", %"Bucket<string, EnumId>.560490"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, EnumId>>.560492"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, EnumId>>_vtable_ty.560493"*, %"Array<Bucket<string, EnumId>>_vtable_ty.560493"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.560493", %"Array<Bucket<string, EnumId>>_vtable_ty.560493"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)*, void (%"Array<Bucket<string, EnumId>>.560492"*, %"Bucket<string, EnumId>.560490"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, EnumId>>.560492"* %.9, %"Bucket<string, EnumId>.560490"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.560495"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Type>_set"(%"Bucket<string, Type>.560495"* nocapture %.1, %string.560217* %.2, %Type.560381* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.1, i64 0, i32 2
  store %Type.560381* %.3, %Type.560381** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, Type>_constructor"(%"Map<string, Type>.560478"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.560495"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, Type>.560495"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, Type>_vtable_ty.560496"**
  store %"Bucket<string, Type>_vtable_ty.560496"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.560496"** %.266, align 8
  tail call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.560495"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, Type>.560495"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, Type>_vtable_ty.560496"**
  store %"Bucket<string, Type>_vtable_ty.560496"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.560496"** %.26, align 8
  tail call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.560495"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, Type>.560495"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, Type>_hash_fnc"(%"Map<string, Type>.560478"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, Type>_resize"(%"Map<string, Type>.560478"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, Type>>.560497"* (%"Map<string, Type>.560478"*)*, %"Array<Bucket<string, Type>>.560497"* (%"Map<string, Type>.560478"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, Type>>.560497"* %.9(%"Map<string, Type>.560478"* %.1)
  %.14 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.560495"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, Type>.560495"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, Type>_vtable_ty.560496"**
  store %"Bucket<string, Type>_vtable_ty.560496"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.560496"** %.5016, align 8
  tail call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.560495"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, Type>.560495"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, Type>_vtable_ty.560496"**
  store %"Bucket<string, Type>_vtable_ty.560496"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.560496"** %.50, align 8
  tail call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.560495"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, Type>.560495"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)*, void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)*, %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, Type>.560495"* %.81(%"Array<Bucket<string, Type>>.560497"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)*, %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, Type>.560495"* %.90(%"Array<Bucket<string, Type>>.560497"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.91, i64 0, i32 2
  %.93 = load %Type.560381*, %Type.560381** %.92, align 8
  tail call void %.75(%"Map<string, Type>.560478"* nonnull %.1, %string.560217* %.84, %Type.560381* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, Type>_set"(%"Map<string, Type>.560478"* %.1, %string.560217* %.2, %Type.560381* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, Type>.560478"*)*, void (%"Map<string, Type>.560478"*)** %.25, align 8
  tail call void %.26(%"Map<string, Type>.560478"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, Type>.560478"*, %string.560217*)*, i64 (%"Map<string, Type>.560478"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, Type>.560478"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.44, i64 %.39
  %.46 = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, Type>.560495"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, Type>.560495"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.94, i64 %.91
  %.96 = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, Type>_vtable_ty.560496"*, %"Bucket<string, Type>_vtable_ty.560496"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, Type>_vtable_ty.560496", %"Bucket<string, Type>_vtable_ty.560496"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, Type>.560495"*, %string.560217*, %Type.560381*)*, void (%"Bucket<string, Type>.560495"*, %string.560217*, %Type.560381*)** %.99, align 8
  tail call void %.100(%"Bucket<string, Type>.560495"* %.96, %string.560217* %.2, %Type.560381* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.77, i64 %.72
  %.79 = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %Type.560381* @"Map<string, Type>_get"(%"Map<string, Type>.560478"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, Type>.560478"*, %string.560217*)*, i64 (%"Map<string, Type>.560478"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, Type>.560478"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.22, i64 %.17
  %.24 = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, Type>.560495"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.56, i64 %.50
  %.58 = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %Type.560381*, %Type.560381** %.79, align 8
  ret %Type.560381* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %Type.560381* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, Type>>_constructor"(%"Array<Bucket<string, Type>>.560497"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.560495"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, Type>>_resize"(%"Array<Bucket<string, Type>>.560497"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.560495"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, Type>>_swap"(%"Array<Bucket<string, Type>>.560497"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, Type>.560495"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, Type>.560495"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, Type>.560495"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, Type>>___sl__"(%"Array<Bucket<string, Type>>.560497"* %.1, %"Bucket<string, Type>.560495"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, Type>>.560497"*)*, void (%"Array<Bucket<string, Type>>.560497"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, Type>>.560497"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.31, i64 %.24
  store %"Bucket<string, Type>.560495"* %.2, %"Bucket<string, Type>.560495"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, Type>>___setitem__"(%"Array<Bucket<string, Type>>.560497"* nocapture readonly %.1, i64 %.2, %"Bucket<string, Type>.560495"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.30, i64 %.2
  store %"Bucket<string, Type>.560495"* %.3, %"Bucket<string, Type>.560495"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, Type>>_append"(%"Array<Bucket<string, Type>>.560497"* %.1, %"Bucket<string, Type>.560495"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)*, void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, Type>>.560497"* %.1, %"Bucket<string, Type>.560495"* %.2)
  ret void
}

define %"Bucket<string, Type>.560495"* @"Array<Bucket<string, Type>>___getitem__"(%"Array<Bucket<string, Type>>.560497"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.28, i64 %.2
  %.30 = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.29, align 8
  ret %"Bucket<string, Type>.560495"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, Type>.560495"* null
}

define i1 @"Array<Bucket<string, Type>>___eq__"(%"Array<Bucket<string, Type>>.560497"* %.1, %"Array<Bucket<string, Type>>.560497"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)*, %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, Type>.560495"* %.30(%"Array<Bucket<string, Type>>.560497"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)*, %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, Type>.560495"* %.37(%"Array<Bucket<string, Type>>.560497"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, Type>.560495"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, Type>.560495"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, Type>>___in__"(%"Array<Bucket<string, Type>>.560497"* %.1, %"Bucket<string, Type>.560495"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, Type>.560495"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)*, %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, Type>.560495"* %.21(%"Array<Bucket<string, Type>>.560497"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, Type>.560495"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, Type>>_find"(%"Array<Bucket<string, Type>>.560497"* nocapture readonly %.1, %"Bucket<string, Type>.560495"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, Type>.560495"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, Type>.560495"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, Type>>.560497"* @"Map<string, Type>_get_buckets"(%"Map<string, Type>.560478"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, Type>>.560497"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, Type>>_vtable_ty.560498"**
  store %"Array<Bucket<string, Type>>_vtable_ty.560498"* @"Array<Bucket<string, Type>>_vtable_data", %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, Type>.560495"**, %"Bucket<string, Type>.560495"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, Type>.560495"*, %"Bucket<string, Type>.560495"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, Type>>.560497"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)*, void (%"Array<Bucket<string, Type>>.560497"*, %"Bucket<string, Type>.560495"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, Type>>.560497"* %.9, %"Bucket<string, Type>.560495"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Scope_constructor(%Scope.560473* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #4 {
.5:
  %.12 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.13 = bitcast i8* %.12 to %ScopeId.560471*
  %.14 = bitcast i8* %.12 to %ScopeId_vtable_ty.560472**
  store %ScopeId_vtable_ty.560472* @ScopeId_vtable_data, %ScopeId_vtable_ty.560472** %.14, align 8
  tail call void @ScopeId_constructor(%ScopeId.560471* %.13, i64 %.2, i64 %.3)
  %.17 = getelementptr inbounds %Scope.560473, %Scope.560473* %.1, i64 0, i32 1
  %0 = bitcast %ScopeId.560471** %.17 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %"Map<string, VarId>.560475"*
  %.22 = bitcast i8* %.20 to %"Map<string, VarId>_vtable_ty.560479"**
  store %"Map<string, VarId>_vtable_ty.560479"* @"Map<string, VarId>_vtable_data", %"Map<string, VarId>_vtable_ty.560479"** %.22, align 8
  tail call void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.560475"* %.21)
  %.25 = getelementptr inbounds %Scope.560473, %Scope.560473* %.1, i64 0, i32 2
  %1 = bitcast %"Map<string, VarId>.560475"** %.25 to i8**
  store i8* %.20, i8** %1, align 8
  %.28 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %"Map<string, ClassId>.560476"*
  %.30 = bitcast i8* %.28 to %"Map<string, ClassId>_vtable_ty.560484"**
  store %"Map<string, ClassId>_vtable_ty.560484"* @"Map<string, ClassId>_vtable_data", %"Map<string, ClassId>_vtable_ty.560484"** %.30, align 8
  tail call void @"Map<string, ClassId>_constructor"(%"Map<string, ClassId>.560476"* %.29)
  %.33 = getelementptr inbounds %Scope.560473, %Scope.560473* %.1, i64 0, i32 3
  %2 = bitcast %"Map<string, ClassId>.560476"** %.33 to i8**
  store i8* %.28, i8** %2, align 8
  %.36 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %"Map<string, VarId>.560475"*
  %.38 = bitcast i8* %.36 to %"Map<string, VarId>_vtable_ty.560479"**
  store %"Map<string, VarId>_vtable_ty.560479"* @"Map<string, VarId>_vtable_data", %"Map<string, VarId>_vtable_ty.560479"** %.38, align 8
  tail call void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.560475"* %.37)
  %.41 = getelementptr inbounds %Scope.560473, %Scope.560473* %.1, i64 0, i32 4
  %3 = bitcast %"Map<string, VarId>.560475"** %.41 to i8**
  store i8* %.36, i8** %3, align 8
  %.44 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %"Map<string, EnumId>.560477"*
  %.46 = bitcast i8* %.44 to %"Map<string, EnumId>_vtable_ty.560489"**
  store %"Map<string, EnumId>_vtable_ty.560489"* @"Map<string, EnumId>_vtable_data", %"Map<string, EnumId>_vtable_ty.560489"** %.46, align 8
  tail call void @"Map<string, EnumId>_constructor"(%"Map<string, EnumId>.560477"* %.45)
  %.49 = getelementptr inbounds %Scope.560473, %Scope.560473* %.1, i64 0, i32 5
  %4 = bitcast %"Map<string, EnumId>.560477"** %.49 to i8**
  store i8* %.44, i8** %4, align 8
  %.52 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.53 = bitcast i8* %.52 to %"Map<string, Type>.560478"*
  %.54 = bitcast i8* %.52 to %"Map<string, Type>_vtable_ty.560494"**
  store %"Map<string, Type>_vtable_ty.560494"* @"Map<string, Type>_vtable_data", %"Map<string, Type>_vtable_ty.560494"** %.54, align 8
  tail call void @"Map<string, Type>_constructor"(%"Map<string, Type>.560478"* %.53)
  %.57 = getelementptr inbounds %Scope.560473, %Scope.560473* %.1, i64 0, i32 7
  %5 = bitcast %"Map<string, Type>.560478"** %.57 to i8**
  store i8* %.52, i8** %5, align 8
  %.60 = getelementptr inbounds %Scope.560473, %Scope.560473* %.1, i64 0, i32 6
  store %ScopeId.560471* null, %ScopeId.560471** %.60, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FunctionArg_constructor(%FunctionArg.560499* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = bitcast %FunctionArg.560499* %.1 to %Expression.560401*
  tail call void @Expression_constructor(%Expression.560401* %.6, i64 7)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FunctionArg>_constructor"(%"Array<FunctionArg>.560503"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionArg.560499*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FunctionArg>_resize"(%"Array<FunctionArg>.560503"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionArg.560499*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FunctionArg>_swap"(%"Array<FunctionArg>.560503"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 1
  %.48 = load %FunctionArg.560499**, %FunctionArg.560499*** %.47, align 8
  %.49 = getelementptr inbounds %FunctionArg.560499*, %FunctionArg.560499** %.48, i64 %.2
  %4 = bitcast %FunctionArg.560499** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FunctionArg.560499*, %FunctionArg.560499** %.48, i64 %.3
  %5 = bitcast %FunctionArg.560499** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FunctionArg.560499**, %FunctionArg.560499*** %.47, align 8
  %.69 = getelementptr inbounds %FunctionArg.560499*, %FunctionArg.560499** %.67, i64 %.3
  %6 = bitcast %FunctionArg.560499** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionArg>___sl__"(%"Array<FunctionArg>.560503"* %.1, %FunctionArg.560499* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 0
  %.17 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FunctionArg>.560503"*)*, void (%"Array<FunctionArg>.560503"*)** %.18, align 8
  tail call void %.19(%"Array<FunctionArg>.560503"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 1
  %.31 = load %FunctionArg.560499**, %FunctionArg.560499*** %.30, align 8
  %.33 = getelementptr inbounds %FunctionArg.560499*, %FunctionArg.560499** %.31, i64 %.24
  store %FunctionArg.560499* %.2, %FunctionArg.560499** %.33, align 8
  ret void
}

define void @"Array<FunctionArg>___setitem__"(%"Array<FunctionArg>.560503"* nocapture readonly %.1, i64 %.2, %FunctionArg.560499* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 1
  %.30 = load %FunctionArg.560499**, %FunctionArg.560499*** %.29, align 8
  %.32 = getelementptr inbounds %FunctionArg.560499*, %FunctionArg.560499** %.30, i64 %.2
  store %FunctionArg.560499* %.3, %FunctionArg.560499** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionArg>_append"(%"Array<FunctionArg>.560503"* %.1, %FunctionArg.560499* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 0
  %.9 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)*, void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)** %.10, align 8
  tail call void %.11(%"Array<FunctionArg>.560503"* %.1, %FunctionArg.560499* %.2)
  ret void
}

define %FunctionArg.560499* @"Array<FunctionArg>___getitem__"(%"Array<FunctionArg>.560503"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 1
  %.28 = load %FunctionArg.560499**, %FunctionArg.560499*** %.27, align 8
  %.29 = getelementptr inbounds %FunctionArg.560499*, %FunctionArg.560499** %.28, i64 %.2
  %.30 = load %FunctionArg.560499*, %FunctionArg.560499** %.29, align 8
  ret %FunctionArg.560499* %.30

.4.endif:                                         ; preds = %.4
  ret %FunctionArg.560499* null
}

define i1 @"Array<FunctionArg>___eq__"(%"Array<FunctionArg>.560503"* %.1, %"Array<FunctionArg>.560503"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.28, i64 0, i32 5
  %.30 = load %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)*, %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)** %.29, align 8
  %.31 = tail call %FunctionArg.560499* %.30(%"Array<FunctionArg>.560503"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.35, i64 0, i32 5
  %.37 = load %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)*, %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)** %.36, align 8
  %.38 = tail call %FunctionArg.560499* %.37(%"Array<FunctionArg>.560503"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %FunctionArg.560499* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FunctionArg.560499* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FunctionArg>___in__"(%"Array<FunctionArg>.560503"* %.1, %FunctionArg.560499* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FunctionArg.560499* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.19, i64 0, i32 5
  %.21 = load %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)*, %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)** %.20, align 8
  %.22 = tail call %FunctionArg.560499* %.21(%"Array<FunctionArg>.560503"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %FunctionArg.560499* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FunctionArg>_find"(%"Array<FunctionArg>.560503"* nocapture readonly %.1, %FunctionArg.560499* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.1, i64 0, i32 1
  %.19 = load %FunctionArg.560499**, %FunctionArg.560499*** %.18, align 8
  %0 = ptrtoint %FunctionArg.560499* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FunctionArg.560499*, %FunctionArg.560499** %.19, i64 %storemerge5
  %1 = bitcast %FunctionArg.560499** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Function_constructor(%Function.560501* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %Function.560501, %Function.560501* %.1, i64 0, i32 7
  store i1 false, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Var_constructor(%Var.560505* nocapture %.1, %Expression.560401* %.2, %Type.560381* %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %Var.560505, %Var.560505* %.1, i64 0, i32 3
  store %Expression.560401* %.2, %Expression.560401** %.11, align 8
  %.15 = getelementptr inbounds %Var.560505, %Var.560505* %.1, i64 0, i32 1
  store %Type.560381* %.3, %Type.560381** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Const_constructor(%Const.560507* nocapture %.1, %Expression.560401* %.2, %Type.560381* %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %Const.560507, %Const.560507* %.1, i64 0, i32 3
  store %Expression.560401* %.2, %Expression.560401** %.11, align 8
  %.15 = getelementptr inbounds %Const.560507, %Const.560507* %.1, i64 0, i32 1
  store %Type.560381* %.3, %Type.560381** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ClassField_constructor(%ClassField.560509* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.1, i64 0, i32 2
  store i1 false, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ClassMethod_constructor(%ClassMethod.560511* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.1, i64 0, i32 8
  store i1 false, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ClassField>_constructor"(%"Array<ClassField>.560515"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 1
  %0 = bitcast %ClassField.560509*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassField>_resize"(%"Array<ClassField>.560515"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 1
  %0 = bitcast %ClassField.560509*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ClassField>_swap"(%"Array<ClassField>.560515"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 1
  %.48 = load %ClassField.560509**, %ClassField.560509*** %.47, align 8
  %.49 = getelementptr inbounds %ClassField.560509*, %ClassField.560509** %.48, i64 %.2
  %4 = bitcast %ClassField.560509** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ClassField.560509*, %ClassField.560509** %.48, i64 %.3
  %5 = bitcast %ClassField.560509** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ClassField.560509**, %ClassField.560509*** %.47, align 8
  %.69 = getelementptr inbounds %ClassField.560509*, %ClassField.560509** %.67, i64 %.3
  %6 = bitcast %ClassField.560509** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassField>___sl__"(%"Array<ClassField>.560515"* %.1, %ClassField.560509* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassField>.560515"*)*, void (%"Array<ClassField>.560515"*)** %.18, align 8
  tail call void %.19(%"Array<ClassField>.560515"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 1
  %.31 = load %ClassField.560509**, %ClassField.560509*** %.30, align 8
  %.33 = getelementptr inbounds %ClassField.560509*, %ClassField.560509** %.31, i64 %.24
  store %ClassField.560509* %.2, %ClassField.560509** %.33, align 8
  ret void
}

define void @"Array<ClassField>___setitem__"(%"Array<ClassField>.560515"* nocapture readonly %.1, i64 %.2, %ClassField.560509* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 1
  %.30 = load %ClassField.560509**, %ClassField.560509*** %.29, align 8
  %.32 = getelementptr inbounds %ClassField.560509*, %ClassField.560509** %.30, i64 %.2
  store %ClassField.560509* %.3, %ClassField.560509** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassField>_append"(%"Array<ClassField>.560515"* %.1, %ClassField.560509* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassField>.560515"*, %ClassField.560509*)*, void (%"Array<ClassField>.560515"*, %ClassField.560509*)** %.10, align 8
  tail call void %.11(%"Array<ClassField>.560515"* %.1, %ClassField.560509* %.2)
  ret void
}

define %ClassField.560509* @"Array<ClassField>___getitem__"(%"Array<ClassField>.560515"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 1
  %.28 = load %ClassField.560509**, %ClassField.560509*** %.27, align 8
  %.29 = getelementptr inbounds %ClassField.560509*, %ClassField.560509** %.28, i64 %.2
  %.30 = load %ClassField.560509*, %ClassField.560509** %.29, align 8
  ret %ClassField.560509* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassField.560509* null
}

define i1 @"Array<ClassField>___eq__"(%"Array<ClassField>.560515"* %.1, %"Array<ClassField>.560515"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.28, i64 0, i32 5
  %.30 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.29, align 8
  %.31 = tail call %ClassField.560509* %.30(%"Array<ClassField>.560515"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.35, i64 0, i32 5
  %.37 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.36, align 8
  %.38 = tail call %ClassField.560509* %.37(%"Array<ClassField>.560515"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassField.560509* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassField.560509* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassField>___in__"(%"Array<ClassField>.560515"* %.1, %ClassField.560509* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassField.560509* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.19, i64 0, i32 5
  %.21 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.20, align 8
  %.22 = tail call %ClassField.560509* %.21(%"Array<ClassField>.560515"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassField.560509* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassField>_find"(%"Array<ClassField>.560515"* nocapture readonly %.1, %ClassField.560509* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.1, i64 0, i32 1
  %.19 = load %ClassField.560509**, %ClassField.560509*** %.18, align 8
  %0 = ptrtoint %ClassField.560509* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassField.560509*, %ClassField.560509** %.19, i64 %storemerge5
  %1 = bitcast %ClassField.560509** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<ClassMethod>_constructor"(%"Array<ClassMethod>.560516"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 1
  %0 = bitcast %ClassMethod.560511*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassMethod>_resize"(%"Array<ClassMethod>.560516"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 1
  %0 = bitcast %ClassMethod.560511*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ClassMethod>_swap"(%"Array<ClassMethod>.560516"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 1
  %.48 = load %ClassMethod.560511**, %ClassMethod.560511*** %.47, align 8
  %.49 = getelementptr inbounds %ClassMethod.560511*, %ClassMethod.560511** %.48, i64 %.2
  %4 = bitcast %ClassMethod.560511** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ClassMethod.560511*, %ClassMethod.560511** %.48, i64 %.3
  %5 = bitcast %ClassMethod.560511** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ClassMethod.560511**, %ClassMethod.560511*** %.47, align 8
  %.69 = getelementptr inbounds %ClassMethod.560511*, %ClassMethod.560511** %.67, i64 %.3
  %6 = bitcast %ClassMethod.560511** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassMethod>___sl__"(%"Array<ClassMethod>.560516"* %.1, %ClassMethod.560511* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassMethod>.560516"*)*, void (%"Array<ClassMethod>.560516"*)** %.18, align 8
  tail call void %.19(%"Array<ClassMethod>.560516"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 1
  %.31 = load %ClassMethod.560511**, %ClassMethod.560511*** %.30, align 8
  %.33 = getelementptr inbounds %ClassMethod.560511*, %ClassMethod.560511** %.31, i64 %.24
  store %ClassMethod.560511* %.2, %ClassMethod.560511** %.33, align 8
  ret void
}

define void @"Array<ClassMethod>___setitem__"(%"Array<ClassMethod>.560516"* nocapture readonly %.1, i64 %.2, %ClassMethod.560511* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 1
  %.30 = load %ClassMethod.560511**, %ClassMethod.560511*** %.29, align 8
  %.32 = getelementptr inbounds %ClassMethod.560511*, %ClassMethod.560511** %.30, i64 %.2
  store %ClassMethod.560511* %.3, %ClassMethod.560511** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassMethod>_append"(%"Array<ClassMethod>.560516"* %.1, %ClassMethod.560511* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)*, void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)** %.10, align 8
  tail call void %.11(%"Array<ClassMethod>.560516"* %.1, %ClassMethod.560511* %.2)
  ret void
}

define %ClassMethod.560511* @"Array<ClassMethod>___getitem__"(%"Array<ClassMethod>.560516"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 1
  %.28 = load %ClassMethod.560511**, %ClassMethod.560511*** %.27, align 8
  %.29 = getelementptr inbounds %ClassMethod.560511*, %ClassMethod.560511** %.28, i64 %.2
  %.30 = load %ClassMethod.560511*, %ClassMethod.560511** %.29, align 8
  ret %ClassMethod.560511* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassMethod.560511* null
}

define i1 @"Array<ClassMethod>___eq__"(%"Array<ClassMethod>.560516"* %.1, %"Array<ClassMethod>.560516"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.28, i64 0, i32 5
  %.30 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.29, align 8
  %.31 = tail call %ClassMethod.560511* %.30(%"Array<ClassMethod>.560516"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.35, i64 0, i32 5
  %.37 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.36, align 8
  %.38 = tail call %ClassMethod.560511* %.37(%"Array<ClassMethod>.560516"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassMethod.560511* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassMethod.560511* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassMethod>___in__"(%"Array<ClassMethod>.560516"* %.1, %ClassMethod.560511* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassMethod.560511* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.19, i64 0, i32 5
  %.21 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.20, align 8
  %.22 = tail call %ClassMethod.560511* %.21(%"Array<ClassMethod>.560516"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassMethod.560511* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassMethod>_find"(%"Array<ClassMethod>.560516"* nocapture readonly %.1, %ClassMethod.560511* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1, i64 0, i32 1
  %.19 = load %ClassMethod.560511**, %ClassMethod.560511*** %.18, align 8
  %0 = ptrtoint %ClassMethod.560511* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassMethod.560511*, %ClassMethod.560511** %.19, i64 %storemerge5
  %1 = bitcast %ClassMethod.560511** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.560521"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, PropId>_set"(%"Bucket<string, PropId>.560521"* nocapture %.1, %string.560217* %.2, %PropId.560449* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.1, i64 0, i32 2
  store %PropId.560449* %.3, %PropId.560449** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.560517"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.560521"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, PropId>.560521"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, PropId>_vtable_ty.560522"**
  store %"Bucket<string, PropId>_vtable_ty.560522"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.560522"** %.266, align 8
  tail call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.560521"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, PropId>.560521"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, PropId>_vtable_ty.560522"**
  store %"Bucket<string, PropId>_vtable_ty.560522"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.560522"** %.26, align 8
  tail call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.560521"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, PropId>.560521"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, PropId>_hash_fnc"(%"Map<string, PropId>.560517"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, PropId>_resize"(%"Map<string, PropId>.560517"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)*, %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, PropId>>.560523"* %.9(%"Map<string, PropId>.560517"* %.1)
  %.14 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.560521"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, PropId>.560521"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, PropId>_vtable_ty.560522"**
  store %"Bucket<string, PropId>_vtable_ty.560522"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.560522"** %.5016, align 8
  tail call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.560521"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, PropId>.560521"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, PropId>_vtable_ty.560522"**
  store %"Bucket<string, PropId>_vtable_ty.560522"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.560522"** %.50, align 8
  tail call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.560521"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, PropId>.560521"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, PropId>.560521"* %.81(%"Array<Bucket<string, PropId>>.560523"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, PropId>.560521"* %.90(%"Array<Bucket<string, PropId>>.560523"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.91, i64 0, i32 2
  %.93 = load %PropId.560449*, %PropId.560449** %.92, align 8
  tail call void %.75(%"Map<string, PropId>.560517"* nonnull %.1, %string.560217* %.84, %PropId.560449* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, PropId>_set"(%"Map<string, PropId>.560517"* %.1, %string.560217* %.2, %PropId.560449* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, PropId>.560517"*)*, void (%"Map<string, PropId>.560517"*)** %.25, align 8
  tail call void %.26(%"Map<string, PropId>.560517"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, PropId>.560517"*, %string.560217*)*, i64 (%"Map<string, PropId>.560517"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, PropId>.560517"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.44, i64 %.39
  %.46 = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, PropId>.560521"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, PropId>.560521"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.94, i64 %.91
  %.96 = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, PropId>_vtable_ty.560522"*, %"Bucket<string, PropId>_vtable_ty.560522"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, PropId>_vtable_ty.560522", %"Bucket<string, PropId>_vtable_ty.560522"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, PropId>.560521"*, %string.560217*, %PropId.560449*)*, void (%"Bucket<string, PropId>.560521"*, %string.560217*, %PropId.560449*)** %.99, align 8
  tail call void %.100(%"Bucket<string, PropId>.560521"* %.96, %string.560217* %.2, %PropId.560449* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.77, i64 %.72
  %.79 = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %PropId.560449* @"Map<string, PropId>_get"(%"Map<string, PropId>.560517"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, PropId>.560517"*, %string.560217*)*, i64 (%"Map<string, PropId>.560517"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, PropId>.560517"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.22, i64 %.17
  %.24 = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, PropId>.560521"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.56, i64 %.50
  %.58 = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %PropId.560449*, %PropId.560449** %.79, align 8
  ret %PropId.560449* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %PropId.560449* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, PropId>>_constructor"(%"Array<Bucket<string, PropId>>.560523"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.560521"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, PropId>>_resize"(%"Array<Bucket<string, PropId>>.560523"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.560521"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, PropId>>_swap"(%"Array<Bucket<string, PropId>>.560523"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, PropId>.560521"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, PropId>.560521"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, PropId>.560521"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, PropId>>___sl__"(%"Array<Bucket<string, PropId>>.560523"* %.1, %"Bucket<string, PropId>.560521"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, PropId>>.560523"*)*, void (%"Array<Bucket<string, PropId>>.560523"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, PropId>>.560523"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.31, i64 %.24
  store %"Bucket<string, PropId>.560521"* %.2, %"Bucket<string, PropId>.560521"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, PropId>>___setitem__"(%"Array<Bucket<string, PropId>>.560523"* nocapture readonly %.1, i64 %.2, %"Bucket<string, PropId>.560521"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.30, i64 %.2
  store %"Bucket<string, PropId>.560521"* %.3, %"Bucket<string, PropId>.560521"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, PropId>>_append"(%"Array<Bucket<string, PropId>>.560523"* %.1, %"Bucket<string, PropId>.560521"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)*, void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, PropId>>.560523"* %.1, %"Bucket<string, PropId>.560521"* %.2)
  ret void
}

define %"Bucket<string, PropId>.560521"* @"Array<Bucket<string, PropId>>___getitem__"(%"Array<Bucket<string, PropId>>.560523"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.28, i64 %.2
  %.30 = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.29, align 8
  ret %"Bucket<string, PropId>.560521"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, PropId>.560521"* null
}

define i1 @"Array<Bucket<string, PropId>>___eq__"(%"Array<Bucket<string, PropId>>.560523"* %.1, %"Array<Bucket<string, PropId>>.560523"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, PropId>.560521"* %.30(%"Array<Bucket<string, PropId>>.560523"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, PropId>.560521"* %.37(%"Array<Bucket<string, PropId>>.560523"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, PropId>.560521"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, PropId>.560521"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, PropId>>___in__"(%"Array<Bucket<string, PropId>>.560523"* %.1, %"Bucket<string, PropId>.560521"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, PropId>.560521"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, PropId>.560521"* %.21(%"Array<Bucket<string, PropId>>.560523"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, PropId>.560521"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, PropId>>_find"(%"Array<Bucket<string, PropId>>.560523"* nocapture readonly %.1, %"Bucket<string, PropId>.560521"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, PropId>.560521"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, PropId>.560521"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, PropId>>.560523"* @"Map<string, PropId>_get_buckets"(%"Map<string, PropId>.560517"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, PropId>>.560523"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, PropId>>_vtable_ty.560524"**
  store %"Array<Bucket<string, PropId>>_vtable_ty.560524"* @"Array<Bucket<string, PropId>>_vtable_data", %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, PropId>.560521"**, %"Bucket<string, PropId>.560521"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, PropId>.560521"*, %"Bucket<string, PropId>.560521"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, PropId>>.560523"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)*, void (%"Array<Bucket<string, PropId>>.560523"*, %"Bucket<string, PropId>.560521"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, PropId>>.560523"* %.9, %"Bucket<string, PropId>.560521"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Class_constructor(%Class.560513* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Class.560513, %Class.560513* %.1, i64 0, i32 4
  store %PropId.560449* null, %PropId.560449** %.6, align 8
  %.12 = getelementptr inbounds %Class.560513, %Class.560513* %.1, i64 0, i32 9
  %0 = bitcast i64* %.12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  %.16 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.18 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.18 to %"Array<ClassField>_vtable_ty.560518"**
  store %"Array<ClassField>_vtable_ty.560518"* @"Array<ClassField>_vtable_data", %"Array<ClassField>_vtable_ty.560518"** %.20, align 8
  %.22 = getelementptr inbounds i8, i8* %.18, i64 8
  %1 = bitcast i8* %.22 to i8**
  store i8* %.16, i8** %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.18, i64 16
  %2 = bitcast i8* %.24 to i64*
  store i64 0, i64* %2, align 8
  %.26 = getelementptr inbounds i8, i8* %.18, i64 24
  %3 = bitcast i8* %.26 to i64*
  store i64 8, i64* %3, align 8
  %.28 = getelementptr inbounds %Class.560513, %Class.560513* %.1, i64 0, i32 5
  %4 = bitcast %"Array<ClassField>.560515"** %.28 to i8**
  store i8* %.18, i8** %4, align 8
  %.32 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.34 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.36 = bitcast i8* %.34 to %"Array<ClassMethod>_vtable_ty.560519"**
  store %"Array<ClassMethod>_vtable_ty.560519"* @"Array<ClassMethod>_vtable_data", %"Array<ClassMethod>_vtable_ty.560519"** %.36, align 8
  %.38 = getelementptr inbounds i8, i8* %.34, i64 8
  %5 = bitcast i8* %.38 to i8**
  store i8* %.32, i8** %5, align 8
  %.40 = getelementptr inbounds i8, i8* %.34, i64 16
  %6 = bitcast i8* %.40 to i64*
  store i64 0, i64* %6, align 8
  %.42 = getelementptr inbounds i8, i8* %.34, i64 24
  %7 = bitcast i8* %.42 to i64*
  store i64 8, i64* %7, align 8
  %.44 = getelementptr inbounds %Class.560513, %Class.560513* %.1, i64 0, i32 6
  %8 = bitcast %"Array<ClassMethod>.560516"** %.44 to i8**
  store i8* %.34, i8** %8, align 8
  %.47 = getelementptr inbounds %Class.560513, %Class.560513* %.1, i64 0, i32 11
  store i1 false, i1* %.47, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumField_constructor(%EnumField.560525* nocapture %.1, %string.560217* %.2) local_unnamed_addr #2 {
.4:
  %.9 = getelementptr inbounds %EnumField.560525, %EnumField.560525* %.1, i64 0, i32 2
  store %string.560217* %.2, %string.560217** %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<EnumField>_constructor"(%"Array<EnumField>.560529"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 1
  %0 = bitcast %EnumField.560525*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumField>_resize"(%"Array<EnumField>.560529"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 1
  %0 = bitcast %EnumField.560525*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<EnumField>_swap"(%"Array<EnumField>.560529"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 1
  %.48 = load %EnumField.560525**, %EnumField.560525*** %.47, align 8
  %.49 = getelementptr inbounds %EnumField.560525*, %EnumField.560525** %.48, i64 %.2
  %4 = bitcast %EnumField.560525** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %EnumField.560525*, %EnumField.560525** %.48, i64 %.3
  %5 = bitcast %EnumField.560525** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %EnumField.560525**, %EnumField.560525*** %.47, align 8
  %.69 = getelementptr inbounds %EnumField.560525*, %EnumField.560525** %.67, i64 %.3
  %6 = bitcast %EnumField.560525** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumField>___sl__"(%"Array<EnumField>.560529"* %.1, %EnumField.560525* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumField>.560529"*)*, void (%"Array<EnumField>.560529"*)** %.18, align 8
  tail call void %.19(%"Array<EnumField>.560529"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 1
  %.31 = load %EnumField.560525**, %EnumField.560525*** %.30, align 8
  %.33 = getelementptr inbounds %EnumField.560525*, %EnumField.560525** %.31, i64 %.24
  store %EnumField.560525* %.2, %EnumField.560525** %.33, align 8
  ret void
}

define void @"Array<EnumField>___setitem__"(%"Array<EnumField>.560529"* nocapture readonly %.1, i64 %.2, %EnumField.560525* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 1
  %.30 = load %EnumField.560525**, %EnumField.560525*** %.29, align 8
  %.32 = getelementptr inbounds %EnumField.560525*, %EnumField.560525** %.30, i64 %.2
  store %EnumField.560525* %.3, %EnumField.560525** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumField>_append"(%"Array<EnumField>.560529"* %.1, %EnumField.560525* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumField>.560529"*, %EnumField.560525*)*, void (%"Array<EnumField>.560529"*, %EnumField.560525*)** %.10, align 8
  tail call void %.11(%"Array<EnumField>.560529"* %.1, %EnumField.560525* %.2)
  ret void
}

define %EnumField.560525* @"Array<EnumField>___getitem__"(%"Array<EnumField>.560529"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 1
  %.28 = load %EnumField.560525**, %EnumField.560525*** %.27, align 8
  %.29 = getelementptr inbounds %EnumField.560525*, %EnumField.560525** %.28, i64 %.2
  %.30 = load %EnumField.560525*, %EnumField.560525** %.29, align 8
  ret %EnumField.560525* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumField.560525* null
}

define i1 @"Array<EnumField>___eq__"(%"Array<EnumField>.560529"* %.1, %"Array<EnumField>.560529"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.28, i64 0, i32 5
  %.30 = load %EnumField.560525* (%"Array<EnumField>.560529"*, i64)*, %EnumField.560525* (%"Array<EnumField>.560529"*, i64)** %.29, align 8
  %.31 = tail call %EnumField.560525* %.30(%"Array<EnumField>.560529"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.35, i64 0, i32 5
  %.37 = load %EnumField.560525* (%"Array<EnumField>.560529"*, i64)*, %EnumField.560525* (%"Array<EnumField>.560529"*, i64)** %.36, align 8
  %.38 = tail call %EnumField.560525* %.37(%"Array<EnumField>.560529"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumField.560525* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumField.560525* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumField>___in__"(%"Array<EnumField>.560529"* %.1, %EnumField.560525* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumField.560525* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.19, i64 0, i32 5
  %.21 = load %EnumField.560525* (%"Array<EnumField>.560529"*, i64)*, %EnumField.560525* (%"Array<EnumField>.560529"*, i64)** %.20, align 8
  %.22 = tail call %EnumField.560525* %.21(%"Array<EnumField>.560529"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumField.560525* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumField>_find"(%"Array<EnumField>.560529"* nocapture readonly %.1, %EnumField.560525* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.1, i64 0, i32 1
  %.19 = load %EnumField.560525**, %EnumField.560525*** %.18, align 8
  %0 = ptrtoint %EnumField.560525* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumField.560525*, %EnumField.560525** %.19, i64 %storemerge5
  %1 = bitcast %EnumField.560525** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Enum_constructor(%Enum.560527* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<EnumField>_vtable_ty.560530"**
  store %"Array<EnumField>_vtable_ty.560530"* @"Array<EnumField>_vtable_data", %"Array<EnumField>_vtable_ty.560530"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Enum.560527, %Enum.560527* %.1, i64 0, i32 3
  %3 = bitcast %"Array<EnumField>.560529"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Var>_constructor"(%"Array<Var>.560533"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 1
  %0 = bitcast %Var.560505*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Var>_resize"(%"Array<Var>.560533"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 1
  %0 = bitcast %Var.560505*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Var>_swap"(%"Array<Var>.560533"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 1
  %.48 = load %Var.560505**, %Var.560505*** %.47, align 8
  %.49 = getelementptr inbounds %Var.560505*, %Var.560505** %.48, i64 %.2
  %4 = bitcast %Var.560505** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Var.560505*, %Var.560505** %.48, i64 %.3
  %5 = bitcast %Var.560505** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Var.560505**, %Var.560505*** %.47, align 8
  %.69 = getelementptr inbounds %Var.560505*, %Var.560505** %.67, i64 %.3
  %6 = bitcast %Var.560505** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Var>___sl__"(%"Array<Var>.560533"* %.1, %Var.560505* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 0
  %.17 = load %"Array<Var>_vtable_ty.560541"*, %"Array<Var>_vtable_ty.560541"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Var>_vtable_ty.560541", %"Array<Var>_vtable_ty.560541"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Var>.560533"*)*, void (%"Array<Var>.560533"*)** %.18, align 8
  tail call void %.19(%"Array<Var>.560533"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 1
  %.31 = load %Var.560505**, %Var.560505*** %.30, align 8
  %.33 = getelementptr inbounds %Var.560505*, %Var.560505** %.31, i64 %.24
  store %Var.560505* %.2, %Var.560505** %.33, align 8
  ret void
}

define void @"Array<Var>___setitem__"(%"Array<Var>.560533"* nocapture readonly %.1, i64 %.2, %Var.560505* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 1
  %.30 = load %Var.560505**, %Var.560505*** %.29, align 8
  %.32 = getelementptr inbounds %Var.560505*, %Var.560505** %.30, i64 %.2
  store %Var.560505* %.3, %Var.560505** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Var>_append"(%"Array<Var>.560533"* %.1, %Var.560505* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 0
  %.9 = load %"Array<Var>_vtable_ty.560541"*, %"Array<Var>_vtable_ty.560541"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Var>_vtable_ty.560541", %"Array<Var>_vtable_ty.560541"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Var>.560533"*, %Var.560505*)*, void (%"Array<Var>.560533"*, %Var.560505*)** %.10, align 8
  tail call void %.11(%"Array<Var>.560533"* %.1, %Var.560505* %.2)
  ret void
}

define %Var.560505* @"Array<Var>___getitem__"(%"Array<Var>.560533"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 1
  %.28 = load %Var.560505**, %Var.560505*** %.27, align 8
  %.29 = getelementptr inbounds %Var.560505*, %Var.560505** %.28, i64 %.2
  %.30 = load %Var.560505*, %Var.560505** %.29, align 8
  ret %Var.560505* %.30

.4.endif:                                         ; preds = %.4
  ret %Var.560505* null
}

define i1 @"Array<Var>___eq__"(%"Array<Var>.560533"* %.1, %"Array<Var>.560533"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Var>_vtable_ty.560541"*, %"Array<Var>_vtable_ty.560541"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Var>_vtable_ty.560541", %"Array<Var>_vtable_ty.560541"* %.28, i64 0, i32 5
  %.30 = load %Var.560505* (%"Array<Var>.560533"*, i64)*, %Var.560505* (%"Array<Var>.560533"*, i64)** %.29, align 8
  %.31 = tail call %Var.560505* %.30(%"Array<Var>.560533"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Var>_vtable_ty.560541"*, %"Array<Var>_vtable_ty.560541"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Var>_vtable_ty.560541", %"Array<Var>_vtable_ty.560541"* %.35, i64 0, i32 5
  %.37 = load %Var.560505* (%"Array<Var>.560533"*, i64)*, %Var.560505* (%"Array<Var>.560533"*, i64)** %.36, align 8
  %.38 = tail call %Var.560505* %.37(%"Array<Var>.560533"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Var.560505* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Var.560505* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Var>___in__"(%"Array<Var>.560533"* %.1, %Var.560505* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Var.560505* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Var>_vtable_ty.560541"*, %"Array<Var>_vtable_ty.560541"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Var>_vtable_ty.560541", %"Array<Var>_vtable_ty.560541"* %.19, i64 0, i32 5
  %.21 = load %Var.560505* (%"Array<Var>.560533"*, i64)*, %Var.560505* (%"Array<Var>.560533"*, i64)** %.20, align 8
  %.22 = tail call %Var.560505* %.21(%"Array<Var>.560533"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Var.560505* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Var>_find"(%"Array<Var>.560533"* nocapture readonly %.1, %Var.560505* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.1, i64 0, i32 1
  %.19 = load %Var.560505**, %Var.560505*** %.18, align 8
  %0 = ptrtoint %Var.560505* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Var.560505*, %Var.560505** %.19, i64 %storemerge5
  %1 = bitcast %Var.560505** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<Const>_constructor"(%"Array<Const>.560534"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 1
  %0 = bitcast %Const.560507*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Const>_resize"(%"Array<Const>.560534"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 1
  %0 = bitcast %Const.560507*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Const>_swap"(%"Array<Const>.560534"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 1
  %.48 = load %Const.560507**, %Const.560507*** %.47, align 8
  %.49 = getelementptr inbounds %Const.560507*, %Const.560507** %.48, i64 %.2
  %4 = bitcast %Const.560507** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Const.560507*, %Const.560507** %.48, i64 %.3
  %5 = bitcast %Const.560507** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Const.560507**, %Const.560507*** %.47, align 8
  %.69 = getelementptr inbounds %Const.560507*, %Const.560507** %.67, i64 %.3
  %6 = bitcast %Const.560507** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Const>___sl__"(%"Array<Const>.560534"* %.1, %Const.560507* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 0
  %.17 = load %"Array<Const>_vtable_ty.560542"*, %"Array<Const>_vtable_ty.560542"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Const>_vtable_ty.560542", %"Array<Const>_vtable_ty.560542"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Const>.560534"*)*, void (%"Array<Const>.560534"*)** %.18, align 8
  tail call void %.19(%"Array<Const>.560534"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 1
  %.31 = load %Const.560507**, %Const.560507*** %.30, align 8
  %.33 = getelementptr inbounds %Const.560507*, %Const.560507** %.31, i64 %.24
  store %Const.560507* %.2, %Const.560507** %.33, align 8
  ret void
}

define void @"Array<Const>___setitem__"(%"Array<Const>.560534"* nocapture readonly %.1, i64 %.2, %Const.560507* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 1
  %.30 = load %Const.560507**, %Const.560507*** %.29, align 8
  %.32 = getelementptr inbounds %Const.560507*, %Const.560507** %.30, i64 %.2
  store %Const.560507* %.3, %Const.560507** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Const>_append"(%"Array<Const>.560534"* %.1, %Const.560507* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 0
  %.9 = load %"Array<Const>_vtable_ty.560542"*, %"Array<Const>_vtable_ty.560542"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Const>_vtable_ty.560542", %"Array<Const>_vtable_ty.560542"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Const>.560534"*, %Const.560507*)*, void (%"Array<Const>.560534"*, %Const.560507*)** %.10, align 8
  tail call void %.11(%"Array<Const>.560534"* %.1, %Const.560507* %.2)
  ret void
}

define %Const.560507* @"Array<Const>___getitem__"(%"Array<Const>.560534"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 1
  %.28 = load %Const.560507**, %Const.560507*** %.27, align 8
  %.29 = getelementptr inbounds %Const.560507*, %Const.560507** %.28, i64 %.2
  %.30 = load %Const.560507*, %Const.560507** %.29, align 8
  ret %Const.560507* %.30

.4.endif:                                         ; preds = %.4
  ret %Const.560507* null
}

define i1 @"Array<Const>___eq__"(%"Array<Const>.560534"* %.1, %"Array<Const>.560534"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Const>_vtable_ty.560542"*, %"Array<Const>_vtable_ty.560542"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Const>_vtable_ty.560542", %"Array<Const>_vtable_ty.560542"* %.28, i64 0, i32 5
  %.30 = load %Const.560507* (%"Array<Const>.560534"*, i64)*, %Const.560507* (%"Array<Const>.560534"*, i64)** %.29, align 8
  %.31 = tail call %Const.560507* %.30(%"Array<Const>.560534"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Const>_vtable_ty.560542"*, %"Array<Const>_vtable_ty.560542"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Const>_vtable_ty.560542", %"Array<Const>_vtable_ty.560542"* %.35, i64 0, i32 5
  %.37 = load %Const.560507* (%"Array<Const>.560534"*, i64)*, %Const.560507* (%"Array<Const>.560534"*, i64)** %.36, align 8
  %.38 = tail call %Const.560507* %.37(%"Array<Const>.560534"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Const.560507* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Const.560507* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Const>___in__"(%"Array<Const>.560534"* %.1, %Const.560507* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Const.560507* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Const>_vtable_ty.560542"*, %"Array<Const>_vtable_ty.560542"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Const>_vtable_ty.560542", %"Array<Const>_vtable_ty.560542"* %.19, i64 0, i32 5
  %.21 = load %Const.560507* (%"Array<Const>.560534"*, i64)*, %Const.560507* (%"Array<Const>.560534"*, i64)** %.20, align 8
  %.22 = tail call %Const.560507* %.21(%"Array<Const>.560534"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Const.560507* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Const>_find"(%"Array<Const>.560534"* nocapture readonly %.1, %Const.560507* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.1, i64 0, i32 1
  %.19 = load %Const.560507**, %Const.560507*** %.18, align 8
  %0 = ptrtoint %Const.560507* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Const.560507*, %Const.560507** %.19, i64 %storemerge5
  %1 = bitcast %Const.560507** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<Class>_constructor"(%"Array<Class>.560535"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 1
  %0 = bitcast %Class.560513*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Class>_resize"(%"Array<Class>.560535"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 1
  %0 = bitcast %Class.560513*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Class>_swap"(%"Array<Class>.560535"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 1
  %.48 = load %Class.560513**, %Class.560513*** %.47, align 8
  %.49 = getelementptr inbounds %Class.560513*, %Class.560513** %.48, i64 %.2
  %4 = bitcast %Class.560513** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Class.560513*, %Class.560513** %.48, i64 %.3
  %5 = bitcast %Class.560513** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Class.560513**, %Class.560513*** %.47, align 8
  %.69 = getelementptr inbounds %Class.560513*, %Class.560513** %.67, i64 %.3
  %6 = bitcast %Class.560513** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Class>___sl__"(%"Array<Class>.560535"* %.1, %Class.560513* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 0
  %.17 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Class>.560535"*)*, void (%"Array<Class>.560535"*)** %.18, align 8
  tail call void %.19(%"Array<Class>.560535"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 1
  %.31 = load %Class.560513**, %Class.560513*** %.30, align 8
  %.33 = getelementptr inbounds %Class.560513*, %Class.560513** %.31, i64 %.24
  store %Class.560513* %.2, %Class.560513** %.33, align 8
  ret void
}

define void @"Array<Class>___setitem__"(%"Array<Class>.560535"* nocapture readonly %.1, i64 %.2, %Class.560513* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 1
  %.30 = load %Class.560513**, %Class.560513*** %.29, align 8
  %.32 = getelementptr inbounds %Class.560513*, %Class.560513** %.30, i64 %.2
  store %Class.560513* %.3, %Class.560513** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Class>_append"(%"Array<Class>.560535"* %.1, %Class.560513* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 0
  %.9 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Class>.560535"*, %Class.560513*)*, void (%"Array<Class>.560535"*, %Class.560513*)** %.10, align 8
  tail call void %.11(%"Array<Class>.560535"* %.1, %Class.560513* %.2)
  ret void
}

define %Class.560513* @"Array<Class>___getitem__"(%"Array<Class>.560535"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 1
  %.28 = load %Class.560513**, %Class.560513*** %.27, align 8
  %.29 = getelementptr inbounds %Class.560513*, %Class.560513** %.28, i64 %.2
  %.30 = load %Class.560513*, %Class.560513** %.29, align 8
  ret %Class.560513* %.30

.4.endif:                                         ; preds = %.4
  ret %Class.560513* null
}

define i1 @"Array<Class>___eq__"(%"Array<Class>.560535"* %.1, %"Array<Class>.560535"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.28, i64 0, i32 5
  %.30 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.29, align 8
  %.31 = tail call %Class.560513* %.30(%"Array<Class>.560535"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.35, i64 0, i32 5
  %.37 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.36, align 8
  %.38 = tail call %Class.560513* %.37(%"Array<Class>.560535"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Class.560513* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Class.560513* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Class>___in__"(%"Array<Class>.560535"* %.1, %Class.560513* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Class.560513* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.19, i64 0, i32 5
  %.21 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.20, align 8
  %.22 = tail call %Class.560513* %.21(%"Array<Class>.560535"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Class.560513* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Class>_find"(%"Array<Class>.560535"* nocapture readonly %.1, %Class.560513* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.1, i64 0, i32 1
  %.19 = load %Class.560513**, %Class.560513*** %.18, align 8
  %0 = ptrtoint %Class.560513* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Class.560513*, %Class.560513** %.19, i64 %storemerge5
  %1 = bitcast %Class.560513** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<Function>_constructor"(%"Array<Function>.560536"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 1
  %0 = bitcast %Function.560501*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Function>_resize"(%"Array<Function>.560536"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 1
  %0 = bitcast %Function.560501*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Function>_swap"(%"Array<Function>.560536"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 1
  %.48 = load %Function.560501**, %Function.560501*** %.47, align 8
  %.49 = getelementptr inbounds %Function.560501*, %Function.560501** %.48, i64 %.2
  %4 = bitcast %Function.560501** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Function.560501*, %Function.560501** %.48, i64 %.3
  %5 = bitcast %Function.560501** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Function.560501**, %Function.560501*** %.47, align 8
  %.69 = getelementptr inbounds %Function.560501*, %Function.560501** %.67, i64 %.3
  %6 = bitcast %Function.560501** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Function>___sl__"(%"Array<Function>.560536"* %.1, %Function.560501* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 0
  %.17 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Function>.560536"*)*, void (%"Array<Function>.560536"*)** %.18, align 8
  tail call void %.19(%"Array<Function>.560536"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 1
  %.31 = load %Function.560501**, %Function.560501*** %.30, align 8
  %.33 = getelementptr inbounds %Function.560501*, %Function.560501** %.31, i64 %.24
  store %Function.560501* %.2, %Function.560501** %.33, align 8
  ret void
}

define void @"Array<Function>___setitem__"(%"Array<Function>.560536"* nocapture readonly %.1, i64 %.2, %Function.560501* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 1
  %.30 = load %Function.560501**, %Function.560501*** %.29, align 8
  %.32 = getelementptr inbounds %Function.560501*, %Function.560501** %.30, i64 %.2
  store %Function.560501* %.3, %Function.560501** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Function>_append"(%"Array<Function>.560536"* %.1, %Function.560501* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 0
  %.9 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Function>.560536"*, %Function.560501*)*, void (%"Array<Function>.560536"*, %Function.560501*)** %.10, align 8
  tail call void %.11(%"Array<Function>.560536"* %.1, %Function.560501* %.2)
  ret void
}

define %Function.560501* @"Array<Function>___getitem__"(%"Array<Function>.560536"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 1
  %.28 = load %Function.560501**, %Function.560501*** %.27, align 8
  %.29 = getelementptr inbounds %Function.560501*, %Function.560501** %.28, i64 %.2
  %.30 = load %Function.560501*, %Function.560501** %.29, align 8
  ret %Function.560501* %.30

.4.endif:                                         ; preds = %.4
  ret %Function.560501* null
}

define i1 @"Array<Function>___eq__"(%"Array<Function>.560536"* %.1, %"Array<Function>.560536"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.28, i64 0, i32 5
  %.30 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.29, align 8
  %.31 = tail call %Function.560501* %.30(%"Array<Function>.560536"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.35, i64 0, i32 5
  %.37 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.36, align 8
  %.38 = tail call %Function.560501* %.37(%"Array<Function>.560536"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Function.560501* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Function.560501* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Function>___in__"(%"Array<Function>.560536"* %.1, %Function.560501* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Function.560501* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.19, i64 0, i32 5
  %.21 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.20, align 8
  %.22 = tail call %Function.560501* %.21(%"Array<Function>.560536"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Function.560501* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Function>_find"(%"Array<Function>.560536"* nocapture readonly %.1, %Function.560501* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1, i64 0, i32 1
  %.19 = load %Function.560501**, %Function.560501*** %.18, align 8
  %0 = ptrtoint %Function.560501* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Function.560501*, %Function.560501** %.19, i64 %storemerge5
  %1 = bitcast %Function.560501** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<Enum>_constructor"(%"Array<Enum>.560537"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 1
  %0 = bitcast %Enum.560527*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Enum>_resize"(%"Array<Enum>.560537"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 1
  %0 = bitcast %Enum.560527*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Enum>_swap"(%"Array<Enum>.560537"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 1
  %.48 = load %Enum.560527**, %Enum.560527*** %.47, align 8
  %.49 = getelementptr inbounds %Enum.560527*, %Enum.560527** %.48, i64 %.2
  %4 = bitcast %Enum.560527** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Enum.560527*, %Enum.560527** %.48, i64 %.3
  %5 = bitcast %Enum.560527** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Enum.560527**, %Enum.560527*** %.47, align 8
  %.69 = getelementptr inbounds %Enum.560527*, %Enum.560527** %.67, i64 %.3
  %6 = bitcast %Enum.560527** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Enum>___sl__"(%"Array<Enum>.560537"* %.1, %Enum.560527* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 0
  %.17 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Enum>.560537"*)*, void (%"Array<Enum>.560537"*)** %.18, align 8
  tail call void %.19(%"Array<Enum>.560537"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 1
  %.31 = load %Enum.560527**, %Enum.560527*** %.30, align 8
  %.33 = getelementptr inbounds %Enum.560527*, %Enum.560527** %.31, i64 %.24
  store %Enum.560527* %.2, %Enum.560527** %.33, align 8
  ret void
}

define void @"Array<Enum>___setitem__"(%"Array<Enum>.560537"* nocapture readonly %.1, i64 %.2, %Enum.560527* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 1
  %.30 = load %Enum.560527**, %Enum.560527*** %.29, align 8
  %.32 = getelementptr inbounds %Enum.560527*, %Enum.560527** %.30, i64 %.2
  store %Enum.560527* %.3, %Enum.560527** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Enum>_append"(%"Array<Enum>.560537"* %.1, %Enum.560527* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 0
  %.9 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Enum>.560537"*, %Enum.560527*)*, void (%"Array<Enum>.560537"*, %Enum.560527*)** %.10, align 8
  tail call void %.11(%"Array<Enum>.560537"* %.1, %Enum.560527* %.2)
  ret void
}

define %Enum.560527* @"Array<Enum>___getitem__"(%"Array<Enum>.560537"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 1
  %.28 = load %Enum.560527**, %Enum.560527*** %.27, align 8
  %.29 = getelementptr inbounds %Enum.560527*, %Enum.560527** %.28, i64 %.2
  %.30 = load %Enum.560527*, %Enum.560527** %.29, align 8
  ret %Enum.560527* %.30

.4.endif:                                         ; preds = %.4
  ret %Enum.560527* null
}

define i1 @"Array<Enum>___eq__"(%"Array<Enum>.560537"* %.1, %"Array<Enum>.560537"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.28, i64 0, i32 5
  %.30 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.29, align 8
  %.31 = tail call %Enum.560527* %.30(%"Array<Enum>.560537"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.35, i64 0, i32 5
  %.37 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.36, align 8
  %.38 = tail call %Enum.560527* %.37(%"Array<Enum>.560537"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Enum.560527* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Enum.560527* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Enum>___in__"(%"Array<Enum>.560537"* %.1, %Enum.560527* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Enum.560527* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.19, i64 0, i32 5
  %.21 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.20, align 8
  %.22 = tail call %Enum.560527* %.21(%"Array<Enum>.560537"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Enum.560527* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Enum>_find"(%"Array<Enum>.560537"* nocapture readonly %.1, %Enum.560527* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.1, i64 0, i32 1
  %.19 = load %Enum.560527**, %Enum.560527*** %.18, align 8
  %0 = ptrtoint %Enum.560527* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Enum.560527*, %Enum.560527** %.19, i64 %storemerge5
  %1 = bitcast %Enum.560527** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<Scope>_constructor"(%"Array<Scope>.560538"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 1
  %0 = bitcast %Scope.560473*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Scope>_resize"(%"Array<Scope>.560538"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 1
  %0 = bitcast %Scope.560473*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Scope>_swap"(%"Array<Scope>.560538"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 1
  %.48 = load %Scope.560473**, %Scope.560473*** %.47, align 8
  %.49 = getelementptr inbounds %Scope.560473*, %Scope.560473** %.48, i64 %.2
  %4 = bitcast %Scope.560473** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Scope.560473*, %Scope.560473** %.48, i64 %.3
  %5 = bitcast %Scope.560473** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Scope.560473**, %Scope.560473*** %.47, align 8
  %.69 = getelementptr inbounds %Scope.560473*, %Scope.560473** %.67, i64 %.3
  %6 = bitcast %Scope.560473** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Scope>___sl__"(%"Array<Scope>.560538"* %.1, %Scope.560473* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 0
  %.17 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Scope>.560538"*)*, void (%"Array<Scope>.560538"*)** %.18, align 8
  tail call void %.19(%"Array<Scope>.560538"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 1
  %.31 = load %Scope.560473**, %Scope.560473*** %.30, align 8
  %.33 = getelementptr inbounds %Scope.560473*, %Scope.560473** %.31, i64 %.24
  store %Scope.560473* %.2, %Scope.560473** %.33, align 8
  ret void
}

define void @"Array<Scope>___setitem__"(%"Array<Scope>.560538"* nocapture readonly %.1, i64 %.2, %Scope.560473* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 1
  %.30 = load %Scope.560473**, %Scope.560473*** %.29, align 8
  %.32 = getelementptr inbounds %Scope.560473*, %Scope.560473** %.30, i64 %.2
  store %Scope.560473* %.3, %Scope.560473** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Scope>_append"(%"Array<Scope>.560538"* %.1, %Scope.560473* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 0
  %.9 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Scope>.560538"*, %Scope.560473*)*, void (%"Array<Scope>.560538"*, %Scope.560473*)** %.10, align 8
  tail call void %.11(%"Array<Scope>.560538"* %.1, %Scope.560473* %.2)
  ret void
}

define %Scope.560473* @"Array<Scope>___getitem__"(%"Array<Scope>.560538"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 1
  %.28 = load %Scope.560473**, %Scope.560473*** %.27, align 8
  %.29 = getelementptr inbounds %Scope.560473*, %Scope.560473** %.28, i64 %.2
  %.30 = load %Scope.560473*, %Scope.560473** %.29, align 8
  ret %Scope.560473* %.30

.4.endif:                                         ; preds = %.4
  ret %Scope.560473* null
}

define i1 @"Array<Scope>___eq__"(%"Array<Scope>.560538"* %.1, %"Array<Scope>.560538"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.28, i64 0, i32 5
  %.30 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.29, align 8
  %.31 = tail call %Scope.560473* %.30(%"Array<Scope>.560538"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.35, i64 0, i32 5
  %.37 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.36, align 8
  %.38 = tail call %Scope.560473* %.37(%"Array<Scope>.560538"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Scope.560473* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Scope.560473* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Scope>___in__"(%"Array<Scope>.560538"* %.1, %Scope.560473* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Scope.560473* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.19, i64 0, i32 5
  %.21 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.20, align 8
  %.22 = tail call %Scope.560473* %.21(%"Array<Scope>.560538"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Scope.560473* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Scope>_find"(%"Array<Scope>.560538"* nocapture readonly %.1, %Scope.560473* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.1, i64 0, i32 1
  %.19 = load %Scope.560473**, %Scope.560473*** %.18, align 8
  %0 = ptrtoint %Scope.560473* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Scope.560473*, %Scope.560473** %.19, i64 %storemerge5
  %1 = bitcast %Scope.560473** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<ConstDeclaration>_constructor"(%"Array<ConstDeclaration>.560539"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclaration.560463*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ConstDeclaration>_resize"(%"Array<ConstDeclaration>.560539"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclaration.560463*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ConstDeclaration>_swap"(%"Array<ConstDeclaration>.560539"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 1
  %.48 = load %ConstDeclaration.560463**, %ConstDeclaration.560463*** %.47, align 8
  %.49 = getelementptr inbounds %ConstDeclaration.560463*, %ConstDeclaration.560463** %.48, i64 %.2
  %4 = bitcast %ConstDeclaration.560463** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ConstDeclaration.560463*, %ConstDeclaration.560463** %.48, i64 %.3
  %5 = bitcast %ConstDeclaration.560463** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ConstDeclaration.560463**, %ConstDeclaration.560463*** %.47, align 8
  %.69 = getelementptr inbounds %ConstDeclaration.560463*, %ConstDeclaration.560463** %.67, i64 %.3
  %6 = bitcast %ConstDeclaration.560463** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclaration>___sl__"(%"Array<ConstDeclaration>.560539"* %.1, %ConstDeclaration.560463* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 0
  %.17 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ConstDeclaration>.560539"*)*, void (%"Array<ConstDeclaration>.560539"*)** %.18, align 8
  tail call void %.19(%"Array<ConstDeclaration>.560539"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 1
  %.31 = load %ConstDeclaration.560463**, %ConstDeclaration.560463*** %.30, align 8
  %.33 = getelementptr inbounds %ConstDeclaration.560463*, %ConstDeclaration.560463** %.31, i64 %.24
  store %ConstDeclaration.560463* %.2, %ConstDeclaration.560463** %.33, align 8
  ret void
}

define void @"Array<ConstDeclaration>___setitem__"(%"Array<ConstDeclaration>.560539"* nocapture readonly %.1, i64 %.2, %ConstDeclaration.560463* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 1
  %.30 = load %ConstDeclaration.560463**, %ConstDeclaration.560463*** %.29, align 8
  %.32 = getelementptr inbounds %ConstDeclaration.560463*, %ConstDeclaration.560463** %.30, i64 %.2
  store %ConstDeclaration.560463* %.3, %ConstDeclaration.560463** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclaration>_append"(%"Array<ConstDeclaration>.560539"* %.1, %ConstDeclaration.560463* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 0
  %.9 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)*, void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)** %.10, align 8
  tail call void %.11(%"Array<ConstDeclaration>.560539"* %.1, %ConstDeclaration.560463* %.2)
  ret void
}

define %ConstDeclaration.560463* @"Array<ConstDeclaration>___getitem__"(%"Array<ConstDeclaration>.560539"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 1
  %.28 = load %ConstDeclaration.560463**, %ConstDeclaration.560463*** %.27, align 8
  %.29 = getelementptr inbounds %ConstDeclaration.560463*, %ConstDeclaration.560463** %.28, i64 %.2
  %.30 = load %ConstDeclaration.560463*, %ConstDeclaration.560463** %.29, align 8
  ret %ConstDeclaration.560463* %.30

.4.endif:                                         ; preds = %.4
  ret %ConstDeclaration.560463* null
}

define i1 @"Array<ConstDeclaration>___eq__"(%"Array<ConstDeclaration>.560539"* %.1, %"Array<ConstDeclaration>.560539"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.28, i64 0, i32 5
  %.30 = load %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)*, %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)** %.29, align 8
  %.31 = tail call %ConstDeclaration.560463* %.30(%"Array<ConstDeclaration>.560539"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.35, i64 0, i32 5
  %.37 = load %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)*, %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)** %.36, align 8
  %.38 = tail call %ConstDeclaration.560463* %.37(%"Array<ConstDeclaration>.560539"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %ConstDeclaration.560463* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ConstDeclaration.560463* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ConstDeclaration>___in__"(%"Array<ConstDeclaration>.560539"* %.1, %ConstDeclaration.560463* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ConstDeclaration.560463* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.19, i64 0, i32 5
  %.21 = load %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)*, %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)** %.20, align 8
  %.22 = tail call %ConstDeclaration.560463* %.21(%"Array<ConstDeclaration>.560539"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %ConstDeclaration.560463* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ConstDeclaration>_find"(%"Array<ConstDeclaration>.560539"* nocapture readonly %.1, %ConstDeclaration.560463* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.1, i64 0, i32 1
  %.19 = load %ConstDeclaration.560463**, %ConstDeclaration.560463*** %.18, align 8
  %0 = ptrtoint %ConstDeclaration.560463* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ConstDeclaration.560463*, %ConstDeclaration.560463** %.19, i64 %storemerge5
  %1 = bitcast %ConstDeclaration.560463** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<VarDeclaration>_constructor"(%"Array<VarDeclaration>.560540"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclaration.560461*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<VarDeclaration>_resize"(%"Array<VarDeclaration>.560540"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclaration.560461*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<VarDeclaration>_swap"(%"Array<VarDeclaration>.560540"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 1
  %.48 = load %VarDeclaration.560461**, %VarDeclaration.560461*** %.47, align 8
  %.49 = getelementptr inbounds %VarDeclaration.560461*, %VarDeclaration.560461** %.48, i64 %.2
  %4 = bitcast %VarDeclaration.560461** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %VarDeclaration.560461*, %VarDeclaration.560461** %.48, i64 %.3
  %5 = bitcast %VarDeclaration.560461** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %VarDeclaration.560461**, %VarDeclaration.560461*** %.47, align 8
  %.69 = getelementptr inbounds %VarDeclaration.560461*, %VarDeclaration.560461** %.67, i64 %.3
  %6 = bitcast %VarDeclaration.560461** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclaration>___sl__"(%"Array<VarDeclaration>.560540"* %.1, %VarDeclaration.560461* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 0
  %.17 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<VarDeclaration>.560540"*)*, void (%"Array<VarDeclaration>.560540"*)** %.18, align 8
  tail call void %.19(%"Array<VarDeclaration>.560540"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 1
  %.31 = load %VarDeclaration.560461**, %VarDeclaration.560461*** %.30, align 8
  %.33 = getelementptr inbounds %VarDeclaration.560461*, %VarDeclaration.560461** %.31, i64 %.24
  store %VarDeclaration.560461* %.2, %VarDeclaration.560461** %.33, align 8
  ret void
}

define void @"Array<VarDeclaration>___setitem__"(%"Array<VarDeclaration>.560540"* nocapture readonly %.1, i64 %.2, %VarDeclaration.560461* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 1
  %.30 = load %VarDeclaration.560461**, %VarDeclaration.560461*** %.29, align 8
  %.32 = getelementptr inbounds %VarDeclaration.560461*, %VarDeclaration.560461** %.30, i64 %.2
  store %VarDeclaration.560461* %.3, %VarDeclaration.560461** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclaration>_append"(%"Array<VarDeclaration>.560540"* %.1, %VarDeclaration.560461* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 0
  %.9 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)*, void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)** %.10, align 8
  tail call void %.11(%"Array<VarDeclaration>.560540"* %.1, %VarDeclaration.560461* %.2)
  ret void
}

define %VarDeclaration.560461* @"Array<VarDeclaration>___getitem__"(%"Array<VarDeclaration>.560540"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 1
  %.28 = load %VarDeclaration.560461**, %VarDeclaration.560461*** %.27, align 8
  %.29 = getelementptr inbounds %VarDeclaration.560461*, %VarDeclaration.560461** %.28, i64 %.2
  %.30 = load %VarDeclaration.560461*, %VarDeclaration.560461** %.29, align 8
  ret %VarDeclaration.560461* %.30

.4.endif:                                         ; preds = %.4
  ret %VarDeclaration.560461* null
}

define i1 @"Array<VarDeclaration>___eq__"(%"Array<VarDeclaration>.560540"* %.1, %"Array<VarDeclaration>.560540"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.28, i64 0, i32 5
  %.30 = load %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)*, %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)** %.29, align 8
  %.31 = tail call %VarDeclaration.560461* %.30(%"Array<VarDeclaration>.560540"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.35, i64 0, i32 5
  %.37 = load %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)*, %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)** %.36, align 8
  %.38 = tail call %VarDeclaration.560461* %.37(%"Array<VarDeclaration>.560540"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %VarDeclaration.560461* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %VarDeclaration.560461* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<VarDeclaration>___in__"(%"Array<VarDeclaration>.560540"* %.1, %VarDeclaration.560461* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %VarDeclaration.560461* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.19, i64 0, i32 5
  %.21 = load %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)*, %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)** %.20, align 8
  %.22 = tail call %VarDeclaration.560461* %.21(%"Array<VarDeclaration>.560540"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %VarDeclaration.560461* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<VarDeclaration>_find"(%"Array<VarDeclaration>.560540"* nocapture readonly %.1, %VarDeclaration.560461* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.1, i64 0, i32 1
  %.19 = load %VarDeclaration.560461**, %VarDeclaration.560461*** %.18, align 8
  %0 = ptrtoint %VarDeclaration.560461* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %VarDeclaration.560461*, %VarDeclaration.560461** %.19, i64 %storemerge5
  %1 = bitcast %VarDeclaration.560461** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Module_constructor(%Module.560531* nocapture %.1, %string.560217* %.2) local_unnamed_addr #4 {
.4:
  %.9 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 2
  store %string.560217* %.2, %string.560217** %.9, align 8
  %.25 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 6
  %0 = bitcast %"Array<Function>.560536"** %.25 to i8**
  %.29 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.31 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.31 to %"Array<Var>_vtable_ty.560541"**
  store %"Array<Var>_vtable_ty.560541"* @"Array<Var>_vtable_data", %"Array<Var>_vtable_ty.560541"** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %1 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %1, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %2 = bitcast i8* %.37 to i64*
  store i64 0, i64* %2, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %3 = bitcast i8* %.39 to i64*
  store i64 8, i64* %3, align 8
  %.41 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 3
  %4 = bitcast %"Array<Var>.560533"** %.41 to i8**
  store i8* %.31, i8** %4, align 8
  %.45 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.47 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.47 to %"Array<Class>_vtable_ty.560543"**
  store %"Array<Class>_vtable_ty.560543"* @"Array<Class>_vtable_data", %"Array<Class>_vtable_ty.560543"** %.49, align 8
  %.51 = getelementptr inbounds i8, i8* %.47, i64 8
  %5 = bitcast i8* %.51 to i8**
  store i8* %.45, i8** %5, align 8
  %.53 = getelementptr inbounds i8, i8* %.47, i64 16
  %6 = bitcast i8* %.53 to i64*
  store i64 0, i64* %6, align 8
  %.55 = getelementptr inbounds i8, i8* %.47, i64 24
  %7 = bitcast i8* %.55 to i64*
  store i64 8, i64* %7, align 8
  %.57 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 5
  %8 = bitcast %"Array<Class>.560535"** %.57 to i8**
  store i8* %.47, i8** %8, align 8
  %.61 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.63 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.63 to %"Array<Function>_vtable_ty.560544"**
  store %"Array<Function>_vtable_ty.560544"* @"Array<Function>_vtable_data", %"Array<Function>_vtable_ty.560544"** %.65, align 8
  %.67 = getelementptr inbounds i8, i8* %.63, i64 8
  %9 = bitcast i8* %.67 to i8**
  store i8* %.61, i8** %9, align 8
  %.69 = getelementptr inbounds i8, i8* %.63, i64 16
  %10 = bitcast i8* %.69 to i64*
  store i64 0, i64* %10, align 8
  %.71 = getelementptr inbounds i8, i8* %.63, i64 24
  %11 = bitcast i8* %.71 to i64*
  store i64 8, i64* %11, align 8
  store i8* %.63, i8** %0, align 8
  %.77 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.79 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.81 = bitcast i8* %.79 to %"Array<Enum>_vtable_ty.560545"**
  store %"Array<Enum>_vtable_ty.560545"* @"Array<Enum>_vtable_data", %"Array<Enum>_vtable_ty.560545"** %.81, align 8
  %.83 = getelementptr inbounds i8, i8* %.79, i64 8
  %12 = bitcast i8* %.83 to i8**
  store i8* %.77, i8** %12, align 8
  %.85 = getelementptr inbounds i8, i8* %.79, i64 16
  %13 = bitcast i8* %.85 to i64*
  store i64 0, i64* %13, align 8
  %.87 = getelementptr inbounds i8, i8* %.79, i64 24
  %14 = bitcast i8* %.87 to i64*
  store i64 8, i64* %14, align 8
  %.89 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 7
  %15 = bitcast %"Array<Enum>.560537"** %.89 to i8**
  store i8* %.79, i8** %15, align 8
  %.93 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.95 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.95 to %"Array<Scope>_vtable_ty.560546"**
  store %"Array<Scope>_vtable_ty.560546"* @"Array<Scope>_vtable_data", %"Array<Scope>_vtable_ty.560546"** %.97, align 8
  %.99 = getelementptr inbounds i8, i8* %.95, i64 8
  %16 = bitcast i8* %.99 to i8**
  store i8* %.93, i8** %16, align 8
  %.101 = getelementptr inbounds i8, i8* %.95, i64 16
  %17 = bitcast i8* %.101 to i64*
  store i64 0, i64* %17, align 8
  %.103 = getelementptr inbounds i8, i8* %.95, i64 24
  %18 = bitcast i8* %.103 to i64*
  store i64 8, i64* %18, align 8
  %.105 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 8
  %19 = bitcast %"Array<Scope>.560538"** %.105 to i8**
  store i8* %.95, i8** %19, align 8
  %.109 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.111 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.113 = bitcast i8* %.111 to %"Array<ConstDeclaration>_vtable_ty.560547"**
  store %"Array<ConstDeclaration>_vtable_ty.560547"* @"Array<ConstDeclaration>_vtable_data", %"Array<ConstDeclaration>_vtable_ty.560547"** %.113, align 8
  %.115 = getelementptr inbounds i8, i8* %.111, i64 8
  %20 = bitcast i8* %.115 to i8**
  store i8* %.109, i8** %20, align 8
  %.117 = getelementptr inbounds i8, i8* %.111, i64 16
  %21 = bitcast i8* %.117 to i64*
  store i64 0, i64* %21, align 8
  %.119 = getelementptr inbounds i8, i8* %.111, i64 24
  %22 = bitcast i8* %.119 to i64*
  store i64 8, i64* %22, align 8
  %.121 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 9
  %23 = bitcast %"Array<ConstDeclaration>.560539"** %.121 to i8**
  store i8* %.111, i8** %23, align 8
  %.125 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.129 = bitcast i8* %.127 to %"Array<VarDeclaration>_vtable_ty.560548"**
  store %"Array<VarDeclaration>_vtable_ty.560548"* @"Array<VarDeclaration>_vtable_data", %"Array<VarDeclaration>_vtable_ty.560548"** %.129, align 8
  %.131 = getelementptr inbounds i8, i8* %.127, i64 8
  %24 = bitcast i8* %.131 to i8**
  store i8* %.125, i8** %24, align 8
  %.133 = getelementptr inbounds i8, i8* %.127, i64 16
  %25 = bitcast i8* %.133 to i64*
  store i64 0, i64* %25, align 8
  %.135 = getelementptr inbounds i8, i8* %.127, i64 24
  %26 = bitcast i8* %.135 to i64*
  store i64 8, i64* %26, align 8
  %.137 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 10
  %27 = bitcast %"Array<VarDeclaration>.560540"** %.137 to i8**
  store i8* %.127, i8** %27, align 8
  %.141 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.143 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.145 = bitcast i8* %.143 to %"Array<Const>_vtable_ty.560542"**
  store %"Array<Const>_vtable_ty.560542"* @"Array<Const>_vtable_data", %"Array<Const>_vtable_ty.560542"** %.145, align 8
  %.147 = getelementptr inbounds i8, i8* %.143, i64 8
  %28 = bitcast i8* %.147 to i8**
  store i8* %.141, i8** %28, align 8
  %.149 = getelementptr inbounds i8, i8* %.143, i64 16
  %29 = bitcast i8* %.149 to i64*
  store i64 0, i64* %29, align 8
  %.151 = getelementptr inbounds i8, i8* %.143, i64 24
  %30 = bitcast i8* %.151 to i64*
  store i64 8, i64* %30, align 8
  %.153 = getelementptr inbounds %Module.560531, %Module.560531* %.1, i64 0, i32 4
  %31 = bitcast %"Array<Const>.560534"** %.153 to i8**
  store i8* %.143, i8** %31, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Module>_constructor"(%"Array<Module>.560551"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 1
  %0 = bitcast %Module.560531*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Module>_resize"(%"Array<Module>.560551"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 1
  %0 = bitcast %Module.560531*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Module>_swap"(%"Array<Module>.560551"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 1
  %.48 = load %Module.560531**, %Module.560531*** %.47, align 8
  %.49 = getelementptr inbounds %Module.560531*, %Module.560531** %.48, i64 %.2
  %4 = bitcast %Module.560531** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Module.560531*, %Module.560531** %.48, i64 %.3
  %5 = bitcast %Module.560531** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Module.560531**, %Module.560531*** %.47, align 8
  %.69 = getelementptr inbounds %Module.560531*, %Module.560531** %.67, i64 %.3
  %6 = bitcast %Module.560531** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Module>___sl__"(%"Array<Module>.560551"* %.1, %Module.560531* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Module>.560551"*)*, void (%"Array<Module>.560551"*)** %.18, align 8
  tail call void %.19(%"Array<Module>.560551"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 1
  %.31 = load %Module.560531**, %Module.560531*** %.30, align 8
  %.33 = getelementptr inbounds %Module.560531*, %Module.560531** %.31, i64 %.24
  store %Module.560531* %.2, %Module.560531** %.33, align 8
  ret void
}

define void @"Array<Module>___setitem__"(%"Array<Module>.560551"* nocapture readonly %.1, i64 %.2, %Module.560531* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 1
  %.30 = load %Module.560531**, %Module.560531*** %.29, align 8
  %.32 = getelementptr inbounds %Module.560531*, %Module.560531** %.30, i64 %.2
  store %Module.560531* %.3, %Module.560531** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Module>_append"(%"Array<Module>.560551"* %.1, %Module.560531* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 0
  %.9 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Module>.560551"*, %Module.560531*)*, void (%"Array<Module>.560551"*, %Module.560531*)** %.10, align 8
  tail call void %.11(%"Array<Module>.560551"* %.1, %Module.560531* %.2)
  ret void
}

define %Module.560531* @"Array<Module>___getitem__"(%"Array<Module>.560551"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 1
  %.28 = load %Module.560531**, %Module.560531*** %.27, align 8
  %.29 = getelementptr inbounds %Module.560531*, %Module.560531** %.28, i64 %.2
  %.30 = load %Module.560531*, %Module.560531** %.29, align 8
  ret %Module.560531* %.30

.4.endif:                                         ; preds = %.4
  ret %Module.560531* null
}

define i1 @"Array<Module>___eq__"(%"Array<Module>.560551"* %.1, %"Array<Module>.560551"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.28, i64 0, i32 5
  %.30 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.29, align 8
  %.31 = tail call %Module.560531* %.30(%"Array<Module>.560551"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.35, i64 0, i32 5
  %.37 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.36, align 8
  %.38 = tail call %Module.560531* %.37(%"Array<Module>.560551"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %Module.560531* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Module.560531* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Module>___in__"(%"Array<Module>.560551"* %.1, %Module.560531* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Module.560531* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.19, i64 0, i32 5
  %.21 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.20, align 8
  %.22 = tail call %Module.560531* %.21(%"Array<Module>.560551"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %Module.560531* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Module>_find"(%"Array<Module>.560551"* nocapture readonly %.1, %Module.560531* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.1, i64 0, i32 1
  %.19 = load %Module.560531**, %Module.560531*** %.18, align 8
  %0 = ptrtoint %Module.560531* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Module.560531*, %Module.560531** %.19, i64 %storemerge5
  %1 = bitcast %Module.560531** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Program_constructor(%Program.560549* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 1
  store i1 false, i1* %.6, align 1
  %.10 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.12 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.12 to %"Array<Module>_vtable_ty.560552"**
  store %"Array<Module>_vtable_ty.560552"* @"Array<Module>_vtable_data", %"Array<Module>_vtable_ty.560552"** %.14, align 8
  %.16 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.16 to i8**
  store i8* %.10, i8** %0, align 8
  %.18 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.18 to i64*
  store i64 0, i64* %1, align 8
  %.20 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.20 to i64*
  store i64 8, i64* %2, align 8
  %.22 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 2
  %3 = bitcast %"Array<Module>.560551"** %.22 to i8**
  store i8* %.12, i8** %3, align 8
  ret void
}

define %Var.560505* @get_var(%Program.560549* nocapture readonly %.1, %VarId.560441* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 2
  %.15 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.17, i64 0, i32 5
  %.19 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.18, align 8
  %.20 = tail call %Module.560531* %.19(%"Array<Module>.560551"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.560531, %Module.560531* %.20, i64 0, i32 3
  %.22 = load %"Array<Var>.560533"*, %"Array<Var>.560533"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.22, i64 0, i32 0
  %.24 = load %"Array<Var>_vtable_ty.560541"*, %"Array<Var>_vtable_ty.560541"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Var>_vtable_ty.560541", %"Array<Var>_vtable_ty.560541"* %.24, i64 0, i32 5
  %.26 = load %Var.560505* (%"Array<Var>.560533"*, i64)*, %Var.560505* (%"Array<Var>.560533"*, i64)** %.25, align 8
  %.27 = tail call %Var.560505* %.26(%"Array<Var>.560533"* %.22, i64 %.9)
  ret %Var.560505* %.27
}

define %Const.560507* @get_const(%Program.560549* nocapture readonly %.1, %ConstId.560447* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ConstId.560447, %ConstId.560447* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ConstId.560447, %ConstId.560447* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 2
  %.15 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.17, i64 0, i32 5
  %.19 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.18, align 8
  %.20 = tail call %Module.560531* %.19(%"Array<Module>.560551"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.560531, %Module.560531* %.20, i64 0, i32 4
  %.22 = load %"Array<Const>.560534"*, %"Array<Const>.560534"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.22, i64 0, i32 0
  %.24 = load %"Array<Const>_vtable_ty.560542"*, %"Array<Const>_vtable_ty.560542"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Const>_vtable_ty.560542", %"Array<Const>_vtable_ty.560542"* %.24, i64 0, i32 5
  %.26 = load %Const.560507* (%"Array<Const>.560534"*, i64)*, %Const.560507* (%"Array<Const>.560534"*, i64)** %.25, align 8
  %.27 = tail call %Const.560507* %.26(%"Array<Const>.560534"* %.22, i64 %.9)
  ret %Const.560507* %.27
}

define %Function.560501* @get_func(%Program.560549* nocapture readonly %.1, %VarId.560441* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 2
  %.15 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.17, i64 0, i32 5
  %.19 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.18, align 8
  %.20 = tail call %Module.560531* %.19(%"Array<Module>.560551"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.560531, %Module.560531* %.20, i64 0, i32 6
  %.22 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.22, i64 0, i32 0
  %.24 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.24, i64 0, i32 5
  %.26 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.25, align 8
  %.27 = tail call %Function.560501* %.26(%"Array<Function>.560536"* %.22, i64 %.9)
  ret %Function.560501* %.27
}

define %Scope.560473* @get_scope(%Program.560549* nocapture readonly %.1, %ScopeId.560471* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ScopeId.560471, %ScopeId.560471* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ScopeId.560471, %ScopeId.560471* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 2
  %.15 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.17, i64 0, i32 5
  %.19 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.18, align 8
  %.20 = tail call %Module.560531* %.19(%"Array<Module>.560551"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.560531, %Module.560531* %.20, i64 0, i32 8
  %.22 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.22, i64 0, i32 0
  %.24 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.24, i64 0, i32 5
  %.26 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.25, align 8
  %.27 = tail call %Scope.560473* %.26(%"Array<Scope>.560538"* %.22, i64 %.9)
  ret %Scope.560473* %.27
}

define %Class.560513* @get_class(%Program.560549* nocapture readonly %.1, %ClassId.560397* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 2
  %.15 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.17, i64 0, i32 5
  %.19 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.18, align 8
  %.20 = tail call %Module.560531* %.19(%"Array<Module>.560551"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.560531, %Module.560531* %.20, i64 0, i32 5
  %.22 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.22, i64 0, i32 0
  %.24 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.24, i64 0, i32 5
  %.26 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.25, align 8
  %.27 = tail call %Class.560513* %.26(%"Array<Class>.560535"* %.22, i64 %.9)
  ret %Class.560513* %.27
}

define %Class.560513* @get_class_from_type(%Program.560549* nocapture readonly %.1, %Type.560381* nocapture readonly %.2) local_unnamed_addr {
.4:
  br label %tailrecurse

tailrecurse:                                      ; preds = %.4.if, %.4
  %.2.tr = phi %Type.560381* [ %.2, %.4 ], [ %.16, %.4.if ]
  %.8 = getelementptr inbounds %Type.560381, %Type.560381* %.2.tr, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif [
    i64 20, label %.4.if
    i64 13, label %.4.endif.if
  ]

.4.if:                                            ; preds = %tailrecurse
  %.15 = getelementptr inbounds %Type.560381, %Type.560381* %.2.tr, i64 2
  %0 = bitcast %Type.560381* %.15 to %Type.560381**
  %.16 = load %Type.560381*, %Type.560381** %0, align 8
  br label %tailrecurse

.4.endif.if:                                      ; preds = %tailrecurse
  %.27 = getelementptr inbounds %Type.560381, %Type.560381* %.2.tr, i64 1
  %1 = bitcast %Type.560381* %.27 to %ClassId.560397**
  %.28 = load %ClassId.560397*, %ClassId.560397** %1, align 8
  %.29 = tail call %Class.560513* @get_class(%Program.560549* %.1, %ClassId.560397* %.28)
  ret %Class.560513* %.29

.4.endif.endif:                                   ; preds = %tailrecurse
  ret %Class.560513* null
}

define %Enum.560527* @get_enum(%Program.560549* nocapture readonly %.1, %EnumId.560399* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %EnumId.560399, %EnumId.560399* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %EnumId.560399, %EnumId.560399* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.560549, %Program.560549* %.1, i64 0, i32 2
  %.15 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.17, i64 0, i32 5
  %.19 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.18, align 8
  %.20 = tail call %Module.560531* %.19(%"Array<Module>.560551"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.560531, %Module.560531* %.20, i64 0, i32 7
  %.22 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.22, i64 0, i32 0
  %.24 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.24, i64 0, i32 5
  %.26 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.25, align 8
  %.27 = tail call %Enum.560527* %.26(%"Array<Enum>.560537"* %.22, i64 %.9)
  ret %Enum.560527* %.27
}

define %Enum.560527* @get_enum_from_type(%Program.560549* nocapture readonly %.1, %Type.560381* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.10 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %0 = bitcast %Type.560381* %.10 to %EnumId.560399**
  %.11 = load %EnumId.560399*, %EnumId.560399** %0, align 8
  %.12 = tail call %Enum.560527* @get_enum(%Program.560549* %.1, %EnumId.560399* %.11)
  ret %Enum.560527* %.12
}

define %Class.560513* @get_class_from_prop_id(%Program.560549* nocapture readonly %.1, %PropId.560449* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.560395** %.9 to %ClassId.560397**
  %.101 = load %ClassId.560397*, %ClassId.560397** %0, align 8
  %.12 = tail call %Class.560513* @get_class(%Program.560549* %.1, %ClassId.560397* %.101)
  ret %Class.560513* %.12
}

define %ClassMethod.560511* @get_method(%Program.560549* nocapture readonly %.1, %PropId.560449* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.12 = tail call %Class.560513* @get_class_from_prop_id(%Program.560549* %.1, %PropId.560449* %.2)
  %.13 = getelementptr inbounds %Class.560513, %Class.560513* %.12, i64 0, i32 6
  %.14 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.14, i64 0, i32 0
  %.16 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.15, align 8
  %.17 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.16, i64 0, i32 5
  %.18 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.17, align 8
  %.19 = tail call %ClassMethod.560511* %.18(%"Array<ClassMethod>.560516"* %.14, i64 %.9)
  ret %ClassMethod.560511* %.19
}

define %Type.560381* @get_class_prop_type(%Program.560549* nocapture readonly %.1, %PropId.560449* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = tail call %Class.560513* @get_class_from_prop_id(%Program.560549* %.1, %PropId.560449* %.2)
  %.12 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp eq i64 %.13, 0
  %.17 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.20 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 6
  %.21 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.21, i64 0, i32 0
  %.23 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.23, i64 0, i32 5
  %.25 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.24, align 8
  %.26 = tail call %ClassMethod.560511* %.25(%"Array<ClassMethod>.560516"* %.21, i64 %.18)
  %.27 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.26, i64 0, i32 5
  %0 = bitcast %FunctionType.560387** %.27 to %Type.560381**
  %.281 = load %Type.560381*, %Type.560381** %0, align 8
  ret %Type.560381* %.281

.4.endif:                                         ; preds = %.4
  %.35 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 5
  %.36 = load %"Array<ClassField>.560515"*, %"Array<ClassField>.560515"** %.35, align 8
  %.37 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.36, i64 0, i32 0
  %.38 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.38, i64 0, i32 5
  %.40 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.39, align 8
  %.41 = tail call %ClassField.560509* %.40(%"Array<ClassField>.560515"* %.36, i64 %.18)
  %.42 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.41, i64 0, i32 5
  %.43 = load %Type.560381*, %Type.560381** %.42, align 8
  ret %Type.560381* %.43
}

define %Type.560381* @get_class_prop_type_with_name(%Program.560549* nocapture readonly %.1, %ObjectType.560407* nocapture readonly %.2, %string.560217* %.3) local_unnamed_addr {
.5:
  %.11 = bitcast %ObjectType.560407* %.2 to %Type.560381*
  %.12 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.1, %Type.560381* %.11)
  %0 = ptrtoint %Class.560513* %.12 to i64
  %.15 = trunc i64 %0 to i32
  %.17 = icmp eq i32 %.15, 0
  br i1 %.17, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif, %.5
  ret %Type.560381* null

.5.endif:                                         ; preds = %.5
  %.21 = getelementptr inbounds %Class.560513, %Class.560513* %.12, i64 0, i32 7
  %.22 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.21, align 8
  %.23 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.22, i64 0, i32 0
  %.24 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.24, i64 0, i32 3
  %.26 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.25, align 8
  %.28 = tail call %PropId.560449* %.26(%"Map<string, PropId>.560517"* %.22, %string.560217* %.3)
  %1 = ptrtoint %PropId.560449* %.28 to i64
  %.31 = trunc i64 %1 to i32
  %.33 = icmp eq i32 %.31, 0
  br i1 %.33, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.38 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.1, %PropId.560449* %.28)
  ret %Type.560381* %.38
}

define i64 @get_class_prop_visibility(%Program.560549* nocapture readonly %.1, %PropId.560449* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = tail call %Class.560513* @get_class_from_prop_id(%Program.560549* %.1, %PropId.560449* %.2)
  %.12 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp eq i64 %.13, 0
  %.17 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.20 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 6
  %.21 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.21, i64 0, i32 0
  %.23 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.23, i64 0, i32 5
  %.25 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.24, align 8
  %.26 = tail call %ClassMethod.560511* %.25(%"Array<ClassMethod>.560516"* %.21, i64 %.18)
  %.27 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.26, i64 0, i32 3
  %.28 = load i64, i64* %.27, align 8
  ret i64 %.28

.4.endif:                                         ; preds = %.4
  %.34 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 5
  %.35 = load %"Array<ClassField>.560515"*, %"Array<ClassField>.560515"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.35, i64 0, i32 0
  %.37 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.37, i64 0, i32 5
  %.39 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.38, align 8
  %.40 = tail call %ClassField.560509* %.39(%"Array<ClassField>.560515"* %.35, i64 %.18)
  %.41 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.40, i64 0, i32 3
  %.42 = load i64, i64* %.41, align 8
  ret i64 %.42
}

define i64 @get_vtable_index(%Program.560549* nocapture readonly %.1, %PropId.560449* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = tail call %Class.560513* @get_class_from_prop_id(%Program.560549* %.1, %PropId.560449* %.2)
  %.12 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp eq i64 %.13, 0
  %.17 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.20 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 6
  %.21 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.21, i64 0, i32 0
  %.23 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.23, i64 0, i32 5
  %.25 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.24, align 8
  %.26 = tail call %ClassMethod.560511* %.25(%"Array<ClassMethod>.560516"* %.21, i64 %.18)
  %.27 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.26, i64 0, i32 10
  %.28 = load i64, i64* %.27, align 8
  ret i64 %.28

.4.endif:                                         ; preds = %.4
  %.34 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 5
  %.35 = load %"Array<ClassField>.560515"*, %"Array<ClassField>.560515"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.35, i64 0, i32 0
  %.37 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.37, i64 0, i32 5
  %.39 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.38, align 8
  %.40 = tail call %ClassField.560509* %.39(%"Array<ClassField>.560515"* %.35, i64 %.18)
  %.41 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.40, i64 0, i32 7
  %.42 = load i64, i64* %.41, align 8
  ret i64 %.42
}

define i1 @is_class_prop_static(%Program.560549* nocapture readonly %.1, %PropId.560449* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = tail call %Class.560513* @get_class_from_prop_id(%Program.560549* %.1, %PropId.560449* %.2)
  %.12 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp eq i64 %.13, 0
  %.17 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.20 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 6
  %.21 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.21, i64 0, i32 0
  %.23 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.23, i64 0, i32 5
  %.25 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.24, align 8
  %.26 = tail call %ClassMethod.560511* %.25(%"Array<ClassMethod>.560516"* %.21, i64 %.18)
  %.27 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.26, i64 0, i32 2
  %.28 = load i1, i1* %.27, align 1
  ret i1 %.28

.4.endif:                                         ; preds = %.4
  %.34 = getelementptr inbounds %Class.560513, %Class.560513* %.9, i64 0, i32 5
  %.35 = load %"Array<ClassField>.560515"*, %"Array<ClassField>.560515"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.35, i64 0, i32 0
  %.37 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.37, i64 0, i32 5
  %.39 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.38, align 8
  %.40 = tail call %ClassField.560509* %.39(%"Array<ClassField>.560515"* %.35, i64 %.18)
  %.41 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.40, i64 0, i32 2
  %.42 = load i1, i1* %.41, align 1
  ret i1 %.42
}

define i1 @is_buitin(%Program.560549* nocapture readonly %.1, %Type.560381* nocapture readonly %.2, %string.560217* %.3) local_unnamed_addr {
.5:
  %.10 = tail call i1 @is_object(%Type.560381* %.2)
  br i1 %.10, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  ret i1 false

.5.endif:                                         ; preds = %.5
  %.16 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.1, %Type.560381* %.2)
  %.19 = getelementptr inbounds %Class.560513, %Class.560513* %.16, i64 0, i32 2
  %.20 = load %string.560217*, %string.560217** %.19, align 8
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.20, i64 0, i32 0
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 4
  %.25 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.24, align 8
  %.26 = tail call i1 %.25(%string.560217* %.20, %string.560217* %.3)
  %.28 = getelementptr inbounds %Class.560513, %Class.560513* %.16, i64 0, i32 1
  %.29 = load %ClassId.560397*, %ClassId.560397** %.28, align 8
  %.30 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %.29, i64 0, i32 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp eq i64 %.31, 0
  %.33 = and i1 %.26, %.32
  ret i1 %.33
}

define i1 @is_operator_overload_name(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.560217*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.188, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.9 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.10, i64 0, i32 4
  %.12 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.11, align 8
  %.13 = tail call i1 %.12(%string.560217* %.1, %string.560217* %.7)
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3.endif.endif.endif.endi...endif.4.endif, %.3.endif.endif.endif.endi...endif.4, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif, %.3.endif.endif.endif.endi...endif.3, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif, %.3.endif.endif.endif.endi...endif.2, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif, %.3.endif.endif.endif.endi...endif.1, %.3.endif.endif.endif.endi...endif.endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif, %.3.endif.endif.endif, %.3.endif.endif, %.3.endif, %.3
  ret i1 true

.3.endif:                                         ; preds = %.3
  %.17 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.560217*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.18.repack, align 8
  %.18.repack4 = getelementptr inbounds i8, i8* %.17, i64 8
  %3 = bitcast i8* %.18.repack4 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.189, i64 0, i64 0), i8** %3, align 8
  %.18.repack5 = getelementptr inbounds i8, i8* %.17, i64 16
  %4 = bitcast i8* %.18.repack5 to i64*
  store i64 7, i64* %4, align 8
  %.18.repack6 = getelementptr inbounds i8, i8* %.17, i64 24
  %5 = bitcast i8* %.18.repack6 to i64*
  store i64 7, i64* %5, align 8
  %.21 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.21, i64 0, i32 4
  %.23 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.22, align 8
  %.24 = tail call i1 %.23(%string.560217* nonnull %.1, %string.560217* %.18)
  br i1 %.24, label %.3.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif
  %.28 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.560217*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %6 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.190, i64 0, i64 0), i8** %6, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %7 = bitcast i8* %.29.repack8 to i64*
  store i64 7, i64* %7, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %8 = bitcast i8* %.29.repack9 to i64*
  store i64 7, i64* %8, align 8
  %.32 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.33 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.32, i64 0, i32 4
  %.34 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.33, align 8
  %.35 = tail call i1 %.34(%string.560217* nonnull %.1, %string.560217* %.29)
  br i1 %.35, label %.3.if, label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.39 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.560217*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.40.repack, align 8
  %.40.repack10 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.191, i64 0, i64 0), i8** %9, align 8
  %.40.repack11 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack11 to i64*
  store i64 7, i64* %10, align 8
  %.40.repack12 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack12 to i64*
  store i64 7, i64* %11, align 8
  %.43 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.43, i64 0, i32 4
  %.45 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.44, align 8
  %.46 = tail call i1 %.45(%string.560217* nonnull %.1, %string.560217* %.40)
  br i1 %.46, label %.3.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  %.50 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.560217*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.51.repack, align 8
  %.51.repack13 = getelementptr inbounds i8, i8* %.50, i64 8
  %12 = bitcast i8* %.51.repack13 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.192, i64 0, i64 0), i8** %12, align 8
  %.51.repack14 = getelementptr inbounds i8, i8* %.50, i64 16
  %13 = bitcast i8* %.51.repack14 to i64*
  store i64 7, i64* %13, align 8
  %.51.repack15 = getelementptr inbounds i8, i8* %.50, i64 24
  %14 = bitcast i8* %.51.repack15 to i64*
  store i64 7, i64* %14, align 8
  %.54 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.54, i64 0, i32 4
  %.56 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.55, align 8
  %.57 = tail call i1 %.56(%string.560217* nonnull %.1, %string.560217* %.51)
  br i1 %.57, label %.3.if, label %.3.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif:                 ; preds = %.3.endif.endif.endif.endif
  %.61 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.560217*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.62.repack, align 8
  %.62.repack16 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack16 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.193, i64 0, i64 0), i8** %15, align 8
  %.62.repack17 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack17 to i64*
  store i64 6, i64* %16, align 8
  %.62.repack18 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack18 to i64*
  store i64 6, i64* %17, align 8
  %.65 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.66 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.65, i64 0, i32 4
  %.67 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.66, align 8
  %.68 = tail call i1 %.67(%string.560217* nonnull %.1, %string.560217* %.62)
  br i1 %.68, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3.endif.endif.endif.endif.endif
  %.72 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.560217*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.73.repack, align 8
  %.73.repack19 = getelementptr inbounds i8, i8* %.72, i64 8
  %18 = bitcast i8* %.73.repack19 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.194, i64 0, i64 0), i8** %18, align 8
  %.73.repack20 = getelementptr inbounds i8, i8* %.72, i64 16
  %19 = bitcast i8* %.73.repack20 to i64*
  store i64 8, i64* %19, align 8
  %.73.repack21 = getelementptr inbounds i8, i8* %.72, i64 24
  %20 = bitcast i8* %.73.repack21 to i64*
  store i64 8, i64* %20, align 8
  %.76 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.77 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.76, i64 0, i32 4
  %.78 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.77, align 8
  %.79 = tail call i1 %.78(%string.560217* nonnull %.1, %string.560217* %.73)
  br i1 %.79, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.3.endif.endif.endif.endif.endif.endif
  %.83 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.560217*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.84.repack, align 8
  %.84.repack22 = getelementptr inbounds i8, i8* %.83, i64 8
  %21 = bitcast i8* %.84.repack22 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.195, i64 0, i64 0), i8** %21, align 8
  %.84.repack23 = getelementptr inbounds i8, i8* %.83, i64 16
  %22 = bitcast i8* %.84.repack23 to i64*
  store i64 8, i64* %22, align 8
  %.84.repack24 = getelementptr inbounds i8, i8* %.83, i64 24
  %23 = bitcast i8* %.84.repack24 to i64*
  store i64 8, i64* %23, align 8
  %.87 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.87, i64 0, i32 4
  %.89 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.88, align 8
  %.90 = tail call i1 %.89(%string.560217* nonnull %.1, %string.560217* %.84)
  br i1 %.90, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif
  %.94 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.560217*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.95.repack, align 8
  %.95.repack25 = getelementptr inbounds i8, i8* %.94, i64 8
  %24 = bitcast i8* %.95.repack25 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.196, i64 0, i64 0), i8** %24, align 8
  %.95.repack26 = getelementptr inbounds i8, i8* %.94, i64 16
  %25 = bitcast i8* %.95.repack26 to i64*
  store i64 8, i64* %25, align 8
  %.95.repack27 = getelementptr inbounds i8, i8* %.94, i64 24
  %26 = bitcast i8* %.95.repack27 to i64*
  store i64 8, i64* %26, align 8
  %.98 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.99 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.98, i64 0, i32 4
  %.100 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.99, align 8
  %.101 = tail call i1 %.100(%string.560217* nonnull %.1, %string.560217* %.95)
  br i1 %.101, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif
  %.105 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.560217*
  %.106.repack = bitcast i8* %.105 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.106.repack, align 8
  %.106.repack28 = getelementptr inbounds i8, i8* %.105, i64 8
  %27 = bitcast i8* %.106.repack28 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.197, i64 0, i64 0), i8** %27, align 8
  %.106.repack29 = getelementptr inbounds i8, i8* %.105, i64 16
  %28 = bitcast i8* %.106.repack29 to i64*
  store i64 8, i64* %28, align 8
  %.106.repack30 = getelementptr inbounds i8, i8* %.105, i64 24
  %29 = bitcast i8* %.106.repack30 to i64*
  store i64 8, i64* %29, align 8
  %.109 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.109, i64 0, i32 4
  %.111 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.110, align 8
  %.112 = tail call i1 %.111(%string.560217* nonnull %.1, %string.560217* %.106)
  br i1 %.112, label %.3.if, label %.3.endif.endif.endif.endi...endif

.3.endif.endif.endif.endi...endif:                ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.116 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.560217*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.117.repack, align 8
  %.117.repack31 = getelementptr inbounds i8, i8* %.116, i64 8
  %30 = bitcast i8* %.117.repack31 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.198, i64 0, i64 0), i8** %30, align 8
  %.117.repack32 = getelementptr inbounds i8, i8* %.116, i64 16
  %31 = bitcast i8* %.117.repack32 to i64*
  store i64 7, i64* %31, align 8
  %.117.repack33 = getelementptr inbounds i8, i8* %.116, i64 24
  %32 = bitcast i8* %.117.repack33 to i64*
  store i64 7, i64* %32, align 8
  %.120 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.120, i64 0, i32 4
  %.122 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.121, align 8
  %.123 = tail call i1 %.122(%string.560217* nonnull %.1, %string.560217* %.117)
  br i1 %.123, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3.endif.endif.endif.endi...endif
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.560217*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.128.repack, align 8
  %.128.repack34 = getelementptr inbounds i8, i8* %.127, i64 8
  %33 = bitcast i8* %.128.repack34 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.199, i64 0, i64 0), i8** %33, align 8
  %.128.repack35 = getelementptr inbounds i8, i8* %.127, i64 16
  %34 = bitcast i8* %.128.repack35 to i64*
  store i64 8, i64* %34, align 8
  %.128.repack36 = getelementptr inbounds i8, i8* %.127, i64 24
  %35 = bitcast i8* %.128.repack36 to i64*
  store i64 8, i64* %35, align 8
  %.131 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.132 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.131, i64 0, i32 4
  %.133 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.132, align 8
  %.134 = tail call i1 %.133(%string.560217* nonnull %.1, %string.560217* %.128)
  br i1 %.134, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.3.endif.endif.endif.endi...endif.endif
  %.138 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.560217*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.139.repack, align 8
  %.139.repack37 = getelementptr inbounds i8, i8* %.138, i64 8
  %36 = bitcast i8* %.139.repack37 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.200, i64 0, i64 0), i8** %36, align 8
  %.139.repack38 = getelementptr inbounds i8, i8* %.138, i64 16
  %37 = bitcast i8* %.139.repack38 to i64*
  store i64 8, i64* %37, align 8
  %.139.repack39 = getelementptr inbounds i8, i8* %.138, i64 24
  %38 = bitcast i8* %.139.repack39 to i64*
  store i64 8, i64* %38, align 8
  %.142 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.143 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.142, i64 0, i32 4
  %.144 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.143, align 8
  %.145 = tail call i1 %.144(%string.560217* nonnull %.1, %string.560217* %.139)
  br i1 %.145, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif
  %.149 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.150 = bitcast i8* %.149 to %string.560217*
  %.150.repack = bitcast i8* %.149 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.150.repack, align 8
  %.150.repack40 = getelementptr inbounds i8, i8* %.149, i64 8
  %39 = bitcast i8* %.150.repack40 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.201, i64 0, i64 0), i8** %39, align 8
  %.150.repack41 = getelementptr inbounds i8, i8* %.149, i64 16
  %40 = bitcast i8* %.150.repack41 to i64*
  store i64 11, i64* %40, align 8
  %.150.repack42 = getelementptr inbounds i8, i8* %.149, i64 24
  %41 = bitcast i8* %.150.repack42 to i64*
  store i64 11, i64* %41, align 8
  %.153 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.153, i64 0, i32 4
  %.155 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.154, align 8
  %.156 = tail call i1 %.155(%string.560217* nonnull %.1, %string.560217* %.150)
  br i1 %.156, label %.3.if, label %.3.endif.endif.endif.endi...endif.1

.3.endif.endif.endif.endi...endif.1:              ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.endif
  %.160 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.560217*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.161.repack, align 8
  %.161.repack43 = getelementptr inbounds i8, i8* %.160, i64 8
  %42 = bitcast i8* %.161.repack43 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.202, i64 0, i64 0), i8** %42, align 8
  %.161.repack44 = getelementptr inbounds i8, i8* %.160, i64 16
  %43 = bitcast i8* %.161.repack44 to i64*
  store i64 11, i64* %43, align 8
  %.161.repack45 = getelementptr inbounds i8, i8* %.160, i64 24
  %44 = bitcast i8* %.161.repack45 to i64*
  store i64 11, i64* %44, align 8
  %.164 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.165 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.164, i64 0, i32 4
  %.166 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.165, align 8
  %.167 = tail call i1 %.166(%string.560217* nonnull %.1, %string.560217* %.161)
  br i1 %.167, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif

.3.endif.endif.endif.endi...endif.1.endif:        ; preds = %.3.endif.endif.endif.endi...endif.1
  %.171 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.560217*
  %.172.repack = bitcast i8* %.171 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.172.repack, align 8
  %.172.repack46 = getelementptr inbounds i8, i8* %.171, i64 8
  %45 = bitcast i8* %.172.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.203, i64 0, i64 0), i8** %45, align 8
  %.172.repack47 = getelementptr inbounds i8, i8* %.171, i64 16
  %46 = bitcast i8* %.172.repack47 to i64*
  store i64 6, i64* %46, align 8
  %.172.repack48 = getelementptr inbounds i8, i8* %.171, i64 24
  %47 = bitcast i8* %.172.repack48 to i64*
  store i64 6, i64* %47, align 8
  %.175 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.176 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.175, i64 0, i32 4
  %.177 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.176, align 8
  %.178 = tail call i1 %.177(%string.560217* nonnull %.1, %string.560217* %.172)
  br i1 %.178, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.1.endif
  %.182 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.183 = bitcast i8* %.182 to %string.560217*
  %.183.repack = bitcast i8* %.182 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.183.repack, align 8
  %.183.repack49 = getelementptr inbounds i8, i8* %.182, i64 8
  %48 = bitcast i8* %.183.repack49 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.204, i64 0, i64 0), i8** %48, align 8
  %.183.repack50 = getelementptr inbounds i8, i8* %.182, i64 16
  %49 = bitcast i8* %.183.repack50 to i64*
  store i64 6, i64* %49, align 8
  %.183.repack51 = getelementptr inbounds i8, i8* %.182, i64 24
  %50 = bitcast i8* %.183.repack51 to i64*
  store i64 6, i64* %50, align 8
  %.186 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.187 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.186, i64 0, i32 4
  %.188 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.187, align 8
  %.189 = tail call i1 %.188(%string.560217* nonnull %.1, %string.560217* %.183)
  br i1 %.189, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif
  %.193 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.560217*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.194.repack, align 8
  %.194.repack52 = getelementptr inbounds i8, i8* %.193, i64 8
  %51 = bitcast i8* %.194.repack52 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.205, i64 0, i64 0), i8** %51, align 8
  %.194.repack53 = getelementptr inbounds i8, i8* %.193, i64 16
  %52 = bitcast i8* %.194.repack53 to i64*
  store i64 7, i64* %52, align 8
  %.194.repack54 = getelementptr inbounds i8, i8* %.193, i64 24
  %53 = bitcast i8* %.194.repack54 to i64*
  store i64 7, i64* %53, align 8
  %.197 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.197, i64 0, i32 4
  %.199 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.198, align 8
  %.200 = tail call i1 %.199(%string.560217* nonnull %.1, %string.560217* %.194)
  br i1 %.200, label %.3.if, label %.3.endif.endif.endif.endi...endif.2

.3.endif.endif.endif.endi...endif.2:              ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.204 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.560217*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.205.repack, align 8
  %.205.repack55 = getelementptr inbounds i8, i8* %.204, i64 8
  %54 = bitcast i8* %.205.repack55 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.206, i64 0, i64 0), i8** %54, align 8
  %.205.repack56 = getelementptr inbounds i8, i8* %.204, i64 16
  %55 = bitcast i8* %.205.repack56 to i64*
  store i64 7, i64* %55, align 8
  %.205.repack57 = getelementptr inbounds i8, i8* %.204, i64 24
  %56 = bitcast i8* %.205.repack57 to i64*
  store i64 7, i64* %56, align 8
  %.208 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.209 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.208, i64 0, i32 4
  %.210 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.209, align 8
  %.211 = tail call i1 %.210(%string.560217* nonnull %.1, %string.560217* %.205)
  br i1 %.211, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3.endif.endif.endif.endi...endif.2
  %.215 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.216 = bitcast i8* %.215 to %string.560217*
  %.216.repack = bitcast i8* %.215 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.216.repack, align 8
  %.216.repack58 = getelementptr inbounds i8, i8* %.215, i64 8
  %57 = bitcast i8* %.216.repack58 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.207, i64 0, i64 0), i8** %57, align 8
  %.216.repack59 = getelementptr inbounds i8, i8* %.215, i64 16
  %58 = bitcast i8* %.216.repack59 to i64*
  store i64 6, i64* %58, align 8
  %.216.repack60 = getelementptr inbounds i8, i8* %.215, i64 24
  %59 = bitcast i8* %.216.repack60 to i64*
  store i64 6, i64* %59, align 8
  %.219 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.220 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.219, i64 0, i32 4
  %.221 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.220, align 8
  %.222 = tail call i1 %.221(%string.560217* nonnull %.1, %string.560217* %.216)
  br i1 %.222, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.2.endif
  %.226 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.227 = bitcast i8* %.226 to %string.560217*
  %.227.repack = bitcast i8* %.226 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.227.repack, align 8
  %.227.repack61 = getelementptr inbounds i8, i8* %.226, i64 8
  %60 = bitcast i8* %.227.repack61 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.208, i64 0, i64 0), i8** %60, align 8
  %.227.repack62 = getelementptr inbounds i8, i8* %.226, i64 16
  %61 = bitcast i8* %.227.repack62 to i64*
  store i64 6, i64* %61, align 8
  %.227.repack63 = getelementptr inbounds i8, i8* %.226, i64 24
  %62 = bitcast i8* %.227.repack63 to i64*
  store i64 6, i64* %62, align 8
  %.230 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.230, i64 0, i32 4
  %.232 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.231, align 8
  %.233 = tail call i1 %.232(%string.560217* nonnull %.1, %string.560217* %.227)
  br i1 %.233, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif
  %.237 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.238 = bitcast i8* %.237 to %string.560217*
  %.238.repack = bitcast i8* %.237 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.238.repack, align 8
  %.238.repack64 = getelementptr inbounds i8, i8* %.237, i64 8
  %63 = bitcast i8* %.238.repack64 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.209, i64 0, i64 0), i8** %63, align 8
  %.238.repack65 = getelementptr inbounds i8, i8* %.237, i64 16
  %64 = bitcast i8* %.238.repack65 to i64*
  store i64 6, i64* %64, align 8
  %.238.repack66 = getelementptr inbounds i8, i8* %.237, i64 24
  %65 = bitcast i8* %.238.repack66 to i64*
  store i64 6, i64* %65, align 8
  %.241 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.241, i64 0, i32 4
  %.243 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.242, align 8
  %.244 = tail call i1 %.243(%string.560217* nonnull %.1, %string.560217* %.238)
  br i1 %.244, label %.3.if, label %.3.endif.endif.endif.endi...endif.3

.3.endif.endif.endif.endi...endif.3:              ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif.endif
  %.248 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.249 = bitcast i8* %.248 to %string.560217*
  %.249.repack = bitcast i8* %.248 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.249.repack, align 8
  %.249.repack67 = getelementptr inbounds i8, i8* %.248, i64 8
  %66 = bitcast i8* %.249.repack67 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.210, i64 0, i64 0), i8** %66, align 8
  %.249.repack68 = getelementptr inbounds i8, i8* %.248, i64 16
  %67 = bitcast i8* %.249.repack68 to i64*
  store i64 6, i64* %67, align 8
  %.249.repack69 = getelementptr inbounds i8, i8* %.248, i64 24
  %68 = bitcast i8* %.249.repack69 to i64*
  store i64 6, i64* %68, align 8
  %.252 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.253 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.252, i64 0, i32 4
  %.254 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.253, align 8
  %.255 = tail call i1 %.254(%string.560217* nonnull %.1, %string.560217* %.249)
  br i1 %.255, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif

.3.endif.endif.endif.endi...endif.3.endif:        ; preds = %.3.endif.endif.endif.endi...endif.3
  %.259 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.260 = bitcast i8* %.259 to %string.560217*
  %.260.repack = bitcast i8* %.259 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.260.repack, align 8
  %.260.repack70 = getelementptr inbounds i8, i8* %.259, i64 8
  %69 = bitcast i8* %.260.repack70 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.211, i64 0, i64 0), i8** %69, align 8
  %.260.repack71 = getelementptr inbounds i8, i8* %.259, i64 16
  %70 = bitcast i8* %.260.repack71 to i64*
  store i64 6, i64* %70, align 8
  %.260.repack72 = getelementptr inbounds i8, i8* %.259, i64 24
  %71 = bitcast i8* %.260.repack72 to i64*
  store i64 6, i64* %71, align 8
  %.263 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.263, i64 0, i32 4
  %.265 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.264, align 8
  %.266 = tail call i1 %.265(%string.560217* nonnull %.1, %string.560217* %.260)
  br i1 %.266, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.3.endif
  %.270 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %string.560217*
  %.271.repack = bitcast i8* %.270 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.271.repack, align 8
  %.271.repack73 = getelementptr inbounds i8, i8* %.270, i64 8
  %72 = bitcast i8* %.271.repack73 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.212, i64 0, i64 0), i8** %72, align 8
  %.271.repack74 = getelementptr inbounds i8, i8* %.270, i64 16
  %73 = bitcast i8* %.271.repack74 to i64*
  store i64 6, i64* %73, align 8
  %.271.repack75 = getelementptr inbounds i8, i8* %.270, i64 24
  %74 = bitcast i8* %.271.repack75 to i64*
  store i64 6, i64* %74, align 8
  %.274 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.275 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.274, i64 0, i32 4
  %.276 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.275, align 8
  %.277 = tail call i1 %.276(%string.560217* nonnull %.1, %string.560217* %.271)
  br i1 %.277, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif
  %.281 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.560217*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.282.repack, align 8
  %.282.repack76 = getelementptr inbounds i8, i8* %.281, i64 8
  %75 = bitcast i8* %.282.repack76 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.213, i64 0, i64 0), i8** %75, align 8
  %.282.repack77 = getelementptr inbounds i8, i8* %.281, i64 16
  %76 = bitcast i8* %.282.repack77 to i64*
  store i64 7, i64* %76, align 8
  %.282.repack78 = getelementptr inbounds i8, i8* %.281, i64 24
  %77 = bitcast i8* %.282.repack78 to i64*
  store i64 7, i64* %77, align 8
  %.285 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.286 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.285, i64 0, i32 4
  %.287 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.286, align 8
  %.288 = tail call i1 %.287(%string.560217* nonnull %.1, %string.560217* %.282)
  br i1 %.288, label %.3.if, label %.3.endif.endif.endif.endi...endif.4

.3.endif.endif.endif.endi...endif.4:              ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif.endif
  %.292 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.560217*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.293.repack, align 8
  %.293.repack79 = getelementptr inbounds i8, i8* %.292, i64 8
  %78 = bitcast i8* %.293.repack79 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.214, i64 0, i64 0), i8** %78, align 8
  %.293.repack80 = getelementptr inbounds i8, i8* %.292, i64 16
  %79 = bitcast i8* %.293.repack80 to i64*
  store i64 7, i64* %79, align 8
  %.293.repack81 = getelementptr inbounds i8, i8* %.292, i64 24
  %80 = bitcast i8* %.293.repack81 to i64*
  store i64 7, i64* %80, align 8
  %.296 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.296, i64 0, i32 4
  %.298 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.297, align 8
  %.299 = tail call i1 %.298(%string.560217* nonnull %.1, %string.560217* %.293)
  br i1 %.299, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif

.3.endif.endif.endif.endi...endif.4.endif:        ; preds = %.3.endif.endif.endif.endi...endif.4
  %.303 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.560217*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.304.repack, align 8
  %.304.repack82 = getelementptr inbounds i8, i8* %.303, i64 8
  %81 = bitcast i8* %.304.repack82 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.215, i64 0, i64 0), i8** %81, align 8
  %.304.repack83 = getelementptr inbounds i8, i8* %.303, i64 16
  %82 = bitcast i8* %.304.repack83 to i64*
  store i64 8, i64* %82, align 8
  %.304.repack84 = getelementptr inbounds i8, i8* %.303, i64 24
  %83 = bitcast i8* %.304.repack84 to i64*
  store i64 8, i64* %83, align 8
  %.307 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.308 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.307, i64 0, i32 4
  %.309 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.308, align 8
  %.310 = tail call i1 %.309(%string.560217* nonnull %.1, %string.560217* %.304)
  br i1 %.310, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.4.endif
  %.314 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.315 = bitcast i8* %.314 to %string.560217*
  %.315.repack = bitcast i8* %.314 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.315.repack, align 8
  %.315.repack85 = getelementptr inbounds i8, i8* %.314, i64 8
  %84 = bitcast i8* %.315.repack85 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.216, i64 0, i64 0), i8** %84, align 8
  %.315.repack86 = getelementptr inbounds i8, i8* %.314, i64 16
  %85 = bitcast i8* %.315.repack86 to i64*
  store i64 8, i64* %85, align 8
  %.315.repack87 = getelementptr inbounds i8, i8* %.314, i64 24
  %86 = bitcast i8* %.315.repack87 to i64*
  store i64 8, i64* %86, align 8
  %.318 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.9, align 8
  %.319 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.318, i64 0, i32 4
  %.320 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.319, align 8
  %.321 = tail call i1 %.320(%string.560217* nonnull %.1, %string.560217* %.315)
  ret i1 %.321
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @bin_op_to_op_overload_name(i64 %.1) local_unnamed_addr #4 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.4.endif.endif [
    i64 1, label %.3.if
    i64 2, label %.3.endif.if
    i64 3, label %.3.endif.endif.if
    i64 4, label %.3.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.if
    i64 6, label %.3.endif.endif.endif.endif.endif.if
    i64 20, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 21, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 22, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 23, label %.3.endif.endif.endif.endi...if
    i64 24, label %.3.endif.endif.endif.endi...endif.if
    i64 25, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 7, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 8, label %.3.endif.endif.endif.endi...if.1
    i64 9, label %.3.endif.endif.endif.endi...endif.1.if
    i64 10, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 11, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 12, label %.3.endif.endif.endif.endi...if.2
    i64 13, label %.3.endif.endif.endif.endi...endif.2.if
    i64 14, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i64 29, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i64 30, label %.3.endif.endif.endif.endi...if.3
    i64 15, label %.3.endif.endif.endif.endi...endif.3.if
    i64 16, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i64 17, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i64 26, label %.3.endif.endif.endif.endi...if.4
    i64 28, label %.3.endif.endif.endif.endi...endif.4.if
    i64 18, label %.3.endif.endif.endif.endi...endif.4.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.560217*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.9.repack, align 8
  %.9.repack82 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack82 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.189, i64 0, i64 0), i8** %0, align 8
  %.9.repack83 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack83 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack84 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack84 to i64*
  store i64 7, i64* %2, align 8
  ret %string.560217* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.560217*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.16.repack, align 8
  %.16.repack79 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack79 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.190, i64 0, i64 0), i8** %3, align 8
  %.16.repack80 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack80 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack81 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack81 to i64*
  store i64 7, i64* %5, align 8
  ret %string.560217* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.560217*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.23.repack, align 8
  %.23.repack76 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack76 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.191, i64 0, i64 0), i8** %6, align 8
  %.23.repack77 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack77 to i64*
  store i64 7, i64* %7, align 8
  %.23.repack78 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack78 to i64*
  store i64 7, i64* %8, align 8
  ret %string.560217* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.560217*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.30.repack, align 8
  %.30.repack73 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack73 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.192, i64 0, i64 0), i8** %9, align 8
  %.30.repack74 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack74 to i64*
  store i64 7, i64* %10, align 8
  %.30.repack75 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack75 to i64*
  store i64 7, i64* %11, align 8
  ret %string.560217* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.560217*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.37.repack, align 8
  %.37.repack70 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack70 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.214, i64 0, i64 0), i8** %12, align 8
  %.37.repack71 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack71 to i64*
  store i64 7, i64* %13, align 8
  %.37.repack72 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack72 to i64*
  store i64 7, i64* %14, align 8
  ret %string.560217* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.560217*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.44.repack, align 8
  %.44.repack67 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack67 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.213, i64 0, i64 0), i8** %15, align 8
  %.44.repack68 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack68 to i64*
  store i64 7, i64* %16, align 8
  %.44.repack69 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack69 to i64*
  store i64 7, i64* %17, align 8
  ret %string.560217* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.560217*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.51.repack, align 8
  %.51.repack64 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack64 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.194, i64 0, i64 0), i8** %18, align 8
  %.51.repack65 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack65 to i64*
  store i64 8, i64* %19, align 8
  %.51.repack66 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack66 to i64*
  store i64 8, i64* %20, align 8
  ret %string.560217* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.560217*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.58.repack, align 8
  %.58.repack61 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack61 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.195, i64 0, i64 0), i8** %21, align 8
  %.58.repack62 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack62 to i64*
  store i64 8, i64* %22, align 8
  %.58.repack63 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack63 to i64*
  store i64 8, i64* %23, align 8
  ret %string.560217* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.560217*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.65.repack, align 8
  %.65.repack58 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack58 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.196, i64 0, i64 0), i8** %24, align 8
  %.65.repack59 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack59 to i64*
  store i64 8, i64* %25, align 8
  %.65.repack60 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack60 to i64*
  store i64 8, i64* %26, align 8
  ret %string.560217* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.560217*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.72.repack, align 8
  %.72.repack55 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack55 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.197, i64 0, i64 0), i8** %27, align 8
  %.72.repack56 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack56 to i64*
  store i64 8, i64* %28, align 8
  %.72.repack57 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack57 to i64*
  store i64 8, i64* %29, align 8
  ret %string.560217* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.560217*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.79.repack, align 8
  %.79.repack52 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack52 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.216, i64 0, i64 0), i8** %30, align 8
  %.79.repack53 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack53 to i64*
  store i64 8, i64* %31, align 8
  %.79.repack54 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack54 to i64*
  store i64 8, i64* %32, align 8
  ret %string.560217* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.560217*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.86.repack, align 8
  %.86.repack49 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack49 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.215, i64 0, i64 0), i8** %33, align 8
  %.86.repack50 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack50 to i64*
  store i64 8, i64* %34, align 8
  %.86.repack51 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack51 to i64*
  store i64 8, i64* %35, align 8
  ret %string.560217* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.560217*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.93.repack, align 8
  %.93.repack46 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.217, i64 0, i64 0), i8** %36, align 8
  %.93.repack47 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack47 to i64*
  store i64 6, i64* %37, align 8
  %.93.repack48 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack48 to i64*
  store i64 6, i64* %38, align 8
  ret %string.560217* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.560217*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.100.repack, align 8
  %.100.repack43 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack43 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.212, i64 0, i64 0), i8** %39, align 8
  %.100.repack44 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack44 to i64*
  store i64 6, i64* %40, align 8
  %.100.repack45 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack45 to i64*
  store i64 6, i64* %41, align 8
  ret %string.560217* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.560217*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.107.repack, align 8
  %.107.repack40 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack40 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.208, i64 0, i64 0), i8** %42, align 8
  %.107.repack41 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack41 to i64*
  store i64 6, i64* %43, align 8
  %.107.repack42 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack42 to i64*
  store i64 6, i64* %44, align 8
  ret %string.560217* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.560217*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.114.repack, align 8
  %.114.repack37 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack37 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.211, i64 0, i64 0), i8** %45, align 8
  %.114.repack38 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack38 to i64*
  store i64 6, i64* %46, align 8
  %.114.repack39 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack39 to i64*
  store i64 6, i64* %47, align 8
  ret %string.560217* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.560217*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.121.repack, align 8
  %.121.repack34 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack34 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.188, i64 0, i64 0), i8** %48, align 8
  %.121.repack35 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack35 to i64*
  store i64 6, i64* %49, align 8
  %.121.repack36 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack36 to i64*
  store i64 6, i64* %50, align 8
  ret %string.560217* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.560217*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.128.repack, align 8
  %.128.repack31 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack31 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.210, i64 0, i64 0), i8** %51, align 8
  %.128.repack32 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack32 to i64*
  store i64 6, i64* %52, align 8
  %.128.repack33 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack33 to i64*
  store i64 6, i64* %53, align 8
  ret %string.560217* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.560217*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.135.repack, align 8
  %.135.repack28 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack28 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.203, i64 0, i64 0), i8** %54, align 8
  %.135.repack29 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack29 to i64*
  store i64 6, i64* %55, align 8
  %.135.repack30 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack30 to i64*
  store i64 6, i64* %56, align 8
  ret %string.560217* %.135

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3
  %.141 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.142 = bitcast i8* %.141 to %string.560217*
  %.142.repack = bitcast i8* %.141 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.142.repack, align 8
  %.142.repack25 = getelementptr inbounds i8, i8* %.141, i64 8
  %57 = bitcast i8* %.142.repack25 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.204, i64 0, i64 0), i8** %57, align 8
  %.142.repack26 = getelementptr inbounds i8, i8* %.141, i64 16
  %58 = bitcast i8* %.142.repack26 to i64*
  store i64 6, i64* %58, align 8
  %.142.repack27 = getelementptr inbounds i8, i8* %.141, i64 24
  %59 = bitcast i8* %.142.repack27 to i64*
  store i64 6, i64* %59, align 8
  ret %string.560217* %.142

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3
  %.148 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.560217*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.149.repack, align 8
  %.149.repack22 = getelementptr inbounds i8, i8* %.148, i64 8
  %60 = bitcast i8* %.149.repack22 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.205, i64 0, i64 0), i8** %60, align 8
  %.149.repack23 = getelementptr inbounds i8, i8* %.148, i64 16
  %61 = bitcast i8* %.149.repack23 to i64*
  store i64 7, i64* %61, align 8
  %.149.repack24 = getelementptr inbounds i8, i8* %.148, i64 24
  %62 = bitcast i8* %.149.repack24 to i64*
  store i64 7, i64* %62, align 8
  ret %string.560217* %.149

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3
  %.155 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %string.560217*
  %.156.repack = bitcast i8* %.155 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.156.repack, align 8
  %.156.repack19 = getelementptr inbounds i8, i8* %.155, i64 8
  %63 = bitcast i8* %.156.repack19 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.206, i64 0, i64 0), i8** %63, align 8
  %.156.repack20 = getelementptr inbounds i8, i8* %.155, i64 16
  %64 = bitcast i8* %.156.repack20 to i64*
  store i64 7, i64* %64, align 8
  %.156.repack21 = getelementptr inbounds i8, i8* %.155, i64 24
  %65 = bitcast i8* %.156.repack21 to i64*
  store i64 7, i64* %65, align 8
  ret %string.560217* %.156

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3
  %.162 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.560217*
  %.163.repack = bitcast i8* %.162 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.163.repack, align 8
  %.163.repack16 = getelementptr inbounds i8, i8* %.162, i64 8
  %66 = bitcast i8* %.163.repack16 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.193, i64 0, i64 0), i8** %66, align 8
  %.163.repack17 = getelementptr inbounds i8, i8* %.162, i64 16
  %67 = bitcast i8* %.163.repack17 to i64*
  store i64 6, i64* %67, align 8
  %.163.repack18 = getelementptr inbounds i8, i8* %.162, i64 24
  %68 = bitcast i8* %.163.repack18 to i64*
  store i64 6, i64* %68, align 8
  ret %string.560217* %.163

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3
  %.169 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.560217*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.170.repack, align 8
  %.170.repack13 = getelementptr inbounds i8, i8* %.169, i64 8
  %69 = bitcast i8* %.170.repack13 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.218, i64 0, i64 0), i8** %69, align 8
  %.170.repack14 = getelementptr inbounds i8, i8* %.169, i64 16
  %70 = bitcast i8* %.170.repack14 to i64*
  store i64 7, i64* %70, align 8
  %.170.repack15 = getelementptr inbounds i8, i8* %.169, i64 24
  %71 = bitcast i8* %.170.repack15 to i64*
  store i64 7, i64* %71, align 8
  ret %string.560217* %.170

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3
  %.176 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.177 = bitcast i8* %.176 to %string.560217*
  %.177.repack = bitcast i8* %.176 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.177.repack, align 8
  %.177.repack10 = getelementptr inbounds i8, i8* %.176, i64 8
  %72 = bitcast i8* %.177.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.219, i64 0, i64 0), i8** %72, align 8
  %.177.repack11 = getelementptr inbounds i8, i8* %.176, i64 16
  %73 = bitcast i8* %.177.repack11 to i64*
  store i64 7, i64* %73, align 8
  %.177.repack12 = getelementptr inbounds i8, i8* %.176, i64 24
  %74 = bitcast i8* %.177.repack12 to i64*
  store i64 7, i64* %74, align 8
  ret %string.560217* %.177

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3
  %.183 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.184 = bitcast i8* %.183 to %string.560217*
  %.184.repack = bitcast i8* %.183 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.184.repack, align 8
  %.184.repack7 = getelementptr inbounds i8, i8* %.183, i64 8
  %75 = bitcast i8* %.184.repack7 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.199, i64 0, i64 0), i8** %75, align 8
  %.184.repack8 = getelementptr inbounds i8, i8* %.183, i64 16
  %76 = bitcast i8* %.184.repack8 to i64*
  store i64 8, i64* %76, align 8
  %.184.repack9 = getelementptr inbounds i8, i8* %.183, i64 24
  %77 = bitcast i8* %.184.repack9 to i64*
  store i64 8, i64* %77, align 8
  ret %string.560217* %.184

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3
  %.190 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.560217*
  %.191.repack = bitcast i8* %.190 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.191.repack, align 8
  %.191.repack4 = getelementptr inbounds i8, i8* %.190, i64 8
  %78 = bitcast i8* %.191.repack4 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.200, i64 0, i64 0), i8** %78, align 8
  %.191.repack5 = getelementptr inbounds i8, i8* %.190, i64 16
  %79 = bitcast i8* %.191.repack5 to i64*
  store i64 8, i64* %79, align 8
  %.191.repack6 = getelementptr inbounds i8, i8* %.190, i64 24
  %80 = bitcast i8* %.191.repack6 to i64*
  store i64 8, i64* %80, align 8
  ret %string.560217* %.191

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3
  %.197 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.198 = bitcast i8* %.197 to %string.560217*
  %.198.repack = bitcast i8* %.197 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.198.repack, align 8
  %.198.repack1 = getelementptr inbounds i8, i8* %.197, i64 8
  %81 = bitcast i8* %.198.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.207, i64 0, i64 0), i8** %81, align 8
  %.198.repack2 = getelementptr inbounds i8, i8* %.197, i64 16
  %82 = bitcast i8* %.198.repack2 to i64*
  store i64 6, i64* %82, align 8
  %.198.repack3 = getelementptr inbounds i8, i8* %.197, i64 24
  %83 = bitcast i8* %.198.repack3 to i64*
  store i64 6, i64* %83, align 8
  ret %string.560217* %.198

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3
  ret %string.560217* null
}

define i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 8, label %.4.endif.endif.if
    i64 9, label %.4.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.14 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %0 = bitcast %Expression.560401* %.14 to i64*
  %.15 = load i64, i64* %0, align 8
  ret i64 %.15

.4.endif.if:                                      ; preds = %.4
  %.24 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %1 = bitcast %Expression.560401* %.24 to double*
  %.25 = load double, double* %1, align 8
  %.26 = fptosi double %.25 to i64
  ret i64 %.26

.4.endif.endif.if:                                ; preds = %.4
  %2 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 1
  %.38 = load i64, i64* %2, align 8
  switch i64 %.38, label %.4.endif.endif.endif.endif.endif [
    i64 1, label %.4.endif.endif.if.if
    i64 2, label %.4.endif.endif.if.endif.if
    i64 3, label %.4.endif.endif.if.endif.endif.if
    i64 4, label %.4.endif.endif.if.endif.endif.endif.if
    i64 5, label %.4.endif.endif.if.endif.endif.endif.endif.if
    i64 13, label %.4.endif.endif.if.endif.endif.endif.endif.endif.if
    i64 14, label %.4.endif.endif.if.endif.e...if
    i64 15, label %.4.endif.endif.if.endif.e...endif.if
    i64 16, label %.4.endif.endif.if.endif.e...endif.endif.if
    i64 17, label %.4.endif.endif.if.endif.e...endif.endif.endif.if
  ]

.4.endif.endif.if.if:                             ; preds = %.4.endif.endif.if
  %.43 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %3 = bitcast %Expression.560401* %.43 to %Expression.560401**
  %.44 = load %Expression.560401*, %Expression.560401** %3, align 8
  %.45 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.44)
  %.48 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %4 = bitcast i1* %.48 to %Expression.560401**
  %.49 = load %Expression.560401*, %Expression.560401** %4, align 8
  %.50 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.49)
  %.51 = add i64 %.50, %.45
  ret i64 %.51

.4.endif.endif.if.endif.if:                       ; preds = %.4.endif.endif.if
  %.60 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %5 = bitcast %Expression.560401* %.60 to %Expression.560401**
  %.61 = load %Expression.560401*, %Expression.560401** %5, align 8
  %.62 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.61)
  %.65 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %6 = bitcast i1* %.65 to %Expression.560401**
  %.66 = load %Expression.560401*, %Expression.560401** %6, align 8
  %.67 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.66)
  %.68 = sub i64 %.62, %.67
  ret i64 %.68

.4.endif.endif.if.endif.endif.if:                 ; preds = %.4.endif.endif.if
  %.77 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %7 = bitcast %Expression.560401* %.77 to %Expression.560401**
  %.78 = load %Expression.560401*, %Expression.560401** %7, align 8
  %.79 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.78)
  %.82 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %8 = bitcast i1* %.82 to %Expression.560401**
  %.83 = load %Expression.560401*, %Expression.560401** %8, align 8
  %.84 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.83)
  %.85 = mul i64 %.84, %.79
  ret i64 %.85

.4.endif.endif.if.endif.endif.endif.if:           ; preds = %.4.endif.endif.if
  %.94 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %9 = bitcast %Expression.560401* %.94 to %Expression.560401**
  %.95 = load %Expression.560401*, %Expression.560401** %9, align 8
  %.96 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.95)
  %.99 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %10 = bitcast i1* %.99 to %Expression.560401**
  %.100 = load %Expression.560401*, %Expression.560401** %10, align 8
  %.101 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.100)
  %.102 = sdiv i64 %.96, %.101
  ret i64 %.102

.4.endif.endif.if.endif.endif.endif.endif.if:     ; preds = %.4.endif.endif.if
  %.111 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %11 = bitcast %Expression.560401* %.111 to %Expression.560401**
  %.112 = load %Expression.560401*, %Expression.560401** %11, align 8
  %.113 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.112)
  %.116 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %12 = bitcast i1* %.116 to %Expression.560401**
  %.117 = load %Expression.560401*, %Expression.560401** %12, align 8
  %.118 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.117)
  %.119 = srem i64 %.113, %.118
  ret i64 %.119

.4.endif.endif.if.endif.endif.endif.endif.endif.if: ; preds = %.4.endif.endif.if
  %.128 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %13 = bitcast %Expression.560401* %.128 to %Expression.560401**
  %.129 = load %Expression.560401*, %Expression.560401** %13, align 8
  %.130 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.129)
  %.133 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %14 = bitcast i1* %.133 to %Expression.560401**
  %.134 = load %Expression.560401*, %Expression.560401** %14, align 8
  %.135 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.134)
  %.136 = shl i64 %.130, %.135
  ret i64 %.136

.4.endif.endif.if.endif.e...if:                   ; preds = %.4.endif.endif.if
  %.145 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %15 = bitcast %Expression.560401* %.145 to %Expression.560401**
  %.146 = load %Expression.560401*, %Expression.560401** %15, align 8
  %.147 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.146)
  %.150 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %16 = bitcast i1* %.150 to %Expression.560401**
  %.151 = load %Expression.560401*, %Expression.560401** %16, align 8
  %.152 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.151)
  %.153 = ashr i64 %.147, %.152
  ret i64 %.153

.4.endif.endif.if.endif.e...endif.if:             ; preds = %.4.endif.endif.if
  %.162 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %17 = bitcast %Expression.560401* %.162 to %Expression.560401**
  %.163 = load %Expression.560401*, %Expression.560401** %17, align 8
  %.164 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.163)
  %.167 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %18 = bitcast i1* %.167 to %Expression.560401**
  %.168 = load %Expression.560401*, %Expression.560401** %18, align 8
  %.169 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.168)
  %.170 = or i64 %.169, %.164
  ret i64 %.170

.4.endif.endif.if.endif.e...endif.endif.if:       ; preds = %.4.endif.endif.if
  %.179 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %19 = bitcast %Expression.560401* %.179 to %Expression.560401**
  %.180 = load %Expression.560401*, %Expression.560401** %19, align 8
  %.181 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.180)
  %.184 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %20 = bitcast i1* %.184 to %Expression.560401**
  %.185 = load %Expression.560401*, %Expression.560401** %20, align 8
  %.186 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.185)
  %.187 = and i64 %.186, %.181
  ret i64 %.187

.4.endif.endif.if.endif.e...endif.endif.endif.if: ; preds = %.4.endif.endif.if
  %.196 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %21 = bitcast %Expression.560401* %.196 to %Expression.560401**
  %.197 = load %Expression.560401*, %Expression.560401** %21, align 8
  %.198 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.197)
  %.201 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 2
  %22 = bitcast i1* %.201 to %Expression.560401**
  %.202 = load %Expression.560401*, %Expression.560401** %22, align 8
  %.203 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.202)
  %.204 = xor i64 %.203, %.198
  ret i64 %.204

.4.endif.endif.endif.if:                          ; preds = %.4
  %.216 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %23 = bitcast %Expression.560401* %.216 to i64*
  %.217 = load i64, i64* %23, align 8
  switch i64 %.217, label %.4.endif.endif.endif.endif.endif [
    i64 5, label %.4.endif.endif.endif.if.if
    i64 6, label %.4.endif.endif.endif.if.endif.if
  ]

.4.endif.endif.endif.if.if:                       ; preds = %.4.endif.endif.endif.if
  %.222 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 1
  %24 = bitcast i64* %.222 to %Expression.560401**
  %.223 = load %Expression.560401*, %Expression.560401** %24, align 8
  %.224 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.223)
  %.225 = sub i64 0, %.224
  ret i64 %.225

.4.endif.endif.endif.if.endif.if:                 ; preds = %.4.endif.endif.endif.if
  %.234 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 1
  %25 = bitcast i64* %.234 to %Expression.560401**
  %.235 = load %Expression.560401*, %Expression.560401** %25, align 8
  %.236 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.235)
  %.237 = xor i64 %.236, -1
  ret i64 %.237

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.251 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %26 = bitcast %Expression.560401* %.251 to %ConstId.560447**
  %.2521 = load %ConstId.560447*, %ConstId.560447** %26, align 8
  %.254 = tail call %Const.560507* @get_const(%Program.560549* %.1, %ConstId.560447* %.2521)
  %.255 = getelementptr inbounds %Const.560507, %Const.560507* %.254, i64 0, i32 3
  %.256 = load %Expression.560401*, %Expression.560401** %.255, align 8
  %.257 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.1, %Expression.560401* %.256)
  ret i64 %.257

.4.endif.endif.endif.endif.endif:                 ; preds = %.4.endif.endif.endif.if, %.4.endif.endif.if, %.4
  ret i64 -99999999
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Generic_constructor(%Generic.560553* nocapture %.1, i64 %.2, %ClassDeclarationNode.560343* %.3) local_unnamed_addr #2 {
.5:
  %.11 = getelementptr inbounds %Generic.560553, %Generic.560553* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %Generic.560553, %Generic.560553* %.1, i64 0, i32 2
  store %ClassDeclarationNode.560343* %.3, %ClassDeclarationNode.560343** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Generic>_constructor"(%"Bucket<string, Generic>.560559"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Generic>_set"(%"Bucket<string, Generic>.560559"* nocapture %.1, %string.560217* %.2, %Generic.560553* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.1, i64 0, i32 2
  store %Generic.560553* %.3, %Generic.560553** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, Generic>_constructor"(%"Map<string, Generic>.560557"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Generic>.560559"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, Generic>.560559"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, Generic>_vtable_ty.560560"**
  store %"Bucket<string, Generic>_vtable_ty.560560"* @"Bucket<string, Generic>_vtable_data", %"Bucket<string, Generic>_vtable_ty.560560"** %.266, align 8
  tail call void @"Bucket<string, Generic>_constructor"(%"Bucket<string, Generic>.560559"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, Generic>.560559"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, Generic>_vtable_ty.560560"**
  store %"Bucket<string, Generic>_vtable_ty.560560"* @"Bucket<string, Generic>_vtable_data", %"Bucket<string, Generic>_vtable_ty.560560"** %.26, align 8
  tail call void @"Bucket<string, Generic>_constructor"(%"Bucket<string, Generic>.560559"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, Generic>.560559"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, Generic>_hash_fnc"(%"Map<string, Generic>.560557"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, Generic>_resize"(%"Map<string, Generic>.560557"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, Generic>>.560561"* (%"Map<string, Generic>.560557"*)*, %"Array<Bucket<string, Generic>>.560561"* (%"Map<string, Generic>.560557"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, Generic>>.560561"* %.9(%"Map<string, Generic>.560557"* %.1)
  %.14 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Generic>.560559"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, Generic>.560559"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, Generic>_vtable_ty.560560"**
  store %"Bucket<string, Generic>_vtable_ty.560560"* @"Bucket<string, Generic>_vtable_data", %"Bucket<string, Generic>_vtable_ty.560560"** %.5016, align 8
  tail call void @"Bucket<string, Generic>_constructor"(%"Bucket<string, Generic>.560559"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, Generic>.560559"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, Generic>_vtable_ty.560560"**
  store %"Bucket<string, Generic>_vtable_ty.560560"* @"Bucket<string, Generic>_vtable_data", %"Bucket<string, Generic>_vtable_ty.560560"** %.50, align 8
  tail call void @"Bucket<string, Generic>_constructor"(%"Bucket<string, Generic>.560559"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, Generic>.560559"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, Generic>.560557"*, %string.560217*, %Generic.560553*)*, void (%"Map<string, Generic>.560557"*, %string.560217*, %Generic.560553*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)*, %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, Generic>.560559"* %.81(%"Array<Bucket<string, Generic>>.560561"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)*, %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, Generic>.560559"* %.90(%"Array<Bucket<string, Generic>>.560561"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.91, i64 0, i32 2
  %.93 = load %Generic.560553*, %Generic.560553** %.92, align 8
  tail call void %.75(%"Map<string, Generic>.560557"* nonnull %.1, %string.560217* %.84, %Generic.560553* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, Generic>_set"(%"Map<string, Generic>.560557"* %.1, %string.560217* %.2, %Generic.560553* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, Generic>.560557"*)*, void (%"Map<string, Generic>.560557"*)** %.25, align 8
  tail call void %.26(%"Map<string, Generic>.560557"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, Generic>.560557"*, %string.560217*)*, i64 (%"Map<string, Generic>.560557"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, Generic>.560557"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.44, i64 %.39
  %.46 = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, Generic>.560559"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, Generic>.560559"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.94, i64 %.91
  %.96 = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, Generic>_vtable_ty.560560"*, %"Bucket<string, Generic>_vtable_ty.560560"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, Generic>_vtable_ty.560560", %"Bucket<string, Generic>_vtable_ty.560560"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, Generic>.560559"*, %string.560217*, %Generic.560553*)*, void (%"Bucket<string, Generic>.560559"*, %string.560217*, %Generic.560553*)** %.99, align 8
  tail call void %.100(%"Bucket<string, Generic>.560559"* %.96, %string.560217* %.2, %Generic.560553* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.77, i64 %.72
  %.79 = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %Generic.560553* @"Map<string, Generic>_get"(%"Map<string, Generic>.560557"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, Generic>.560557"*, %string.560217*)*, i64 (%"Map<string, Generic>.560557"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, Generic>.560557"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.22, i64 %.17
  %.24 = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, Generic>.560559"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.56, i64 %.50
  %.58 = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %Generic.560553*, %Generic.560553** %.79, align 8
  ret %Generic.560553* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %Generic.560553* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, Generic>>_constructor"(%"Array<Bucket<string, Generic>>.560561"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Generic>.560559"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, Generic>>_resize"(%"Array<Bucket<string, Generic>>.560561"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Generic>.560559"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, Generic>>_swap"(%"Array<Bucket<string, Generic>>.560561"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, Generic>.560559"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, Generic>.560559"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, Generic>.560559"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, Generic>>___sl__"(%"Array<Bucket<string, Generic>>.560561"* %.1, %"Bucket<string, Generic>.560559"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, Generic>>.560561"*)*, void (%"Array<Bucket<string, Generic>>.560561"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, Generic>>.560561"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.31, i64 %.24
  store %"Bucket<string, Generic>.560559"* %.2, %"Bucket<string, Generic>.560559"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, Generic>>___setitem__"(%"Array<Bucket<string, Generic>>.560561"* nocapture readonly %.1, i64 %.2, %"Bucket<string, Generic>.560559"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.30, i64 %.2
  store %"Bucket<string, Generic>.560559"* %.3, %"Bucket<string, Generic>.560559"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, Generic>>_append"(%"Array<Bucket<string, Generic>>.560561"* %.1, %"Bucket<string, Generic>.560559"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)*, void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, Generic>>.560561"* %.1, %"Bucket<string, Generic>.560559"* %.2)
  ret void
}

define %"Bucket<string, Generic>.560559"* @"Array<Bucket<string, Generic>>___getitem__"(%"Array<Bucket<string, Generic>>.560561"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.28, i64 %.2
  %.30 = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.29, align 8
  ret %"Bucket<string, Generic>.560559"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, Generic>.560559"* null
}

define i1 @"Array<Bucket<string, Generic>>___eq__"(%"Array<Bucket<string, Generic>>.560561"* %.1, %"Array<Bucket<string, Generic>>.560561"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)*, %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, Generic>.560559"* %.30(%"Array<Bucket<string, Generic>>.560561"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)*, %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, Generic>.560559"* %.37(%"Array<Bucket<string, Generic>>.560561"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, Generic>.560559"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, Generic>.560559"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, Generic>>___in__"(%"Array<Bucket<string, Generic>>.560561"* %.1, %"Bucket<string, Generic>.560559"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, Generic>.560559"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)*, %"Bucket<string, Generic>.560559"* (%"Array<Bucket<string, Generic>>.560561"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, Generic>.560559"* %.21(%"Array<Bucket<string, Generic>>.560561"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, Generic>.560559"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, Generic>>_find"(%"Array<Bucket<string, Generic>>.560561"* nocapture readonly %.1, %"Bucket<string, Generic>.560559"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, Generic>>.560561", %"Array<Bucket<string, Generic>>.560561"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, Generic>.560559"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, Generic>.560559"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, Generic>>.560561"* @"Map<string, Generic>_get_buckets"(%"Map<string, Generic>.560557"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, Generic>>.560561"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, Generic>>_vtable_ty.560562"**
  store %"Array<Bucket<string, Generic>>_vtable_ty.560562"* @"Array<Bucket<string, Generic>>_vtable_data", %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, Generic>.560559"**, %"Bucket<string, Generic>.560559"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, Generic>.560559"*, %"Bucket<string, Generic>.560559"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, Generic>.560559", %"Bucket<string, Generic>.560559"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, Generic>>.560561"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, Generic>>_vtable_ty.560562"*, %"Array<Bucket<string, Generic>>_vtable_ty.560562"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, Generic>>_vtable_ty.560562", %"Array<Bucket<string, Generic>>_vtable_ty.560562"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)*, void (%"Array<Bucket<string, Generic>>.560561"*, %"Bucket<string, Generic>.560559"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, Generic>>.560561"* %.9, %"Bucket<string, Generic>.560559"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @TypeChecker_constructor(%TypeChecker.560555* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.7 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  store i64 -1, i64* %.7, align 8
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 8
  store i1 false, i1* %.10, align 1
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Program.560549*
  %.15 = bitcast i8* %.13 to %Program_vtable_ty.560550**
  store %Program_vtable_ty.560550* @Program_vtable_data, %Program_vtable_ty.560550** %.15, align 8
  tail call void @Program_constructor(%Program.560549* %.14)
  %.18 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %0 = bitcast %Program.560549** %.18 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %"Map<string, Generic>.560557"*
  %.23 = bitcast i8* %.21 to %"Map<string, Generic>_vtable_ty.560558"**
  store %"Map<string, Generic>_vtable_ty.560558"* @"Map<string, Generic>_vtable_data", %"Map<string, Generic>_vtable_ty.560558"** %.23, align 8
  tail call void @"Map<string, Generic>_constructor"(%"Map<string, Generic>.560557"* %.22)
  %.26 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 10
  %1 = bitcast %"Map<string, Generic>.560557"** %.26 to i8**
  store i8* %.21, i8** %1, align 8
  ret void
}

define %Module.560531* @TypeChecker_get_module(%TypeChecker.560555* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.10 = load %Program.560549*, %Program.560549** %.9, align 8
  %.11 = getelementptr inbounds %Program.560549, %Program.560549* %.10, i64 0, i32 2
  %.12 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.12, i64 0, i32 0
  %.14 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.14, i64 0, i32 5
  %.16 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.15, align 8
  %.17 = tail call %Module.560531* %.16(%"Array<Module>.560551"* %.12, i64 %.2)
  ret %Module.560531* %.17
}

define %Module.560531* @TypeChecker_get_current_module(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.7, i64 0, i32 0
  %.9 = load %Module.560531* (%TypeChecker.560555*, i64)*, %Module.560531* (%TypeChecker.560555*, i64)** %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call %Module.560531* %.9(%TypeChecker.560555* %.1, i64 %.12)
  ret %Module.560531* %.13
}

define %Scope.560473* @TypeChecker_get_current_scope(%TypeChecker.560555* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.7 = load %Program.560549*, %Program.560549** %.6, align 8
  %.9 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %.10 = load %ScopeId.560471*, %ScopeId.560471** %.9, align 8
  %.11 = tail call %Scope.560473* @get_scope(%Program.560549* %.7, %ScopeId.560471* %.10)
  ret %Scope.560473* %.11
}

define %Scope.560473* @TypeChecker_get_current_module_global_scope(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.7, i64 0, i32 1
  %.9 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.8, align 8
  %.10 = tail call %Module.560531* %.9(%TypeChecker.560555* %.1)
  %.11 = getelementptr inbounds %Module.560531, %Module.560531* %.10, i64 0, i32 8
  %.12 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.12, i64 0, i32 0
  %.14 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.14, i64 0, i32 5
  %.16 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.15, align 8
  %.17 = tail call %Scope.560473* %.16(%"Array<Scope>.560538"* %.12, i64 0)
  ret %Scope.560473* %.17
}

define %Function.560501* @TypeChecker_get_current_function(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 4
  %.7 = load %VarId.560441*, %VarId.560441** %.6, align 8
  %.8 = getelementptr inbounds %VarId.560441, %VarId.560441* %.7, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.12 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.11, align 8
  %.13 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.12, i64 0, i32 1
  %.14 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.13, align 8
  %.15 = tail call %Module.560531* %.14(%TypeChecker.560555* %.1)
  %.16 = getelementptr inbounds %Module.560531, %Module.560531* %.15, i64 0, i32 6
  %.17 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.17, i64 0, i32 0
  %.19 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.19, i64 0, i32 5
  %.21 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.20, align 8
  %.22 = tail call %Function.560501* %.21(%"Array<Function>.560536"* %.17, i64 %.9)
  ret %Function.560501* %.22
}

define %FunctionType.560387* @TypeChecker_get_current_function_type(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 5
  %0 = bitcast %PropId.560449** %.6 to i64*
  %.71 = load i64, i64* %0, align 8
  %.8 = trunc i64 %.71 to i32
  %.10.not = icmp eq i32 %.8, 0
  br i1 %.10.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %1 = inttoptr i64 %.71 to %PropId.560449*
  %.13 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.14 = load %Program.560549*, %Program.560549** %.13, align 8
  %.18 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.14, %PropId.560449* %1)
  %.19 = bitcast %Type.560381* %.18 to %FunctionType.560387*
  ret %FunctionType.560387* %.19

.3.endif:                                         ; preds = %.3
  %.22 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.23 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.22, align 8
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.23, i64 0, i32 4
  %.25 = load %Function.560501* (%TypeChecker.560555*)*, %Function.560501* (%TypeChecker.560555*)** %.24, align 8
  %.26 = tail call %Function.560501* %.25(%TypeChecker.560555* nonnull %.1)
  %.27 = getelementptr inbounds %Function.560501, %Function.560501* %.26, i64 0, i32 5
  %.28 = load %FunctionType.560387*, %FunctionType.560387** %.27, align 8
  ret %FunctionType.560387* %.28
}

define %Class.560513* @TypeChecker_get_current_class(%TypeChecker.560555* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.7 = load %Program.560549*, %Program.560549** %.6, align 8
  %.9 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 3
  %.10 = load %ClassId.560397*, %ClassId.560397** %.9, align 8
  %.11 = tail call %Class.560513* @get_class(%Program.560549* %.7, %ClassId.560397* %.10)
  ret %Class.560513* %.11
}

define %Class.560513* @TypeChecker_get_class_from_var_id(%TypeChecker.560555* %.1, %VarId.560441* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.12 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.11, align 8
  %.13 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.12, i64 0, i32 0
  %.14 = load %Module.560531* (%TypeChecker.560555*, i64)*, %Module.560531* (%TypeChecker.560555*, i64)** %.13, align 8
  %.16 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 2
  %.17 = load i64, i64* %.16, align 8
  %.18 = tail call %Module.560531* %.14(%TypeChecker.560555* %.1, i64 %.17)
  %.19 = getelementptr inbounds %Module.560531, %Module.560531* %.18, i64 0, i32 5
  %.20 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.19, align 8
  %.21 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.20, i64 0, i32 0
  %.22 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.22, i64 0, i32 5
  %.24 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.23, align 8
  %.25 = tail call %Class.560513* %.24(%"Array<Class>.560535"* %.20, i64 %.9)
  ret %Class.560513* %.25
}

define %Enum.560527* @TypeChecker_get_enum_from_var_id(%TypeChecker.560555* %.1, %VarId.560441* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.12 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.11, align 8
  %.13 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.12, i64 0, i32 0
  %.14 = load %Module.560531* (%TypeChecker.560555*, i64)*, %Module.560531* (%TypeChecker.560555*, i64)** %.13, align 8
  %.16 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 2
  %.17 = load i64, i64* %.16, align 8
  %.18 = tail call %Module.560531* %.14(%TypeChecker.560555* %.1, i64 %.17)
  %.19 = getelementptr inbounds %Module.560531, %Module.560531* %.18, i64 0, i32 7
  %.20 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.19, align 8
  %.21 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.20, i64 0, i32 0
  %.22 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.22, i64 0, i32 5
  %.24 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.23, align 8
  %.25 = tail call %Enum.560527* %.24(%"Array<Enum>.560537"* %.20, i64 %.9)
  ret %Enum.560527* %.25
}

define i1 @TypeChecker_types_are_eq(%TypeChecker.560555* %.1, %Type.560381* %.2, %Type.560381* %.3) {
.5:
  %.10 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 0, i32 1
  %.14 = load i64, i64* %.13, align 8
  %.15.not = icmp eq i64 %.11, %.14
  br i1 %.15.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %for.body, %for.cond.1, %for.body.1, %for.cond.1.preheader, %.5.endif.endif, %.5.endif.endif.endif.endif.endif.endif.if.endif, %.5.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.if.endif, %.5.endif.endif.endif.endif.if, %.5.endif.if.endif, %.5.endif.if, %.5
  %merge = phi i1 [ false, %.5.endif.if.endif ], [ false, %.5.endif.if ], [ false, %.5 ], [ true, %.5.endif.endif.endif.endif.if ], [ false, %.5.endif.endif.endif.endif.if.endif ], [ false, %.5.endif.endif.endif.endif.endif.endif.if ], [ false, %.5.endif.endif.endif.endif.endif.endif.if.endif ], [ true, %.5.endif.endif ], [ true, %for.cond.1.preheader ], [ true, %for.cond.1 ], [ false, %for.body.1 ], [ false, %for.body ]
  ret i1 %merge

.5.endif:                                         ; preds = %.5
  %.21 = icmp eq i64 %.11, 17
  br i1 %.21, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.30 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %0 = bitcast %Type.560381* %.30 to %"Array<Type>.560389"**
  %.31 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %0, align 8
  %.32 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.31, i64 0, i32 2
  %.33 = load i64, i64* %.32, align 8
  %.35 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1
  %1 = bitcast %Type.560381* %.35 to %"Array<Type>.560389"**
  %.36 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %1, align 8
  %.37 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.36, i64 0, i32 2
  %.38 = load i64, i64* %.37, align 8
  %.39.not = icmp eq i64 %.33, %.38
  br i1 %.39.not, label %.5.endif.if.endif, label %.5.if

.5.endif.endif:                                   ; preds = %for.cond, %for.cond.preheader, %.5.endif
  %.105 = load i64, i64* %.10, align 8
  switch i64 %.105, label %.5.if [
    i64 16, label %.5.endif.endif.if
    i64 15, label %.5.endif.endif.endif.if
    i64 13, label %.5.endif.endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endif.endif.if
    i64 20, label %.5.endif.endif.endif.endif.endif.endif.if
  ]

.5.endif.if.endif:                                ; preds = %.5.endif.if
  %.43 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.44 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.43, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.44, i64 0, i32 9
  %.46 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.45, align 8
  %.48 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1, i32 1
  %2 = bitcast i64* %.48 to %Type.560381**
  %.49 = load %Type.560381*, %Type.560381** %2, align 8
  %.51 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %3 = bitcast i64* %.51 to %Type.560381**
  %.52 = load %Type.560381*, %Type.560381** %3, align 8
  %.53 = tail call i1 %.46(%TypeChecker.560555* %.1, %Type.560381* %.49, %Type.560381* %.52)
  br i1 %.53, label %for.cond.preheader, label %.5.if

for.cond.preheader:                               ; preds = %.5.endif.if.endif
  %.62 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %4 = bitcast %Type.560381* %.62 to %"Array<Type>.560389"**
  %.6324 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %4, align 8
  %.6425 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.6324, i64 0, i32 2
  %.6526 = load i64, i64* %.6425, align 8
  %.6627 = icmp sgt i64 %.6526, 0
  br i1 %.6627, label %for.body.lr.ph, label %.5.endif.endif

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.84 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1
  %5 = bitcast %Type.560381* %.84 to %"Array<Type>.560389"**
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.63 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %4, align 8
  %.64 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.63, i64 0, i32 2
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp slt i64 %.99, %.65
  br i1 %.66, label %for.body, label %.5.endif.endif

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %.6329 = phi %"Array<Type>.560389"* [ %.6324, %for.body.lr.ph ], [ %.63, %for.cond ]
  %storemerge1528 = phi i64 [ 0, %for.body.lr.ph ], [ %.99, %for.cond ]
  %.70 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.43, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.70, i64 0, i32 9
  %.72 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.71, align 8
  %.77 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.6329, i64 0, i32 0
  %.78 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.77, align 8
  %.79 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.78, i64 0, i32 5
  %.80 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.79, align 8
  %.81 = tail call %Type.560381* %.80(%"Array<Type>.560389"* %.6329, i64 %storemerge1528)
  %.85 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %5, align 8
  %.86 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.85, i64 0, i32 0
  %.87 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.86, align 8
  %.88 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.87, i64 0, i32 5
  %.89 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.88, align 8
  %.90 = tail call %Type.560381* %.89(%"Array<Type>.560389"* %.85, i64 %storemerge1528)
  %.91 = tail call i1 %.72(%TypeChecker.560555* nonnull %.1, %Type.560381* %.81, %Type.560381* %.90)
  %.99 = add nuw nsw i64 %storemerge1528, 1
  br i1 %.91, label %for.cond, label %.5.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %6 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %.116 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1, i32 1
  %.119 = load i64, i64* %7, align 8
  %.120 = icmp eq i64 %.116, %.119
  %.122 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.123 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.122, align 8
  %.124 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.123, i64 0, i32 9
  %.125 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.124, align 8
  %.127 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %8 = bitcast %Type.560381* %.127 to %Type.560381**
  %.128 = load %Type.560381*, %Type.560381** %8, align 8
  %.130 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1
  %9 = bitcast %Type.560381* %.130 to %Type.560381**
  %.131 = load %Type.560381*, %Type.560381** %9, align 8
  %.132 = tail call i1 %.125(%TypeChecker.560555* %.1, %Type.560381* %.128, %Type.560381* %.131)
  %.133 = and i1 %.120, %.132
  ret i1 %.133

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif
  %.147 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.148 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.147, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.148, i64 0, i32 9
  %.150 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.149, align 8
  %.152 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %10 = bitcast %Type.560381* %.152 to %Type.560381**
  %.153 = load %Type.560381*, %Type.560381** %10, align 8
  %.155 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1
  %11 = bitcast %Type.560381* %.155 to %Type.560381**
  %.156 = load %Type.560381*, %Type.560381** %11, align 8
  %.157 = tail call i1 %.150(%TypeChecker.560555* %.1, %Type.560381* %.153, %Type.560381* %.156)
  ret i1 %.157

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif
  %.171 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %12 = bitcast %Type.560381* %.171 to %TypeId.560395**
  %.1728931 = load %TypeId.560395*, %TypeId.560395** %12, align 8
  %.176 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1
  %13 = bitcast %Type.560381* %.176 to i64*
  %.1771011 = load i64, i64* %13, align 8
  %.181 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1728931, i64 0, i32 2
  %.182 = load i64, i64* %.181, align 8
  %.183.cast = inttoptr i64 %.1771011 to %TypeId.560395*
  %.184 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.183.cast, i64 0, i32 2
  %.185 = load i64, i64* %.184, align 8
  %.186 = icmp eq i64 %.182, %.185
  %.188 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1728931, i64 0, i32 1
  %.189 = load i64, i64* %.188, align 8
  %.191 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.183.cast, i64 0, i32 1
  %.192 = load i64, i64* %.191, align 8
  %.193 = icmp eq i64 %.189, %.192
  %.194 = and i1 %.186, %.193
  %.196 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1728931, i64 0, i32 3
  %.197 = load i64, i64* %.196, align 8
  %.199 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.183.cast, i64 0, i32 3
  %.200 = load i64, i64* %.199, align 8
  %.201 = icmp eq i64 %.197, %.200
  %.202 = and i1 %.194, %.201
  br i1 %.202, label %.5.if, label %.5.endif.endif.endif.endif.if.endif

.5.endif.endif.endif.endif.if.endif:              ; preds = %.5.endif.endif.endif.endif.if
  %14 = inttoptr i64 %.1771011 to %ClassId.560397*
  %.206 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.207 = load %Program.560549*, %Program.560549** %.206, align 8
  %.210 = tail call %Class.560513* @get_class(%Program.560549* %.207, %ClassId.560397* %14)
  %.213 = getelementptr inbounds %Class.560513, %Class.560513* %.210, i64 0, i32 3
  %15 = bitcast %Type.560381** %.213 to i64*
  %.21413 = load i64, i64* %15, align 8
  %.215 = trunc i64 %.21413 to i32
  %.217.not = icmp eq i32 %.215, 0
  br i1 %.217.not, label %.5.if, label %.5.endif.endif.endif.endif.if.endif.if

.5.endif.endif.endif.endif.if.endif.if:           ; preds = %.5.endif.endif.endif.endif.if.endif
  %16 = inttoptr i64 %.21413 to %Type.560381*
  %.220 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.221 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.220, align 8
  %.222 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.221, i64 0, i32 9
  %.223 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.222, align 8
  %.229 = tail call i1 %.223(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.2, %Type.560381* %16)
  ret i1 %.229

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif
  %.244 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %17 = bitcast %Type.560381* %.244 to i64*
  %.24512 = load i64, i64* %17, align 8
  %.249 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1
  %18 = bitcast %Type.560381* %.249 to i64*
  %.2503457 = load i64, i64* %18, align 8
  %.255 = trunc i64 %.24512 to i32
  %.256 = trunc i64 %.2503457 to i32
  %.257 = icmp eq i32 %.255, %.256
  ret i1 %.257

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5.endif.endif
  %.271 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %19 = bitcast %Type.560381* %.271 to %string.560217**
  %.272 = load %string.560217*, %string.560217** %19, align 8
  %.274 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1
  %20 = bitcast %Type.560381* %.274 to %string.560217**
  %.275 = load %string.560217*, %string.560217** %20, align 8
  %.276 = getelementptr inbounds %string.560217, %string.560217* %.272, i64 0, i32 0
  %.277 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.276, align 8
  %.278 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.277, i64 0, i32 4
  %.279 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.278, align 8
  %.280 = tail call i1 %.279(%string.560217* %.272, %string.560217* %.275)
  br i1 %.280, label %.5.endif.endif.endif.endif.endif.endif.if.endif, label %.5.if

.5.endif.endif.endif.endif.endif.endif.if.endif:  ; preds = %.5.endif.endif.endif.endif.endif.endif.if
  %.285 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %21 = bitcast i64* %.285 to %"Array<Type>.560389"**
  %.286 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %21, align 8
  %.287 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.286, i64 0, i32 2
  %.288 = load i64, i64* %.287, align 8
  %.290 = getelementptr inbounds %Type.560381, %Type.560381* %.3, i64 1, i32 1
  %22 = bitcast i64* %.290 to %"Array<Type>.560389"**
  %.291 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %22, align 8
  %.292 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.291, i64 0, i32 2
  %.293 = load i64, i64* %.292, align 8
  %.294.not = icmp eq i64 %.288, %.293
  br i1 %.294.not, label %for.cond.1.preheader, label %.5.if

for.cond.1.preheader:                             ; preds = %.5.endif.endif.endif.endif.endif.endif.if.endif
  %.30620 = icmp sgt i64 %.288, 0
  br i1 %.30620, label %for.body.1.lr.ph, label %.5.if

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.309 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body.1

for.cond.1:                                       ; preds = %for.body.1
  %.303 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %21, align 8
  %.304 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.303, i64 0, i32 2
  %.305 = load i64, i64* %.304, align 8
  %.306 = icmp slt i64 %.339, %.305
  br i1 %.306, label %for.body.1, label %.5.if

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.cond.1
  %.30322 = phi %"Array<Type>.560389"* [ %.286, %for.body.1.lr.ph ], [ %.303, %for.cond.1 ]
  %storemerge21 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.339, %for.cond.1 ]
  %.310 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.309, align 8
  %.311 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.310, i64 0, i32 9
  %.312 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.311, align 8
  %.317 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.30322, i64 0, i32 0
  %.318 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.317, align 8
  %.319 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.318, i64 0, i32 5
  %.320 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.319, align 8
  %.321 = tail call %Type.560381* %.320(%"Array<Type>.560389"* %.30322, i64 %storemerge21)
  %.325 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %22, align 8
  %.326 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.325, i64 0, i32 0
  %.327 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.326, align 8
  %.328 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.327, i64 0, i32 5
  %.329 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.328, align 8
  %.330 = tail call %Type.560381* %.329(%"Array<Type>.560389"* %.325, i64 %storemerge21)
  %.331 = tail call i1 %.312(%TypeChecker.560555* %.1, %Type.560381* %.321, %Type.560381* %.330)
  %.339 = add nuw nsw i64 %storemerge21, 1
  br i1 %.331, label %for.cond.1, label %.5.if
}

define %string.560217* @TypeChecker_dump_type(%TypeChecker.560555* %.1, %Type.560381* %.2) {
.4:
  %.8 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif.endif [
    i64 17, label %.4.if
    i64 15, label %.4.endif.if
    i64 13, label %.4.endif.endif.if
    i64 14, label %.4.endif.endif.endif.if
    i64 16, label %.4.endif.endif.endif.endif.if
    i64 20, label %.4.endif.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.15 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.21, i8 0, i64 16, i1 false)
  %.3112 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %1 = bitcast %Type.560381* %.3112 to %"Array<Type>.560389"**
  %.3213 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %1, align 8
  %.3314 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.3213, i64 0, i32 2
  %.3415 = load i64, i64* %.3314, align 8
  %.3516 = icmp sgt i64 %.3415, 0
  %2 = bitcast i8* %.15 to %string.560217*
  %.39 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.4018 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.39, align 8
  %.4119 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.4018, i64 0, i32 10
  %.4220 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.4119, align 8
  br i1 %.3516, label %for.body, label %for.end

for.body:                                         ; preds = %.4.if, %for.body.endif
  %.4225 = phi %string.560217* (%TypeChecker.560555*, %Type.560381*)* [ %.42, %for.body.endif ], [ %.4220, %.4.if ]
  %.3724 = phi %string.560217* [ %.7639, %for.body.endif ], [ %2, %.4.if ]
  %.3223 = phi %"Array<Type>.560389"* [ %.32, %for.body.endif ], [ %.3213, %.4.if ]
  %storemerge721 = phi i64 [ %.83, %for.body.endif ], [ 0, %.4.if ]
  %.47 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.3223, i64 0, i32 0
  %.48 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.47, align 8
  %.49 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.48, i64 0, i32 5
  %.50 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.49, align 8
  %.51 = tail call %Type.560381* %.50(%"Array<Type>.560389"* %.3223, i64 %storemerge721)
  %.52 = tail call %string.560217* %.4225(%TypeChecker.560555* nonnull %.1, %Type.560381* %.51)
  %.53 = getelementptr inbounds %string.560217, %string.560217* %.3724, i64 0, i32 0
  %.54 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.53, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.54, i64 0, i32 0
  %.56 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.55, align 8
  %.57 = tail call %string.560217* %.56(%string.560217* %.3724, %string.560217* %.52)
  %.62 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %1, align 8
  %.63 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.62, i64 0, i32 2
  %.64 = load i64, i64* %.63, align 8
  %.65 = add i64 %.64, -1
  %.66 = icmp slt i64 %storemerge721, %.65
  br i1 %.66, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %.4.if
  %.37.lcssa = phi %string.560217* [ %2, %.4.if ], [ %.7639, %for.body.endif ]
  %.42.lcssa = phi %string.560217* (%TypeChecker.560555*, %Type.560381*)* [ %.4220, %.4.if ], [ %.42, %for.body.endif ]
  %.93 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %3 = bitcast i64* %.93 to %Type.560381**
  %.94 = load %Type.560381*, %Type.560381** %3, align 8
  %.95 = tail call %string.560217* %.42.lcssa(%TypeChecker.560555* nonnull %.1, %Type.560381* %.94)
  %.96 = getelementptr inbounds %string.560217, %string.560217* %.37.lcssa, i64 0, i32 0
  %.97 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.96, align 8
  %.98 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.97, i64 0, i32 11
  %.99 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.98, align 8
  %.100 = tail call i8* %.99(%string.560217* %.37.lcssa)
  %.101 = getelementptr inbounds %string.560217, %string.560217* %.95, i64 0, i32 0
  %.102 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.101, align 8
  %.103 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.102, i64 0, i32 11
  %.104 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.103, align 8
  %.105 = tail call i8* %.104(%string.560217* %.95)
  %.107 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.221, i64 0, i64 0), i8* %.100, i8* %.105)
  %.108 = add i64 %.107, 1
  %.110 = tail call i8* @malloc(i64 %.108)
  %.111 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.110, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.221, i64 0, i64 0), i8* %.100, i8* %.105)
  %.112 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.113 = bitcast i8* %.112 to %string.560217*
  %.114 = bitcast i8* %.112 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.114, align 8
  %.116 = getelementptr inbounds i8, i8* %.112, i64 8
  %4 = bitcast i8* %.116 to i8**
  store i8* %.110, i8** %4, align 8
  %.118 = getelementptr inbounds i8, i8* %.112, i64 16
  %5 = bitcast i8* %.118 to i64*
  store i64 %.107, i64* %5, align 8
  %.120 = getelementptr inbounds i8, i8* %.112, i64 24
  %6 = bitcast i8* %.120 to i64*
  store i64 %.107, i64* %6, align 8
  ret %string.560217* %.113

for.body.if:                                      ; preds = %for.body
  %.69 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.70 = bitcast i8* %.69 to %string.560217*
  %.70.repack = bitcast i8* %.69 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.70.repack, align 8
  %.70.repack8 = getelementptr inbounds i8, i8* %.69, i64 8
  %7 = bitcast i8* %.70.repack8 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.220, i64 0, i64 0), i8** %7, align 8
  %.70.repack9 = getelementptr inbounds i8, i8* %.69, i64 16
  %8 = bitcast i8* %.70.repack9 to i64*
  store i64 2, i64* %8, align 8
  %.70.repack10 = getelementptr inbounds i8, i8* %.69, i64 24
  %9 = bitcast i8* %.70.repack10 to i64*
  store i64 2, i64* %9, align 8
  %.72 = getelementptr inbounds %string.560217, %string.560217* %.57, i64 0, i32 0
  %.73 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.72, align 8
  %.74 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.73, i64 0, i32 0
  %.75 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.74, align 8
  %.76 = tail call %string.560217* %.75(%string.560217* %.57, %string.560217* %.70)
  %.32.pre = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %1, align 8
  %.33.phi.trans.insert = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.32.pre, i64 0, i32 2
  %.34.pre = load i64, i64* %.33.phi.trans.insert, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.34 = phi i64 [ %.34.pre, %for.body.if ], [ %.64, %for.body ]
  %.32 = phi %"Array<Type>.560389"* [ %.32.pre, %for.body.if ], [ %.62, %for.body ]
  %.7639 = phi %string.560217* [ %.76, %for.body.if ], [ %.57, %for.body ]
  %.83 = add nuw nsw i64 %storemerge721, 1
  %.35 = icmp slt i64 %.83, %.34
  %.40 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.39, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.40, i64 0, i32 10
  %.42 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.41, align 8
  br i1 %.35, label %for.body, label %for.end

.4.endif.if:                                      ; preds = %.4
  %.129 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.130 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.129, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 10
  %.132 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.131, align 8
  %.135 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %10 = bitcast %Type.560381* %.135 to %Type.560381**
  %.136 = load %Type.560381*, %Type.560381** %10, align 8
  %.137 = tail call %string.560217* %.132(%TypeChecker.560555* %.1, %Type.560381* %.136)
  %.138 = getelementptr inbounds %string.560217, %string.560217* %.137, i64 0, i32 0
  %.139 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.138, align 8
  %.140 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.139, i64 0, i32 11
  %.141 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.140, align 8
  %.142 = tail call i8* %.141(%string.560217* %.137)
  %.144 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.222, i64 0, i64 0), i8* %.142)
  %.145 = add i64 %.144, 1
  %.147 = tail call i8* @malloc(i64 %.145)
  %.148 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.147, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.222, i64 0, i64 0), i8* %.142)
  %.149 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.150 = bitcast i8* %.149 to %string.560217*
  %.151 = bitcast i8* %.149 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.151, align 8
  %.153 = getelementptr inbounds i8, i8* %.149, i64 8
  %11 = bitcast i8* %.153 to i8**
  store i8* %.147, i8** %11, align 8
  %.155 = getelementptr inbounds i8, i8* %.149, i64 16
  %12 = bitcast i8* %.155 to i64*
  store i64 %.144, i64* %12, align 8
  %.157 = getelementptr inbounds i8, i8* %.149, i64 24
  %13 = bitcast i8* %.157 to i64*
  store i64 %.144, i64* %13, align 8
  ret %string.560217* %.150

.4.endif.endif.if:                                ; preds = %.4
  %.166 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.167 = load %Program.560549*, %Program.560549** %.166, align 8
  %.169 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.167, %Type.560381* nonnull %.2)
  %.170 = getelementptr inbounds %Class.560513, %Class.560513* %.169, i64 0, i32 2
  %.171 = load %string.560217*, %string.560217** %.170, align 8
  ret %string.560217* %.171

.4.endif.endif.endif.if:                          ; preds = %.4
  %.179 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.180 = load %Program.560549*, %Program.560549** %.179, align 8
  %.183 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %14 = bitcast %Type.560381* %.183 to %EnumId.560399**
  %.184 = load %EnumId.560399*, %EnumId.560399** %14, align 8
  %.185 = tail call %Enum.560527* @get_enum(%Program.560549* %.180, %EnumId.560399* %.184)
  %.186 = getelementptr inbounds %Enum.560527, %Enum.560527* %.185, i64 0, i32 2
  %.187 = load %string.560217*, %string.560217** %.186, align 8
  ret %string.560217* %.187

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.198 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.199 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.198, align 8
  %.200 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.199, i64 0, i32 10
  %.201 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.200, align 8
  %.203 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %15 = bitcast %Type.560381* %.203 to %Type.560381**
  %.204 = load %Type.560381*, %Type.560381** %15, align 8
  %.205 = tail call %string.560217* %.201(%TypeChecker.560555* %.1, %Type.560381* %.204)
  %16 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %.208 = load i64, i64* %16, align 8
  %.209 = getelementptr inbounds %string.560217, %string.560217* %.205, i64 0, i32 0
  %.210 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.209, align 8
  %.211 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.210, i64 0, i32 11
  %.212 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.211, align 8
  %.213 = tail call i8* %.212(%string.560217* %.205)
  %.215 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.223, i64 0, i64 0), i8* %.213, i64 %.208)
  %.216 = add i64 %.215, 1
  %.218 = tail call i8* @malloc(i64 %.216)
  %.219 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.218, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.223, i64 0, i64 0), i8* %.213, i64 %.208)
  %.220 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.221 = bitcast i8* %.220 to %string.560217*
  %.222 = bitcast i8* %.220 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.222, align 8
  %.224 = getelementptr inbounds i8, i8* %.220, i64 8
  %17 = bitcast i8* %.224 to i8**
  store i8* %.218, i8** %17, align 8
  %.226 = getelementptr inbounds i8, i8* %.220, i64 16
  %18 = bitcast i8* %.226 to i64*
  store i64 %.215, i64* %18, align 8
  %.228 = getelementptr inbounds i8, i8* %.220, i64 24
  %19 = bitcast i8* %.228 to i64*
  store i64 %.215, i64* %19, align 8
  ret %string.560217* %.221

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4
  %.240 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %20 = bitcast %Type.560381* %.240 to %string.560217**
  %.241 = load %string.560217*, %string.560217** %20, align 8
  %.242 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.243 = bitcast i8* %.242 to %string.560217*
  %.243.repack = bitcast i8* %.242 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.243.repack, align 8
  %.243.repack1 = getelementptr inbounds i8, i8* %.242, i64 8
  %21 = bitcast i8* %.243.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.174, i64 0, i64 0), i8** %21, align 8
  %.243.repack2 = getelementptr inbounds i8, i8* %.242, i64 16
  %22 = bitcast i8* %.243.repack2 to i64*
  store i64 1, i64* %22, align 8
  %.243.repack3 = getelementptr inbounds i8, i8* %.242, i64 24
  %23 = bitcast i8* %.243.repack3 to i64*
  store i64 1, i64* %23, align 8
  %.245 = getelementptr inbounds %string.560217, %string.560217* %.241, i64 0, i32 0
  %.246 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.245, align 8
  %.247 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.246, i64 0, i32 0
  %.248 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.247, align 8
  %.249 = tail call %string.560217* %.248(%string.560217* %.241, %string.560217* %.243)
  %.25629 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %24 = bitcast i64* %.25629 to %"Array<Type>.560389"**
  %.25730 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %24, align 8
  %.25831 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.25730, i64 0, i32 2
  %.25932 = load i64, i64* %.25831, align 8
  %.26033 = icmp sgt i64 %.25932, 0
  br i1 %.26033, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %.4.endif.endif.endif.endif.endif.if
  %.264 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body.1

.4.endif.endif.endif.endif.endif.endif:           ; preds = %.4
  %.302 = tail call %string.560217* @dump_type(%Type.560381* nonnull %.2, i1 false)
  ret %string.560217* %.302

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.26237 = phi %string.560217* [ %.249, %for.body.1.lr.ph ], [ %.282, %for.body.1 ]
  %.25736 = phi %"Array<Type>.560389"* [ %.25730, %for.body.1.lr.ph ], [ %.257, %for.body.1 ]
  %storemerge35 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.288, %for.body.1 ]
  %.265 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.264, align 8
  %.266 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.265, i64 0, i32 10
  %.267 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.266, align 8
  %.272 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.25736, i64 0, i32 0
  %.273 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.272, align 8
  %.274 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.273, i64 0, i32 5
  %.275 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.274, align 8
  %.276 = tail call %Type.560381* %.275(%"Array<Type>.560389"* %.25736, i64 %storemerge35)
  %.277 = tail call %string.560217* %.267(%TypeChecker.560555* %.1, %Type.560381* %.276)
  %.278 = getelementptr inbounds %string.560217, %string.560217* %.26237, i64 0, i32 0
  %.279 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.278, align 8
  %.280 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.279, i64 0, i32 0
  %.281 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.280, align 8
  %.282 = tail call %string.560217* %.281(%string.560217* %.26237, %string.560217* %.277)
  %.288 = add nuw nsw i64 %storemerge35, 1
  %.257 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %24, align 8
  %.258 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.257, i64 0, i32 2
  %.259 = load i64, i64* %.258, align 8
  %.260 = icmp slt i64 %.288, %.259
  br i1 %.260, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %.4.endif.endif.endif.endif.endif.if
  %.262.lcssa = phi %string.560217* [ %.249, %.4.endif.endif.endif.endif.endif.if ], [ %.282, %for.body.1 ]
  %.292 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.560217*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.293.repack, align 8
  %.293.repack4 = getelementptr inbounds i8, i8* %.292, i64 8
  %25 = bitcast i8* %.293.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.172, i64 0, i64 0), i8** %25, align 8
  %.293.repack5 = getelementptr inbounds i8, i8* %.292, i64 16
  %26 = bitcast i8* %.293.repack5 to i64*
  store i64 1, i64* %26, align 8
  %.293.repack6 = getelementptr inbounds i8, i8* %.292, i64 24
  %27 = bitcast i8* %.293.repack6 to i64*
  store i64 1, i64* %27, align 8
  %.295 = getelementptr inbounds %string.560217, %string.560217* %.262.lcssa, i64 0, i32 0
  %.296 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.295, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.296, i64 0, i32 0
  %.298 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.297, align 8
  %.299 = tail call %string.560217* %.298(%string.560217* %.262.lcssa, %string.560217* %.293)
  ret %string.560217* %.299
}

define %Scope.560473* @TypeChecker_create_scope(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.7, i64 0, i32 1
  %.9 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.8, align 8
  %.10 = tail call %Module.560531* %.9(%TypeChecker.560555* %.1)
  %.13 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.14 = load i64, i64* %.13, align 8
  %.16 = getelementptr inbounds %Module.560531, %Module.560531* %.10, i64 0, i32 8
  %.17 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.17, i64 0, i32 2
  %.19 = load i64, i64* %.18, align 8
  %.20 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = bitcast i8* %.20 to %Scope.560473*
  %.22 = bitcast i8* %.20 to %Scope_vtable_ty.560474**
  store %Scope_vtable_ty.560474* @Scope_vtable_data, %Scope_vtable_ty.560474** %.22, align 8
  tail call void @Scope_constructor(%Scope.560473* %.21, i64 %.14, i64 %.19)
  %.28 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.16, align 8
  %.30 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.28, i64 0, i32 0
  %.31 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.30, align 8
  %.32 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.31, i64 0, i32 2
  %.33 = load void (%"Array<Scope>.560538"*, %Scope.560473*)*, void (%"Array<Scope>.560538"*, %Scope.560473*)** %.32, align 8
  tail call void %.33(%"Array<Scope>.560538"* %.28, %Scope.560473* %.21)
  ret %Scope.560473* %.21
}

define i1 @TypeChecker_is_constant_in_scope(%TypeChecker.560555* %.1, %string.560217* %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.10 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.9, align 8
  %.11 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.10, i64 0, i32 13
  %.12 = load %VarId.560441* (%TypeChecker.560555*, %string.560217*)*, %VarId.560441* (%TypeChecker.560555*, %string.560217*)** %.11, align 8
  %.14 = tail call %VarId.560441* %.12(%TypeChecker.560555* %.1, %string.560217* %.2)
  %0 = ptrtoint %VarId.560441* %.14 to i64
  %.17 = trunc i64 %0 to i32
  %.19.not = icmp eq i32 %.17, 0
  br i1 %.19.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %VarId.560441, %VarId.560441* %.14, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %is_constant.0 = phi i1 [ %.24, %.4.if ], [ false, %.4 ]
  ret i1 %is_constant.0
}

define %VarId.560441* @TypeChecker_get_var_from_current_scope(%TypeChecker.560555* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 2
  %.11 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.10, align 8
  %.12 = tail call %Scope.560473* %.11(%TypeChecker.560555* %.1)
  %.60 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.endif.endif, %.4
  %current_scope.0 = phi %Scope.560473* [ %.12, %.4 ], [ %.65, %while.entry.endif.endif ]
  %.21 = getelementptr inbounds %Scope.560473, %Scope.560473* %current_scope.0, i64 0, i32 2
  %.22 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.21, align 8
  %.23 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.22, i64 0, i32 0
  %.24 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.24, i64 0, i32 3
  %.26 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.25, align 8
  %.28 = tail call %VarId.560441* %.26(%"Map<string, VarId>.560475"* %.22, %string.560217* %.2)
  %0 = ptrtoint %VarId.560441* %.28 to i64
  %.31 = trunc i64 %0 to i32
  %.33 = icmp eq i32 %.31, 0
  br i1 %.33, label %while.entry.if, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.endif
  %.53.le = trunc i64 %.pre-phi to i32
  %.75 = icmp eq i32 %.53.le, 0
  %.77 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %.78 = load %ScopeId.560471*, %ScopeId.560471** %.77, align 8
  %.79 = getelementptr inbounds %ScopeId.560471, %ScopeId.560471* %.78, i64 0, i32 1
  %.80 = load i64, i64* %.79, align 8
  %.81 = icmp ne i64 %.80, 0
  %.82 = and i1 %.75, %.81
  br i1 %.82, label %while.exit.if, label %while.exit.endif

while.entry.if:                                   ; preds = %while.entry
  %.36 = getelementptr inbounds %Scope.560473, %Scope.560473* %current_scope.0, i64 0, i32 4
  %.37 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.36, align 8
  %.38 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.37, i64 0, i32 0
  %.39 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.38, align 8
  %.40 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.39, i64 0, i32 3
  %.41 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.40, align 8
  %.43 = tail call %VarId.560441* %.41(%"Map<string, VarId>.560475"* %.37, %string.560217* %.2)
  %.pre = ptrtoint %VarId.560441* %.43 to i64
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if, %while.entry
  %.pre-phi = phi i64 [ %.pre, %while.entry.if ], [ %0, %while.entry ]
  %value.1 = phi %VarId.560441* [ %.43, %while.entry.if ], [ %.28, %while.entry ]
  %.47 = getelementptr inbounds %Scope.560473, %Scope.560473* %current_scope.0, i64 0, i32 6
  %1 = bitcast %ScopeId.560471** %.47 to i64*
  %.481 = load i64, i64* %1, align 8
  %.49 = trunc i64 %.481 to i32
  %.51 = icmp eq i32 %.49, 0
  %.53 = trunc i64 %.pre-phi to i32
  %.55 = icmp ne i32 %.53, 0
  %.56 = or i1 %.51, %.55
  br i1 %.56, label %while.exit, label %while.entry.endif.endif

while.entry.endif.endif:                          ; preds = %while.entry.endif
  %2 = inttoptr i64 %.481 to %ScopeId.560471*
  %.61 = load %Program.560549*, %Program.560549** %.60, align 8
  %.65 = tail call %Scope.560473* @get_scope(%Program.560549* %.61, %ScopeId.560471* %2)
  br label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %3 = ptrtoint %ScopeId.560471* %.78 to i64
  %4 = bitcast %ScopeId.560471** %.77 to i64*
  %.91 = load %Program.560549*, %Program.560549** %.60, align 8
  %.92 = getelementptr inbounds %Program.560549, %Program.560549* %.91, i64 0, i32 2
  %.93 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.92, align 8
  %.94 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.93, i64 0, i32 0
  %.95 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.94, align 8
  %.96 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.95, i64 0, i32 5
  %.97 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.96, align 8
  %.98 = tail call %Module.560531* %.97(%"Array<Module>.560551"* %.93, i64 0)
  %.99 = getelementptr inbounds %Module.560531, %Module.560531* %.98, i64 0, i32 8
  %.100 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.99, align 8
  %.101 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.100, i64 0, i32 0
  %.102 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.101, align 8
  %.103 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.102, i64 0, i32 5
  %.104 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.103, align 8
  %.105 = tail call %Scope.560473* %.104(%"Array<Scope>.560538"* %.100, i64 0)
  %.106 = getelementptr inbounds %Scope.560473, %Scope.560473* %.105, i64 0, i32 1
  %5 = bitcast %ScopeId.560471** %.106 to i64*
  %.1073 = load i64, i64* %5, align 8
  store i64 %.1073, i64* %4, align 8
  %.112 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.113 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.112, i64 0, i32 13
  %.114 = load %VarId.560441* (%TypeChecker.560555*, %string.560217*)*, %VarId.560441* (%TypeChecker.560555*, %string.560217*)** %.113, align 8
  %.116 = tail call %VarId.560441* %.114(%TypeChecker.560555* nonnull %.1, %string.560217* %.2)
  store i64 %3, i64* %4, align 8
  %6 = ptrtoint %VarId.560441* %.116 to i64
  %.123 = trunc i64 %6 to i32
  %.125.not = icmp eq i32 %.123, 0
  br i1 %.125.not, label %while.exit.endif, label %while.exit.if.if

while.exit.endif:                                 ; preds = %while.exit.if.if.endif.endif.endif, %while.exit.if.if.endif.endif.endif.if, %while.exit.if, %while.exit
  %value.2 = phi %VarId.560441* [ %value.1, %while.exit ], [ %.116, %while.exit.if ], [ %.116, %while.exit.if.if.endif.endif.endif.if ], [ %.116, %while.exit.if.if.endif.endif.endif ]
  ret %VarId.560441* %value.2

while.exit.if.if:                                 ; preds = %while.exit.if
  %.129 = load %Program.560549*, %Program.560549** %.60, align 8
  %.130 = getelementptr inbounds %Program.560549, %Program.560549* %.129, i64 0, i32 1
  store i1 true, i1* %.130, align 1
  %.133 = getelementptr inbounds %VarId.560441, %VarId.560441* %.116, i64 0, i32 1
  %.134 = load i64, i64* %.133, align 8
  %.135 = icmp eq i64 %.134, 0
  br i1 %.135, label %while.exit.if.if.if, label %while.exit.if.if.endif

while.exit.if.if.if:                              ; preds = %while.exit.if.if
  %.139 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.140 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.139, i64 0, i32 30
  %.141 = load void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)** %.140, align 8
  tail call void %.141(%TypeChecker.560555* nonnull %.1, %string.560217* %.2, %VarId.560441* nonnull %.116)
  %.148.pre = load i64, i64* %.133, align 8
  br label %while.exit.if.if.endif

while.exit.if.if.endif:                           ; preds = %while.exit.if.if.if, %while.exit.if.if
  %.148 = phi i64 [ %.148.pre, %while.exit.if.if.if ], [ %.134, %while.exit.if.if ]
  %7 = add i64 %.148, -1
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %while.exit.if.if.endif.if, label %while.exit.if.if.endif.endif

while.exit.if.if.endif.if:                        ; preds = %while.exit.if.if.endif
  %.158 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.159 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.158, i64 0, i32 29
  %.160 = load void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)** %.159, align 8
  tail call void %.160(%TypeChecker.560555* nonnull %.1, %string.560217* %.2, %VarId.560441* nonnull %.116)
  %.167.pr = load i64, i64* %.133, align 8
  br label %while.exit.if.if.endif.endif

while.exit.if.if.endif.endif:                     ; preds = %while.exit.if.if.endif.if, %while.exit.if.if.endif
  %.167 = phi i64 [ %.167.pr, %while.exit.if.if.endif.if ], [ %.148, %while.exit.if.if.endif ]
  %.168 = icmp eq i64 %.167, 3
  br i1 %.168, label %while.exit.if.if.endif.endif.if, label %while.exit.if.if.endif.endif.endif

while.exit.if.if.endif.endif.if:                  ; preds = %while.exit.if.if.endif.endif
  %.172 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.173 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.172, i64 0, i32 31
  %.174 = load void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)*, void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)** %.173, align 8
  %.177 = bitcast %VarId.560441* %.116 to %ClassVarId.560443*
  %.178 = bitcast %VarId.560441* %.116 to %ClassVarId_vtable_ty.560444**
  %.179 = load %ClassVarId_vtable_ty.560444*, %ClassVarId_vtable_ty.560444** %.178, align 8
  %.180 = getelementptr inbounds %ClassVarId_vtable_ty.560444, %ClassVarId_vtable_ty.560444* %.179, i64 0, i32 0
  %.181 = load %ClassId.560397* (%ClassVarId.560443*)*, %ClassId.560397* (%ClassVarId.560443*)** %.180, align 8
  %.182 = tail call %ClassId.560397* %.181(%ClassVarId.560443* %.177)
  tail call void %.174(%TypeChecker.560555* nonnull %.1, %string.560217* %.2, %ClassId.560397* %.182)
  %.187.pre = load i64, i64* %.133, align 8
  br label %while.exit.if.if.endif.endif.endif

while.exit.if.if.endif.endif.endif:               ; preds = %while.exit.if.if.endif.endif.if, %while.exit.if.if.endif.endif
  %.187 = phi i64 [ %.187.pre, %while.exit.if.if.endif.endif.if ], [ %.167, %while.exit.if.if.endif.endif ]
  %.188 = icmp eq i64 %.187, 4
  br i1 %.188, label %while.exit.if.if.endif.endif.endif.if, label %while.exit.endif

while.exit.if.if.endif.endif.endif.if:            ; preds = %while.exit.if.if.endif.endif.endif
  %.192 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.193 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.192, i64 0, i32 32
  %.194 = load void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)*, void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)** %.193, align 8
  %.197 = bitcast %VarId.560441* %.116 to %EnumVarId.560445*
  %.198 = bitcast %VarId.560441* %.116 to %EnumVarId_vtable_ty.560446**
  %.199 = load %EnumVarId_vtable_ty.560446*, %EnumVarId_vtable_ty.560446** %.198, align 8
  %.200 = getelementptr inbounds %EnumVarId_vtable_ty.560446, %EnumVarId_vtable_ty.560446* %.199, i64 0, i32 0
  %.201 = load %EnumId.560399* (%EnumVarId.560445*)*, %EnumId.560399* (%EnumVarId.560445*)** %.200, align 8
  %.202 = tail call %EnumId.560399* %.201(%EnumVarId.560445* %.197)
  tail call void %.194(%TypeChecker.560555* nonnull %.1, %string.560217* %.2, %EnumId.560399* %.202)
  br label %while.exit.endif
}

define %Type.560381* @TypeChecker_get_type_from_current_scope(%TypeChecker.560555* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 2
  %.11 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.10, align 8
  %.12 = tail call %Scope.560473* %.11(%TypeChecker.560555* %.1)
  %.1613 = getelementptr inbounds %Scope.560473, %Scope.560473* %.12, i64 0, i32 7
  %.1714 = load %"Map<string, Type>.560478"*, %"Map<string, Type>.560478"** %.1613, align 8
  %.1815 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.1714, i64 0, i32 0
  %.1916 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.1815, align 8
  %.2017 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.1916, i64 0, i32 3
  %.2118 = load %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)*, %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)** %.2017, align 8
  %.2319 = tail call %Type.560381* %.2118(%"Map<string, Type>.560478"* %.1714, %string.560217* %.2)
  %0 = ptrtoint %Type.560381* %.2319 to i64
  %.2620 = trunc i64 %0 to i32
  %.28.not21 = icmp eq i32 %.2620, 0
  br i1 %.28.not21, label %while.entry.endif.lr.ph, label %while.entry.if

while.entry.endif.lr.ph:                          ; preds = %.4
  %.87 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  br label %while.entry.endif

while.entry.if:                                   ; preds = %while.entry.endif.endif.endif.endif, %.4
  %.23.lcssa = phi %Type.560381* [ %.2319, %.4 ], [ %.23, %while.entry.endif.endif.endif.endif ]
  ret %Type.560381* %.23.lcssa

while.entry.endif:                                ; preds = %while.entry.endif.lr.ph, %while.entry.endif.endif.endif.endif
  %current_scope.022 = phi %Scope.560473* [ %.12, %while.entry.endif.lr.ph ], [ %.92, %while.entry.endif.endif.endif.endif ]
  %.33 = getelementptr inbounds %Scope.560473, %Scope.560473* %current_scope.022, i64 0, i32 3
  %.34 = load %"Map<string, ClassId>.560476"*, %"Map<string, ClassId>.560476"** %.33, align 8
  %.35 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.34, i64 0, i32 0
  %.36 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.35, align 8
  %.37 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.36, i64 0, i32 3
  %.38 = load %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)*, %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)** %.37, align 8
  %.40 = tail call %ClassId.560397* %.38(%"Map<string, ClassId>.560476"* %.34, %string.560217* %.2)
  %1 = ptrtoint %ClassId.560397* %.40 to i64
  %.43 = trunc i64 %1 to i32
  %.45.not = icmp eq i32 %.43, 0
  br i1 %.45.not, label %while.entry.endif.endif, label %while.entry.endif.if

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.48 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.49 = bitcast i8* %.48 to %ObjectType.560407*
  %.50 = bitcast i8* %.48 to %ObjectType_vtable_ty.560408**
  store %ObjectType_vtable_ty.560408* @ObjectType_vtable_data, %ObjectType_vtable_ty.560408** %.50, align 8
  tail call void @ObjectType_constructor(%ObjectType.560407* %.49, %ClassId.560397* %.40)
  %.53 = bitcast i8* %.48 to %Type.560381*
  ret %Type.560381* %.53

while.entry.endif.endif:                          ; preds = %while.entry.endif
  %.56 = getelementptr inbounds %Scope.560473, %Scope.560473* %current_scope.022, i64 0, i32 5
  %.57 = load %"Map<string, EnumId>.560477"*, %"Map<string, EnumId>.560477"** %.56, align 8
  %.58 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.57, i64 0, i32 0
  %.59 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.58, align 8
  %.60 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.59, i64 0, i32 3
  %.61 = load %EnumId.560399* (%"Map<string, EnumId>.560477"*, %string.560217*)*, %EnumId.560399* (%"Map<string, EnumId>.560477"*, %string.560217*)** %.60, align 8
  %.63 = tail call %EnumId.560399* %.61(%"Map<string, EnumId>.560477"* %.57, %string.560217* %.2)
  %2 = ptrtoint %EnumId.560399* %.63 to i64
  %.66 = trunc i64 %2 to i32
  %.68.not = icmp eq i32 %.66, 0
  br i1 %.68.not, label %while.entry.endif.endif.endif, label %while.entry.endif.endif.if

while.entry.endif.endif.if:                       ; preds = %while.entry.endif.endif
  %.71 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.72 = bitcast i8* %.71 to %EnumType.560409*
  %.73 = bitcast i8* %.71 to %EnumType_vtable_ty.560410**
  store %EnumType_vtable_ty.560410* @EnumType_vtable_data, %EnumType_vtable_ty.560410** %.73, align 8
  tail call void @EnumType_constructor(%EnumType.560409* %.72, %EnumId.560399* %.63)
  %.76 = bitcast i8* %.71 to %Type.560381*
  ret %Type.560381* %.76

while.entry.endif.endif.endif:                    ; preds = %while.entry.endif.endif
  %.79 = getelementptr inbounds %Scope.560473, %Scope.560473* %current_scope.022, i64 0, i32 6
  %3 = bitcast %ScopeId.560471** %.79 to i64*
  %.801 = load i64, i64* %3, align 8
  %.81 = trunc i64 %.801 to i32
  %.83 = icmp eq i32 %.81, 0
  br i1 %.83, label %while.entry.endif.endif.endif.if, label %while.entry.endif.endif.endif.endif

while.entry.endif.endif.endif.if:                 ; preds = %while.entry.endif.endif.endif
  %.96 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %.97 = load %ScopeId.560471*, %ScopeId.560471** %.96, align 8
  %.98 = getelementptr inbounds %ScopeId.560471, %ScopeId.560471* %.97, i64 0, i32 1
  %.99 = load i64, i64* %.98, align 8
  %.100.not = icmp eq i64 %.99, 0
  br i1 %.100.not, label %while.exit.endif, label %while.exit.if

while.entry.endif.endif.endif.endif:              ; preds = %while.entry.endif.endif.endif
  %4 = inttoptr i64 %.801 to %ScopeId.560471*
  %.88 = load %Program.560549*, %Program.560549** %.87, align 8
  %.92 = tail call %Scope.560473* @get_scope(%Program.560549* %.88, %ScopeId.560471* %4)
  %.16 = getelementptr inbounds %Scope.560473, %Scope.560473* %.92, i64 0, i32 7
  %.17 = load %"Map<string, Type>.560478"*, %"Map<string, Type>.560478"** %.16, align 8
  %.18 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.17, i64 0, i32 0
  %.19 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.18, align 8
  %.20 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.19, i64 0, i32 3
  %.21 = load %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)*, %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)** %.20, align 8
  %.23 = tail call %Type.560381* %.21(%"Map<string, Type>.560478"* %.17, %string.560217* %.2)
  %5 = ptrtoint %Type.560381* %.23 to i64
  %.26 = trunc i64 %5 to i32
  %.28.not = icmp eq i32 %.26, 0
  br i1 %.28.not, label %while.entry.endif, label %while.entry.if

while.exit.if:                                    ; preds = %while.entry.endif.endif.endif.if
  %6 = bitcast %ScopeId.560471** %.96 to i64*
  %.109 = load %Program.560549*, %Program.560549** %.87, align 8
  %.110 = getelementptr inbounds %Program.560549, %Program.560549* %.109, i64 0, i32 2
  %.111 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.110, align 8
  %.112 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.111, i64 0, i32 0
  %.113 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.112, align 8
  %.114 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.113, i64 0, i32 5
  %.115 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.114, align 8
  %.116 = tail call %Module.560531* %.115(%"Array<Module>.560551"* %.111, i64 0)
  %.117 = getelementptr inbounds %Module.560531, %Module.560531* %.116, i64 0, i32 8
  %.118 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.117, align 8
  %.119 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.118, i64 0, i32 0
  %.120 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.119, align 8
  %.121 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.120, i64 0, i32 5
  %.122 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.121, align 8
  %.123 = tail call %Scope.560473* %.122(%"Array<Scope>.560538"* %.118, i64 0)
  %.124 = getelementptr inbounds %Scope.560473, %Scope.560473* %.123, i64 0, i32 1
  %7 = bitcast %ScopeId.560471** %.124 to i64*
  %.1253 = load i64, i64* %7, align 8
  store i64 %.1253, i64* %6, align 8
  %.130 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 14
  %.132 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.131, align 8
  %.134 = tail call %Type.560381* %.132(%TypeChecker.560555* nonnull %.1, %string.560217* %.2)
  %.137 = getelementptr inbounds %Type.560381, %Type.560381* %.134, i64 0, i32 1
  %.138 = load i64, i64* %.137, align 8
  %.139.not = icmp eq i64 %.138, 21
  br i1 %.139.not, label %while.exit.if.endif, label %while.exit.if.if

while.exit.endif:                                 ; preds = %while.entry.endif.endif.endif.if
  %.182 = tail call %Type.560381* @Type_unknown()
  ret %Type.560381* %.182

while.exit.if.if:                                 ; preds = %while.exit.if
  %.143 = load %Program.560549*, %Program.560549** %.87, align 8
  %.144 = getelementptr inbounds %Program.560549, %Program.560549* %.143, i64 0, i32 1
  store i1 true, i1* %.144, align 1
  %.148 = load i64, i64* %.137, align 8
  %.149 = icmp eq i64 %.148, 13
  %.153 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  br i1 %.149, label %while.exit.if.if.if, label %while.exit.if.if.else

while.exit.if.endif:                              ; preds = %while.exit.if.if.if, %while.exit.if.if.else, %while.exit.if
  %8 = ptrtoint %ScopeId.560471* %.97 to i64
  store i64 %8, i64* %6, align 8
  ret %Type.560381* %.134

while.exit.if.if.if:                              ; preds = %while.exit.if.if
  %.154 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.153, i64 0, i32 31
  %.155 = load void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)*, void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)** %.154, align 8
  %.159 = getelementptr inbounds %Type.560381, %Type.560381* %.134, i64 1
  %9 = bitcast %Type.560381* %.159 to %ClassId.560397**
  %.160 = load %ClassId.560397*, %ClassId.560397** %9, align 8
  tail call void %.155(%TypeChecker.560555* nonnull %.1, %string.560217* %.2, %ClassId.560397* %.160)
  br label %while.exit.if.endif

while.exit.if.if.else:                            ; preds = %while.exit.if.if
  %.166 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.153, i64 0, i32 32
  %.167 = load void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)*, void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)** %.166, align 8
  %.171 = getelementptr inbounds %Type.560381, %Type.560381* %.134, i64 1
  %10 = bitcast %Type.560381* %.171 to %EnumId.560399**
  %.172 = load %EnumId.560399*, %EnumId.560399** %10, align 8
  tail call void %.167(%TypeChecker.560555* nonnull %.1, %string.560217* %.2, %EnumId.560399* %.172)
  br label %while.exit.if.endif
}

define %Scope.560473* @TypeChecker_create_child_scope_within_current_scope(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.7, i64 0, i32 11
  %.9 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.8, align 8
  %.10 = tail call %Scope.560473* %.9(%TypeChecker.560555* %.1)
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.560471** %.14 to i64*
  %.151 = load i64, i64* %0, align 8
  %.16 = getelementptr inbounds %Scope.560473, %Scope.560473* %.10, i64 0, i32 6
  %1 = bitcast %ScopeId.560471** %.16 to i64*
  store i64 %.151, i64* %1, align 8
  ret %Scope.560473* %.10
}

define void @TypeChecker_error(%TypeChecker.560555* nocapture readonly %.1, i64 %.2, %string.560217* %.3, %FloRange.560223* %.4) {
.6:
  %.12 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 7
  %.13 = load %Compiler.560235*, %Compiler.560235** %.12, align 8
  %.14 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.13, i64 0, i32 6
  %.15 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.14, align 8
  %.19 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %FloError.560225*
  %.21 = bitcast i8* %.19 to %FloError_vtable_ty.560226**
  store %FloError_vtable_ty.560226* @FloError_vtable_data, %FloError_vtable_ty.560226** %.21, align 8
  tail call void @FloError_constructor(%FloError.560225* %.20, i64 %.2, %string.560217* %.3, %FloRange.560223* %.4)
  %.24 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.15, i64 0, i32 0
  %.25 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.24, align 8
  %.26 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.25, i64 0, i32 2
  %.27 = load void (%"Array<FloError>.560238"*, %FloError.560225*)*, void (%"Array<FloError>.560238"*, %FloError.560225*)** %.26, align 8
  tail call void %.27(%"Array<FloError>.560238"* %.15, %FloError.560225* %.20)
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @TypeChecker_has_errored(%TypeChecker.560555* nocapture readonly %.1) #5 {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 7
  %.7 = load %Compiler.560235*, %Compiler.560235** %.6, align 8
  %.8 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.7, i64 0, i32 6
  %.9 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.9, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = icmp sgt i64 %.11, 0
  ret i1 %.12
}

define %Program.560549* @TypeChecker_check(%TypeChecker.560555* %.1, %ModuleAST.560363* %.2, %Compiler.560235* %.3, %string.560217* %.4) {
.6:
  %.13 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 7
  store %Compiler.560235* %.3, %Compiler.560235** %.13, align 8
  %.16 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.17 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.16, align 8
  %.18 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.17, i64 0, i32 19
  %.19 = load void (%TypeChecker.560555*)*, void (%TypeChecker.560555*)** %.18, align 8
  tail call void %.19(%TypeChecker.560555* %.1)
  %.23 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.16, align 8
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.23, i64 0, i32 17
  %.25 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.24, align 8
  %.26 = tail call i1 %.25(%TypeChecker.560555* %.1)
  br i1 %.26, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  ret %Program.560549* null

.6.endif:                                         ; preds = %.6
  %.31 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.16, align 8
  %.32 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.31, i64 0, i32 20
  %.33 = load void (%TypeChecker.560555*)*, void (%TypeChecker.560555*)** %.32, align 8
  tail call void %.33(%TypeChecker.560555* nonnull %.1)
  %.37 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.16, align 8
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.37, i64 0, i32 22
  %.39 = load %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)*, %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)** %.38, align 8
  %.42 = tail call %Module.560531* %.39(%TypeChecker.560555* nonnull %.1, %ModuleAST.560363* %.2, %string.560217* %.4)
  %.44 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.45 = load %Program.560549*, %Program.560549** %.44, align 8
  ret %Program.560549* %.45
}

define void @TypeChecker_load_builtins_module(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.7, i64 0, i32 36
  %.9 = load %Module.560531* (%TypeChecker.560555*, %string.560217*, %FloRange.560223*)*, %Module.560531* (%TypeChecker.560555*, %string.560217*, %FloRange.560223*)** %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 7
  %.12 = load %Compiler.560235*, %Compiler.560235** %.11, align 8
  %.13 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.12, i64 0, i32 4
  %.14 = load %string.560217*, %string.560217** %.13, align 8
  %.15 = tail call %Module.560531* %.9(%TypeChecker.560555* %.1, %string.560217* %.14, %FloRange.560223* null)
  ret void
}

define void @TypeChecker_load_generic_module(%TypeChecker.560555* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 7
  %.7 = load %Compiler.560235*, %Compiler.560235** %.6, align 8
  %.8 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.7, i64 0, i32 0
  %.9 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.8, align 8
  %.10 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.9, i64 0, i32 2
  %.11 = load %FileId.560231* (%Compiler.560235*, %string.560217*)*, %FileId.560231* (%Compiler.560235*, %string.560217*)** %.10, align 8
  %.12 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %string.560217*
  %.13.repack = bitcast i8* %.12 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.13.repack, align 8
  %.13.repack1 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.13.repack1 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.224, i64 0, i64 0), i8** %0, align 8
  %.13.repack2 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.13.repack2 to i64*
  store i64 12, i64* %1, align 8
  %.13.repack3 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.13.repack3 to i64*
  store i64 12, i64* %2, align 8
  %.15 = tail call %FileId.560231* %.11(%Compiler.560235* %.7, %string.560217* %.13)
  %.17 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.18 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.17, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.18, i64 0, i32 22
  %.20 = load %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)*, %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)** %.19, align 8
  %.21 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.22 = bitcast i8* %.21 to %ModuleAST.560363*
  %.23 = bitcast i8* %.21 to %ModuleAST_vtable_ty.560364**
  store %ModuleAST_vtable_ty.560364* @ModuleAST_vtable_data, %ModuleAST_vtable_ty.560364** %.23, align 8
  tail call void @ModuleAST_constructor(%ModuleAST.560363* %.22)
  %.26 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.560217*
  %.27.repack = bitcast i8* %.26 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.27.repack, align 8
  %.27.repack4 = getelementptr inbounds i8, i8* %.26, i64 8
  %3 = bitcast i8* %.27.repack4 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.224, i64 0, i64 0), i8** %3, align 8
  %.27.repack5 = getelementptr inbounds i8, i8* %.26, i64 16
  %4 = bitcast i8* %.27.repack5 to i64*
  store i64 12, i64* %4, align 8
  %.27.repack6 = getelementptr inbounds i8, i8* %.26, i64 24
  %5 = bitcast i8* %.27.repack6 to i64*
  store i64 12, i64* %5, align 8
  %.29 = tail call %Module.560531* %.20(%TypeChecker.560555* %.1, %ModuleAST.560363* %.22, %string.560217* %.27)
  %.32 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.17, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.32, i64 0, i32 21
  %.34 = load void (%TypeChecker.560555*)*, void (%TypeChecker.560555*)** %.33, align 8
  tail call void %.34(%TypeChecker.560555* %.1)
  %.38 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.17, align 8
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.38, i64 0, i32 34
  %.40 = load void (%TypeChecker.560555*, %Module.560531*)*, void (%TypeChecker.560555*, %Module.560531*)** %.39, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.38, i64 0, i32 0
  %.45 = load %Module.560531* (%TypeChecker.560555*, i64)*, %Module.560531* (%TypeChecker.560555*, i64)** %.44, align 8
  %.46 = tail call %Module.560531* %.45(%TypeChecker.560555* %.1, i64 0)
  tail call void %.40(%TypeChecker.560555* %.1, %Module.560531* %.46)
  ret void
}

define void @TypeChecker_switch_to_generic_module(%TypeChecker.560555* %.1) {
.3:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  store i64 1, i64* %.8, align 8
  %.12 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.13 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  %.14 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.13, i64 0, i32 0
  %.15 = load %Module.560531* (%TypeChecker.560555*, i64)*, %Module.560531* (%TypeChecker.560555*, i64)** %.14, align 8
  %.17 = tail call %Module.560531* %.15(%TypeChecker.560555* %.1, i64 1)
  %.18 = getelementptr inbounds %Module.560531, %Module.560531* %.17, i64 0, i32 8
  %.19 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.19, i64 0, i32 0
  %.21 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.21, i64 0, i32 5
  %.23 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.22, align 8
  %.24 = tail call %Scope.560473* %.23(%"Array<Scope>.560538"* %.19, i64 0)
  %.25 = getelementptr inbounds %Scope.560473, %Scope.560473* %.24, i64 0, i32 1
  %0 = bitcast %ScopeId.560471** %.25 to i64*
  %.261 = load i64, i64* %0, align 8
  %.27 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %1 = bitcast %ScopeId.560471** %.27 to i64*
  store i64 %.261, i64* %1, align 8
  ret void
}

define %Module.560531* @TypeChecker_check_module(%TypeChecker.560555* %.1, %ModuleAST.560363* nocapture readonly %.2, %string.560217* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 9
  store i1 false, i1* %.10, align 1
  %.13 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.14 = load i64, i64* %.13, align 8
  %.17 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.560471** %.17 to i64*
  %.183 = load i64, i64* %0, align 8
  %.21 = tail call dereferenceable_or_null(88) i8* @malloc(i64 88)
  %.22 = bitcast i8* %.21 to %Module.560531*
  %.23 = bitcast i8* %.21 to %Module_vtable_ty.560532**
  store %Module_vtable_ty.560532* @Module_vtable_data, %Module_vtable_ty.560532** %.23, align 8
  tail call void @Module_constructor(%Module.560531* %.22, %string.560217* %.3)
  %.29 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.30 = load %Program.560549*, %Program.560549** %.29, align 8
  %.31 = getelementptr inbounds %Program.560549, %Program.560549* %.30, i64 0, i32 2
  %.32 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.32, i64 0, i32 2
  %.34 = load i64, i64* %.33, align 8
  store i64 %.34, i64* %.13, align 8
  %.41 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.31, align 8
  %.43 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.41, i64 0, i32 0
  %.44 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.43, align 8
  %.45 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.44, i64 0, i32 2
  %.46 = load void (%"Array<Module>.560551"*, %Module.560531*)*, void (%"Array<Module>.560551"*, %Module.560531*)** %.45, align 8
  tail call void %.46(%"Array<Module>.560551"* %.41, %Module.560531* %.22)
  %.49 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.50 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.51 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.50, i64 0, i32 11
  %.52 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.51, align 8
  %.53 = tail call %Scope.560473* %.52(%TypeChecker.560555* %.1)
  %.57 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %ConstId.560447*
  %.59 = bitcast i8* %.57 to %ConstId_vtable_ty.560448**
  store %ConstId_vtable_ty.560448* @ConstId_vtable_data, %ConstId_vtable_ty.560448** %.59, align 8
  tail call void @ConstId_constructor(%ConstId.560447* %.58, i64 -1, i64 -1)
  %.64 = getelementptr inbounds %Scope.560473, %Scope.560473* %.53, i64 0, i32 2
  %.65 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.64, align 8
  %.66 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.65, i64 0, i32 0
  %.67 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.66, align 8
  %.68 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.67, i64 0, i32 2
  %.69 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.68, align 8
  %.70 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.71 = bitcast i8* %.70 to %string.560217*
  %.71.repack = bitcast i8* %.70 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.71.repack, align 8
  %.71.repack4 = getelementptr inbounds i8, i8* %.70, i64 8
  %1 = bitcast i8* %.71.repack4 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.225, i64 0, i64 0), i8** %1, align 8
  %.71.repack5 = getelementptr inbounds i8, i8* %.70, i64 16
  %2 = bitcast i8* %.71.repack5 to i64*
  store i64 4, i64* %2, align 8
  %.71.repack6 = getelementptr inbounds i8, i8* %.70, i64 24
  %3 = bitcast i8* %.71.repack6 to i64*
  store i64 4, i64* %3, align 8
  %.74 = bitcast i8* %.57 to %VarId.560441*
  tail call void %.69(%"Map<string, VarId>.560475"* %.65, %string.560217* %.71, %VarId.560441* %.74)
  %.78 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.64, align 8
  %.79 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.78, i64 0, i32 0
  %.80 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.79, align 8
  %.81 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.80, i64 0, i32 2
  %.82 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.81, align 8
  %.83 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.560217*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.84.repack, align 8
  %.84.repack7 = getelementptr inbounds i8, i8* %.83, i64 8
  %4 = bitcast i8* %.84.repack7 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.226, i64 0, i64 0), i8** %4, align 8
  %.84.repack8 = getelementptr inbounds i8, i8* %.83, i64 16
  %5 = bitcast i8* %.84.repack8 to i64*
  store i64 5, i64* %5, align 8
  %.84.repack9 = getelementptr inbounds i8, i8* %.83, i64 24
  %6 = bitcast i8* %.84.repack9 to i64*
  store i64 5, i64* %6, align 8
  tail call void %.82(%"Map<string, VarId>.560475"* %.78, %string.560217* %.84, %VarId.560441* %.74)
  %.91 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.64, align 8
  %.92 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.91, i64 0, i32 0
  %.93 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.92, align 8
  %.94 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.93, i64 0, i32 2
  %.95 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.94, align 8
  %.96 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.560217*
  %.97.repack = bitcast i8* %.96 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.97.repack, align 8
  %.97.repack10 = getelementptr inbounds i8, i8* %.96, i64 8
  %7 = bitcast i8* %.97.repack10 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.227, i64 0, i64 0), i8** %7, align 8
  %.97.repack11 = getelementptr inbounds i8, i8* %.96, i64 16
  %8 = bitcast i8* %.97.repack11 to i64*
  store i64 4, i64* %8, align 8
  %.97.repack12 = getelementptr inbounds i8, i8* %.96, i64 24
  %9 = bitcast i8* %.97.repack12 to i64*
  store i64 4, i64* %9, align 8
  tail call void %.95(%"Map<string, VarId>.560475"* %.91, %string.560217* %.97, %VarId.560441* %.74)
  %.104 = getelementptr inbounds %Scope.560473, %Scope.560473* %.53, i64 0, i32 1
  %10 = bitcast %ScopeId.560471** %.104 to i64*
  %.10513 = load i64, i64* %10, align 8
  store i64 %.10513, i64* %0, align 8
  %.112 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 3
  %.122 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.2, i64 0, i32 4
  %11 = bitcast %ClassId.560397** %.112 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  %.123107 = load %"Array<ImportNode>.560368"*, %"Array<ImportNode>.560368"** %.122, align 8
  %.124108 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.123107, i64 0, i32 2
  %.125109 = load i64, i64* %.124108, align 8
  %.126110 = icmp sgt i64 %.125109, 0
  br i1 %.126110, label %for.body, label %for.cond.1.preheader

for.cond:                                         ; preds = %for.body
  %.123 = load %"Array<ImportNode>.560368"*, %"Array<ImportNode>.560368"** %.122, align 8
  %.124 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.123, i64 0, i32 2
  %.125 = load i64, i64* %.124, align 8
  %.126 = icmp slt i64 %.155, %.125
  br i1 %.126, label %for.body, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.cond, %.5
  %.163 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.2, i64 0, i32 3
  %.164100 = load %"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"** %.163, align 8
  %.165101 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.164100, i64 0, i32 2
  %.166102 = load i64, i64* %.165101, align 8
  %.167103 = icmp sgt i64 %.166102, 0
  br i1 %.167103, label %for.body.1, label %for.cond.2.preheader

for.body:                                         ; preds = %.5, %for.cond
  %.123112 = phi %"Array<ImportNode>.560368"* [ %.123, %for.cond ], [ %.123107, %.5 ]
  %storemerge111 = phi i64 [ %.155, %for.cond ], [ 0, %.5 ]
  %.130 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 35
  %.132 = load void (%TypeChecker.560555*, %ImportNode.560357*)*, void (%TypeChecker.560555*, %ImportNode.560357*)** %.131, align 8
  %.137 = getelementptr inbounds %"Array<ImportNode>.560368", %"Array<ImportNode>.560368"* %.123112, i64 0, i32 0
  %.138 = load %"Array<ImportNode>_vtable_ty.560375"*, %"Array<ImportNode>_vtable_ty.560375"** %.137, align 8
  %.139 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.560375", %"Array<ImportNode>_vtable_ty.560375"* %.138, i64 0, i32 5
  %.140 = load %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)*, %ImportNode.560357* (%"Array<ImportNode>.560368"*, i64)** %.139, align 8
  %.141 = tail call %ImportNode.560357* %.140(%"Array<ImportNode>.560368"* %.123112, i64 %storemerge111)
  tail call void %.132(%TypeChecker.560555* nonnull %.1, %ImportNode.560357* %.141)
  %.145 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.146 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.145, i64 0, i32 17
  %.147 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.146, align 8
  %.148 = tail call i1 %.147(%TypeChecker.560555* nonnull %.1)
  %.155 = add nuw nsw i64 %storemerge111, 1
  br i1 %.148, label %for.body.if, label %for.cond

for.body.if:                                      ; preds = %for.body, %for.end.6, %for.end.2
  ret %Module.560531* null

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.196 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.2, i64 0, i32 2
  %.19790 = load %"Array<ClassDeclarationNode>.560366"*, %"Array<ClassDeclarationNode>.560366"** %.196, align 8
  %.19891 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.19790, i64 0, i32 2
  %.19992 = load i64, i64* %.19891, align 8
  %.20093 = icmp sgt i64 %.19992, 0
  %.20494 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  br i1 %.20093, label %for.body.2, label %for.end.2

for.body.1:                                       ; preds = %for.cond.1.preheader, %for.body.1
  %.164105 = phi %"Array<EnumNode>.560367"* [ %.164, %for.body.1 ], [ %.164100, %for.cond.1.preheader ]
  %storemerge14104 = phi i64 [ %.188, %for.body.1 ], [ 0, %for.cond.1.preheader ]
  %.171 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.172 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.171, i64 0, i32 37
  %.173 = load void (%TypeChecker.560555*, %EnumNode.560353*)*, void (%TypeChecker.560555*, %EnumNode.560353*)** %.172, align 8
  %.178 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.164105, i64 0, i32 0
  %.179 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.178, align 8
  %.180 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.179, i64 0, i32 5
  %.181 = load %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)*, %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)** %.180, align 8
  %.182 = tail call %EnumNode.560353* %.181(%"Array<EnumNode>.560367"* %.164105, i64 %storemerge14104)
  tail call void %.173(%TypeChecker.560555* nonnull %.1, %EnumNode.560353* %.182)
  %.188 = add nuw nsw i64 %storemerge14104, 1
  %.164 = load %"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"** %.163, align 8
  %.165 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.164, i64 0, i32 2
  %.166 = load i64, i64* %.165, align 8
  %.167 = icmp slt i64 %.188, %.166
  br i1 %.167, label %for.body.1, label %for.cond.2.preheader

for.body.2:                                       ; preds = %for.cond.2.preheader, %for.body.2
  %.20497 = phi %TypeChecker_vtable_ty.560556* [ %.204, %for.body.2 ], [ %.20494, %for.cond.2.preheader ]
  %.19796 = phi %"Array<ClassDeclarationNode>.560366"* [ %.197, %for.body.2 ], [ %.19790, %for.cond.2.preheader ]
  %storemerge1595 = phi i64 [ %.221, %for.body.2 ], [ 0, %for.cond.2.preheader ]
  %.205 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.20497, i64 0, i32 38
  %.206 = load void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)** %.205, align 8
  %.211 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.19796, i64 0, i32 0
  %.212 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.211, align 8
  %.213 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.212, i64 0, i32 5
  %.214 = load %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)*, %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)** %.213, align 8
  %.215 = tail call %ClassDeclarationNode.560343* %.214(%"Array<ClassDeclarationNode>.560366"* %.19796, i64 %storemerge1595)
  tail call void %.206(%TypeChecker.560555* nonnull %.1, %ClassDeclarationNode.560343* %.215)
  %.221 = add nuw nsw i64 %storemerge1595, 1
  %.197 = load %"Array<ClassDeclarationNode>.560366"*, %"Array<ClassDeclarationNode>.560366"** %.196, align 8
  %.198 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.197, i64 0, i32 2
  %.199 = load i64, i64* %.198, align 8
  %.200 = icmp slt i64 %.221, %.199
  %.204 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  br i1 %.200, label %for.body.2, label %for.end.2

for.end.2:                                        ; preds = %for.body.2, %for.cond.2.preheader
  %.204.lcssa = phi %TypeChecker_vtable_ty.560556* [ %.20494, %for.cond.2.preheader ], [ %.204, %for.body.2 ]
  %.227 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.204.lcssa, i64 0, i32 17
  %.228 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.227, align 8
  %.229 = tail call i1 %.228(%TypeChecker.560555* nonnull %.1)
  br i1 %.229, label %for.body.if, label %for.cond.3.preheader

for.cond.3.preheader:                             ; preds = %for.end.2
  %.237 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.2, i64 0, i32 7
  %.23884 = load %"Array<TypeAliasNode>.560371"*, %"Array<TypeAliasNode>.560371"** %.237, align 8
  %.23985 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.23884, i64 0, i32 2
  %.24086 = load i64, i64* %.23985, align 8
  %.24187 = icmp sgt i64 %.24086, 0
  br i1 %.24187, label %for.body.3.lr.ph, label %for.cond.4.preheader

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.317 = getelementptr inbounds %Scope.560473, %Scope.560473* %.53, i64 0, i32 7
  br label %for.body.3

for.cond.4.preheader:                             ; preds = %for.body.3.endif, %for.cond.3.preheader
  %.338 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.2, i64 0, i32 5
  %.33978 = load %"Array<ConstDeclarationStatement>.560369"*, %"Array<ConstDeclarationStatement>.560369"** %.338, align 8
  %.34079 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.33978, i64 0, i32 2
  %.34180 = load i64, i64* %.34079, align 8
  %.34281 = icmp sgt i64 %.34180, 0
  br i1 %.34281, label %for.body.4, label %for.cond.5.preheader

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3.endif
  %.23889 = phi %"Array<TypeAliasNode>.560371"* [ %.23884, %for.body.3.lr.ph ], [ %.238, %for.body.3.endif ]
  %storemerge1688 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.330, %for.body.3.endif ]
  %.247 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.23889, i64 0, i32 0
  %.248 = load %"Array<TypeAliasNode>_vtable_ty.560378"*, %"Array<TypeAliasNode>_vtable_ty.560378"** %.247, align 8
  %.249 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.560378", %"Array<TypeAliasNode>_vtable_ty.560378"* %.248, i64 0, i32 5
  %.250 = load %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)*, %TypeAliasNode.560361* (%"Array<TypeAliasNode>.560371"*, i64)** %.249, align 8
  %.251 = tail call %TypeAliasNode.560361* %.250(%"Array<TypeAliasNode>.560371"* %.23889, i64 %storemerge1688)
  %.255 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.256 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.255, i64 0, i32 46
  %.257 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.256, align 8
  %.259 = getelementptr inbounds %TypeAliasNode.560361, %TypeAliasNode.560361* %.251, i64 0, i32 2
  %.260 = load %TypeNode.560269*, %TypeNode.560269** %.259, align 8
  %.261 = tail call %Type.560381* %.257(%TypeChecker.560555* nonnull %.1, %TypeNode.560269* %.260)
  %.264 = getelementptr inbounds %TypeAliasNode.560361, %TypeAliasNode.560361* %.251, i64 0, i32 1
  %.2652324 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.264, align 8
  %.268 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.2652324, i64 0, i32 3
  %.26925117 = load %string.560217*, %string.560217** %.268, align 8
  %.273 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.274 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.273, i64 0, i32 14
  %.275 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.274, align 8
  %.277 = tail call %Type.560381* %.275(%TypeChecker.560555* nonnull %.1, %string.560217* %.26925117)
  %.278 = getelementptr inbounds %Type.560381, %Type.560381* %.277, i64 0, i32 1
  %.279 = load i64, i64* %.278, align 8
  %.280.not = icmp eq i64 %.279, 21
  br i1 %.280.not, label %for.body.3.endif, label %for.body.3.if

for.body.3.if:                                    ; preds = %for.body.3
  %.284 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.285 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.284, i64 0, i32 16
  %.286 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.285, align 8
  %.288 = getelementptr inbounds %string.560217, %string.560217* %.26925117, i64 0, i32 0
  %.289 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.288, align 8
  %.290 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.289, i64 0, i32 11
  %.291 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.290, align 8
  %.292 = tail call i8* %.291(%string.560217* %.26925117)
  %.294 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.228, i64 0, i64 0), i8* %.292)
  %.295 = add i64 %.294, 1
  %.297 = tail call i8* @malloc(i64 %.295)
  %.298 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.297, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.228, i64 0, i64 0), i8* %.292)
  %.299 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.300 = bitcast i8* %.299 to %string.560217*
  %.301 = bitcast i8* %.299 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.301, align 8
  %.303 = getelementptr inbounds i8, i8* %.299, i64 8
  %12 = bitcast i8* %.303 to i8**
  store i8* %.297, i8** %12, align 8
  %.305 = getelementptr inbounds i8, i8* %.299, i64 16
  %13 = bitcast i8* %.305 to i64*
  store i64 %.294, i64* %13, align 8
  %.307 = getelementptr inbounds i8, i8* %.299, i64 24
  %14 = bitcast i8* %.307 to i64*
  store i64 %.294, i64* %14, align 8
  %.311 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.264, align 8
  %.312 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.311, i64 0, i32 2
  %.313 = load %FloRange.560223*, %FloRange.560223** %.312, align 8
  tail call void %.286(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.300, %FloRange.560223* %.313)
  ret %Module.560531* null

for.body.3.endif:                                 ; preds = %for.body.3
  %.318 = load %"Map<string, Type>.560478"*, %"Map<string, Type>.560478"** %.317, align 8
  %.319 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.318, i64 0, i32 0
  %.320 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.319, align 8
  %.321 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.320, i64 0, i32 2
  %.322 = load void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)*, void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)** %.321, align 8
  tail call void %.322(%"Map<string, Type>.560478"* %.318, %string.560217* %.26925117, %Type.560381* %.261)
  %.330 = add nuw nsw i64 %storemerge1688, 1
  %.238 = load %"Array<TypeAliasNode>.560371"*, %"Array<TypeAliasNode>.560371"** %.237, align 8
  %.239 = getelementptr inbounds %"Array<TypeAliasNode>.560371", %"Array<TypeAliasNode>.560371"* %.238, i64 0, i32 2
  %.240 = load i64, i64* %.239, align 8
  %.241 = icmp slt i64 %.330, %.240
  br i1 %.241, label %for.body.3, label %for.cond.4.preheader

for.cond.5.preheader:                             ; preds = %for.body.4, %for.cond.4.preheader
  %.371 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.2, i64 0, i32 6
  %.37272 = load %"Array<VarDeclarationStatement>.560370"*, %"Array<VarDeclarationStatement>.560370"** %.371, align 8
  %.37373 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.37272, i64 0, i32 2
  %.37474 = load i64, i64* %.37373, align 8
  %.37575 = icmp sgt i64 %.37474, 0
  br i1 %.37575, label %for.body.5, label %for.cond.6.preheader

for.body.4:                                       ; preds = %for.cond.4.preheader, %for.body.4
  %.33983 = phi %"Array<ConstDeclarationStatement>.560369"* [ %.339, %for.body.4 ], [ %.33978, %for.cond.4.preheader ]
  %storemerge1782 = phi i64 [ %.363, %for.body.4 ], [ 0, %for.cond.4.preheader ]
  %.346 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.347 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.346, i64 0, i32 26
  %.348 = load void (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)*, void (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)** %.347, align 8
  %.353 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.33983, i64 0, i32 0
  %.354 = load %"Array<ConstDeclarationStatement>_vtable_ty.560376"*, %"Array<ConstDeclarationStatement>_vtable_ty.560376"** %.353, align 8
  %.355 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.560376", %"Array<ConstDeclarationStatement>_vtable_ty.560376"* %.354, i64 0, i32 5
  %.356 = load %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)*, %ConstDeclarationStatement.560329* (%"Array<ConstDeclarationStatement>.560369"*, i64)** %.355, align 8
  %.357 = tail call %ConstDeclarationStatement.560329* %.356(%"Array<ConstDeclarationStatement>.560369"* %.33983, i64 %storemerge1782)
  tail call void %.348(%TypeChecker.560555* nonnull %.1, %ConstDeclarationStatement.560329* %.357)
  %.363 = add nuw nsw i64 %storemerge1782, 1
  %.339 = load %"Array<ConstDeclarationStatement>.560369"*, %"Array<ConstDeclarationStatement>.560369"** %.338, align 8
  %.340 = getelementptr inbounds %"Array<ConstDeclarationStatement>.560369", %"Array<ConstDeclarationStatement>.560369"* %.339, i64 0, i32 2
  %.341 = load i64, i64* %.340, align 8
  %.342 = icmp slt i64 %.363, %.341
  br i1 %.342, label %for.body.4, label %for.cond.5.preheader

for.cond.6.preheader:                             ; preds = %for.body.5, %for.cond.5.preheader
  %.404 = getelementptr inbounds %ModuleAST.560363, %ModuleAST.560363* %.2, i64 0, i32 1
  %.40563 = load %"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"** %.404, align 8
  %.40664 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.40563, i64 0, i32 2
  %.40765 = load i64, i64* %.40664, align 8
  %.40866 = icmp sgt i64 %.40765, 0
  %.41267 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  br i1 %.40866, label %for.body.6, label %for.end.6

for.body.5:                                       ; preds = %for.cond.5.preheader, %for.body.5
  %.37277 = phi %"Array<VarDeclarationStatement>.560370"* [ %.372, %for.body.5 ], [ %.37272, %for.cond.5.preheader ]
  %storemerge1876 = phi i64 [ %.396, %for.body.5 ], [ 0, %for.cond.5.preheader ]
  %.379 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.380 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.379, i64 0, i32 27
  %.381 = load void (%TypeChecker.560555*, %VarDeclarationStatement.560327*)*, void (%TypeChecker.560555*, %VarDeclarationStatement.560327*)** %.380, align 8
  %.386 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.37277, i64 0, i32 0
  %.387 = load %"Array<VarDeclarationStatement>_vtable_ty.560377"*, %"Array<VarDeclarationStatement>_vtable_ty.560377"** %.386, align 8
  %.388 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.560377", %"Array<VarDeclarationStatement>_vtable_ty.560377"* %.387, i64 0, i32 5
  %.389 = load %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)*, %VarDeclarationStatement.560327* (%"Array<VarDeclarationStatement>.560370"*, i64)** %.388, align 8
  %.390 = tail call %VarDeclarationStatement.560327* %.389(%"Array<VarDeclarationStatement>.560370"* %.37277, i64 %storemerge1876)
  tail call void %.381(%TypeChecker.560555* nonnull %.1, %VarDeclarationStatement.560327* %.390)
  %.396 = add nuw nsw i64 %storemerge1876, 1
  %.372 = load %"Array<VarDeclarationStatement>.560370"*, %"Array<VarDeclarationStatement>.560370"** %.371, align 8
  %.373 = getelementptr inbounds %"Array<VarDeclarationStatement>.560370", %"Array<VarDeclarationStatement>.560370"* %.372, i64 0, i32 2
  %.374 = load i64, i64* %.373, align 8
  %.375 = icmp slt i64 %.396, %.374
  br i1 %.375, label %for.body.5, label %for.cond.6.preheader

for.body.6:                                       ; preds = %for.cond.6.preheader, %for.body.6
  %.41270 = phi %TypeChecker_vtable_ty.560556* [ %.412, %for.body.6 ], [ %.41267, %for.cond.6.preheader ]
  %.40569 = phi %"Array<FunctionDeclarationNode>.560365"* [ %.405, %for.body.6 ], [ %.40563, %for.cond.6.preheader ]
  %storemerge1968 = phi i64 [ %.429, %for.body.6 ], [ 0, %for.cond.6.preheader ]
  %.413 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.41270, i64 0, i32 39
  %.414 = load void (%TypeChecker.560555*, %FunctionDeclarationNode.560333*)*, void (%TypeChecker.560555*, %FunctionDeclarationNode.560333*)** %.413, align 8
  %.419 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.40569, i64 0, i32 0
  %.420 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.419, align 8
  %.421 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.420, i64 0, i32 5
  %.422 = load %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)*, %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)** %.421, align 8
  %.423 = tail call %FunctionDeclarationNode.560333* %.422(%"Array<FunctionDeclarationNode>.560365"* %.40569, i64 %storemerge1968)
  tail call void %.414(%TypeChecker.560555* nonnull %.1, %FunctionDeclarationNode.560333* %.423)
  %.429 = add nuw nsw i64 %storemerge1968, 1
  %.405 = load %"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"** %.404, align 8
  %.406 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.405, i64 0, i32 2
  %.407 = load i64, i64* %.406, align 8
  %.408 = icmp slt i64 %.429, %.407
  %.412 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  br i1 %.408, label %for.body.6, label %for.end.6

for.end.6:                                        ; preds = %for.body.6, %for.cond.6.preheader
  %.412.lcssa = phi %TypeChecker_vtable_ty.560556* [ %.41267, %for.cond.6.preheader ], [ %.412, %for.body.6 ]
  %.435 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.412.lcssa, i64 0, i32 17
  %.436 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.435, align 8
  %.437 = tail call i1 %.436(%TypeChecker.560555* nonnull %.1)
  br i1 %.437, label %for.body.if, label %for.cond.7.preheader

for.cond.7.preheader:                             ; preds = %for.end.6
  %.44658 = load %"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"** %.163, align 8
  %.44759 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.44658, i64 0, i32 2
  %.44860 = load i64, i64* %.44759, align 8
  %.44961 = icmp sgt i64 %.44860, 0
  br i1 %.44961, label %for.body.7.lr.ph, label %for.cond.8.preheader

for.body.7.lr.ph:                                 ; preds = %for.cond.7.preheader
  %.458 = getelementptr inbounds i8, i8* %.21, i64 56
  %15 = bitcast i8* %.458 to %"Array<Enum>.560537"**
  br label %for.body.7

for.cond.8.preheader:                             ; preds = %for.body.7, %for.cond.7.preheader
  %.48852 = load %"Array<ClassDeclarationNode>.560366"*, %"Array<ClassDeclarationNode>.560366"** %.196, align 8
  %.48953 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.48852, i64 0, i32 2
  %.49054 = load i64, i64* %.48953, align 8
  %.49155 = icmp sgt i64 %.49054, 0
  br i1 %.49155, label %for.body.8, label %for.cond.9.preheader

for.body.7:                                       ; preds = %for.body.7.lr.ph, %for.body.7
  %storemerge2062 = phi i64 [ 0, %for.body.7.lr.ph ], [ %.479, %for.body.7 ]
  %.453 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.454 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.453, i64 0, i32 40
  %.455 = load void (%TypeChecker.560555*, %Enum.560527*, %EnumNode.560353*)*, void (%TypeChecker.560555*, %Enum.560527*, %EnumNode.560353*)** %.454, align 8
  %.459 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %15, align 8
  %.460 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.459, i64 0, i32 0
  %.461 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.460, align 8
  %.462 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.461, i64 0, i32 5
  %.463 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.462, align 8
  %.464 = tail call %Enum.560527* %.463(%"Array<Enum>.560537"* %.459, i64 %storemerge2062)
  %.468 = load %"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"** %.163, align 8
  %.469 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.468, i64 0, i32 0
  %.470 = load %"Array<EnumNode>_vtable_ty.560374"*, %"Array<EnumNode>_vtable_ty.560374"** %.469, align 8
  %.471 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.560374", %"Array<EnumNode>_vtable_ty.560374"* %.470, i64 0, i32 5
  %.472 = load %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)*, %EnumNode.560353* (%"Array<EnumNode>.560367"*, i64)** %.471, align 8
  %.473 = tail call %EnumNode.560353* %.472(%"Array<EnumNode>.560367"* %.468, i64 %storemerge2062)
  tail call void %.455(%TypeChecker.560555* nonnull %.1, %Enum.560527* %.464, %EnumNode.560353* %.473)
  %.479 = add nuw nsw i64 %storemerge2062, 1
  %.446 = load %"Array<EnumNode>.560367"*, %"Array<EnumNode>.560367"** %.163, align 8
  %.447 = getelementptr inbounds %"Array<EnumNode>.560367", %"Array<EnumNode>.560367"* %.446, i64 0, i32 2
  %.448 = load i64, i64* %.447, align 8
  %.449 = icmp slt i64 %.479, %.448
  br i1 %.449, label %for.body.7, label %for.cond.8.preheader

for.cond.9.preheader:                             ; preds = %for.body.8, %for.cond.8.preheader
  %.52147 = load %"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"** %.404, align 8
  %.52248 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.52147, i64 0, i32 2
  %.52349 = load i64, i64* %.52248, align 8
  %.52450 = icmp sgt i64 %.52349, 0
  br i1 %.52450, label %for.body.9.lr.ph, label %for.end.9

for.body.9.lr.ph:                                 ; preds = %for.cond.9.preheader
  %.533 = getelementptr inbounds i8, i8* %.21, i64 48
  %16 = bitcast i8* %.533 to %"Array<Function>.560536"**
  br label %for.body.9

for.body.8:                                       ; preds = %for.cond.8.preheader, %for.body.8
  %.48857 = phi %"Array<ClassDeclarationNode>.560366"* [ %.488, %for.body.8 ], [ %.48852, %for.cond.8.preheader ]
  %storemerge2156 = phi i64 [ %.512, %for.body.8 ], [ 0, %for.cond.8.preheader ]
  %.495 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.496 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.495, i64 0, i32 44
  %.497 = load void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)** %.496, align 8
  %.502 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.48857, i64 0, i32 0
  %.503 = load %"Array<ClassDeclarationNode>_vtable_ty.560373"*, %"Array<ClassDeclarationNode>_vtable_ty.560373"** %.502, align 8
  %.504 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.560373", %"Array<ClassDeclarationNode>_vtable_ty.560373"* %.503, i64 0, i32 5
  %.505 = load %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)*, %ClassDeclarationNode.560343* (%"Array<ClassDeclarationNode>.560366"*, i64)** %.504, align 8
  %.506 = tail call %ClassDeclarationNode.560343* %.505(%"Array<ClassDeclarationNode>.560366"* %.48857, i64 %storemerge2156)
  tail call void %.497(%TypeChecker.560555* nonnull %.1, %ClassDeclarationNode.560343* %.506)
  %.512 = add nuw nsw i64 %storemerge2156, 1
  %.488 = load %"Array<ClassDeclarationNode>.560366"*, %"Array<ClassDeclarationNode>.560366"** %.196, align 8
  %.489 = getelementptr inbounds %"Array<ClassDeclarationNode>.560366", %"Array<ClassDeclarationNode>.560366"* %.488, i64 0, i32 2
  %.490 = load i64, i64* %.489, align 8
  %.491 = icmp slt i64 %.512, %.490
  br i1 %.491, label %for.body.8, label %for.cond.9.preheader

for.body.9:                                       ; preds = %for.body.9.lr.ph, %for.body.9
  %storemerge2251 = phi i64 [ 0, %for.body.9.lr.ph ], [ %.554, %for.body.9 ]
  %.528 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.529 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.528, i64 0, i32 45
  %.530 = load void (%TypeChecker.560555*, %Function.560501*, %FunctionDeclarationNode.560333*)*, void (%TypeChecker.560555*, %Function.560501*, %FunctionDeclarationNode.560333*)** %.529, align 8
  %.534 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %16, align 8
  %.535 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.534, i64 0, i32 0
  %.536 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.535, align 8
  %.537 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.536, i64 0, i32 5
  %.538 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.537, align 8
  %.539 = tail call %Function.560501* %.538(%"Array<Function>.560536"* %.534, i64 %storemerge2251)
  %.543 = load %"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"** %.404, align 8
  %.544 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.543, i64 0, i32 0
  %.545 = load %"Array<FunctionDeclarationNode>_vtable_ty.560372"*, %"Array<FunctionDeclarationNode>_vtable_ty.560372"** %.544, align 8
  %.546 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.560372", %"Array<FunctionDeclarationNode>_vtable_ty.560372"* %.545, i64 0, i32 5
  %.547 = load %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)*, %FunctionDeclarationNode.560333* (%"Array<FunctionDeclarationNode>.560365"*, i64)** %.546, align 8
  %.548 = tail call %FunctionDeclarationNode.560333* %.547(%"Array<FunctionDeclarationNode>.560365"* %.543, i64 %storemerge2251)
  tail call void %.530(%TypeChecker.560555* nonnull %.1, %Function.560501* %.539, %FunctionDeclarationNode.560333* %.548)
  %.554 = add nuw nsw i64 %storemerge2251, 1
  %.521 = load %"Array<FunctionDeclarationNode>.560365"*, %"Array<FunctionDeclarationNode>.560365"** %.404, align 8
  %.522 = getelementptr inbounds %"Array<FunctionDeclarationNode>.560365", %"Array<FunctionDeclarationNode>.560365"* %.521, i64 0, i32 2
  %.523 = load i64, i64* %.522, align 8
  %.524 = icmp slt i64 %.554, %.523
  br i1 %.524, label %for.body.9, label %for.end.9

for.end.9:                                        ; preds = %for.body.9, %for.cond.9.preheader
  %.559 = load i1, i1* %.10, align 1
  %.562 = load i64, i64* %.13, align 8
  %.563 = icmp ne i64 %.562, 0
  %.564 = and i1 %.559, %.563
  br i1 %.564, label %for.end.9.if, label %for.end.9.endif

for.end.9.if:                                     ; preds = %for.end.9
  %.568 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.569 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.568, i64 0, i32 21
  %.570 = load void (%TypeChecker.560555*)*, void (%TypeChecker.560555*)** %.569, align 8
  tail call void %.570(%TypeChecker.560555* nonnull %.1)
  %.574 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.575 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.574, i64 0, i32 34
  %.576 = load void (%TypeChecker.560555*, %Module.560531*)*, void (%TypeChecker.560555*, %Module.560531*)** %.575, align 8
  tail call void %.576(%TypeChecker.560555* nonnull %.1, %Module.560531* %.22)
  br label %for.end.9.endif

for.end.9.endif:                                  ; preds = %for.end.9.if, %for.end.9
  store i64 %.183, i64* %0, align 8
  store i64 %.14, i64* %.13, align 8
  %.590 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.591 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.590, i64 0, i32 17
  %.592 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.591, align 8
  %.593 = tail call i1 %.592(%TypeChecker.560555* nonnull %.1)
  %spec.select = select i1 %.593, %Module.560531* null, %Module.560531* %.22
  ret %Module.560531* %spec.select
}

define noalias %GenericType.560405* @TypeChecker_create_generic_instance_in_module(%TypeChecker.560555* %.1, %string.560217* %.2, %"Array<Type>.560389"* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 10
  %.11 = load %"Map<string, Generic>.560557"*, %"Map<string, Generic>.560557"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.13, i64 0, i32 3
  %.15 = load %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)*, %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)** %.14, align 8
  %.17 = tail call %Generic.560553* %.15(%"Map<string, Generic>.560557"* %.11, %string.560217* %.2)
  %0 = ptrtoint %Generic.560553* %.17 to i64
  %.20 = trunc i64 %0 to i32
  %.22 = icmp eq i32 %.20, 0
  br i1 %.22, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %GenericType.560405* null

.5.endif:                                         ; preds = %.5
  %.26 = getelementptr inbounds %Generic.560553, %Generic.560553* %.17, i64 0, i32 2
  %.27 = load %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.26, align 8
  %.28 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.27, i64 0, i32 2
  %.29219 = load %"Array<GenericParameterNode>.560345"*, %"Array<GenericParameterNode>.560345"** %.28, align 8
  %.32 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.29219, i64 0, i32 2
  %.33 = load i64, i64* %.32, align 8
  %.35 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.3, i64 0, i32 2
  %.36 = load i64, i64* %.35, align 8
  %.37.not = icmp eq i64 %.33, %.36
  br i1 %.37.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.41 = load %"Map<string, Generic>.560557"*, %"Map<string, Generic>.560557"** %.10, align 8
  %.42 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.41, i64 0, i32 0
  %.43 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.42, align 8
  %.44 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.43, i64 0, i32 4
  %.45 = load %"Array<Bucket<string, Generic>>.560561"* (%"Map<string, Generic>.560557"*)*, %"Array<Bucket<string, Generic>>.560561"* (%"Map<string, Generic>.560557"*)** %.44, align 8
  %.46 = tail call %"Array<Bucket<string, Generic>>.560561"* %.45(%"Map<string, Generic>.560557"* %.41)
  %.49 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.50 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.49, align 8
  %.51 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.50, i64 0, i32 16
  %.52 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.51, align 8
  %.55 = load i64, i64* %.32, align 8
  %.58 = load i64, i64* %.35, align 8
  %.60 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.229, i64 0, i64 0), i64 %.55, i64 %.58)
  %.61 = add i64 %.60, 1
  %.63 = tail call i8* @malloc(i64 %.61)
  %.64 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.63, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.229, i64 0, i64 0), i64 %.55, i64 %.58)
  %.65 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.66 = bitcast i8* %.65 to %string.560217*
  %.67 = bitcast i8* %.65 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.67, align 8
  %.69 = getelementptr inbounds i8, i8* %.65, i64 8
  %1 = bitcast i8* %.69 to i8**
  store i8* %.63, i8** %1, align 8
  %.71 = getelementptr inbounds i8, i8* %.65, i64 16
  %2 = bitcast i8* %.71 to i64*
  store i64 %.60, i64* %2, align 8
  %.73 = getelementptr inbounds i8, i8* %.65, i64 24
  %3 = bitcast i8* %.73 to i64*
  store i64 %.60, i64* %3, align 8
  tail call void %.52(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.66, %FloRange.560223* null)
  ret %GenericType.560405* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.78 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.79 = load i64, i64* %.78, align 8
  %.82 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %4 = bitcast %ScopeId.560471** %.82 to i64*
  %.833 = load i64, i64* %4, align 8
  %.86 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.87 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.86, align 8
  %.88 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.87, i64 0, i32 21
  %.89 = load void (%TypeChecker.560555*)*, void (%TypeChecker.560555*)** %.88, align 8
  tail call void %.89(%TypeChecker.560555* nonnull %.1)
  %.93 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.86, align 8
  %.94 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.93, i64 0, i32 15
  %.95 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.94, align 8
  %.96 = tail call %Scope.560473* %.95(%TypeChecker.560555* nonnull %.1)
  %.98 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.98 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.100, align 8
  %.102 = getelementptr inbounds i8, i8* %.98, i64 8
  %5 = bitcast i8* %.102 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %5, align 8
  %.104 = getelementptr inbounds i8, i8* %.98, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.104, i8 0, i64 16, i1 false)
  %.11512 = load i64, i64* %.32, align 8
  %.11613 = icmp sgt i64 %.11512, 0
  %6 = bitcast i8* %.98 to %string.560217*
  br i1 %.11613, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif.endif
  %.132 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.3, i64 0, i32 0
  %.198 = getelementptr inbounds %Scope.560473, %Scope.560473* %.96, i64 0, i32 7
  %.120 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.29219, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %end
  %.19516 = phi %string.560217* [ %6, %for.body.lr.ph ], [ %.195, %end ]
  %storemerge14 = phi i64 [ 0, %for.body.lr.ph ], [ %.217, %end ]
  %.121 = load %"Array<GenericParameterNode>_vtable_ty.560348"*, %"Array<GenericParameterNode>_vtable_ty.560348"** %.120, align 8
  %.122 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.560348", %"Array<GenericParameterNode>_vtable_ty.560348"* %.121, i64 0, i32 5
  %.123 = load %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)*, %GenericParameterNode.560341* (%"Array<GenericParameterNode>.560345"*, i64)** %.122, align 8
  %.124 = tail call %GenericParameterNode.560341* %.123(%"Array<GenericParameterNode>.560345"* nonnull %.29219, i64 %storemerge14)
  %.125 = getelementptr inbounds %GenericParameterNode.560341, %GenericParameterNode.560341* %.124, i64 0, i32 1
  %.126 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.125, align 8
  %.127 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.126, i64 0, i32 3
  %.128920 = load %string.560217*, %string.560217** %.127, align 8
  %.133 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.132, align 8
  %.134 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.133, i64 0, i32 5
  %.135 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.134, align 8
  %.136 = tail call %Type.560381* %.135(%"Array<Type>.560389"* nonnull %.3, i64 %storemerge14)
  %.137 = getelementptr inbounds %Type.560381, %Type.560381* %.136, i64 0, i32 1
  %.138 = load i64, i64* %.137, align 8
  %.139 = icmp eq i64 %.138, 20
  %.144 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.132, align 8
  %.145 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.144, i64 0, i32 5
  %.146 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.145, align 8
  %.147 = tail call %Type.560381* %.146(%"Array<Type>.560389"* nonnull %.3, i64 %storemerge14)
  br i1 %.139, label %true_block, label %end

for.end:                                          ; preds = %end, %.5.endif.endif
  %.221 = phi %string.560217* [ %6, %.5.endif.endif ], [ %.195, %end ]
  %.222 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.223 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.222, align 8
  %.224 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.223, i64 0, i32 11
  %.225 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.224, align 8
  %.226 = tail call i8* %.225(%string.560217* %.2)
  %.227 = getelementptr inbounds %string.560217, %string.560217* %.221, i64 0, i32 0
  %.228 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.227, align 8
  %.229 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.228, i64 0, i32 11
  %.230 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.229, align 8
  %.231 = tail call i8* %.230(%string.560217* %.221)
  %.233 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.226, i8* %.231)
  %.234 = add i64 %.233, 1
  %.236 = tail call i8* @malloc(i64 %.234)
  %.237 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.236, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.226, i8* %.231)
  %.238 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.240 = bitcast i8* %.238 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.240, align 8
  %.242 = getelementptr inbounds i8, i8* %.238, i64 8
  %7 = bitcast i8* %.242 to i8**
  store i8* %.236, i8** %7, align 8
  %.244 = getelementptr inbounds i8, i8* %.238, i64 16
  %8 = bitcast i8* %.244 to i64*
  store i64 %.233, i64* %8, align 8
  %.246 = getelementptr inbounds i8, i8* %.238, i64 24
  %9 = bitcast i8* %.246 to i64*
  store i64 %.233, i64* %9, align 8
  %.251 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.86, align 8
  %.252 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.251, i64 0, i32 14
  %.253 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.252, align 8
  %.254.cast = bitcast i8* %.238 to %string.560217*
  %.255 = tail call %Type.560381* %.253(%TypeChecker.560555* nonnull %.1, %string.560217* %.254.cast)
  %.258 = getelementptr inbounds %Type.560381, %Type.560381* %.255, i64 0, i32 1
  %.259 = load i64, i64* %.258, align 8
  %.260 = icmp eq i64 %.259, 21
  br i1 %.260, label %for.end.if, label %for.end.endif

true_block:                                       ; preds = %for.body
  %.149 = getelementptr inbounds %Type.560381, %Type.560381* %.147, i64 2
  %10 = bitcast %Type.560381* %.149 to %Type.560381**
  %.150 = load %Type.560381*, %Type.560381** %10, align 8
  br label %end

end:                                              ; preds = %for.body, %true_block
  %.160 = phi %Type.560381* [ %.150, %true_block ], [ %.147, %for.body ]
  %.165 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.86, align 8
  %.166 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.165, i64 0, i32 10
  %.167 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.166, align 8
  %.169 = tail call %string.560217* %.167(%TypeChecker.560555* nonnull %.1, %Type.560381* %.160)
  %.170 = getelementptr inbounds %string.560217, %string.560217* %.169, i64 0, i32 0
  %.171 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.170, align 8
  %.172 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.171, i64 0, i32 11
  %.173 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.172, align 8
  %.174 = tail call i8* %.173(%string.560217* %.169)
  %.176 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.230, i64 0, i64 0), i8* %.174)
  %.177 = add i64 %.176, 1
  %.179 = tail call i8* @malloc(i64 %.177)
  %.180 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.179, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.230, i64 0, i64 0), i8* %.174)
  %.181 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.182 = bitcast i8* %.181 to %string.560217*
  %.183 = bitcast i8* %.181 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.183, align 8
  %.185 = getelementptr inbounds i8, i8* %.181, i64 8
  %11 = bitcast i8* %.185 to i8**
  store i8* %.179, i8** %11, align 8
  %.187 = getelementptr inbounds i8, i8* %.181, i64 16
  %12 = bitcast i8* %.187 to i64*
  store i64 %.176, i64* %12, align 8
  %.189 = getelementptr inbounds i8, i8* %.181, i64 24
  %13 = bitcast i8* %.189 to i64*
  store i64 %.176, i64* %13, align 8
  %.191 = getelementptr inbounds %string.560217, %string.560217* %.19516, i64 0, i32 0
  %.192 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.191, align 8
  %.193 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.192, i64 0, i32 0
  %.194 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.193, align 8
  %.195 = tail call %string.560217* %.194(%string.560217* %.19516, %string.560217* %.182)
  %.199 = load %"Map<string, Type>.560478"*, %"Map<string, Type>.560478"** %.198, align 8
  %.200 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.199, i64 0, i32 0
  %.201 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.200, align 8
  %.202 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.201, i64 0, i32 2
  %.203 = load void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)*, void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)** %.202, align 8
  %.208 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.132, align 8
  %.209 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.208, i64 0, i32 5
  %.210 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.209, align 8
  %.211 = tail call %Type.560381* %.210(%"Array<Type>.560389"* nonnull %.3, i64 %storemerge14)
  tail call void %.203(%"Map<string, Type>.560478"* %.199, %string.560217* %.128920, %Type.560381* %.211)
  %.217 = add nuw nsw i64 %storemerge14, 1
  %.115 = load i64, i64* %.32, align 8
  %.116 = icmp slt i64 %.217, %.115
  br i1 %.116, label %for.body, label %for.end

for.end.if:                                       ; preds = %for.end
  %.265 = load %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.26, align 8
  %.266 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.265, i64 0, i32 1
  %.267 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.266, align 8
  %.268 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.267, i64 0, i32 2
  %.269 = load %FloRange.560223*, %FloRange.560223** %.268, align 8
  %.270 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %IdentifierToken.560263*
  %.272 = bitcast i8* %.270 to %IdentifierToken_vtable_ty.560264**
  store %IdentifierToken_vtable_ty.560264* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.560264** %.272, align 8
  tail call void @IdentifierToken_constructor(%IdentifierToken.560263* %.271, %string.560217* %.254.cast, %FloRange.560223* %.269)
  %.277 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.278 = bitcast i8* %.277 to %ClassDeclarationNode.560343*
  %.279 = bitcast i8* %.277 to %ClassDeclarationNode_vtable_ty.560344**
  store %ClassDeclarationNode_vtable_ty.560344* @ClassDeclarationNode_vtable_data, %ClassDeclarationNode_vtable_ty.560344** %.279, align 8
  tail call void @ClassDeclarationNode_constructor(%ClassDeclarationNode.560343* %.278, %IdentifierToken.560263* %.271)
  %.286 = load %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.26, align 8
  %.287 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.286, i64 0, i32 3
  %14 = bitcast %RecordTypeNode.560271** %.287 to i64*
  %.2885 = load i64, i64* %14, align 8
  %.289 = getelementptr inbounds i8, i8* %.277, i64 24
  %15 = bitcast i8* %.289 to i64*
  store i64 %.2885, i64* %15, align 8
  %.294 = load %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.26, align 8
  %.295 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.294, i64 0, i32 4
  %16 = bitcast %"Array<FieldNode>.560346"** %.295 to i64*
  %.2966 = load i64, i64* %16, align 8
  %.297 = getelementptr inbounds i8, i8* %.277, i64 32
  %17 = bitcast i8* %.297 to i64*
  store i64 %.2966, i64* %17, align 8
  %.302 = load %ClassDeclarationNode.560343*, %ClassDeclarationNode.560343** %.26, align 8
  %.303 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.302, i64 0, i32 5
  %18 = bitcast %"Array<MethodNode>.560347"** %.303 to i64*
  %.3047 = load i64, i64* %18, align 8
  %.305 = getelementptr inbounds i8, i8* %.277, i64 40
  %19 = bitcast i8* %.305 to i64*
  store i64 %.3047, i64* %19, align 8
  %.309 = getelementptr inbounds %Scope.560473, %Scope.560473* %.96, i64 0, i32 1
  %20 = bitcast %ScopeId.560471** %.309 to i64*
  %.3108 = load i64, i64* %20, align 8
  store i64 %.3108, i64* %4, align 8
  %.315 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.86, align 8
  %.316 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.315, i64 0, i32 38
  %.317 = load void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)** %.316, align 8
  tail call void %.317(%TypeChecker.560555* nonnull %.1, %ClassDeclarationNode.560343* %.278)
  %.322 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.86, align 8
  %.323 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.322, i64 0, i32 44
  %.324 = load void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %ClassDeclarationNode.560343*)** %.323, align 8
  tail call void %.324(%TypeChecker.560555* nonnull %.1, %ClassDeclarationNode.560343* %.278)
  %.329 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.86, align 8
  %.330 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.329, i64 0, i32 14
  %.331 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.330, align 8
  %.333 = tail call %Type.560381* %.331(%TypeChecker.560555* nonnull %.1, %string.560217* %.254.cast)
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end.if, %for.end
  %.346 = phi %Type.560381* [ %.333, %for.end.if ], [ %.255, %for.end ]
  store i64 %.79, i64* %.78, align 8
  store i64 %.833, i64* %4, align 8
  %.347 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.348 = bitcast i8* %.347 to %GenericType.560405*
  %.349 = bitcast i8* %.347 to %GenericType_vtable_ty.560406**
  store %GenericType_vtable_ty.560406* @GenericType_vtable_data, %GenericType_vtable_ty.560406** %.349, align 8
  tail call void @GenericType_constructor(%GenericType.560405* %.348, %string.560217* nonnull %.2, %"Array<Type>.560389"* nonnull %.3, %Type.560381* %.346)
  ret %GenericType.560405* %.348
}

define %Var.560505* @TypeChecker_declare_var_within_current_scope(%TypeChecker.560555* %.1, %string.560217* %.2, %Expression.560401* %.3, %Type.560381* %.4) {
.6:
  %.13 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %Var.560505*
  %.15 = bitcast i8* %.13 to %Var_vtable_ty.560506**
  store %Var_vtable_ty.560506* @Var_vtable_data, %Var_vtable_ty.560506** %.15, align 8
  tail call void @Var_constructor(%Var.560505* %.14, %Expression.560401* %.3, %Type.560381* %.4)
  %.20 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.21, i64 0, i32 1
  %.23 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.22, align 8
  %.24 = tail call %Module.560531* %.23(%TypeChecker.560555* %.1)
  %.28 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.29 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.28, i64 0, i32 2
  %.30 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.29, align 8
  %.31 = tail call %Scope.560473* %.30(%TypeChecker.560555* %.1)
  %.34 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.35 = load i64, i64* %.34, align 8
  %.37 = getelementptr inbounds %Module.560531, %Module.560531* %.24, i64 0, i32 3
  %.38 = load %"Array<Var>.560533"*, %"Array<Var>.560533"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.38, i64 0, i32 2
  %.40 = load i64, i64* %.39, align 8
  %.41 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %VarId.560441*
  %.43 = bitcast i8* %.41 to %VarId_vtable_ty.560442**
  store %VarId_vtable_ty.560442* @VarId_vtable_data, %VarId_vtable_ty.560442** %.43, align 8
  tail call void @VarId_constructor(%VarId.560441* %.42, i64 1, i64 %.35, i64 %.40)
  %.49 = getelementptr inbounds i8, i8* %.13, i64 16
  %0 = bitcast i8* %.49 to i8**
  store i8* %.41, i8** %0, align 8
  %.53 = load %"Array<Var>.560533"*, %"Array<Var>.560533"** %.37, align 8
  %.55 = getelementptr inbounds %"Array<Var>.560533", %"Array<Var>.560533"* %.53, i64 0, i32 0
  %.56 = load %"Array<Var>_vtable_ty.560541"*, %"Array<Var>_vtable_ty.560541"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Var>_vtable_ty.560541", %"Array<Var>_vtable_ty.560541"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<Var>.560533"*, %Var.560505*)*, void (%"Array<Var>.560533"*, %Var.560505*)** %.57, align 8
  tail call void %.58(%"Array<Var>.560533"* %.53, %Var.560505* %.14)
  %.61 = getelementptr inbounds %Scope.560473, %Scope.560473* %.31, i64 0, i32 2
  %.62 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.61, align 8
  %.63 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.62, i64 0, i32 0
  %.64 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.63, align 8
  %.65 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.64, i64 0, i32 2
  %.66 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.65, align 8
  tail call void %.66(%"Map<string, VarId>.560475"* %.62, %string.560217* %.2, %VarId.560441* %.42)
  ret %Var.560505* %.14
}

define %Const.560507* @TypeChecker_declare_const_within_current_scope(%TypeChecker.560555* %.1, %string.560217* %.2, %Expression.560401* %.3, %Type.560381* %.4) {
.6:
  %.13 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %Const.560507*
  %.15 = bitcast i8* %.13 to %Const_vtable_ty.560508**
  store %Const_vtable_ty.560508* @Const_vtable_data, %Const_vtable_ty.560508** %.15, align 8
  tail call void @Const_constructor(%Const.560507* %.14, %Expression.560401* %.3, %Type.560381* %.4)
  %.20 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.21, i64 0, i32 1
  %.23 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.22, align 8
  %.24 = tail call %Module.560531* %.23(%TypeChecker.560555* %.1)
  %.28 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.29 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.28, i64 0, i32 2
  %.30 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.29, align 8
  %.31 = tail call %Scope.560473* %.30(%TypeChecker.560555* %.1)
  %.34 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.35 = load i64, i64* %.34, align 8
  %.37 = getelementptr inbounds %Module.560531, %Module.560531* %.24, i64 0, i32 4
  %.38 = load %"Array<Const>.560534"*, %"Array<Const>.560534"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.38, i64 0, i32 2
  %.40 = load i64, i64* %.39, align 8
  %.41 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %ConstId.560447*
  %.43 = bitcast i8* %.41 to %ConstId_vtable_ty.560448**
  store %ConstId_vtable_ty.560448* @ConstId_vtable_data, %ConstId_vtable_ty.560448** %.43, align 8
  tail call void @ConstId_constructor(%ConstId.560447* %.42, i64 %.35, i64 %.40)
  %.49 = getelementptr inbounds i8, i8* %.13, i64 16
  %0 = bitcast i8* %.49 to i8**
  store i8* %.41, i8** %0, align 8
  %.53 = load %"Array<Const>.560534"*, %"Array<Const>.560534"** %.37, align 8
  %.55 = getelementptr inbounds %"Array<Const>.560534", %"Array<Const>.560534"* %.53, i64 0, i32 0
  %.56 = load %"Array<Const>_vtable_ty.560542"*, %"Array<Const>_vtable_ty.560542"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Const>_vtable_ty.560542", %"Array<Const>_vtable_ty.560542"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<Const>.560534"*, %Const.560507*)*, void (%"Array<Const>.560534"*, %Const.560507*)** %.57, align 8
  tail call void %.58(%"Array<Const>.560534"* %.53, %Const.560507* %.14)
  %.61 = getelementptr inbounds %Scope.560473, %Scope.560473* %.31, i64 0, i32 2
  %.62 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.61, align 8
  %.63 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.62, i64 0, i32 0
  %.64 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.63, align 8
  %.65 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.64, i64 0, i32 2
  %.66 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.65, align 8
  %.69 = bitcast i8* %.41 to %VarId.560441*
  tail call void %.66(%"Map<string, VarId>.560475"* %.62, %string.560217* %.2, %VarId.560441* %.69)
  ret %Const.560507* %.14
}

define void @TypeChecker_declare_global_const(%TypeChecker.560555* %.1, %ConstDeclarationStatement.560329* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 76
  %.11 = load %ConstDeclaration.560463* (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)*, %ConstDeclaration.560463* (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)** %.10, align 8
  %.13 = tail call %ConstDeclaration.560463* %.11(%TypeChecker.560555* %.1, %ConstDeclarationStatement.560329* %.2)
  %.17 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.18 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.17, i64 0, i32 17
  %.19 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.18, align 8
  %.20 = tail call i1 %.19(%TypeChecker.560555* %.1)
  br i1 %.20, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret void

.4.endif:                                         ; preds = %.4
  %.24 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.13, i64 0, i32 4
  store i1 true, i1* %.24, align 1
  %.28 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.29 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.28, i64 0, i32 1
  %.30 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.29, align 8
  %.31 = tail call %Module.560531* %.30(%TypeChecker.560555* nonnull %.1)
  %.32 = getelementptr inbounds %Module.560531, %Module.560531* %.31, i64 0, i32 9
  %.33 = load %"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"** %.32, align 8
  %.35 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.33, i64 0, i32 0
  %.36 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.35, align 8
  %.37 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.36, i64 0, i32 2
  %.38 = load void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)*, void (%"Array<ConstDeclaration>.560539"*, %ConstDeclaration.560463*)** %.37, align 8
  tail call void %.38(%"Array<ConstDeclaration>.560539"* %.33, %ConstDeclaration.560463* %.13)
  ret void
}

define void @TypeChecker_declare_global_var(%TypeChecker.560555* %.1, %VarDeclarationStatement.560327* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 75
  %.11 = load %VarDeclaration.560461* (%TypeChecker.560555*, %VarDeclarationStatement.560327*)*, %VarDeclaration.560461* (%TypeChecker.560555*, %VarDeclarationStatement.560327*)** %.10, align 8
  %.13 = tail call %VarDeclaration.560461* %.11(%TypeChecker.560555* %.1, %VarDeclarationStatement.560327* %.2)
  %.17 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.18 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.17, i64 0, i32 17
  %.19 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.18, align 8
  %.20 = tail call i1 %.19(%TypeChecker.560555* %.1)
  br i1 %.20, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret void

.4.endif:                                         ; preds = %.4
  %.24 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.25 = load %Program.560549*, %Program.560549** %.24, align 8
  %.27 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.13, i64 0, i32 3
  %.28 = load %VarId.560441*, %VarId.560441** %.27, align 8
  %.29 = tail call %Var.560505* @get_var(%Program.560549* %.25, %VarId.560441* %.28)
  %.30 = getelementptr inbounds %Var.560505, %Var.560505* %.29, i64 0, i32 3
  %.31 = load %Expression.560401*, %Expression.560401** %.30, align 8
  %.32 = getelementptr inbounds %Expression.560401, %Expression.560401* %.31, i64 0, i32 2
  %.33 = load i1, i1* %.32, align 1
  br i1 %.33, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.38 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.38, i64 0, i32 16
  %.40 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.39, align 8
  %.41 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %string.560217*
  %.42.repack = bitcast i8* %.41 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.42.repack, align 8
  %.42.repack1 = getelementptr inbounds i8, i8* %.41, i64 8
  %0 = bitcast i8* %.42.repack1 to i8**
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.232, i64 0, i64 0), i8** %0, align 8
  %.42.repack2 = getelementptr inbounds i8, i8* %.41, i64 16
  %1 = bitcast i8* %.42.repack2 to i64*
  store i64 54, i64* %1, align 8
  %.42.repack3 = getelementptr inbounds i8, i8* %.41, i64 24
  %2 = bitcast i8* %.42.repack3 to i64*
  store i64 54, i64* %2, align 8
  %.45 = getelementptr inbounds %VarDeclarationStatement.560327, %VarDeclarationStatement.560327* %.2, i64 0, i32 5
  %.46 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.45, align 8
  %.47 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.46, i64 0, i32 1
  %.48 = load %FloRange.560223*, %FloRange.560223** %.47, align 8
  tail call void %.40(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.42, %FloRange.560223* %.48)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.52 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.13, i64 0, i32 4
  store i1 true, i1* %.52, align 1
  %.56 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.57 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.56, i64 0, i32 1
  %.58 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.57, align 8
  %.59 = tail call %Module.560531* %.58(%TypeChecker.560555* nonnull %.1)
  %.60 = getelementptr inbounds %Module.560531, %Module.560531* %.59, i64 0, i32 10
  %.61 = load %"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"** %.60, align 8
  %.63 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.61, i64 0, i32 0
  %.64 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.64, i64 0, i32 2
  %.66 = load void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)*, void (%"Array<VarDeclaration>.560540"*, %VarDeclaration.560461*)** %.65, align 8
  tail call void %.66(%"Array<VarDeclaration>.560540"* %.61, %VarDeclaration.560461* nonnull %.13)
  ret void
}

define void @TypeChecker_add_imported_typealias_to_module(%TypeChecker.560555* %.1, %string.560217* %.2, %Type.560381* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 3
  %.13 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.12, align 8
  %.14 = tail call %Scope.560473* %.13(%TypeChecker.560555* %.1)
  %.17 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 7
  %.18 = load %"Map<string, Type>.560478"*, %"Map<string, Type>.560478"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.18, i64 0, i32 0
  %.20 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.19, align 8
  %.21 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.20, i64 0, i32 2
  %.22 = load void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)*, void (%"Map<string, Type>.560478"*, %string.560217*, %Type.560381*)** %.21, align 8
  tail call void %.22(%"Map<string, Type>.560478"* %.18, %string.560217* %.2, %Type.560381* %.3)
  ret void
}

define void @TypeChecker_add_imported_var_to_module(%TypeChecker.560555* %.1, %string.560217* %.2, %VarId.560441* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 3
  %.13 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.12, align 8
  %.14 = tail call %Scope.560473* %.13(%TypeChecker.560555* %.1)
  %.17 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 2
  %.18 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.18, i64 0, i32 0
  %.20 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.19, align 8
  %.21 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.20, i64 0, i32 2
  %.22 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.21, align 8
  tail call void %.22(%"Map<string, VarId>.560475"* %.18, %string.560217* %.2, %VarId.560441* %.3)
  ret void
}

define void @TypeChecker_add_imported_fnc_to_module(%TypeChecker.560555* %.1, %string.560217* %.2, %VarId.560441* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 3
  %.13 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.12, align 8
  %.14 = tail call %Scope.560473* %.13(%TypeChecker.560555* %.1)
  %.17 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 4
  %.18 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.18, i64 0, i32 0
  %.20 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.19, align 8
  %.21 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.20, i64 0, i32 2
  %.22 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.21, align 8
  tail call void %.22(%"Map<string, VarId>.560475"* %.18, %string.560217* %.2, %VarId.560441* %.3)
  ret void
}

define void @TypeChecker_add_imported_class_to_module(%TypeChecker.560555* %.1, %string.560217* %.2, %ClassId.560397* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 3
  %.13 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.12, align 8
  %.14 = tail call %Scope.560473* %.13(%TypeChecker.560555* %.1)
  %.17 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 3
  %.18 = load %"Map<string, ClassId>.560476"*, %"Map<string, ClassId>.560476"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.18, i64 0, i32 0
  %.20 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.19, align 8
  %.21 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.20, i64 0, i32 2
  %.22 = load void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)*, void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)** %.21, align 8
  tail call void %.22(%"Map<string, ClassId>.560476"* %.18, %string.560217* %.2, %ClassId.560397* %.3)
  %.27 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 2
  %.28 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.27, align 8
  %.29 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.28, i64 0, i32 0
  %.30 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.29, align 8
  %.31 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.30, i64 0, i32 2
  %.32 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.31, align 8
  %.35 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.36 = bitcast i8* %.35 to %ClassVarId.560443*
  %.37 = bitcast i8* %.35 to %ClassVarId_vtable_ty.560444**
  store %ClassVarId_vtable_ty.560444* @ClassVarId_vtable_data, %ClassVarId_vtable_ty.560444** %.37, align 8
  tail call void @ClassVarId_constructor(%ClassVarId.560443* %.36, %ClassId.560397* %.3)
  %.40 = bitcast i8* %.35 to %VarId.560441*
  tail call void %.32(%"Map<string, VarId>.560475"* %.28, %string.560217* %.2, %VarId.560441* %.40)
  ret void
}

define void @TypeChecker_add_imported_enum_to_module(%TypeChecker.560555* %.1, %string.560217* %.2, %EnumId.560399* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 3
  %.13 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.12, align 8
  %.14 = tail call %Scope.560473* %.13(%TypeChecker.560555* %.1)
  %.17 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 5
  %.18 = load %"Map<string, EnumId>.560477"*, %"Map<string, EnumId>.560477"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.18, i64 0, i32 0
  %.20 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.19, align 8
  %.21 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.20, i64 0, i32 2
  %.22 = load void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)*, void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)** %.21, align 8
  tail call void %.22(%"Map<string, EnumId>.560477"* %.18, %string.560217* %.2, %EnumId.560399* %.3)
  %.27 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 2
  %.28 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.27, align 8
  %.29 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.28, i64 0, i32 0
  %.30 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.29, align 8
  %.31 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.30, i64 0, i32 2
  %.32 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.31, align 8
  %.35 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.36 = bitcast i8* %.35 to %EnumVarId.560445*
  %.37 = bitcast i8* %.35 to %EnumVarId_vtable_ty.560446**
  store %EnumVarId_vtable_ty.560446* @EnumVarId_vtable_data, %EnumVarId_vtable_ty.560446** %.37, align 8
  tail call void @EnumVarId_constructor(%EnumVarId.560445* %.36, %EnumId.560399* %.3)
  %.40 = bitcast i8* %.35 to %VarId.560441*
  tail call void %.32(%"Map<string, VarId>.560475"* %.28, %string.560217* %.2, %VarId.560441* %.40)
  ret void
}

define noalias %FunctionType.560387* @TypeChecker_init_function_signature(%TypeChecker.560555* %.1, %"Array<ArgNode>.560335"* %.2, %TypeNode.560269* %.3, %"Array<FunctionArg>.560503"* %.4) {
.6:
  %.12 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.14 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Array<Type>.560389"*
  %.16 = bitcast i8* %.14 to %"Array<Type>_vtable_ty.560390"**
  store %"Array<Type>_vtable_ty.560390"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.560390"** %.16, align 8
  %.18 = getelementptr inbounds i8, i8* %.14, i64 8
  %0 = bitcast i8* %.18 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.20 to i64*
  store i64 0, i64* %1, align 8
  %.22 = getelementptr inbounds i8, i8* %.14, i64 24
  %2 = bitcast i8* %.22 to i64*
  store i64 8, i64* %2, align 8
  %.30 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.2, i64 0, i32 2
  %.319 = load i64, i64* %.30, align 8
  %.3210 = icmp sgt i64 %.319, 0
  br i1 %.3210, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.36 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.2, i64 0, i32 0
  %.69 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.185 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.4, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.224, %for.body.endif.endif ]
  %.37 = load %"Array<ArgNode>_vtable_ty.560336"*, %"Array<ArgNode>_vtable_ty.560336"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.560336", %"Array<ArgNode>_vtable_ty.560336"* %.37, i64 0, i32 5
  %.39 = load %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)*, %ArgNode.560331* (%"Array<ArgNode>.560335"*, i64)** %.38, align 8
  %.40 = tail call %ArgNode.560331* %.39(%"Array<ArgNode>.560335"* nonnull %.2, i64 %storemerge11)
  %.42 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.43 = bitcast i8* %.42 to %FunctionArg.560499*
  %.44 = bitcast i8* %.42 to %FunctionArg_vtable_ty.560500**
  store %FunctionArg_vtable_ty.560500* @FunctionArg_vtable_data, %FunctionArg_vtable_ty.560500** %.44, align 8
  tail call void @FunctionArg_constructor(%FunctionArg.560499* %.43)
  %.50 = getelementptr inbounds %ArgNode.560331, %ArgNode.560331* %.40, i64 0, i32 1
  %.51 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.50, align 8
  %.52 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.51, i64 0, i32 3
  %3 = bitcast %string.560217** %.52 to i64*
  %.531 = load i64, i64* %3, align 8
  %.54 = getelementptr inbounds i8, i8* %.42, i64 48
  %4 = bitcast i8* %.54 to i64*
  store i64 %.531, i64* %4, align 8
  %.57 = getelementptr inbounds i8, i8* %.42, i64 56
  %5 = bitcast i8* %.57 to %Expression.560401**
  store %Expression.560401* null, %Expression.560401** %5, align 8
  %.59 = tail call %Type.560381* @Type_unknown()
  %.62 = getelementptr inbounds %ArgNode.560331, %ArgNode.560331* %.40, i64 0, i32 2
  %6 = bitcast %TypeNode.560269** %.62 to i64*
  %.632 = load i64, i64* %6, align 8
  %.64 = trunc i64 %.632 to i32
  %.66.not = icmp eq i32 %.64, 0
  br i1 %.66.not, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif.endif, %.6
  %.228 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.229 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.228, align 8
  %.230 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.229, i64 0, i32 46
  %.231 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.230, align 8
  %.233 = tail call %Type.560381* %.231(%TypeChecker.560555* %.1, %TypeNode.560269* %.3)
  %.237 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.238 = bitcast i8* %.237 to %FunctionType.560387*
  %.239 = bitcast i8* %.237 to %FunctionType_vtable_ty.560388**
  store %FunctionType_vtable_ty.560388* @FunctionType_vtable_data, %FunctionType_vtable_ty.560388** %.239, align 8
  tail call void @FunctionType_constructor(%FunctionType.560387* %.238, %"Array<Type>.560389"* %.15, %Type.560381* %.233)
  ret %FunctionType.560387* %.238

for.body.if:                                      ; preds = %for.body
  %7 = inttoptr i64 %.632 to %TypeNode.560269*
  %.70 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.70, i64 0, i32 46
  %.72 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.71, align 8
  %.76 = tail call %Type.560381* %.72(%TypeChecker.560555* %.1, %TypeNode.560269* %7)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.191414.in = phi %Type.560381* [ %.59, %for.body ], [ %.76, %for.body.if ]
  %.191414 = ptrtoint %Type.560381* %.191414.in to i64
  %.80 = getelementptr inbounds %ArgNode.560331, %ArgNode.560331* %.40, i64 0, i32 3
  %8 = bitcast %ExpressionNode.560285** %.80 to i64*
  %.813 = load i64, i64* %8, align 8
  %.82 = trunc i64 %.813 to i32
  %.84.not = icmp eq i32 %.82, 0
  br i1 %.84.not, label %for.body.endif.endif, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %9 = inttoptr i64 %.813 to %ExpressionNode.560285*
  %.89 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.89, i64 0, i32 72
  %.91 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.90, align 8
  %.96 = tail call %Expression.560401* %.91(%TypeChecker.560555* %.1, %Type.560381* %.191414.in, %ExpressionNode.560285* %9)
  store %Expression.560401* %.96, %Expression.560401** %5, align 8
  %.100 = getelementptr inbounds %Type.560381, %Type.560381* %.191414.in, i64 0, i32 1
  %.101 = load i64, i64* %.100, align 8
  %.102 = icmp eq i64 %.101, 21
  br i1 %.102, label %for.body.endif.if.if, label %for.body.endif.if.else

for.body.endif.endif:                             ; preds = %for.body.endif.if.else.if, %for.body.endif.if.else, %for.body.endif.if.if, %for.body.endif
  %.204 = phi %Type.560381* [ %.191414.in, %for.body.endif.if.else.if ], [ %.191414.in, %for.body.endif.if.else ], [ %15, %for.body.endif.if.if ], [ %.191414.in, %for.body.endif ]
  %.1914 = phi i64 [ %.191414, %for.body.endif.if.else.if ], [ %.191414, %for.body.endif.if.else ], [ %.1087, %for.body.endif.if.if ], [ %.191414, %for.body.endif ]
  %.186 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.185, align 8
  %.187 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.186, i64 0, i32 2
  %.188 = load void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)*, void (%"Array<FunctionArg>.560503"*, %FunctionArg.560499*)** %.187, align 8
  tail call void %.188(%"Array<FunctionArg>.560503"* %.4, %FunctionArg.560499* %.43)
  %.192 = getelementptr inbounds i8, i8* %.42, i64 32
  %10 = bitcast i8* %.192 to i64*
  store i64 %.1914, i64* %10, align 8
  %.196 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.197 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.196, i64 0, i32 24
  %.198 = load %Var.560505* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)*, %Var.560505* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)** %.197, align 8
  %.200 = getelementptr inbounds i8, i8* %.42, i64 48
  %11 = bitcast i8* %.200 to %string.560217**
  %.201 = load %string.560217*, %string.560217** %11, align 8
  %.2025.cast = bitcast i8* %.42 to %Expression.560401*
  %.205 = tail call %Var.560505* %.198(%TypeChecker.560555* %.1, %string.560217* %.201, %Expression.560401* %.2025.cast, %Type.560381* %.204)
  %.209 = getelementptr inbounds %Var.560505, %Var.560505* %.205, i64 0, i32 2
  %12 = bitcast %VarId.560441** %.209 to i64*
  %.2106 = load i64, i64* %12, align 8
  %.211 = getelementptr inbounds i8, i8* %.42, i64 40
  %13 = bitcast i8* %.211 to i64*
  store i64 %.2106, i64* %13, align 8
  %.216 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.16, align 8
  %.217 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.216, i64 0, i32 2
  %.218 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.217, align 8
  tail call void %.218(%"Array<Type>.560389"* %.15, %Type.560381* %.204)
  %.224 = add nuw nsw i64 %storemerge11, 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.224, %.31
  br i1 %.32, label %for.body, label %for.end

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.107 = getelementptr inbounds %Expression.560401, %Expression.560401* %.96, i64 0, i32 4
  %14 = bitcast %Type.560381** %.107 to i64*
  %.1087 = load i64, i64* %14, align 8
  %15 = inttoptr i64 %.1087 to %Type.560381*
  br label %for.body.endif.endif

for.body.endif.if.else:                           ; preds = %for.body.endif.if
  %.113 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.114 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.113, i64 0, i32 9
  %.115 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.114, align 8
  %.120 = getelementptr inbounds %Expression.560401, %Expression.560401* %.96, i64 0, i32 4
  %.121 = load %Type.560381*, %Type.560381** %.120, align 8
  %.122 = tail call i1 %.115(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.191414.in, %Type.560381* %.121)
  br i1 %.122, label %for.body.endif.endif, label %for.body.endif.if.else.if

for.body.endif.if.else.if:                        ; preds = %for.body.endif.if.else
  %.127 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.128 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.127, i64 0, i32 16
  %.129 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.128, align 8
  %.133 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.127, i64 0, i32 10
  %.134 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.133, align 8
  %.136 = tail call %string.560217* %.134(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.191414.in)
  %.139 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.140 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.139, i64 0, i32 10
  %.141 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.140, align 8
  %.144 = load %Expression.560401*, %Expression.560401** %5, align 8
  %.145 = getelementptr inbounds %Expression.560401, %Expression.560401* %.144, i64 0, i32 4
  %.146 = load %Type.560381*, %Type.560381** %.145, align 8
  %.147 = tail call %string.560217* %.141(%TypeChecker.560555* nonnull %.1, %Type.560381* %.146)
  %.148 = getelementptr inbounds %string.560217, %string.560217* %.136, i64 0, i32 0
  %.149 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.148, align 8
  %.150 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.149, i64 0, i32 11
  %.151 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.150, align 8
  %.152 = tail call i8* %.151(%string.560217* %.136)
  %.153 = getelementptr inbounds %string.560217, %string.560217* %.147, i64 0, i32 0
  %.154 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.153, align 8
  %.155 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.154, i64 0, i32 11
  %.156 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.155, align 8
  %.157 = tail call i8* %.156(%string.560217* %.147)
  %.159 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.233, i64 0, i64 0), i8* %.152, i8* %.157)
  %.160 = add i64 %.159, 1
  %.162 = tail call i8* @malloc(i64 %.160)
  %.163 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.162, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.233, i64 0, i64 0), i8* %.152, i8* %.157)
  %.164 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.165 = bitcast i8* %.164 to %string.560217*
  %.166 = bitcast i8* %.164 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.166, align 8
  %.168 = getelementptr inbounds i8, i8* %.164, i64 8
  %16 = bitcast i8* %.168 to i8**
  store i8* %.162, i8** %16, align 8
  %.170 = getelementptr inbounds i8, i8* %.164, i64 16
  %17 = bitcast i8* %.170 to i64*
  store i64 %.159, i64* %17, align 8
  %.172 = getelementptr inbounds i8, i8* %.164, i64 24
  %18 = bitcast i8* %.172 to i64*
  store i64 %.159, i64* %18, align 8
  %.176 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.80, align 8
  %.177 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.176, i64 0, i32 1
  %.178 = load %FloRange.560223*, %FloRange.560223** %.177, align 8
  tail call void %.129(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.165, %FloRange.560223* %.178)
  br label %for.body.endif.endif
}

define void @TypeChecker_import_all_from_module(%TypeChecker.560555* %.1, %Module.560531* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Module.560531, %Module.560531* %.2, i64 0, i32 8
  %.9 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.9, i64 0, i32 0
  %.11 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.11, i64 0, i32 5
  %.13 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.12, align 8
  %.14 = tail call %Scope.560473* %.13(%"Array<Scope>.560538"* %.9, i64 0)
  %.21 = getelementptr inbounds %Module.560531, %Module.560531* %.2, i64 0, i32 10
  %.2245 = load %"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"** %.21, align 8
  %.2346 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.2245, i64 0, i32 2
  %.2447 = load i64, i64* %.2346, align 8
  %.2548 = icmp sgt i64 %.2447, 0
  br i1 %.2548, label %for.body.lr.ph, label %for.cond.1.preheader

for.body.lr.ph:                                   ; preds = %.4
  %.38 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body

for.cond.1.preheader:                             ; preds = %for.body, %.4
  %.61 = getelementptr inbounds %Module.560531, %Module.560531* %.2, i64 0, i32 9
  %.6239 = load %"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"** %.61, align 8
  %.6340 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.6239, i64 0, i32 2
  %.6441 = load i64, i64* %.6340, align 8
  %.6542 = icmp sgt i64 %.6441, 0
  br i1 %.6542, label %for.body.1.lr.ph, label %for.cond.2.preheader

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body.1

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.2250 = phi %"Array<VarDeclaration>.560540"* [ %.2245, %for.body.lr.ph ], [ %.22, %for.body ]
  %storemerge49 = phi i64 [ 0, %for.body.lr.ph ], [ %.53, %for.body ]
  %.31 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.2250, i64 0, i32 0
  %.32 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.32, i64 0, i32 5
  %.34 = load %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)*, %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)** %.33, align 8
  %.35 = tail call %VarDeclaration.560461* %.34(%"Array<VarDeclaration>.560540"* %.2250, i64 %storemerge49)
  %.39 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.40 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.39, i64 0, i32 29
  %.41 = load void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)** %.40, align 8
  %.43 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.35, i64 0, i32 2
  %.44 = load %string.560217*, %string.560217** %.43, align 8
  %.46 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.35, i64 0, i32 3
  %.47 = load %VarId.560441*, %VarId.560441** %.46, align 8
  tail call void %.41(%TypeChecker.560555* %.1, %string.560217* %.44, %VarId.560441* %.47)
  %.53 = add nuw nsw i64 %storemerge49, 1
  %.22 = load %"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.22, i64 0, i32 2
  %.24 = load i64, i64* %.23, align 8
  %.25 = icmp slt i64 %.53, %.24
  br i1 %.25, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.102 = getelementptr inbounds %Module.560531, %Module.560531* %.2, i64 0, i32 6
  %.10333 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.102, align 8
  %.10434 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.10333, i64 0, i32 2
  %.10535 = load i64, i64* %.10434, align 8
  %.10636 = icmp sgt i64 %.10535, 0
  br i1 %.10636, label %for.body.2.lr.ph, label %for.cond.3.preheader

for.body.2.lr.ph:                                 ; preds = %for.cond.2.preheader
  %.119 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body.2

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.6244 = phi %"Array<ConstDeclaration>.560539"* [ %.6239, %for.body.1.lr.ph ], [ %.62, %for.body.1 ]
  %storemerge143 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.94, %for.body.1 ]
  %.71 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.6244, i64 0, i32 0
  %.72 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.71, align 8
  %.73 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.72, i64 0, i32 5
  %.74 = load %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)*, %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)** %.73, align 8
  %.75 = tail call %ConstDeclaration.560463* %.74(%"Array<ConstDeclaration>.560539"* %.6244, i64 %storemerge143)
  %.79 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.78, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.79, i64 0, i32 29
  %.81 = load void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)** %.80, align 8
  %.83 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.75, i64 0, i32 2
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.86 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.75, i64 0, i32 3
  %0 = bitcast %ConstId.560447** %.86 to %VarId.560441**
  %.876 = load %VarId.560441*, %VarId.560441** %0, align 8
  tail call void %.81(%TypeChecker.560555* %.1, %string.560217* %.84, %VarId.560441* %.876)
  %.94 = add nuw nsw i64 %storemerge143, 1
  %.62 = load %"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"** %.61, align 8
  %.63 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.62, i64 0, i32 2
  %.64 = load i64, i64* %.63, align 8
  %.65 = icmp slt i64 %.94, %.64
  br i1 %.65, label %for.body.1, label %for.cond.2.preheader

for.cond.3.preheader:                             ; preds = %for.body.2, %for.cond.2.preheader
  %.142 = getelementptr inbounds %Module.560531, %Module.560531* %.2, i64 0, i32 5
  %.14327 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.142, align 8
  %.14428 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.14327, i64 0, i32 2
  %.14529 = load i64, i64* %.14428, align 8
  %.14630 = icmp sgt i64 %.14529, 0
  br i1 %.14630, label %for.body.3.lr.ph, label %for.cond.4.preheader

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.159 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body.3

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %.10338 = phi %"Array<Function>.560536"* [ %.10333, %for.body.2.lr.ph ], [ %.103, %for.body.2 ]
  %storemerge237 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.134, %for.body.2 ]
  %.112 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.10338, i64 0, i32 0
  %.113 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.112, align 8
  %.114 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.113, i64 0, i32 5
  %.115 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.114, align 8
  %.116 = tail call %Function.560501* %.115(%"Array<Function>.560536"* %.10338, i64 %storemerge237)
  %.120 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.119, align 8
  %.121 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.120, i64 0, i32 30
  %.122 = load void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)** %.121, align 8
  %.124 = getelementptr inbounds %Function.560501, %Function.560501* %.116, i64 0, i32 2
  %.125 = load %string.560217*, %string.560217** %.124, align 8
  %.127 = getelementptr inbounds %Function.560501, %Function.560501* %.116, i64 0, i32 1
  %.128 = load %VarId.560441*, %VarId.560441** %.127, align 8
  tail call void %.122(%TypeChecker.560555* %.1, %string.560217* %.125, %VarId.560441* %.128)
  %.134 = add nuw nsw i64 %storemerge237, 1
  %.103 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.102, align 8
  %.104 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.103, i64 0, i32 2
  %.105 = load i64, i64* %.104, align 8
  %.106 = icmp slt i64 %.134, %.105
  br i1 %.106, label %for.body.2, label %for.cond.3.preheader

for.cond.4.preheader:                             ; preds = %for.body.3, %for.cond.3.preheader
  %.182 = getelementptr inbounds %Module.560531, %Module.560531* %.2, i64 0, i32 7
  %.18321 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.182, align 8
  %.18422 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.18321, i64 0, i32 2
  %.18523 = load i64, i64* %.18422, align 8
  %.18624 = icmp sgt i64 %.18523, 0
  br i1 %.18624, label %for.body.4.lr.ph, label %for.end.4

for.body.4.lr.ph:                                 ; preds = %for.cond.4.preheader
  %.199 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body.4

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3
  %.14332 = phi %"Array<Class>.560535"* [ %.14327, %for.body.3.lr.ph ], [ %.143, %for.body.3 ]
  %storemerge331 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.174, %for.body.3 ]
  %.152 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.14332, i64 0, i32 0
  %.153 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.152, align 8
  %.154 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.153, i64 0, i32 5
  %.155 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.154, align 8
  %.156 = tail call %Class.560513* %.155(%"Array<Class>.560535"* %.14332, i64 %storemerge331)
  %.160 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.159, align 8
  %.161 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.160, i64 0, i32 31
  %.162 = load void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)*, void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)** %.161, align 8
  %.164 = getelementptr inbounds %Class.560513, %Class.560513* %.156, i64 0, i32 2
  %.165 = load %string.560217*, %string.560217** %.164, align 8
  %.167 = getelementptr inbounds %Class.560513, %Class.560513* %.156, i64 0, i32 1
  %.168 = load %ClassId.560397*, %ClassId.560397** %.167, align 8
  tail call void %.162(%TypeChecker.560555* %.1, %string.560217* %.165, %ClassId.560397* %.168)
  %.174 = add nuw nsw i64 %storemerge331, 1
  %.143 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.142, align 8
  %.144 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.143, i64 0, i32 2
  %.145 = load i64, i64* %.144, align 8
  %.146 = icmp slt i64 %.174, %.145
  br i1 %.146, label %for.body.3, label %for.cond.4.preheader

for.body.4:                                       ; preds = %for.body.4.lr.ph, %for.body.4
  %.18326 = phi %"Array<Enum>.560537"* [ %.18321, %for.body.4.lr.ph ], [ %.183, %for.body.4 ]
  %storemerge425 = phi i64 [ 0, %for.body.4.lr.ph ], [ %.214, %for.body.4 ]
  %.192 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.18326, i64 0, i32 0
  %.193 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.192, align 8
  %.194 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.193, i64 0, i32 5
  %.195 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.194, align 8
  %.196 = tail call %Enum.560527* %.195(%"Array<Enum>.560537"* %.18326, i64 %storemerge425)
  %.200 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.199, align 8
  %.201 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.200, i64 0, i32 32
  %.202 = load void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)*, void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)** %.201, align 8
  %.204 = getelementptr inbounds %Enum.560527, %Enum.560527* %.196, i64 0, i32 2
  %.205 = load %string.560217*, %string.560217** %.204, align 8
  %.207 = getelementptr inbounds %Enum.560527, %Enum.560527* %.196, i64 0, i32 1
  %.208 = load %EnumId.560399*, %EnumId.560399** %.207, align 8
  tail call void %.202(%TypeChecker.560555* %.1, %string.560217* %.205, %EnumId.560399* %.208)
  %.214 = add nuw nsw i64 %storemerge425, 1
  %.183 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.182, align 8
  %.184 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.183, i64 0, i32 2
  %.185 = load i64, i64* %.184, align 8
  %.186 = icmp slt i64 %.214, %.185
  br i1 %.186, label %for.body.4, label %for.end.4

for.end.4:                                        ; preds = %for.body.4, %for.cond.4.preheader
  %.218 = getelementptr inbounds %Scope.560473, %Scope.560473* %.14, i64 0, i32 7
  %.219 = load %"Map<string, Type>.560478"*, %"Map<string, Type>.560478"** %.218, align 8
  %.220 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.219, i64 0, i32 0
  %.221 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.220, align 8
  %.222 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.221, i64 0, i32 4
  %.223 = load %"Array<Bucket<string, Type>>.560497"* (%"Map<string, Type>.560478"*)*, %"Array<Bucket<string, Type>>.560497"* (%"Map<string, Type>.560478"*)** %.222, align 8
  %.224 = tail call %"Array<Bucket<string, Type>>.560497"* %.223(%"Map<string, Type>.560478"* %.219)
  %.231 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.224, i64 0, i32 2
  %.23218 = load i64, i64* %.231, align 8
  %.23319 = icmp sgt i64 %.23218, 0
  br i1 %.23319, label %for.body.5.lr.ph, label %for.end.5

for.body.5.lr.ph:                                 ; preds = %for.end.4
  %.237 = getelementptr inbounds %"Array<Bucket<string, Type>>.560497", %"Array<Bucket<string, Type>>.560497"* %.224, i64 0, i32 0
  %.244 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body.5

for.body.5:                                       ; preds = %for.body.5.lr.ph, %for.body.5
  %storemerge520 = phi i64 [ 0, %for.body.5.lr.ph ], [ %.259, %for.body.5 ]
  %.238 = load %"Array<Bucket<string, Type>>_vtable_ty.560498"*, %"Array<Bucket<string, Type>>_vtable_ty.560498"** %.237, align 8
  %.239 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.560498", %"Array<Bucket<string, Type>>_vtable_ty.560498"* %.238, i64 0, i32 5
  %.240 = load %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)*, %"Bucket<string, Type>.560495"* (%"Array<Bucket<string, Type>>.560497"*, i64)** %.239, align 8
  %.241 = tail call %"Bucket<string, Type>.560495"* %.240(%"Array<Bucket<string, Type>>.560497"* nonnull %.224, i64 %storemerge520)
  %.245 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.244, align 8
  %.246 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.245, i64 0, i32 28
  %.247 = load void (%TypeChecker.560555*, %string.560217*, %Type.560381*)*, void (%TypeChecker.560555*, %string.560217*, %Type.560381*)** %.246, align 8
  %.249 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.241, i64 0, i32 1
  %.250 = load %string.560217*, %string.560217** %.249, align 8
  %.252 = getelementptr inbounds %"Bucket<string, Type>.560495", %"Bucket<string, Type>.560495"* %.241, i64 0, i32 2
  %.253 = load %Type.560381*, %Type.560381** %.252, align 8
  tail call void %.247(%TypeChecker.560555* %.1, %string.560217* %.250, %Type.560381* %.253)
  %.259 = add nuw nsw i64 %storemerge520, 1
  %.232 = load i64, i64* %.231, align 8
  %.233 = icmp slt i64 %.259, %.232
  br i1 %.233, label %for.body.5, label %for.end.5

for.end.5:                                        ; preds = %for.body.5, %for.end.4
  ret void
}

define void @TypeChecker_check_module_import(%TypeChecker.560555* %.1, %ImportNode.560357* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ImportNode.560357, %ImportNode.560357* %.2, i64 0, i32 2
  %.9 = load %StrToken.560255*, %StrToken.560255** %.8, align 8
  %.10 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.9, i64 0, i32 5
  %.11 = load %"Array<Array<Token>>.560258"*, %"Array<Array<Token>>.560258"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Array<Token>>.560258", %"Array<Array<Token>>.560258"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp sgt i64 %.13, 0
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.17 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.18 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.17, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.18, i64 0, i32 16
  %.20 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.19, align 8
  %.21 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %string.560217*
  %.22.repack = bitcast i8* %.21 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.22.repack, align 8
  %.22.repack4 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.22.repack4 to i8**
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.234, i64 0, i64 0), i8** %0, align 8
  %.22.repack5 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.22.repack5 to i64*
  store i64 51, i64* %1, align 8
  %.22.repack6 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.22.repack6 to i64*
  store i64 51, i64* %2, align 8
  %.27 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.9, i64 0, i32 2
  %.28 = load %FloRange.560223*, %FloRange.560223** %.27, align 8
  tail call void %.20(%TypeChecker.560555* %.1, i64 4, %string.560217* %.22, %FloRange.560223* %.28)
  ret void

.4.endif:                                         ; preds = %.4
  %.34 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.9, i64 0, i32 3
  %.35117 = load %string.560217*, %string.560217** %.34, align 8
  %.38 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.39 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.40 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.39, i64 0, i32 36
  %.41 = load %Module.560531* (%TypeChecker.560555*, %string.560217*, %FloRange.560223*)*, %Module.560531* (%TypeChecker.560555*, %string.560217*, %FloRange.560223*)** %.40, align 8
  %.46 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.9, i64 0, i32 2
  %.47 = load %FloRange.560223*, %FloRange.560223** %.46, align 8
  %.48 = tail call %Module.560531* %.41(%TypeChecker.560555* %.1, %string.560217* %.35117, %FloRange.560223* %.47)
  %.52 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.52, i64 0, i32 17
  %.54 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.53, align 8
  %.55 = tail call i1 %.54(%TypeChecker.560555* %.1)
  br i1 %.55, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %for.incr, %.4.endif.endif.else, %.4.endif
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.59 = getelementptr inbounds %Module.560531, %Module.560531* %.48, i64 0, i32 8
  %.60 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.59, align 8
  %.61 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.60, i64 0, i32 0
  %.62 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.61, align 8
  %.63 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.62, i64 0, i32 5
  %.64 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.63, align 8
  %.65 = tail call %Scope.560473* %.64(%"Array<Scope>.560538"* %.60, i64 0)
  %.68 = getelementptr inbounds %ImportNode.560357, %ImportNode.560357* %.2, i64 0, i32 1
  %.69 = load %"Array<IdentifierToken>.560359"*, %"Array<IdentifierToken>.560359"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.69, i64 0, i32 2
  %.71 = load i64, i64* %.70, align 8
  %.72 = icmp sgt i64 %.71, 0
  br i1 %.72, label %for.body.lr.ph, label %.4.endif.endif.else

for.body.lr.ph:                                   ; preds = %.4.endif.endif
  %.100 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 10
  %.114 = getelementptr inbounds %Scope.560473, %Scope.560473* %.65, i64 0, i32 3
  %.138 = getelementptr inbounds %Scope.560473, %Scope.560473* %.65, i64 0, i32 5
  %.162 = getelementptr inbounds %Scope.560473, %Scope.560473* %.65, i64 0, i32 2
  %.186 = getelementptr inbounds %Scope.560473, %Scope.560473* %.65, i64 0, i32 4
  %.210 = getelementptr inbounds %Scope.560473, %Scope.560473* %.65, i64 0, i32 7
  br label %for.body

.4.endif.endif.else:                              ; preds = %.4.endif.endif
  %.289 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.290 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.289, i64 0, i32 34
  %.291 = load void (%TypeChecker.560555*, %Module.560531*)*, void (%TypeChecker.560555*, %Module.560531*)** %.290, align 8
  tail call void %.291(%TypeChecker.560555* nonnull %.1, %Module.560531* nonnull %.48)
  br label %.4.endif.if

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %.8014 = phi %"Array<IdentifierToken>.560359"* [ %.69, %for.body.lr.ph ], [ %.80, %for.incr ]
  %storemerge12 = phi i64 [ 0, %for.body.lr.ph ], [ %.283, %for.incr ]
  %.89 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.8014, i64 0, i32 0
  %.90 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.89, align 8
  %.91 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.90, i64 0, i32 5
  %.92 = load %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)*, %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)** %.91, align 8
  %.93 = tail call %IdentifierToken.560263* %.92(%"Array<IdentifierToken>.560359"* %.8014, i64 %storemerge12)
  %.94 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.93, i64 0, i32 3
  %.95218 = load %string.560217*, %string.560217** %.94, align 8
  %.101 = load %"Map<string, Generic>.560557"*, %"Map<string, Generic>.560557"** %.100, align 8
  %.102 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.101, i64 0, i32 0
  %.103 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.102, align 8
  %.104 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.103, i64 0, i32 3
  %.105 = load %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)*, %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)** %.104, align 8
  %.107 = tail call %Generic.560553* %.105(%"Map<string, Generic>.560557"* %.101, %string.560217* %.95218)
  %3 = ptrtoint %Generic.560553* %.107 to i64
  %.108 = trunc i64 %3 to i32
  %.110.not = icmp eq i32 %.108, 0
  br i1 %.110.not, label %for.body.endif, label %for.incr

for.incr:                                         ; preds = %for.body, %for.body.endif.endif.endif.endif.endif.if, %for.body.endif.endif.endif.endif.if, %for.body.endif.endif.endif.if, %for.body.endif.endif.if, %for.body.endif.if
  %.283 = add nuw nsw i64 %storemerge12, 1
  %.80 = load %"Array<IdentifierToken>.560359"*, %"Array<IdentifierToken>.560359"** %.68, align 8
  %.81 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.80, i64 0, i32 2
  %.82 = load i64, i64* %.81, align 8
  %.83 = icmp slt i64 %.283, %.82
  br i1 %.83, label %for.body, label %.4.endif.if

for.body.endif:                                   ; preds = %for.body
  %.115 = load %"Map<string, ClassId>.560476"*, %"Map<string, ClassId>.560476"** %.114, align 8
  %.116 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.115, i64 0, i32 0
  %.117 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.116, align 8
  %.118 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.117, i64 0, i32 3
  %.119 = load %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)*, %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)** %.118, align 8
  %.121 = tail call %ClassId.560397* %.119(%"Map<string, ClassId>.560476"* %.115, %string.560217* %.95218)
  %4 = ptrtoint %ClassId.560397* %.121 to i64
  %.124 = trunc i64 %4 to i32
  %.126.not = icmp eq i32 %.124, 0
  br i1 %.126.not, label %for.body.endif.endif, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %.130 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 31
  %.132 = load void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)*, void (%TypeChecker.560555*, %string.560217*, %ClassId.560397*)** %.131, align 8
  tail call void %.132(%TypeChecker.560555* nonnull %.1, %string.560217* %.95218, %ClassId.560397* %.121)
  br label %for.incr

for.body.endif.endif:                             ; preds = %for.body.endif
  %.139 = load %"Map<string, EnumId>.560477"*, %"Map<string, EnumId>.560477"** %.138, align 8
  %.140 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.139, i64 0, i32 0
  %.141 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.140, align 8
  %.142 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.141, i64 0, i32 3
  %.143 = load %EnumId.560399* (%"Map<string, EnumId>.560477"*, %string.560217*)*, %EnumId.560399* (%"Map<string, EnumId>.560477"*, %string.560217*)** %.142, align 8
  %.145 = tail call %EnumId.560399* %.143(%"Map<string, EnumId>.560477"* %.139, %string.560217* %.95218)
  %5 = ptrtoint %EnumId.560399* %.145 to i64
  %.148 = trunc i64 %5 to i32
  %.150.not = icmp eq i32 %.148, 0
  br i1 %.150.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.154 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.155 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.154, i64 0, i32 32
  %.156 = load void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)*, void (%TypeChecker.560555*, %string.560217*, %EnumId.560399*)** %.155, align 8
  tail call void %.156(%TypeChecker.560555* nonnull %.1, %string.560217* %.95218, %EnumId.560399* %.145)
  br label %for.incr

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif
  %.163 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.162, align 8
  %.164 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.163, i64 0, i32 0
  %.165 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.164, align 8
  %.166 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.165, i64 0, i32 3
  %.167 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.166, align 8
  %.169 = tail call %VarId.560441* %.167(%"Map<string, VarId>.560475"* %.163, %string.560217* %.95218)
  %6 = ptrtoint %VarId.560441* %.169 to i64
  %.172 = trunc i64 %6 to i32
  %.174.not = icmp eq i32 %.172, 0
  br i1 %.174.not, label %for.body.endif.endif.endif.endif, label %for.body.endif.endif.endif.if

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif.endif.endif
  %.178 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.179 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.178, i64 0, i32 29
  %.180 = load void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)** %.179, align 8
  tail call void %.180(%TypeChecker.560555* nonnull %.1, %string.560217* %.95218, %VarId.560441* %.169)
  br label %for.incr

for.body.endif.endif.endif.endif:                 ; preds = %for.body.endif.endif.endif
  %.187 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.186, align 8
  %.188 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.187, i64 0, i32 0
  %.189 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.188, align 8
  %.190 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.189, i64 0, i32 3
  %.191 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.190, align 8
  %.193 = tail call %VarId.560441* %.191(%"Map<string, VarId>.560475"* %.187, %string.560217* %.95218)
  %7 = ptrtoint %VarId.560441* %.193 to i64
  %.196 = trunc i64 %7 to i32
  %.198.not = icmp eq i32 %.196, 0
  br i1 %.198.not, label %for.body.endif.endif.endif.endif.endif, label %for.body.endif.endif.endif.endif.if

for.body.endif.endif.endif.endif.if:              ; preds = %for.body.endif.endif.endif.endif
  %.202 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  %.203 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.202, i64 0, i32 30
  %.204 = load void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)*, void (%TypeChecker.560555*, %string.560217*, %VarId.560441*)** %.203, align 8
  tail call void %.204(%TypeChecker.560555* nonnull %.1, %string.560217* %.95218, %VarId.560441* %.193)
  br label %for.incr

for.body.endif.endif.endif.endif.endif:           ; preds = %for.body.endif.endif.endif.endif
  %.211 = load %"Map<string, Type>.560478"*, %"Map<string, Type>.560478"** %.210, align 8
  %.212 = getelementptr inbounds %"Map<string, Type>.560478", %"Map<string, Type>.560478"* %.211, i64 0, i32 0
  %.213 = load %"Map<string, Type>_vtable_ty.560494"*, %"Map<string, Type>_vtable_ty.560494"** %.212, align 8
  %.214 = getelementptr inbounds %"Map<string, Type>_vtable_ty.560494", %"Map<string, Type>_vtable_ty.560494"* %.213, i64 0, i32 3
  %.215 = load %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)*, %Type.560381* (%"Map<string, Type>.560478"*, %string.560217*)** %.214, align 8
  %.217 = tail call %Type.560381* %.215(%"Map<string, Type>.560478"* %.211, %string.560217* %.95218)
  %8 = ptrtoint %Type.560381* %.217 to i64
  %.220 = trunc i64 %8 to i32
  %.222.not = icmp eq i32 %.220, 0
  %.235 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.38, align 8
  br i1 %.222.not, label %for.body.endif.endif.endif.endif.endif.else, label %for.body.endif.endif.endif.endif.endif.if

for.body.endif.endif.endif.endif.endif.if:        ; preds = %for.body.endif.endif.endif.endif.endif
  %.227 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.235, i64 0, i32 28
  %.228 = load void (%TypeChecker.560555*, %string.560217*, %Type.560381*)*, void (%TypeChecker.560555*, %string.560217*, %Type.560381*)** %.227, align 8
  tail call void %.228(%TypeChecker.560555* nonnull %.1, %string.560217* %.95218, %Type.560381* %.217)
  br label %for.incr

for.body.endif.endif.endif.endif.endif.else:      ; preds = %for.body.endif.endif.endif.endif.endif
  %.236 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.235, i64 0, i32 16
  %.237 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.236, align 8
  %.240 = getelementptr inbounds %string.560217, %string.560217* %.95218, i64 0, i32 0
  %.241 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.240, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.241, i64 0, i32 11
  %.243 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.242, align 8
  %.244 = tail call i8* %.243(%string.560217* %.95218)
  %.245 = getelementptr inbounds %string.560217, %string.560217* %.35117, i64 0, i32 0
  %.246 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.245, align 8
  %.247 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.246, i64 0, i32 11
  %.248 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.247, align 8
  %.249 = tail call i8* %.248(%string.560217* %.35117)
  %.251 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.235, i64 0, i64 0), i8* %.244, i8* %.249)
  %.252 = add i64 %.251, 1
  %.254 = tail call i8* @malloc(i64 %.252)
  %.255 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.254, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.235, i64 0, i64 0), i8* %.244, i8* %.249)
  %.256 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.257 = bitcast i8* %.256 to %string.560217*
  %.258 = bitcast i8* %.256 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.258, align 8
  %.260 = getelementptr inbounds i8, i8* %.256, i64 8
  %9 = bitcast i8* %.260 to i8**
  store i8* %.254, i8** %9, align 8
  %.262 = getelementptr inbounds i8, i8* %.256, i64 16
  %10 = bitcast i8* %.262 to i64*
  store i64 %.251, i64* %10, align 8
  %.264 = getelementptr inbounds i8, i8* %.256, i64 24
  %11 = bitcast i8* %.264 to i64*
  store i64 %.251, i64* %11, align 8
  %.269 = load %"Array<IdentifierToken>.560359"*, %"Array<IdentifierToken>.560359"** %.68, align 8
  %.270 = getelementptr inbounds %"Array<IdentifierToken>.560359", %"Array<IdentifierToken>.560359"* %.269, i64 0, i32 0
  %.271 = load %"Array<IdentifierToken>_vtable_ty.560360"*, %"Array<IdentifierToken>_vtable_ty.560360"** %.270, align 8
  %.272 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.560360", %"Array<IdentifierToken>_vtable_ty.560360"* %.271, i64 0, i32 5
  %.273 = load %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)*, %IdentifierToken.560263* (%"Array<IdentifierToken>.560359"*, i64)** %.272, align 8
  %.274 = tail call %IdentifierToken.560263* %.273(%"Array<IdentifierToken>.560359"* %.269, i64 %storemerge12)
  %.275 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.274, i64 0, i32 2
  %.276 = load %FloRange.560223*, %FloRange.560223** %.275, align 8
  tail call void %.237(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.257, %FloRange.560223* %.276)
  ret void
}

define %Module.560531* @TypeChecker_lex_and_parse_typecheck_file(%TypeChecker.560555* %.1, %string.560217* %.2, %FloRange.560223* %.3) {
.5:
  %.12 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 7
  %.13 = load %Compiler.560235*, %Compiler.560235** %.12, align 8
  %.14 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.13, i64 0, i32 1
  %.15 = load %FileId.560231*, %FileId.560231** %.14, align 8
  %0 = ptrtoint %FloRange.560223* %.3 to i64
  %.18 = trunc i64 %0 to i32
  %.20 = icmp ne i32 %.18, 0
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 13
  %.25 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.24, align 8
  %.26 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.560217*
  %.27.repack = bitcast i8* %.26 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.27.repack, align 8
  %.27.repack1 = getelementptr inbounds i8, i8* %.26, i64 8
  %1 = bitcast i8* %.27.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.236, i64 0, i64 0), i8** %1, align 8
  %.27.repack2 = getelementptr inbounds i8, i8* %.26, i64 16
  %2 = bitcast i8* %.27.repack2 to i64*
  store i64 1, i64* %2, align 8
  %.27.repack3 = getelementptr inbounds i8, i8* %.26, i64 24
  %3 = bitcast i8* %.27.repack3 to i64*
  store i64 1, i64* %3, align 8
  %.29 = tail call i1 %.25(%string.560217* %.2, %string.560217* %.27)
  %.30 = xor i1 %.29, true
  %.31 = and i1 %.20, %.30
  br i1 %.31, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.34 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.35 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.34, align 8
  %.36 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.35, i64 0, i32 1
  %.37 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.36, align 8
  %.38 = tail call %Module.560531* %.37(%TypeChecker.560555* nonnull %.1)
  %.39 = getelementptr inbounds %Module.560531, %Module.560531* %.38, i64 0, i32 2
  %.40 = load %string.560217*, %string.560217** %.39, align 8
  %.41 = tail call %string.560217* @Path_dirname(%string.560217* %.40)
  %.43 = tail call %string.560217* @Path_join(%string.560217* %.41, %string.560217* nonnull %.2)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %filepath.0 = phi %string.560217* [ %.43, %.5.if ], [ %.2, %.5 ]
  %.48 = load %Compiler.560235*, %Compiler.560235** %.12, align 8
  %.49 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.48, i64 0, i32 0
  %.50 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.49, align 8
  %.51 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.50, i64 0, i32 2
  %.52 = load %FileId.560231* (%Compiler.560235*, %string.560217*)*, %FileId.560231* (%Compiler.560235*, %string.560217*)** %.51, align 8
  %.54 = tail call %FileId.560231* %.52(%Compiler.560235* %.48, %string.560217* %filepath.0)
  %.57 = getelementptr inbounds %FileId.560231, %FileId.560231* %.54, i64 0, i32 1
  %.58 = load i64, i64* %.57, align 8
  %.60 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.61 = load %Program.560549*, %Program.560549** %.60, align 8
  %.62 = getelementptr inbounds %Program.560549, %Program.560549* %.61, i64 0, i32 2
  %.63 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.62, align 8
  %.64 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.63, i64 0, i32 2
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp slt i64 %.58, %.65
  br i1 %.66, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.69 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.70 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.70, i64 0, i32 0
  %.72 = load %Module.560531* (%TypeChecker.560555*, i64)*, %Module.560531* (%TypeChecker.560555*, i64)** %.71, align 8
  %.76 = tail call %Module.560531* %.72(%TypeChecker.560555* nonnull %.1, i64 %.58)
  ret %Module.560531* %.76

.5.endif.endif:                                   ; preds = %.5.endif
  %.80 = load %Compiler.560235*, %Compiler.560235** %.12, align 8
  %.81 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.80, i64 0, i32 0
  %.82 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.81, align 8
  %.83 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.82, i64 0, i32 3
  %.84 = load i1 (%Compiler.560235*, %FileId.560231*)*, i1 (%Compiler.560235*, %FileId.560231*)** %.83, align 8
  %.86 = tail call i1 %.84(%Compiler.560235* %.80, %FileId.560231* %.54)
  br i1 %.86, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.90 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.91 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.90, align 8
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.91, i64 0, i32 16
  %.93 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.92, align 8
  %.96 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.97 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.96, i64 0, i32 11
  %.98 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.97, align 8
  %.99 = tail call i8* %.98(%string.560217* nonnull %.2)
  %.101 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.237, i64 0, i64 0), i8* %.99)
  %.102 = add i64 %.101, 1
  %.104 = tail call i8* @malloc(i64 %.102)
  %.105 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.104, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.237, i64 0, i64 0), i8* %.99)
  %.106 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.560217*
  %.108 = bitcast i8* %.106 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.108, align 8
  %.110 = getelementptr inbounds i8, i8* %.106, i64 8
  %4 = bitcast i8* %.110 to i8**
  store i8* %.104, i8** %4, align 8
  %.112 = getelementptr inbounds i8, i8* %.106, i64 16
  %5 = bitcast i8* %.112 to i64*
  store i64 %.101, i64* %5, align 8
  %.114 = getelementptr inbounds i8, i8* %.106, i64 24
  %6 = bitcast i8* %.114 to i64*
  store i64 %.101, i64* %6, align 8
  tail call void %.93(%TypeChecker.560555* nonnull %.1, i64 3, %string.560217* %.107, %FloRange.560223* %.3)
  ret %Module.560531* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.119 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.120 = bitcast i8* %.119 to %Lexer.560265*
  %.121 = bitcast i8* %.119 to %Lexer_vtable_ty.560266**
  store %Lexer_vtable_ty.560266* @Lexer_vtable_data, %Lexer_vtable_ty.560266** %.121, align 8
  tail call void @Lexer_constructor(%Lexer.560265* %.120)
  %.127 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.121, align 8
  %.128 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.127, i64 0, i32 22
  %.129 = load %"Array<Token>.560259"* (%Lexer.560265*, %string.560217*, %"Array<FloError>.560238"*)*, %"Array<Token>.560259"* (%Lexer.560265*, %string.560217*, %"Array<FloError>.560238"*)** %.128, align 8
  %.132 = load %Compiler.560235*, %Compiler.560235** %.12, align 8
  %.133 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.132, i64 0, i32 3
  %.134 = load %string.560217*, %string.560217** %.133, align 8
  %.138 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.132, i64 0, i32 6
  %.139 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.138, align 8
  %.140 = tail call %"Array<Token>.560259"* %.129(%Lexer.560265* %.120, %string.560217* %.134, %"Array<FloError>.560238"* %.139)
  %.143 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.144 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.143, align 8
  %.145 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.144, i64 0, i32 17
  %.146 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.145, align 8
  %.147 = tail call i1 %.146(%TypeChecker.560555* nonnull %.1)
  br i1 %.147, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif.endif.endif, %.5.endif.endif.endif.endif, %.5.endif.endif.endif
  ret %Module.560531* null

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.150 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.151 = bitcast i8* %.150 to %Parser.560379*
  %.152 = bitcast i8* %.150 to %Parser_vtable_ty.560380**
  store %Parser_vtable_ty.560380* @Parser_vtable_data, %Parser_vtable_ty.560380** %.152, align 8
  tail call void @Parser_constructor(%Parser.560379* %.151)
  %.158 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.152, align 8
  %.159 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.158, i64 0, i32 57
  %.160 = load %ModuleAST.560363* (%Parser.560379*, %"Array<Token>.560259"*, %"Array<FloError>.560238"*)*, %ModuleAST.560363* (%Parser.560379*, %"Array<Token>.560259"*, %"Array<FloError>.560238"*)** %.159, align 8
  %.164 = load %Compiler.560235*, %Compiler.560235** %.12, align 8
  %.165 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.164, i64 0, i32 6
  %.166 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.165, align 8
  %.167 = tail call %ModuleAST.560363* %.160(%Parser.560379* %.151, %"Array<Token>.560259"* %.140, %"Array<FloError>.560238"* %.166)
  %.171 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.143, align 8
  %.172 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.171, i64 0, i32 17
  %.173 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.172, align 8
  %.174 = tail call i1 %.173(%TypeChecker.560555* nonnull %.1)
  br i1 %.174, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.179 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.143, align 8
  %.180 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.179, i64 0, i32 22
  %.181 = load %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)*, %Module.560531* (%TypeChecker.560555*, %ModuleAST.560363*, %string.560217*)** %.180, align 8
  %.184 = tail call %Module.560531* %.181(%TypeChecker.560555* nonnull %.1, %ModuleAST.560363* %.167, %string.560217* %filepath.0)
  %.188 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.143, align 8
  %.189 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.188, i64 0, i32 17
  %.190 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.189, align 8
  %.191 = tail call i1 %.190(%TypeChecker.560555* nonnull %.1)
  br i1 %.191, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif
  %.196 = load %Compiler.560235*, %Compiler.560235** %.12, align 8
  %.197 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.196, i64 0, i32 0
  %.198 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.197, align 8
  %.199 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.198, i64 0, i32 3
  %.200 = load i1 (%Compiler.560235*, %FileId.560231*)*, i1 (%Compiler.560235*, %FileId.560231*)** %.199, align 8
  %.202 = tail call i1 %.200(%Compiler.560235* %.196, %FileId.560231* %.15)
  ret %Module.560531* %.184
}

define void @TypeChecker_declare_enum_within_module(%TypeChecker.560555* %.1, %EnumNode.560353* nocapture readonly %.2) {
.4:
  %.7 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.8 = bitcast i8* %.7 to %Enum.560527*
  %.9 = bitcast i8* %.7 to %Enum_vtable_ty.560528**
  store %Enum_vtable_ty.560528* @Enum_vtable_data, %Enum_vtable_ty.560528** %.9, align 8
  tail call void @Enum_constructor(%Enum.560527* %.8)
  %.14 = getelementptr inbounds %EnumNode.560353, %EnumNode.560353* %.2, i64 0, i32 1
  %.15 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.14, align 8
  %.16 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.15, i64 0, i32 3
  %.17 = load %string.560217*, %string.560217** %.16, align 8
  %.20 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.21, i64 0, i32 3
  %.23 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.22, align 8
  %.24 = tail call %Scope.560473* %.23(%TypeChecker.560555* %.1)
  %.28 = getelementptr inbounds i8, i8* %.7, i64 16
  %0 = bitcast i8* %.28 to %string.560217**
  store %string.560217* %.17, %string.560217** %0, align 8
  %.32 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.32, i64 0, i32 14
  %.34 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.33, align 8
  %.36 = tail call %Type.560381* %.34(%TypeChecker.560555* %.1, %string.560217* %.17)
  %.37 = getelementptr inbounds %Type.560381, %Type.560381* %.36, i64 0, i32 1
  %.38 = load i64, i64* %.37, align 8
  %.39.not = icmp eq i64 %.38, 21
  br i1 %.39.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.43 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.43, i64 0, i32 16
  %.45 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.44, align 8
  %.47 = getelementptr inbounds %string.560217, %string.560217* %.17, i64 0, i32 0
  %.48 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.48, i64 0, i32 11
  %.50 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.49, align 8
  %.51 = tail call i8* %.50(%string.560217* %.17)
  %.53 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.228, i64 0, i64 0), i8* %.51)
  %.54 = add i64 %.53, 1
  %.56 = tail call i8* @malloc(i64 %.54)
  %.57 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.228, i64 0, i64 0), i8* %.51)
  %.58 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.560217*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.53, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.53, i64* %3, align 8
  %.70 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.14, align 8
  %.71 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.70, i64 0, i32 2
  %.72 = load %FloRange.560223*, %FloRange.560223** %.71, align 8
  tail call void %.45(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.59, %FloRange.560223* %.72)
  ret void

.4.endif:                                         ; preds = %.4
  %.76 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.77 = bitcast i8* %.76 to %"Map<string, PropId>.560517"*
  %.78 = bitcast i8* %.76 to %"Map<string, PropId>_vtable_ty.560520"**
  store %"Map<string, PropId>_vtable_ty.560520"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.560520"** %.78, align 8
  tail call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.560517"* %.77)
  %.81 = getelementptr inbounds i8, i8* %.7, i64 32
  %4 = bitcast i8* %.81 to i8**
  store i8* %.76, i8** %4, align 8
  %.85 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.87 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.89 = bitcast i8* %.87 to %"Array<EnumField>_vtable_ty.560530"**
  store %"Array<EnumField>_vtable_ty.560530"* @"Array<EnumField>_vtable_data", %"Array<EnumField>_vtable_ty.560530"** %.89, align 8
  %.91 = getelementptr inbounds i8, i8* %.87, i64 8
  %5 = bitcast i8* %.91 to i8**
  store i8* %.85, i8** %5, align 8
  %.93 = getelementptr inbounds i8, i8* %.87, i64 16
  %6 = bitcast i8* %.93 to i64*
  store i64 0, i64* %6, align 8
  %.95 = getelementptr inbounds i8, i8* %.87, i64 24
  %7 = bitcast i8* %.95 to i64*
  store i64 8, i64* %7, align 8
  %.97 = getelementptr inbounds i8, i8* %.7, i64 24
  %8 = bitcast i8* %.97 to i8**
  store i8* %.87, i8** %8, align 8
  %.101 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.102 = load i64, i64* %.101, align 8
  %.105 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.106 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.105, i64 0, i32 1
  %.107 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.106, align 8
  %.108 = tail call %Module.560531* %.107(%TypeChecker.560555* nonnull %.1)
  %.109 = getelementptr inbounds %Module.560531, %Module.560531* %.108, i64 0, i32 7
  %.110 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.109, align 8
  %.111 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.110, i64 0, i32 2
  %.112 = load i64, i64* %.111, align 8
  %.113 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %EnumId.560399*
  %.115 = bitcast i8* %.113 to %EnumId_vtable_ty.560400**
  store %EnumId_vtable_ty.560400* @EnumId_vtable_data, %EnumId_vtable_ty.560400** %.115, align 8
  tail call void @EnumId_constructor(%EnumId.560399* %.114, i64 %.102, i64 %.112)
  %.118 = getelementptr inbounds i8, i8* %.7, i64 8
  %9 = bitcast i8* %.118 to i8**
  store i8* %.113, i8** %9, align 8
  %.122 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.20, align 8
  %.123 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.122, i64 0, i32 1
  %.124 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.123, align 8
  %.125 = tail call %Module.560531* %.124(%TypeChecker.560555* nonnull %.1)
  %.126 = getelementptr inbounds %Module.560531, %Module.560531* %.125, i64 0, i32 7
  %.127 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.126, align 8
  %.129 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.127, i64 0, i32 0
  %.130 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.129, align 8
  %.131 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.130, i64 0, i32 2
  %.132 = load void (%"Array<Enum>.560537"*, %Enum.560527*)*, void (%"Array<Enum>.560537"*, %Enum.560527*)** %.131, align 8
  tail call void %.132(%"Array<Enum>.560537"* %.127, %Enum.560527* %.8)
  %.135 = getelementptr inbounds %Scope.560473, %Scope.560473* %.24, i64 0, i32 5
  %.136 = load %"Map<string, EnumId>.560477"*, %"Map<string, EnumId>.560477"** %.135, align 8
  %.137 = getelementptr inbounds %"Map<string, EnumId>.560477", %"Map<string, EnumId>.560477"* %.136, i64 0, i32 0
  %.138 = load %"Map<string, EnumId>_vtable_ty.560489"*, %"Map<string, EnumId>_vtable_ty.560489"** %.137, align 8
  %.139 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.560489", %"Map<string, EnumId>_vtable_ty.560489"* %.138, i64 0, i32 2
  %.140 = load void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)*, void (%"Map<string, EnumId>.560477"*, %string.560217*, %EnumId.560399*)** %.139, align 8
  %.143 = load %string.560217*, %string.560217** %0, align 8
  %10 = bitcast i8* %.118 to %EnumId.560399**
  %.146 = load %EnumId.560399*, %EnumId.560399** %10, align 8
  tail call void %.140(%"Map<string, EnumId>.560477"* %.136, %string.560217* %.143, %EnumId.560399* %.146)
  %.149 = getelementptr inbounds %Scope.560473, %Scope.560473* %.24, i64 0, i32 2
  %.150 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.149, align 8
  %.151 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.150, i64 0, i32 0
  %.152 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.151, align 8
  %.153 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.152, i64 0, i32 2
  %.154 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.153, align 8
  %.157 = load %string.560217*, %string.560217** %0, align 8
  %.160 = load %EnumId.560399*, %EnumId.560399** %10, align 8
  %.161 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.162 = bitcast i8* %.161 to %EnumVarId.560445*
  %.163 = bitcast i8* %.161 to %EnumVarId_vtable_ty.560446**
  store %EnumVarId_vtable_ty.560446* @EnumVarId_vtable_data, %EnumVarId_vtable_ty.560446** %.163, align 8
  tail call void @EnumVarId_constructor(%EnumVarId.560445* %.162, %EnumId.560399* %.160)
  %.166 = bitcast i8* %.161 to %VarId.560441*
  tail call void %.154(%"Map<string, VarId>.560475"* %.150, %string.560217* %.157, %VarId.560441* %.166)
  ret void
}

define void @TypeChecker_declare_class_within_module(%TypeChecker.560555* %.1, %ClassDeclarationNode.560343* %.2) {
.4:
  %.8 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.2, i64 0, i32 1
  %.9 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.9, i64 0, i32 3
  %.11 = load %string.560217*, %string.560217** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.15, i64 0, i32 14
  %.17 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.16, align 8
  %.19 = tail call %Type.560381* %.17(%TypeChecker.560555* %.1, %string.560217* %.11)
  %.20 = getelementptr inbounds %Type.560381, %Type.560381* %.19, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp ne i64 %.21, 21
  %.24 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 10
  %.25 = load %"Map<string, Generic>.560557"*, %"Map<string, Generic>.560557"** %.24, align 8
  %.26 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.25, i64 0, i32 0
  %.27 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.27, i64 0, i32 3
  %.29 = load %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)*, %Generic.560553* (%"Map<string, Generic>.560557"*, %string.560217*)** %.28, align 8
  %.31 = tail call %Generic.560553* %.29(%"Map<string, Generic>.560557"* %.25, %string.560217* %.11)
  %0 = ptrtoint %Generic.560553* %.31 to i64
  %.32 = trunc i64 %0 to i32
  %.34 = icmp ne i32 %.32, 0
  %.35 = or i1 %.22, %.34
  br i1 %.35, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.39 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.40 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.39, i64 0, i32 16
  %.41 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.40, align 8
  %.43 = getelementptr inbounds %string.560217, %string.560217* %.11, i64 0, i32 0
  %.44 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.44, i64 0, i32 11
  %.46 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.45, align 8
  %.47 = tail call i8* %.46(%string.560217* %.11)
  %.49 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.228, i64 0, i64 0), i8* %.47)
  %.50 = add i64 %.49, 1
  %.52 = tail call i8* @malloc(i64 %.50)
  %.53 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.52, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.228, i64 0, i64 0), i8* %.47)
  %.54 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.55 = bitcast i8* %.54 to %string.560217*
  %.56 = bitcast i8* %.54 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.56, align 8
  %.58 = getelementptr inbounds i8, i8* %.54, i64 8
  %1 = bitcast i8* %.58 to i8**
  store i8* %.52, i8** %1, align 8
  %.60 = getelementptr inbounds i8, i8* %.54, i64 16
  %2 = bitcast i8* %.60 to i64*
  store i64 %.49, i64* %2, align 8
  %.62 = getelementptr inbounds i8, i8* %.54, i64 24
  %3 = bitcast i8* %.62 to i64*
  store i64 %.49, i64* %3, align 8
  %.66 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.67 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.66, i64 0, i32 2
  %.68 = load %FloRange.560223*, %FloRange.560223** %.67, align 8
  tail call void %.41(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.55, %FloRange.560223* %.68)
  ret void

.4.endif:                                         ; preds = %.4
  %.72 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.2, i64 0, i32 2
  %.73 = load %"Array<GenericParameterNode>.560345"*, %"Array<GenericParameterNode>.560345"** %.72, align 8
  %.74 = getelementptr inbounds %"Array<GenericParameterNode>.560345", %"Array<GenericParameterNode>.560345"* %.73, i64 0, i32 2
  %.75 = load i64, i64* %.74, align 8
  %.76 = icmp sgt i64 %.75, 0
  br i1 %.76, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.79 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 9
  store i1 true, i1* %.79, align 1
  %.83 = load %"Map<string, Generic>.560557"*, %"Map<string, Generic>.560557"** %.24, align 8
  %.84 = getelementptr inbounds %"Map<string, Generic>.560557", %"Map<string, Generic>.560557"* %.83, i64 0, i32 0
  %.85 = load %"Map<string, Generic>_vtable_ty.560558"*, %"Map<string, Generic>_vtable_ty.560558"** %.84, align 8
  %.86 = getelementptr inbounds %"Map<string, Generic>_vtable_ty.560558", %"Map<string, Generic>_vtable_ty.560558"* %.85, i64 0, i32 2
  %.87 = load void (%"Map<string, Generic>.560557"*, %string.560217*, %Generic.560553*)*, void (%"Map<string, Generic>.560557"*, %string.560217*, %Generic.560553*)** %.86, align 8
  %.90 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.91 = load i64, i64* %.90, align 8
  %.93 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.94 = bitcast i8* %.93 to %Generic.560553*
  %.95 = bitcast i8* %.93 to %Generic_vtable_ty.560554**
  store %Generic_vtable_ty.560554* @Generic_vtable_data, %Generic_vtable_ty.560554** %.95, align 8
  tail call void @Generic_constructor(%Generic.560553* %.94, i64 %.91, %ClassDeclarationNode.560343* nonnull %.2)
  tail call void %.87(%"Map<string, Generic>.560557"* %.83, %string.560217* %.11, %Generic.560553* %.94)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.100 = tail call dereferenceable_or_null(96) i8* @malloc(i64 96)
  %.101 = bitcast i8* %.100 to %Class.560513*
  %.102 = bitcast i8* %.100 to %Class_vtable_ty.560514**
  store %Class_vtable_ty.560514* @Class_vtable_data, %Class_vtable_ty.560514** %.102, align 8
  tail call void @Class_constructor(%Class.560513* %.101)
  %.108 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.109 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.108, i64 0, i32 3
  %.110 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.109, align 8
  %.111 = tail call %Scope.560473* %.110(%TypeChecker.560555* nonnull %.1)
  %.114 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.2, i64 0, i32 3
  %4 = bitcast %RecordTypeNode.560271** %.114 to i64*
  %.1151 = load i64, i64* %4, align 8
  %.116 = trunc i64 %.1151 to i32
  %.118.not = icmp eq i32 %.116, 0
  br i1 %.118.not, label %.4.endif.endif.else, label %.4.endif.endif.if

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  %5 = inttoptr i64 %.1151 to %TypeNode.560269*
  %.123 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.124 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.123, i64 0, i32 46
  %.125 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.124, align 8
  %.130 = tail call %Type.560381* %.125(%TypeChecker.560555* nonnull %.1, %TypeNode.560269* %5)
  %.131 = getelementptr inbounds i8, i8* %.100, i64 24
  %6 = bitcast i8* %.131 to %Type.560381**
  store %Type.560381* %.130, %Type.560381** %6, align 8
  %.135 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.136 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.135, i64 0, i32 17
  %.137 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.136, align 8
  %.138 = tail call i1 %.137(%TypeChecker.560555* nonnull %.1)
  br i1 %.138, label %.4.endif.endif.if.if, label %.4.endif.endif.endif

.4.endif.endif.else:                              ; preds = %.4.endif.endif
  %.143 = getelementptr inbounds i8, i8* %.100, i64 24
  %7 = bitcast i8* %.143 to %Type.560381**
  store %Type.560381* null, %Type.560381** %7, align 8
  br label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif.if, %.4.endif.endif.else
  %.147 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.148 = bitcast i8* %.147 to %"Map<string, PropId>.560517"*
  %.149 = bitcast i8* %.147 to %"Map<string, PropId>_vtable_ty.560520"**
  store %"Map<string, PropId>_vtable_ty.560520"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.560520"** %.149, align 8
  tail call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.560517"* %.148)
  %.152 = getelementptr inbounds i8, i8* %.100, i64 56
  %8 = bitcast i8* %.152 to i8**
  store i8* %.147, i8** %8, align 8
  %.155 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %"Map<string, PropId>.560517"*
  %.157 = bitcast i8* %.155 to %"Map<string, PropId>_vtable_ty.560520"**
  store %"Map<string, PropId>_vtable_ty.560520"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.560520"** %.157, align 8
  tail call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.560517"* %.156)
  %.160 = getelementptr inbounds i8, i8* %.100, i64 64
  %9 = bitcast i8* %.160 to i8**
  store i8* %.155, i8** %9, align 8
  %.164 = getelementptr inbounds i8, i8* %.100, i64 16
  %10 = bitcast i8* %.164 to %string.560217**
  store %string.560217* %.11, %string.560217** %10, align 8
  %.168 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.169 = load i64, i64* %.168, align 8
  %.172 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.173 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.172, i64 0, i32 1
  %.174 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.173, align 8
  %.175 = tail call %Module.560531* %.174(%TypeChecker.560555* nonnull %.1)
  %.176 = getelementptr inbounds %Module.560531, %Module.560531* %.175, i64 0, i32 5
  %.177 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.176, align 8
  %.178 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.177, i64 0, i32 2
  %.179 = load i64, i64* %.178, align 8
  %.180 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.181 = bitcast i8* %.180 to %ClassId.560397*
  %.182 = bitcast i8* %.180 to %ClassId_vtable_ty.560398**
  store %ClassId_vtable_ty.560398* @ClassId_vtable_data, %ClassId_vtable_ty.560398** %.182, align 8
  tail call void @ClassId_constructor(%ClassId.560397* %.181, i64 %.169, i64 %.179)
  %.185 = getelementptr inbounds i8, i8* %.100, i64 8
  %11 = bitcast i8* %.185 to %ClassId.560397**
  %12 = bitcast i8* %.185 to i8**
  store i8* %.180, i8** %12, align 8
  %.189 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.190 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.189, i64 0, i32 1
  %.191 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.190, align 8
  %.192 = tail call %Module.560531* %.191(%TypeChecker.560555* nonnull %.1)
  %.193 = getelementptr inbounds %Module.560531, %Module.560531* %.192, i64 0, i32 5
  %.194 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.193, align 8
  %.196 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.194, i64 0, i32 0
  %.197 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.196, align 8
  %.198 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.197, i64 0, i32 2
  %.199 = load void (%"Array<Class>.560535"*, %Class.560513*)*, void (%"Array<Class>.560535"*, %Class.560513*)** %.198, align 8
  tail call void %.199(%"Array<Class>.560535"* %.194, %Class.560513* nonnull %.101)
  %.202 = getelementptr inbounds %Scope.560473, %Scope.560473* %.111, i64 0, i32 3
  %.203 = load %"Map<string, ClassId>.560476"*, %"Map<string, ClassId>.560476"** %.202, align 8
  %.204 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.203, i64 0, i32 0
  %.205 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.204, align 8
  %.206 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.205, i64 0, i32 2
  %.207 = load void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)*, void (%"Map<string, ClassId>.560476"*, %string.560217*, %ClassId.560397*)** %.206, align 8
  %.211 = load %ClassId.560397*, %ClassId.560397** %11, align 8
  tail call void %.207(%"Map<string, ClassId>.560476"* %.203, %string.560217* %.11, %ClassId.560397* %.211)
  %.214 = getelementptr inbounds %Scope.560473, %Scope.560473* %.111, i64 0, i32 2
  %.215 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.214, align 8
  %.216 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.215, i64 0, i32 0
  %.217 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.216, align 8
  %.218 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.217, i64 0, i32 2
  %.219 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.218, align 8
  %.223 = load %ClassId.560397*, %ClassId.560397** %11, align 8
  %.224 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.225 = bitcast i8* %.224 to %ClassVarId.560443*
  %.226 = bitcast i8* %.224 to %ClassVarId_vtable_ty.560444**
  store %ClassVarId_vtable_ty.560444* @ClassVarId_vtable_data, %ClassVarId_vtable_ty.560444** %.226, align 8
  tail call void @ClassVarId_constructor(%ClassVarId.560443* %.225, %ClassId.560397* %.223)
  %.229 = bitcast i8* %.224 to %VarId.560441*
  tail call void %.219(%"Map<string, VarId>.560475"* %.215, %string.560217* %.11, %VarId.560441* %.229)
  ret void

.4.endif.endif.if.if:                             ; preds = %.4.endif.endif.if
  ret void
}

define void @TypeChecker_declare_function_within_module(%TypeChecker.560555* %.1, %FunctionDeclarationNode.560333* nocapture readonly %.2) {
.4:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = bitcast i8* %.7 to %Function.560501*
  %.9 = bitcast i8* %.7 to %Function_vtable_ty.560502**
  store %Function_vtable_ty.560502* @Function_vtable_data, %Function_vtable_ty.560502** %.9, align 8
  tail call void @Function_constructor(%Function.560501* %.8)
  %.15 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.2, i64 0, i32 5
  %.16 = load i1, i1* %.15, align 1
  %.17 = getelementptr inbounds i8, i8* %.7, i64 56
  %0 = bitcast i8* %.17 to i1*
  store i1 %.16, i1* %0, align 1
  %.20 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.2, i64 0, i32 1
  %.21 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.20, align 8
  %.22 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.21, i64 0, i32 3
  %.23 = load %string.560217*, %string.560217** %.22, align 8
  %.27 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.27 to %string.560217**
  store %string.560217* %.23, %string.560217** %1, align 8
  %.30 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.31 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.32 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.31, i64 0, i32 12
  %.33 = load i1 (%TypeChecker.560555*, %string.560217*)*, i1 (%TypeChecker.560555*, %string.560217*)** %.32, align 8
  %.35 = tail call i1 %.33(%TypeChecker.560555* %.1, %string.560217* %.23)
  %.39 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  br i1 %.35, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.40 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.39, i64 0, i32 16
  %.41 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.40, align 8
  %.43 = getelementptr inbounds %string.560217, %string.560217* %.23, i64 0, i32 0
  %.44 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.44, i64 0, i32 11
  %.46 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.45, align 8
  %.47 = tail call i8* %.46(%string.560217* %.23)
  %.49 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.238, i64 0, i64 0), i8* %.47)
  %.50 = add i64 %.49, 1
  %.52 = tail call i8* @malloc(i64 %.50)
  %.53 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.52, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.238, i64 0, i64 0), i8* %.47)
  %.54 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.55 = bitcast i8* %.54 to %string.560217*
  %.56 = bitcast i8* %.54 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.56, align 8
  %.58 = getelementptr inbounds i8, i8* %.54, i64 8
  %2 = bitcast i8* %.58 to i8**
  store i8* %.52, i8** %2, align 8
  %.60 = getelementptr inbounds i8, i8* %.54, i64 16
  %3 = bitcast i8* %.60 to i64*
  store i64 %.49, i64* %3, align 8
  %.62 = getelementptr inbounds i8, i8* %.54, i64 24
  %4 = bitcast i8* %.62 to i64*
  store i64 %.49, i64* %4, align 8
  %.66 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.20, align 8
  %.67 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.66, i64 0, i32 2
  %.68 = load %FloRange.560223*, %FloRange.560223** %.67, align 8
  tail call void %.41(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.55, %FloRange.560223* %.68)
  ret void

.4.endif:                                         ; preds = %.4
  %.74 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.39, i64 0, i32 14
  %.75 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.74, align 8
  %.77 = tail call %Type.560381* %.75(%TypeChecker.560555* nonnull %.1, %string.560217* %.23)
  %.78 = getelementptr inbounds %Type.560381, %Type.560381* %.77, i64 0, i32 1
  %.79 = load i64, i64* %.78, align 8
  %.80.not = icmp eq i64 %.79, 21
  %.118 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  br i1 %.80.not, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.85 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.118, i64 0, i32 16
  %.86 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.85, align 8
  %.88 = getelementptr inbounds %string.560217, %string.560217* %.23, i64 0, i32 0
  %.89 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.88, align 8
  %.90 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.89, i64 0, i32 11
  %.91 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.90, align 8
  %.92 = tail call i8* %.91(%string.560217* %.23)
  %.94 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.239, i64 0, i64 0), i8* %.92)
  %.95 = add i64 %.94, 1
  %.97 = tail call i8* @malloc(i64 %.95)
  %.98 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.97, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.239, i64 0, i64 0), i8* %.92)
  %.99 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.560217*
  %.101 = bitcast i8* %.99 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.101, align 8
  %.103 = getelementptr inbounds i8, i8* %.99, i64 8
  %5 = bitcast i8* %.103 to i8**
  store i8* %.97, i8** %5, align 8
  %.105 = getelementptr inbounds i8, i8* %.99, i64 16
  %6 = bitcast i8* %.105 to i64*
  store i64 %.94, i64* %6, align 8
  %.107 = getelementptr inbounds i8, i8* %.99, i64 24
  %7 = bitcast i8* %.107 to i64*
  store i64 %.94, i64* %7, align 8
  %.111 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.20, align 8
  %.112 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.111, i64 0, i32 2
  %.113 = load %FloRange.560223*, %FloRange.560223** %.112, align 8
  tail call void %.86(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.100, %FloRange.560223* %.113)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.119 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.118, i64 0, i32 15
  %.120 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.119, align 8
  %.121 = tail call %Scope.560473* %.120(%TypeChecker.560555* nonnull %.1)
  %.125 = getelementptr inbounds %Scope.560473, %Scope.560473* %.121, i64 0, i32 1
  %8 = bitcast %ScopeId.560471** %.125 to i64*
  %.1261 = load i64, i64* %8, align 8
  %.127 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %9 = bitcast %ScopeId.560471** %.127 to i64*
  store i64 %.1261, i64* %9, align 8
  %.131 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.133 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.133 to %"Array<FunctionArg>_vtable_ty.560504"**
  store %"Array<FunctionArg>_vtable_ty.560504"* @"Array<FunctionArg>_vtable_data", %"Array<FunctionArg>_vtable_ty.560504"** %.135, align 8
  %.137 = getelementptr inbounds i8, i8* %.133, i64 8
  %10 = bitcast i8* %.137 to i8**
  store i8* %.131, i8** %10, align 8
  %.139 = getelementptr inbounds i8, i8* %.133, i64 16
  %11 = bitcast i8* %.139 to i64*
  store i64 0, i64* %11, align 8
  %.141 = getelementptr inbounds i8, i8* %.133, i64 24
  %12 = bitcast i8* %.141 to i64*
  store i64 8, i64* %12, align 8
  %.143 = getelementptr inbounds i8, i8* %.7, i64 24
  %13 = bitcast i8* %.143 to i8**
  store i8* %.133, i8** %13, align 8
  %.148 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.148, i64 0, i32 33
  %.150 = load %FunctionType.560387* (%TypeChecker.560555*, %"Array<ArgNode>.560335"*, %TypeNode.560269*, %"Array<FunctionArg>.560503"*)*, %FunctionType.560387* (%TypeChecker.560555*, %"Array<ArgNode>.560335"*, %TypeNode.560269*, %"Array<FunctionArg>.560503"*)** %.149, align 8
  %.152 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.2, i64 0, i32 2
  %.153 = load %"Array<ArgNode>.560335"*, %"Array<ArgNode>.560335"** %.152, align 8
  %.155 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.2, i64 0, i32 4
  %.156 = load %TypeNode.560269*, %TypeNode.560269** %.155, align 8
  %14 = bitcast i8* %.133 to %"Array<FunctionArg>.560503"*
  %.160 = tail call %FunctionType.560387* %.150(%TypeChecker.560555* nonnull %.1, %"Array<ArgNode>.560335"* %.153, %TypeNode.560269* %.156, %"Array<FunctionArg>.560503"* %14)
  %.161 = getelementptr inbounds i8, i8* %.7, i64 40
  %15 = bitcast i8* %.161 to %FunctionType.560387**
  store %FunctionType.560387* %.160, %FunctionType.560387** %15, align 8
  %.165 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.166 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.165, i64 0, i32 17
  %.167 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.166, align 8
  %.168 = tail call i1 %.167(%TypeChecker.560555* nonnull %.1)
  br i1 %.168, label %.4.endif.endif.if, label %.4.endif.endif.endif

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  ret void

.4.endif.endif.endif:                             ; preds = %.4.endif.endif
  %.173 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 2
  %.174 = load i64, i64* %.173, align 8
  %.177 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.178 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.177, i64 0, i32 1
  %.179 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.178, align 8
  %.180 = tail call %Module.560531* %.179(%TypeChecker.560555* nonnull %.1)
  %.181 = getelementptr inbounds %Module.560531, %Module.560531* %.180, i64 0, i32 6
  %.182 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.181, align 8
  %.183 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.182, i64 0, i32 2
  %.184 = load i64, i64* %.183, align 8
  %.185 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.186 = bitcast i8* %.185 to %VarId.560441*
  %.187 = bitcast i8* %.185 to %VarId_vtable_ty.560442**
  store %VarId_vtable_ty.560442* @VarId_vtable_data, %VarId_vtable_ty.560442** %.187, align 8
  tail call void @VarId_constructor(%VarId.560441* %.186, i64 0, i64 %.174, i64 %.184)
  %.190 = getelementptr inbounds i8, i8* %.7, i64 8
  %16 = bitcast i8* %.190 to i8**
  store i8* %.185, i8** %16, align 8
  %.194 = getelementptr inbounds %Scope.560473, %Scope.560473* %.121, i64 0, i32 6
  %17 = bitcast %ScopeId.560471** %.194 to i64*
  %.1952 = load i64, i64* %17, align 8
  store i64 %.1952, i64* %9, align 8
  %.2013 = load i64, i64* %8, align 8
  %.202 = getelementptr inbounds i8, i8* %.7, i64 48
  %18 = bitcast i8* %.202 to i64*
  store i64 %.2013, i64* %18, align 8
  %.206 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.207 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.206, i64 0, i32 3
  %.208 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.207, align 8
  %.209 = tail call %Scope.560473* %.208(%TypeChecker.560555* nonnull %.1)
  %.213 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.214 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.213, i64 0, i32 1
  %.215 = load %Module.560531* (%TypeChecker.560555*)*, %Module.560531* (%TypeChecker.560555*)** %.214, align 8
  %.216 = tail call %Module.560531* %.215(%TypeChecker.560555* nonnull %.1)
  %.217 = getelementptr inbounds %Module.560531, %Module.560531* %.216, i64 0, i32 6
  %.218 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.217, align 8
  %.220 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.218, i64 0, i32 0
  %.221 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.220, align 8
  %.222 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.221, i64 0, i32 2
  %.223 = load void (%"Array<Function>.560536"*, %Function.560501*)*, void (%"Array<Function>.560536"*, %Function.560501*)** %.222, align 8
  tail call void %.223(%"Array<Function>.560536"* %.218, %Function.560501* nonnull %.8)
  %.226 = getelementptr inbounds %Scope.560473, %Scope.560473* %.209, i64 0, i32 4
  %.227 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.226, align 8
  %.228 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.227, i64 0, i32 0
  %.229 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.228, align 8
  %.230 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.229, i64 0, i32 2
  %.231 = load void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)*, void (%"Map<string, VarId>.560475"*, %string.560217*, %VarId.560441*)** %.230, align 8
  %.234 = load %string.560217*, %string.560217** %1, align 8
  %19 = bitcast i8* %.190 to %VarId.560441**
  %.237 = load %VarId.560441*, %VarId.560441** %19, align 8
  tail call void %.231(%"Map<string, VarId>.560475"* %.227, %string.560217* %.234, %VarId.560441* %.237)
  ret void
}

define void @TypeChecker_check_enum_body(%TypeChecker.560555* %.1, %Enum.560527* nocapture readonly %.2, %EnumNode.560353* nocapture readonly %.3) {
.5:
  %.11 = getelementptr inbounds %EnumNode.560353, %EnumNode.560353* %.3, i64 0, i32 3
  %0 = bitcast %TypeNode.560269** %.11 to i64*
  %.123 = load i64, i64* %0, align 8
  %.13 = trunc i64 %.123 to i32
  %.15 = icmp eq i32 %.13, 0
  br i1 %.15, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.17 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.18 = bitcast i8* %.17 to %Type.560381*
  %.19 = bitcast i8* %.17 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.19, align 8
  tail call void @Type_constructor(%Type.560381* %.18, i64 7)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %1 = inttoptr i64 %.123 to %TypeNode.560269*
  %.25 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.26 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.25, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.26, i64 0, i32 46
  %.28 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.27, align 8
  %.32 = tail call %Type.560381* %.28(%TypeChecker.560555* %.1, %TypeNode.560269* %1)
  %.35 = tail call i1 @is_int(%Type.560381* %.32)
  br i1 %.35, label %.5.endif, label %.5.else.if

.5.endif:                                         ; preds = %.5.else.if, %.5.else, %.5.if
  %enum_variant.0 = phi %Type.560381* [ %.18, %.5.if ], [ %.32, %.5.else ], [ %.32, %.5.else.if ]
  %.85 = getelementptr inbounds %EnumNode.560353, %EnumNode.560353* %.3, i64 0, i32 2
  %.8615 = load %"Array<EnumNodeField>.560355"*, %"Array<EnumNodeField>.560355"** %.85, align 8
  %.8716 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.8615, i64 0, i32 2
  %.8817 = load i64, i64* %.8716, align 8
  %.8918 = icmp sgt i64 %.8817, 0
  br i1 %.8918, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif
  %.116 = getelementptr inbounds %Enum.560527, %Enum.560527* %.2, i64 0, i32 1
  %2 = bitcast %EnumId.560399** %.116 to %TypeId.560395**
  %.136 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.240 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.272 = getelementptr inbounds %Enum.560527, %Enum.560527* %.2, i64 0, i32 4
  %.284 = getelementptr inbounds %Enum.560527, %Enum.560527* %.2, i64 0, i32 3
  br label %for.body

.5.else.if:                                       ; preds = %.5.else
  %.40 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.25, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.40, i64 0, i32 16
  %.42 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.41, align 8
  %.46 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.40, i64 0, i32 10
  %.47 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.46, align 8
  %.49 = tail call %string.560217* %.47(%TypeChecker.560555* nonnull %.1, %Type.560381* %.32)
  %.50 = getelementptr inbounds %string.560217, %string.560217* %.49, i64 0, i32 0
  %.51 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.50, align 8
  %.52 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.51, i64 0, i32 11
  %.53 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.52, align 8
  %.54 = tail call i8* %.53(%string.560217* %.49)
  %.56 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.240, i64 0, i64 0), i8* %.54)
  %.57 = add i64 %.56, 1
  %.59 = tail call i8* @malloc(i64 %.57)
  %.60 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.59, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.240, i64 0, i64 0), i8* %.54)
  %.61 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.560217*
  %.63 = bitcast i8* %.61 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.63, align 8
  %.65 = getelementptr inbounds i8, i8* %.61, i64 8
  %3 = bitcast i8* %.65 to i8**
  store i8* %.59, i8** %3, align 8
  %.67 = getelementptr inbounds i8, i8* %.61, i64 16
  %4 = bitcast i8* %.67 to i64*
  store i64 %.56, i64* %4, align 8
  %.69 = getelementptr inbounds i8, i8* %.61, i64 24
  %5 = bitcast i8* %.69 to i64*
  store i64 %.56, i64* %5, align 8
  %.73 = load %TypeNode.560269*, %TypeNode.560269** %.11, align 8
  %.74 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.73, i64 0, i32 1
  %.75 = load %FloRange.560223*, %FloRange.560223** %.74, align 8
  tail call void %.42(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.62, %FloRange.560223* %.75)
  br label %.5.endif

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge721 = phi i64 [ 0, %for.body.lr.ph ], [ %storemerge7, %for.body.endif ]
  %.8620 = phi %"Array<EnumNodeField>.560355"* [ %.8615, %for.body.lr.ph ], [ %.86, %for.body.endif ]
  %storemerge19 = phi i64 [ 0, %for.body.lr.ph ], [ %.296, %for.body.endif ]
  %.95 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.8620, i64 0, i32 0
  %.96 = load %"Array<EnumNodeField>_vtable_ty.560356"*, %"Array<EnumNodeField>_vtable_ty.560356"** %.95, align 8
  %.97 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.560356", %"Array<EnumNodeField>_vtable_ty.560356"* %.96, i64 0, i32 5
  %.98 = load %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)*, %EnumNodeField.560351* (%"Array<EnumNodeField>.560355"*, i64)** %.97, align 8
  %.99 = tail call %EnumNodeField.560351* %.98(%"Array<EnumNodeField>.560355"* %.8620, i64 %storemerge19)
  %.102 = getelementptr inbounds %EnumNodeField.560351, %EnumNodeField.560351* %.99, i64 0, i32 1
  %.103 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.102, align 8
  %.104 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.103, i64 0, i32 3
  %.105429 = load %string.560217*, %string.560217** %.104, align 8
  %.108 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.109 = bitcast i8* %.108 to %EnumField.560525*
  %.110 = bitcast i8* %.108 to %EnumField_vtable_ty.560526**
  store %EnumField_vtable_ty.560526* @EnumField_vtable_data, %EnumField_vtable_ty.560526** %.110, align 8
  tail call void @EnumField_constructor(%EnumField.560525* %.109, %string.560217* %.105429)
  %.1175 = load %TypeId.560395*, %TypeId.560395** %2, align 8
  %.120 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %PropId.560449*
  %.122 = bitcast i8* %.120 to %PropId_vtable_ty.560450**
  store %PropId_vtable_ty.560450* @PropId_vtable_data, %PropId_vtable_ty.560450** %.122, align 8
  tail call void @PropId_constructor(%PropId.560449* %.121, i64 1, %TypeId.560395* %.1175, i64 %storemerge19)
  %.125 = getelementptr inbounds i8, i8* %.108, i64 8
  %6 = bitcast i8* %.125 to i8**
  store i8* %.120, i8** %6, align 8
  %.128 = getelementptr inbounds %EnumNodeField.560351, %EnumNodeField.560351* %.99, i64 0, i32 2
  %7 = bitcast %ExpressionNode.560285** %.128 to i64*
  %.1296 = load i64, i64* %7, align 8
  %.130 = trunc i64 %.1296 to i32
  %.132.not = icmp eq i32 %.130, 0
  br i1 %.132.not, label %for.body.else, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.5.endif
  ret void

for.body.if:                                      ; preds = %for.body
  %8 = inttoptr i64 %.1296 to %ExpressionNode.560285*
  %.137 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.136, align 8
  %.138 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.137, i64 0, i32 72
  %.139 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.138, align 8
  %.144 = tail call %Expression.560401* %.139(%TypeChecker.560555* %.1, %Type.560381* %enum_variant.0, %ExpressionNode.560285* %8)
  %.145 = getelementptr inbounds i8, i8* %.108, i64 24
  %9 = bitcast i8* %.145 to %Expression.560401**
  store %Expression.560401* %.144, %Expression.560401** %9, align 8
  %.150 = getelementptr inbounds %Expression.560401, %Expression.560401* %.144, i64 0, i32 2
  %.151 = load i1, i1* %.150, align 1
  %.171 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.136, align 8
  br i1 %.151, label %for.body.if.endif, label %for.body.if.if

for.body.else:                                    ; preds = %for.body
  %.251 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.252 = bitcast i8* %.251 to %IntExpression.560411*
  %.253 = bitcast i8* %.251 to %IntExpression_vtable_ty.560412**
  store %IntExpression_vtable_ty.560412* @IntExpression_vtable_data, %IntExpression_vtable_ty.560412** %.253, align 8
  tail call void @IntExpression_constructor(%IntExpression.560411* %.252, i64 %storemerge721)
  %.257 = getelementptr inbounds i8, i8* %.108, i64 24
  %10 = bitcast i8* %.257 to i8**
  store i8* %.251, i8** %10, align 8
  %.263 = getelementptr inbounds i8, i8* %.251, i64 32
  %11 = bitcast i8* %.263 to %Type.560381**
  store %Type.560381* %enum_variant.0, %Type.560381** %11, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if.endif.endif, %for.body.else
  %storemerge7.in = phi i64 [ %storemerge721, %for.body.else ], [ %.245, %for.body.if.endif.endif ]
  %storemerge7 = add i64 %storemerge7.in, 1
  %.273 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.272, align 8
  %.274 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.273, i64 0, i32 0
  %.275 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.274, align 8
  %.276 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.275, i64 0, i32 2
  %.277 = load void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)** %.276, align 8
  %.280 = getelementptr inbounds i8, i8* %.108, i64 8
  %12 = bitcast i8* %.280 to %PropId.560449**
  %.281 = load %PropId.560449*, %PropId.560449** %12, align 8
  tail call void %.277(%"Map<string, PropId>.560517"* %.273, %string.560217* %.105429, %PropId.560449* %.281)
  %.285 = load %"Array<EnumField>.560529"*, %"Array<EnumField>.560529"** %.284, align 8
  %.287 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.285, i64 0, i32 0
  %.288 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.287, align 8
  %.289 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.288, i64 0, i32 2
  %.290 = load void (%"Array<EnumField>.560529"*, %EnumField.560525*)*, void (%"Array<EnumField>.560529"*, %EnumField.560525*)** %.289, align 8
  tail call void %.290(%"Array<EnumField>.560529"* %.285, %EnumField.560525* nonnull %.109)
  %.296 = add nuw nsw i64 %storemerge19, 1
  %.86 = load %"Array<EnumNodeField>.560355"*, %"Array<EnumNodeField>.560355"** %.85, align 8
  %.87 = getelementptr inbounds %"Array<EnumNodeField>.560355", %"Array<EnumNodeField>.560355"* %.86, i64 0, i32 2
  %.88 = load i64, i64* %.87, align 8
  %.89 = icmp slt i64 %.296, %.88
  br i1 %.89, label %for.body, label %for.end

for.body.if.if:                                   ; preds = %for.body.if
  %.157 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.171, i64 0, i32 16
  %.158 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.157, align 8
  %.159 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.160 = bitcast i8* %.159 to %string.560217*
  %.160.repack = bitcast i8* %.159 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.160.repack, align 8
  %.160.repack8 = getelementptr inbounds i8, i8* %.159, i64 8
  %13 = bitcast i8* %.160.repack8 to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.241, i64 0, i64 0), i8** %13, align 8
  %.160.repack9 = getelementptr inbounds i8, i8* %.159, i64 16
  %14 = bitcast i8* %.160.repack9 to i64*
  store i64 37, i64* %14, align 8
  %.160.repack10 = getelementptr inbounds i8, i8* %.159, i64 24
  %15 = bitcast i8* %.160.repack10 to i64*
  store i64 37, i64* %15, align 8
  %.164 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.128, align 8
  %.165 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.164, i64 0, i32 1
  %.166 = load %FloRange.560223*, %FloRange.560223** %.165, align 8
  tail call void %.158(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.160, %FloRange.560223* %.166)
  ret void

for.body.if.endif:                                ; preds = %for.body.if
  %.172 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.171, i64 0, i32 9
  %.173 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.172, align 8
  %.178 = getelementptr inbounds %Expression.560401, %Expression.560401* %.144, i64 0, i32 4
  %.179 = load %Type.560381*, %Type.560381** %.178, align 8
  %.180 = tail call i1 %.173(%TypeChecker.560555* nonnull %.1, %Type.560381* %enum_variant.0, %Type.560381* %.179)
  br i1 %.180, label %for.body.if.endif.endif, label %for.body.if.endif.if

for.body.if.endif.if:                             ; preds = %for.body.if.endif
  %16 = bitcast i8* %.145 to %Expression.560401**
  %.185 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.136, align 8
  %.186 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.185, i64 0, i32 16
  %.187 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.186, align 8
  %.191 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.185, i64 0, i32 10
  %.192 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.191, align 8
  %.194 = tail call %string.560217* %.192(%TypeChecker.560555* nonnull %.1, %Type.560381* %enum_variant.0)
  %.197 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.136, align 8
  %.198 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.197, i64 0, i32 10
  %.199 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.198, align 8
  %.202 = load %Expression.560401*, %Expression.560401** %16, align 8
  %.203 = getelementptr inbounds %Expression.560401, %Expression.560401* %.202, i64 0, i32 4
  %.204 = load %Type.560381*, %Type.560381** %.203, align 8
  %.205 = tail call %string.560217* %.199(%TypeChecker.560555* nonnull %.1, %Type.560381* %.204)
  %.206 = getelementptr inbounds %string.560217, %string.560217* %.194, i64 0, i32 0
  %.207 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.206, align 8
  %.208 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.207, i64 0, i32 11
  %.209 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.208, align 8
  %.210 = tail call i8* %.209(%string.560217* %.194)
  %.211 = getelementptr inbounds %string.560217, %string.560217* %.205, i64 0, i32 0
  %.212 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.211, align 8
  %.213 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.212, i64 0, i32 11
  %.214 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.213, align 8
  %.215 = tail call i8* %.214(%string.560217* %.205)
  %.217 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.242, i64 0, i64 0), i8* %.210, i8* %.215)
  %.218 = add i64 %.217, 1
  %.220 = tail call i8* @malloc(i64 %.218)
  %.221 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.220, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.242, i64 0, i64 0), i8* %.210, i8* %.215)
  %.222 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.223 = bitcast i8* %.222 to %string.560217*
  %.224 = bitcast i8* %.222 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.224, align 8
  %.226 = getelementptr inbounds i8, i8* %.222, i64 8
  %17 = bitcast i8* %.226 to i8**
  store i8* %.220, i8** %17, align 8
  %.228 = getelementptr inbounds i8, i8* %.222, i64 16
  %18 = bitcast i8* %.228 to i64*
  store i64 %.217, i64* %18, align 8
  %.230 = getelementptr inbounds i8, i8* %.222, i64 24
  %19 = bitcast i8* %.230 to i64*
  store i64 %.217, i64* %19, align 8
  %.234 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.128, align 8
  %.235 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.234, i64 0, i32 1
  %.236 = load %FloRange.560223*, %FloRange.560223** %.235, align 8
  tail call void %.187(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.223, %FloRange.560223* %.236)
  ret void

for.body.if.endif.endif:                          ; preds = %for.body.if.endif
  %.241 = load %Program.560549*, %Program.560549** %.240, align 8
  %.244 = load %Expression.560401*, %Expression.560401** %9, align 8
  %.245 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.241, %Expression.560401* %.244)
  br label %for.body.endif
}

define void @TypeChecker_declare_class_fields(%TypeChecker.560555* %.1, %Class.560513* nocapture readonly %.2, %ClassDeclarationNode.560343* nocapture readonly %.3) {
.5:
  %.18 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.3, i64 0, i32 4
  %.1926 = load %"Array<FieldNode>.560346"*, %"Array<FieldNode>.560346"** %.18, align 8
  %.2027 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1926, i64 0, i32 2
  %.2128 = load i64, i64* %.2027, align 8
  %.2229 = icmp sgt i64 %.2128, 0
  br i1 %.2229, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.10 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 10
  %.11 = load i64, i64* %.10, align 8
  %.54 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.84 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 1
  %0 = bitcast %ClassId.560397** %.84 to %TypeId.560395**
  %.120 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 7
  %1 = bitcast %ClassId.560397** %.84 to i64*
  %.191 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.458 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 8
  %.496 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif.endif
  %.1932 = phi %"Array<FieldNode>.560346"* [ %.1926, %for.body.lr.ph ], [ %.19, %for.body.endif.endif.endif.endif ]
  %current_vtable_index.031 = phi i64 [ %.11, %for.body.lr.ph ], [ %current_vtable_index.1, %for.body.endif.endif.endif.endif ]
  %storemerge30 = phi i64 [ 0, %for.body.lr.ph ], [ %.508, %for.body.endif.endif.endif.endif ]
  %.28 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.1932, i64 0, i32 0
  %.29 = load %"Array<FieldNode>_vtable_ty.560349"*, %"Array<FieldNode>_vtable_ty.560349"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.560349", %"Array<FieldNode>_vtable_ty.560349"* %.29, i64 0, i32 5
  %.31 = load %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)*, %FieldNode.560339* (%"Array<FieldNode>.560346"*, i64)** %.30, align 8
  %.32 = tail call %FieldNode.560339* %.31(%"Array<FieldNode>.560346"* %.1932, i64 %storemerge30)
  %.34 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.35 = bitcast i8* %.34 to %ClassField.560509*
  %.36 = bitcast i8* %.34 to %ClassField_vtable_ty.560510**
  store %ClassField_vtable_ty.560510* @ClassField_vtable_data, %ClassField_vtable_ty.560510** %.36, align 8
  tail call void @ClassField_constructor(%ClassField.560509* %.35)
  %.42 = getelementptr inbounds %FieldNode.560339, %FieldNode.560339* %.32, i64 0, i32 1
  %.43 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.42, align 8
  %.44 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.43, i64 0, i32 3
  %2 = bitcast %string.560217** %.44 to i64*
  %.452 = load i64, i64* %2, align 8
  %.46 = getelementptr inbounds i8, i8* %.34, i64 32
  %3 = bitcast i8* %.46 to i64*
  store i64 %.452, i64* %3, align 8
  %.49 = getelementptr inbounds i8, i8* %.34, i64 32
  %4 = bitcast i8* %.49 to %string.560217**
  %5 = inttoptr i64 %.452 to %string.560217*
  %.51 = tail call i1 @is_operator_overload_name(%string.560217* %5)
  br i1 %.51, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif.endif, %for.body.endif, %for.body.endif.endif.endif.if, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.55 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.56 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.55, i64 0, i32 16
  %.57 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.56, align 8
  %.60 = load %string.560217*, %string.560217** %4, align 8
  %.61 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.560217*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.62.repack, align 8
  %.62.repack10 = getelementptr inbounds i8, i8* %.61, i64 8
  %6 = bitcast i8* %.62.repack10 to i8**
  store i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.243, i64 0, i64 0), i8** %6, align 8
  %.62.repack11 = getelementptr inbounds i8, i8* %.61, i64 16
  %7 = bitcast i8* %.62.repack11 to i64*
  store i64 75, i64* %7, align 8
  %.62.repack12 = getelementptr inbounds i8, i8* %.61, i64 24
  %8 = bitcast i8* %.62.repack12 to i64*
  store i64 75, i64* %8, align 8
  %.64 = getelementptr inbounds %string.560217, %string.560217* %.60, i64 0, i32 0
  %.65 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.64, align 8
  %.66 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.65, i64 0, i32 0
  %.67 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.66, align 8
  %.68 = tail call %string.560217* %.67(%string.560217* %.60, %string.560217* %.62)
  %.71 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.42, align 8
  %.72 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.71, i64 0, i32 2
  %.73 = load %FloRange.560223*, %FloRange.560223** %.72, align 8
  tail call void %.57(%TypeChecker.560555* %.1, i64 1, %string.560217* %.68, %FloRange.560223* %.73)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.78 = getelementptr inbounds %FieldNode.560339, %FieldNode.560339* %.32, i64 0, i32 2
  %.79 = load i64, i64* %.78, align 8
  %.80 = getelementptr inbounds i8, i8* %.34, i64 24
  %9 = bitcast i8* %.80 to i64*
  store i64 %.79, i64* %9, align 8
  %.853 = load %TypeId.560395*, %TypeId.560395** %0, align 8
  %.88 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.89 = bitcast i8* %.88 to %PropId.560449*
  %.90 = bitcast i8* %.88 to %PropId_vtable_ty.560450**
  store %PropId_vtable_ty.560450* @PropId_vtable_data, %PropId_vtable_ty.560450** %.90, align 8
  tail call void @PropId_constructor(%PropId.560449* %.89, i64 1, %TypeId.560395* %.853, i64 %storemerge30)
  %.93 = getelementptr inbounds i8, i8* %.34, i64 8
  %10 = bitcast i8* %.93 to %PropId.560449**
  %11 = bitcast i8* %.93 to i8**
  store i8* %.88, i8** %11, align 8
  %.98 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.99 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.98, i64 0, i32 46
  %.100 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.99, align 8
  %.102 = getelementptr inbounds %FieldNode.560339, %FieldNode.560339* %.32, i64 0, i32 4
  %.103 = load %TypeNode.560269*, %TypeNode.560269** %.102, align 8
  %.104 = tail call %Type.560381* %.100(%TypeChecker.560555* %.1, %TypeNode.560269* %.103)
  %.105 = getelementptr inbounds i8, i8* %.34, i64 40
  %12 = bitcast i8* %.105 to %Type.560381**
  store %Type.560381* %.104, %Type.560381** %12, align 8
  %.109 = getelementptr inbounds i8, i8* %.34, i64 56
  %13 = bitcast i8* %.109 to i64*
  store i64 %current_vtable_index.031, i64* %13, align 8
  %.113 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.114 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.113, i64 0, i32 17
  %.115 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.114, align 8
  %.116 = tail call i1 %.115(%TypeChecker.560555* %.1)
  br i1 %.116, label %for.end, label %for.body.endif.endif

for.body.endif.endif:                             ; preds = %for.body.endif
  %.121 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.120, align 8
  %.122 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.121, i64 0, i32 0
  %.123 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.122, align 8
  %.124 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.123, i64 0, i32 3
  %.125 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.124, align 8
  %.128 = load %string.560217*, %string.560217** %4, align 8
  %.129 = tail call %PropId.560449* %.125(%"Map<string, PropId>.560517"* %.121, %string.560217* %.128)
  %14 = ptrtoint %PropId.560449* %.129 to i64
  %.132 = trunc i64 %14 to i32
  %.134.not = icmp eq i32 %.132, 0
  br i1 %.134.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.137 = getelementptr inbounds %PropId.560449, %PropId.560449* %.129, i64 0, i32 2
  %15 = bitcast %TypeId.560395** %.137 to i64*
  %.1388 = load i64, i64* %15, align 8
  %.1419 = load i64, i64* %1, align 8
  %.142 = trunc i64 %.1388 to i32
  %.143 = trunc i64 %.1419 to i32
  %.144 = icmp eq i32 %.142, %.143
  br i1 %.144, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.if.endif.endif, %for.body.endif.endif
  %.329 = getelementptr inbounds %FieldNode.560339, %FieldNode.560339* %.32, i64 0, i32 3
  %16 = bitcast %ExpressionNode.560285** %.329 to i64*
  %.3304 = load i64, i64* %16, align 8
  %.331 = trunc i64 %.3304 to i32
  %.333.not = icmp eq i32 %.331, 0
  br i1 %.333.not, label %for.body.endif.endif.endif.else, label %for.body.endif.endif.endif.if

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %17 = bitcast i8* %.49 to %string.560217**
  %.148 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.148, i64 0, i32 16
  %.150 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.149, align 8
  %.153 = load %string.560217*, %string.560217** %17, align 8
  %.155 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.156 = load %string.560217*, %string.560217** %.155, align 8
  %.157 = getelementptr inbounds %string.560217, %string.560217* %.153, i64 0, i32 0
  %.158 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.157, align 8
  %.159 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.158, i64 0, i32 11
  %.160 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.159, align 8
  %.161 = tail call i8* %.160(%string.560217* %.153)
  %.162 = getelementptr inbounds %string.560217, %string.560217* %.156, i64 0, i32 0
  %.163 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.162, align 8
  %.164 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.163, i64 0, i32 11
  %.165 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.164, align 8
  %.166 = tail call i8* %.165(%string.560217* %.156)
  %.168 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.244, i64 0, i64 0), i8* %.161, i8* %.166)
  %.169 = add i64 %.168, 1
  %.171 = tail call i8* @malloc(i64 %.169)
  %.172 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.171, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.244, i64 0, i64 0), i8* %.161, i8* %.166)
  %.173 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.174 = bitcast i8* %.173 to %string.560217*
  %.175 = bitcast i8* %.173 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.175, align 8
  %.177 = getelementptr inbounds i8, i8* %.173, i64 8
  %18 = bitcast i8* %.177 to i8**
  store i8* %.171, i8** %18, align 8
  %.179 = getelementptr inbounds i8, i8* %.173, i64 16
  %19 = bitcast i8* %.179 to i64*
  store i64 %.168, i64* %19, align 8
  %.181 = getelementptr inbounds i8, i8* %.173, i64 24
  %20 = bitcast i8* %.181 to i64*
  store i64 %.168, i64* %20, align 8
  %.185 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.42, align 8
  %.186 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.185, i64 0, i32 2
  %.187 = load %FloRange.560223*, %FloRange.560223** %.186, align 8
  tail call void %.150(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.174, %FloRange.560223* %.187)
  ret void

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if
  %.192 = load %Program.560549*, %Program.560549** %.191, align 8
  %.194 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.192, %PropId.560449* nonnull %.129)
  %.198 = load %Program.560549*, %Program.560549** %.191, align 8
  %.200 = tail call i64 @get_class_prop_visibility(%Program.560549* %.198, %PropId.560449* nonnull %.129)
  %.204 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.205 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.204, i64 0, i32 9
  %.206 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.205, align 8
  %.210 = load %Type.560381*, %Type.560381** %12, align 8
  %.211 = tail call i1 %.206(%TypeChecker.560555* nonnull %.1, %Type.560381* %.194, %Type.560381* %.210)
  br i1 %.211, label %for.body.endif.endif.if.endif.endif, label %for.body.endif.endif.if.endif.if

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %21 = bitcast i8* %.49 to %string.560217**
  %.216 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.217 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.216, i64 0, i32 16
  %.218 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.217, align 8
  %.221 = load %string.560217*, %string.560217** %21, align 8
  %.223 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.224 = load %string.560217*, %string.560217** %.223, align 8
  %.228 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.216, i64 0, i32 10
  %.229 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.228, align 8
  %.231 = tail call %string.560217* %.229(%TypeChecker.560555* nonnull %.1, %Type.560381* %.194)
  %.232 = getelementptr inbounds %string.560217, %string.560217* %.221, i64 0, i32 0
  %.233 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.232, align 8
  %.234 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.233, i64 0, i32 11
  %.235 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.234, align 8
  %.236 = tail call i8* %.235(%string.560217* %.221)
  %.237 = getelementptr inbounds %string.560217, %string.560217* %.224, i64 0, i32 0
  %.238 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.237, align 8
  %.239 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.238, i64 0, i32 11
  %.240 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.239, align 8
  %.241 = tail call i8* %.240(%string.560217* %.224)
  %.242 = getelementptr inbounds %string.560217, %string.560217* %.231, i64 0, i32 0
  %.243 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.242, align 8
  %.244 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.243, i64 0, i32 11
  %.245 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.244, align 8
  %.246 = tail call i8* %.245(%string.560217* %.231)
  %.248 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @str.245, i64 0, i64 0), i8* %.236, i8* %.241, i8* %.246)
  %.249 = add i64 %.248, 1
  %.251 = tail call i8* @malloc(i64 %.249)
  %.252 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.251, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @str.245, i64 0, i64 0), i8* %.236, i8* %.241, i8* %.246)
  %.253 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.254 = bitcast i8* %.253 to %string.560217*
  %.255 = bitcast i8* %.253 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.255, align 8
  %.257 = getelementptr inbounds i8, i8* %.253, i64 8
  %22 = bitcast i8* %.257 to i8**
  store i8* %.251, i8** %22, align 8
  %.259 = getelementptr inbounds i8, i8* %.253, i64 16
  %23 = bitcast i8* %.259 to i64*
  store i64 %.248, i64* %23, align 8
  %.261 = getelementptr inbounds i8, i8* %.253, i64 24
  %24 = bitcast i8* %.261 to i64*
  store i64 %.248, i64* %24, align 8
  %.265 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.42, align 8
  %.266 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.265, i64 0, i32 2
  %.267 = load %FloRange.560223*, %FloRange.560223** %.266, align 8
  tail call void %.218(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.254, %FloRange.560223* %.267)
  ret void

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif
  %.272 = load i64, i64* %9, align 8
  %.274.not = icmp eq i64 %.272, %.200
  br i1 %.274.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if.endif.endif.if

for.body.endif.endif.if.endif.endif.if:           ; preds = %for.body.endif.endif.if.endif.endif
  %25 = bitcast i8* %.49 to %string.560217**
  %.278 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.279 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.278, i64 0, i32 16
  %.280 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.279, align 8
  %.283 = load %string.560217*, %string.560217** %25, align 8
  %.285 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.286 = load %string.560217*, %string.560217** %.285, align 8
  %.288 = tail call %string.560217* @dump_access(i64 %.200)
  %.289 = getelementptr inbounds %string.560217, %string.560217* %.283, i64 0, i32 0
  %.290 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.289, align 8
  %.291 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.290, i64 0, i32 11
  %.292 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.291, align 8
  %.293 = tail call i8* %.292(%string.560217* %.283)
  %.294 = getelementptr inbounds %string.560217, %string.560217* %.286, i64 0, i32 0
  %.295 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.294, align 8
  %.296 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.295, i64 0, i32 11
  %.297 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.296, align 8
  %.298 = tail call i8* %.297(%string.560217* %.286)
  %.299 = getelementptr inbounds %string.560217, %string.560217* %.288, i64 0, i32 0
  %.300 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.299, align 8
  %.301 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.300, i64 0, i32 11
  %.302 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.301, align 8
  %.303 = tail call i8* %.302(%string.560217* %.288)
  %.305 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.246, i64 0, i64 0), i8* %.293, i8* %.298, i8* %.303)
  %.306 = add i64 %.305, 1
  %.308 = tail call i8* @malloc(i64 %.306)
  %.309 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.308, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.246, i64 0, i64 0), i8* %.293, i8* %.298, i8* %.303)
  %.310 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.311 = bitcast i8* %.310 to %string.560217*
  %.312 = bitcast i8* %.310 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.312, align 8
  %.314 = getelementptr inbounds i8, i8* %.310, i64 8
  %26 = bitcast i8* %.314 to i8**
  store i8* %.308, i8** %26, align 8
  %.316 = getelementptr inbounds i8, i8* %.310, i64 16
  %27 = bitcast i8* %.316 to i64*
  store i64 %.305, i64* %27, align 8
  %.318 = getelementptr inbounds i8, i8* %.310, i64 24
  %28 = bitcast i8* %.318 to i64*
  store i64 %.305, i64* %28, align 8
  %.322 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.42, align 8
  %.323 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.322, i64 0, i32 2
  %.324 = load %FloRange.560223*, %FloRange.560223** %.323, align 8
  tail call void %.280(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.311, %FloRange.560223* %.324)
  ret void

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif.endif.endif
  %29 = inttoptr i64 %.3304 to %ExpressionNode.560285*
  %.338 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.339 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.338, i64 0, i32 72
  %.340 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.339, align 8
  %.343 = load %Type.560381*, %Type.560381** %12, align 8
  %.347 = tail call %Expression.560401* %.340(%TypeChecker.560555* nonnull %.1, %Type.560381* %.343, %ExpressionNode.560285* %29)
  %.348 = getelementptr inbounds i8, i8* %.34, i64 48
  %30 = bitcast i8* %.348 to %Expression.560401**
  store %Expression.560401* %.347, %Expression.560401** %30, align 8
  %.352 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.353 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.352, i64 0, i32 17
  %.354 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.353, align 8
  %.355 = tail call i1 %.354(%TypeChecker.560555* nonnull %.1)
  br i1 %.355, label %for.end, label %for.body.endif.endif.endif.if.endif

for.body.endif.endif.endif.else:                  ; preds = %for.body.endif.endif.endif
  %.473 = getelementptr inbounds i8, i8* %.34, i64 16
  %31 = bitcast i8* %.473 to i1*
  store i1 false, i1* %31, align 1
  %.477 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.120, align 8
  %.478 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.477, i64 0, i32 0
  %.479 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.478, align 8
  %.480 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.479, i64 0, i32 2
  %.481 = load void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)** %.480, align 8
  %.484 = load %string.560217*, %string.560217** %4, align 8
  %.487 = load %PropId.560449*, %PropId.560449** %10, align 8
  tail call void %.481(%"Map<string, PropId>.560517"* %.477, %string.560217* %.484, %PropId.560449* %.487)
  %.492 = add i64 %current_vtable_index.031, 1
  br label %for.body.endif.endif.endif.endif

for.body.endif.endif.endif.endif:                 ; preds = %for.body.endif.endif.endif.if.endif.endif.endif, %for.body.endif.endif.endif.else
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.031, %for.body.endif.endif.endif.if.endif.endif.endif ], [ %.492, %for.body.endif.endif.endif.else ]
  %.497 = load %"Array<ClassField>.560515"*, %"Array<ClassField>.560515"** %.496, align 8
  %.499 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.497, i64 0, i32 0
  %.500 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.499, align 8
  %.501 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.500, i64 0, i32 2
  %.502 = load void (%"Array<ClassField>.560515"*, %ClassField.560509*)*, void (%"Array<ClassField>.560515"*, %ClassField.560509*)** %.501, align 8
  tail call void %.502(%"Array<ClassField>.560515"* %.497, %ClassField.560509* nonnull %.35)
  %.508 = add nuw nsw i64 %storemerge30, 1
  %.19 = load %"Array<FieldNode>.560346"*, %"Array<FieldNode>.560346"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FieldNode>.560346", %"Array<FieldNode>.560346"* %.19, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp slt i64 %.508, %.21
  br i1 %.22, label %for.body, label %for.end

for.body.endif.endif.endif.if.endif:              ; preds = %for.body.endif.endif.endif.if
  %.360 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.361 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.360, i64 0, i32 9
  %.362 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.361, align 8
  %.365 = load %Type.560381*, %Type.560381** %12, align 8
  %.368 = load %Expression.560401*, %Expression.560401** %30, align 8
  %.369 = getelementptr inbounds %Expression.560401, %Expression.560401* %.368, i64 0, i32 4
  %.370 = load %Type.560381*, %Type.560381** %.369, align 8
  %.371 = tail call i1 %.362(%TypeChecker.560555* nonnull %.1, %Type.560381* %.365, %Type.560381* %.370)
  br i1 %.371, label %for.body.endif.endif.endif.if.endif.endif, label %for.body.endif.endif.endif.if.endif.if

for.body.endif.endif.endif.if.endif.if:           ; preds = %for.body.endif.endif.endif.if.endif
  %.376 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.377 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.376, i64 0, i32 16
  %.378 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.377, align 8
  %.382 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.376, i64 0, i32 10
  %.383 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.382, align 8
  %.386 = load %Type.560381*, %Type.560381** %12, align 8
  %.387 = tail call %string.560217* %.383(%TypeChecker.560555* nonnull %.1, %Type.560381* %.386)
  %.390 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.391 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.390, i64 0, i32 10
  %.392 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.391, align 8
  %.395 = load %Expression.560401*, %Expression.560401** %30, align 8
  %.396 = getelementptr inbounds %Expression.560401, %Expression.560401* %.395, i64 0, i32 4
  %.397 = load %Type.560381*, %Type.560381** %.396, align 8
  %.398 = tail call %string.560217* %.392(%TypeChecker.560555* nonnull %.1, %Type.560381* %.397)
  %.399 = getelementptr inbounds %string.560217, %string.560217* %.387, i64 0, i32 0
  %.400 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.399, align 8
  %.401 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.400, i64 0, i32 11
  %.402 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.401, align 8
  %.403 = tail call i8* %.402(%string.560217* %.387)
  %.404 = getelementptr inbounds %string.560217, %string.560217* %.398, i64 0, i32 0
  %.405 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.404, align 8
  %.406 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.405, i64 0, i32 11
  %.407 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.406, align 8
  %.408 = tail call i8* %.407(%string.560217* %.398)
  %.410 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.247, i64 0, i64 0), i8* %.403, i8* %.408)
  %.411 = add i64 %.410, 1
  %.413 = tail call i8* @malloc(i64 %.411)
  %.414 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.413, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.247, i64 0, i64 0), i8* %.403, i8* %.408)
  %.415 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.416 = bitcast i8* %.415 to %string.560217*
  %.417 = bitcast i8* %.415 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.417, align 8
  %.419 = getelementptr inbounds i8, i8* %.415, i64 8
  %32 = bitcast i8* %.419 to i8**
  store i8* %.413, i8** %32, align 8
  %.421 = getelementptr inbounds i8, i8* %.415, i64 16
  %33 = bitcast i8* %.421 to i64*
  store i64 %.410, i64* %33, align 8
  %.423 = getelementptr inbounds i8, i8* %.415, i64 24
  %34 = bitcast i8* %.423 to i64*
  store i64 %.410, i64* %34, align 8
  %.427 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.329, align 8
  %.428 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.427, i64 0, i32 1
  %.429 = load %FloRange.560223*, %FloRange.560223** %.428, align 8
  tail call void %.378(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.416, %FloRange.560223* %.429)
  br label %for.body.endif.endif.endif.if.endif.endif

for.body.endif.endif.endif.if.endif.endif:        ; preds = %for.body.endif.endif.endif.if.endif, %for.body.endif.endif.endif.if.endif.if
  %.434 = load %Expression.560401*, %Expression.560401** %30, align 8
  %.435 = getelementptr inbounds %Expression.560401, %Expression.560401* %.434, i64 0, i32 2
  %.436 = load i1, i1* %.435, align 1
  br i1 %.436, label %for.body.endif.endif.endif.if.endif.endif.endif, label %for.body.endif.endif.endif.if.endif.endif.if

for.body.endif.endif.endif.if.endif.endif.if:     ; preds = %for.body.endif.endif.endif.if.endif.endif
  %.441 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.442 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.441, i64 0, i32 16
  %.443 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.442, align 8
  %.444 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.445 = bitcast i8* %.444 to %string.560217*
  %.445.repack = bitcast i8* %.444 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.445.repack, align 8
  %.445.repack5 = getelementptr inbounds i8, i8* %.444, i64 8
  %35 = bitcast i8* %.445.repack5 to i8**
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.248, i64 0, i64 0), i8** %35, align 8
  %.445.repack6 = getelementptr inbounds i8, i8* %.444, i64 16
  %36 = bitcast i8* %.445.repack6 to i64*
  store i64 45, i64* %36, align 8
  %.445.repack7 = getelementptr inbounds i8, i8* %.444, i64 24
  %37 = bitcast i8* %.445.repack7 to i64*
  store i64 45, i64* %37, align 8
  %.449 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.329, align 8
  %.450 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.449, i64 0, i32 1
  %.451 = load %FloRange.560223*, %FloRange.560223** %.450, align 8
  tail call void %.443(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.445, %FloRange.560223* %.451)
  ret void

for.body.endif.endif.endif.if.endif.endif.endif:  ; preds = %for.body.endif.endif.endif.if.endif.endif
  %.455 = getelementptr inbounds i8, i8* %.34, i64 16
  %38 = bitcast i8* %.455 to i1*
  store i1 true, i1* %38, align 1
  %.459 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.458, align 8
  %.460 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.459, i64 0, i32 0
  %.461 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.460, align 8
  %.462 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.461, i64 0, i32 2
  %.463 = load void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)** %.462, align 8
  %.466 = load %string.560217*, %string.560217** %4, align 8
  %.469 = load %PropId.560449*, %PropId.560449** %10, align 8
  tail call void %.463(%"Map<string, PropId>.560517"* %.459, %string.560217* %.466, %PropId.560449* %.469)
  br label %for.body.endif.endif.endif.endif
}

define void @TypeChecker_declare_class_methods(%TypeChecker.560555* %.1, %Class.560513* nocapture %.2, %ClassDeclarationNode.560343* nocapture readonly %.3) {
.5:
  %.18 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.3, i64 0, i32 5
  %.1977 = load %"Array<MethodNode>.560347"*, %"Array<MethodNode>.560347"** %.18, align 8
  %.2078 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.1977, i64 0, i32 2
  %.2179 = load i64, i64* %.2078, align 8
  %.2280 = icmp sgt i64 %.2179, 0
  br i1 %.2280, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.10 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 9
  %.11 = load i64, i64* %.10, align 8
  %.51 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.61 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.560471** %.61 to i64*
  %.220 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 7
  %.238 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 1
  %1 = bitcast %ClassId.560397** %.238 to i64*
  %.287 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %2 = bitcast %ClassId.560397** %.238 to %TypeId.560395**
  %.545 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 4
  %3 = bitcast %PropId.560449** %.545 to i64*
  %.614 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 3
  %4 = bitcast %Type.560381** %.614 to i64*
  %.498 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 8
  %.661 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif
  %current_vtable_index.082 = phi i64 [ %.11, %for.body.lr.ph ], [ %current_vtable_index.1, %for.body.endif.endif.endif ]
  %storemerge81 = phi i64 [ 0, %for.body.lr.ph ], [ %.679, %for.body.endif.endif.endif ]
  %.24 = tail call dereferenceable_or_null(88) i8* @malloc(i64 88)
  %.25 = bitcast i8* %.24 to %ClassMethod.560511*
  %.26 = bitcast i8* %.24 to %ClassMethod_vtable_ty.560512**
  store %ClassMethod_vtable_ty.560512* @ClassMethod_vtable_data, %ClassMethod_vtable_ty.560512** %.26, align 8
  tail call void @ClassMethod_constructor(%ClassMethod.560511* %.25)
  %.33 = load %"Array<MethodNode>.560347"*, %"Array<MethodNode>.560347"** %.18, align 8
  %.34 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.33, i64 0, i32 0
  %.35 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.35, i64 0, i32 5
  %.37 = load %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)*, %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)** %.36, align 8
  %.38 = tail call %MethodNode.560337* %.37(%"Array<MethodNode>.560347"* %.33, i64 %storemerge81)
  %.41 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 1
  %.42 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.43 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.42, i64 0, i32 3
  %5 = bitcast %string.560217** %.43 to i64*
  %.443 = load i64, i64* %5, align 8
  %.48 = getelementptr inbounds i8, i8* %.24, i64 32
  %6 = bitcast i8* %.48 to %string.560217**
  %7 = bitcast i8* %.48 to i64*
  store i64 %.443, i64* %7, align 8
  %.52 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.52, i64 0, i32 15
  %.54 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.53, align 8
  %.55 = tail call %Scope.560473* %.54(%TypeChecker.560555* %.1)
  %.59 = getelementptr inbounds %Scope.560473, %Scope.560473* %.55, i64 0, i32 1
  %8 = bitcast %ScopeId.560471** %.59 to i64*
  %.608 = load i64, i64* %8, align 8
  store i64 %.608, i64* %0, align 8
  %.65 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.67 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.69 = bitcast i8* %.67 to %"Array<FunctionArg>_vtable_ty.560504"**
  store %"Array<FunctionArg>_vtable_ty.560504"* @"Array<FunctionArg>_vtable_data", %"Array<FunctionArg>_vtable_ty.560504"** %.69, align 8
  %.71 = getelementptr inbounds i8, i8* %.67, i64 8
  %9 = bitcast i8* %.71 to i8**
  store i8* %.65, i8** %9, align 8
  %.73 = getelementptr inbounds i8, i8* %.67, i64 16
  %10 = bitcast i8* %.73 to i64*
  store i64 0, i64* %10, align 8
  %.75 = getelementptr inbounds i8, i8* %.67, i64 24
  %11 = bitcast i8* %.75 to i64*
  store i64 8, i64* %11, align 8
  %.77 = getelementptr inbounds i8, i8* %.24, i64 56
  %12 = bitcast i8* %.77 to %"Array<FunctionArg>.560503"**
  %13 = bitcast i8* %.77 to i8**
  store i8* %.67, i8** %13, align 8
  %14 = inttoptr i64 %.443 to %string.560217*
  %.80 = tail call i1 @is_operator_overload_name(%string.560217* %14)
  br i1 %.80, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.83 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.560217*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.84.repack, align 8
  %.84.repack43 = getelementptr inbounds i8, i8* %.83, i64 8
  %15 = bitcast i8* %.84.repack43 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.202, i64 0, i64 0), i8** %15, align 8
  %.84.repack44 = getelementptr inbounds i8, i8* %.83, i64 16
  %16 = bitcast i8* %.84.repack44 to i64*
  store i64 11, i64* %16, align 8
  %.84.repack45 = getelementptr inbounds i8, i8* %.83, i64 24
  %17 = bitcast i8* %.84.repack45 to i64*
  store i64 11, i64* %17, align 8
  %.86 = getelementptr inbounds %string.560217, %string.560217* %14, i64 0, i32 0
  %.87 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.87, i64 0, i32 4
  %.89 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.88, align 8
  %.90 = tail call i1 %.89(%string.560217* %14, %string.560217* %.84)
  %. = select i1 %.90, i64 2, i64 1
  %.97 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 2
  %.98 = load %"Array<ArgNode>.560335"*, %"Array<ArgNode>.560335"** %.97, align 8
  %.99 = getelementptr inbounds %"Array<ArgNode>.560335", %"Array<ArgNode>.560335"* %.98, i64 0, i32 2
  %.100 = load i64, i64* %.99, align 8
  %.102.not = icmp eq i64 %.100, %.
  br i1 %.102.not, label %end.endif, label %end.if

for.body.endif:                                   ; preds = %end.endif, %for.body
  %.185 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 7
  %.186 = load i1, i1* %.185, align 1
  %.187 = getelementptr inbounds i8, i8* %.24, i64 64
  %18 = bitcast i8* %.187 to i1*
  store i1 %.186, i1* %18, align 1
  %.191 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 6
  %.192 = load i1, i1* %.191, align 1
  %.193 = getelementptr inbounds i8, i8* %.24, i64 16
  %19 = bitcast i8* %.193 to i1*
  store i1 %.192, i1* %19, align 1
  %.197 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 4
  %.198 = load i64, i64* %.197, align 8
  %.199 = getelementptr inbounds i8, i8* %.24, i64 24
  %20 = bitcast i8* %.199 to i64*
  store i64 %.198, i64* %20, align 8
  %.204 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.205 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.204, i64 0, i32 33
  %.206 = load %FunctionType.560387* (%TypeChecker.560555*, %"Array<ArgNode>.560335"*, %TypeNode.560269*, %"Array<FunctionArg>.560503"*)*, %FunctionType.560387* (%TypeChecker.560555*, %"Array<ArgNode>.560335"*, %TypeNode.560269*, %"Array<FunctionArg>.560503"*)** %.205, align 8
  %.208 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 2
  %.209 = load %"Array<ArgNode>.560335"*, %"Array<ArgNode>.560335"** %.208, align 8
  %.211 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 5
  %.212 = load %TypeNode.560269*, %TypeNode.560269** %.211, align 8
  %.215 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %12, align 8
  %.216 = tail call %FunctionType.560387* %.206(%TypeChecker.560555* nonnull %.1, %"Array<ArgNode>.560335"* %.209, %TypeNode.560269* %.212, %"Array<FunctionArg>.560503"* %.215)
  %.217 = getelementptr inbounds i8, i8* %.24, i64 40
  %21 = bitcast i8* %.217 to %FunctionType.560387**
  store %FunctionType.560387* %.216, %FunctionType.560387** %21, align 8
  %.221 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.220, align 8
  %.222 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.221, i64 0, i32 0
  %.223 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.222, align 8
  %.224 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.223, i64 0, i32 3
  %.225 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.224, align 8
  %.227 = tail call %PropId.560449* %.225(%"Map<string, PropId>.560517"* %.221, %string.560217* %14)
  %22 = ptrtoint %PropId.560449* %.227 to i64
  %.230 = trunc i64 %22 to i32
  %.232.not = icmp eq i32 %.230, 0
  br i1 %.232.not, label %for.body.endif.endif, label %for.body.endif.if

end.if:                                           ; preds = %for.body.if
  %23 = inttoptr i64 %.443 to %string.560217*
  %.86.le132 = getelementptr inbounds %string.560217, %string.560217* %23, i64 0, i32 0
  %.106 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.107 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.106, i64 0, i32 16
  %.108 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.107, align 8
  %.117 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.86.le132, align 8
  %.118 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.117, i64 0, i32 11
  %.119 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.118, align 8
  %.120 = tail call i8* %.119(%string.560217* nonnull %23)
  %.122 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.249, i64 0, i64 0), i64 %., i8* %.120, i64 %.100)
  %.123 = add i64 %.122, 1
  %.125 = tail call i8* @malloc(i64 %.123)
  %.126 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.125, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.249, i64 0, i64 0), i64 %., i8* %.120, i64 %.100)
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.560217*
  %.129 = bitcast i8* %.127 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.129, align 8
  %.131 = getelementptr inbounds i8, i8* %.127, i64 8
  %24 = bitcast i8* %.131 to i8**
  store i8* %.125, i8** %24, align 8
  %.133 = getelementptr inbounds i8, i8* %.127, i64 16
  %25 = bitcast i8* %.133 to i64*
  store i64 %.122, i64* %25, align 8
  %.135 = getelementptr inbounds i8, i8* %.127, i64 24
  %26 = bitcast i8* %.135 to i64*
  store i64 %.122, i64* %26, align 8
  %.139 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.140 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.139, i64 0, i32 2
  %.141 = load %FloRange.560223*, %FloRange.560223** %.140, align 8
  tail call void %.108(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.128, %FloRange.560223* %.141)
  ret void

end.endif:                                        ; preds = %for.body.if
  %.145 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.38, i64 0, i32 6
  %.146 = load i1, i1* %.145, align 1
  br i1 %.146, label %end.endif.if, label %for.body.endif

end.endif.if:                                     ; preds = %end.endif
  %27 = inttoptr i64 %.443 to %string.560217*
  %.86.le = getelementptr inbounds %string.560217, %string.560217* %27, i64 0, i32 0
  %.150 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.151 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.150, i64 0, i32 16
  %.152 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.151, align 8
  %.155 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.86.le, align 8
  %.156 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.155, i64 0, i32 11
  %.157 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.156, align 8
  %.158 = tail call i8* %.157(%string.560217* nonnull %27)
  %.160 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.250, i64 0, i64 0), i8* %.158)
  %.161 = add i64 %.160, 1
  %.163 = tail call i8* @malloc(i64 %.161)
  %.164 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.163, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.250, i64 0, i64 0), i8* %.158)
  %.165 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.166 = bitcast i8* %.165 to %string.560217*
  %.167 = bitcast i8* %.165 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.167, align 8
  %.169 = getelementptr inbounds i8, i8* %.165, i64 8
  %28 = bitcast i8* %.169 to i8**
  store i8* %.163, i8** %28, align 8
  %.171 = getelementptr inbounds i8, i8* %.165, i64 16
  %29 = bitcast i8* %.171 to i64*
  store i64 %.160, i64* %29, align 8
  %.173 = getelementptr inbounds i8, i8* %.165, i64 24
  %30 = bitcast i8* %.173 to i64*
  store i64 %.160, i64* %30, align 8
  %.177 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.178 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.177, i64 0, i32 2
  %.179 = load %FloRange.560223*, %FloRange.560223** %.178, align 8
  tail call void %.152(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.166, %FloRange.560223* %.179)
  ret void

for.body.endif.if:                                ; preds = %for.body.endif
  %.235 = getelementptr inbounds %PropId.560449, %PropId.560449* %.227, i64 0, i32 2
  %31 = bitcast %TypeId.560395** %.235 to i64*
  %.23640 = load i64, i64* %31, align 8
  %.23941 = load i64, i64* %1, align 8
  %.240 = trunc i64 %.23640 to i32
  %.241 = trunc i64 %.23941 to i32
  %.242 = icmp eq i32 %.240, %.241
  br i1 %.242, label %for.body.endif.if.if, label %for.body.endif.if.endif

for.body.endif.endif:                             ; preds = %for.body.endif, %for.body.endif.if.endif.endif.endif
  %.425.sink = phi i64 [ %.425, %for.body.endif.if.endif.endif.endif ], [ %current_vtable_index.082, %for.body.endif ]
  %.426 = getelementptr inbounds i8, i8* %.24, i64 80
  %32 = bitcast i8* %.426 to i64*
  store i64 %.425.sink, i64* %32, align 8
  %.4379 = load %TypeId.560395*, %TypeId.560395** %2, align 8
  %.440 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.441 = bitcast i8* %.440 to %PropId.560449*
  %.442 = bitcast i8* %.440 to %PropId_vtable_ty.560450**
  store %PropId_vtable_ty.560450* @PropId_vtable_data, %PropId_vtable_ty.560450** %.442, align 8
  tail call void @PropId_constructor(%PropId.560449* %.441, i64 0, %TypeId.560395* %.4379, i64 %storemerge81)
  %.445 = getelementptr inbounds i8, i8* %.24, i64 8
  %33 = bitcast i8* %.445 to %PropId.560449**
  %34 = bitcast i8* %.445 to i8**
  store i8* %.440, i8** %34, align 8
  %.449 = load i1, i1* %.191, align 1
  br i1 %.449, label %for.body.endif.endif.if, label %for.body.endif.endif.else

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %35 = inttoptr i64 %.443 to %string.560217*
  %.246 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.247 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.246, i64 0, i32 16
  %.248 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.247, align 8
  %.251 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.252 = load %string.560217*, %string.560217** %.251, align 8
  %.253 = getelementptr inbounds %string.560217, %string.560217* %35, i64 0, i32 0
  %.254 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.253, align 8
  %.255 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.254, i64 0, i32 11
  %.256 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.255, align 8
  %.257 = tail call i8* %.256(%string.560217* %35)
  %.258 = getelementptr inbounds %string.560217, %string.560217* %.252, i64 0, i32 0
  %.259 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.258, align 8
  %.260 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.259, i64 0, i32 11
  %.261 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.260, align 8
  %.262 = tail call i8* %.261(%string.560217* %.252)
  %.264 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.251, i64 0, i64 0), i8* %.257, i8* %.262)
  %.265 = add i64 %.264, 1
  %.267 = tail call i8* @malloc(i64 %.265)
  %.268 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.267, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.251, i64 0, i64 0), i8* %.257, i8* %.262)
  %.269 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.270 = bitcast i8* %.269 to %string.560217*
  %.271 = bitcast i8* %.269 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.271, align 8
  %.273 = getelementptr inbounds i8, i8* %.269, i64 8
  %36 = bitcast i8* %.273 to i8**
  store i8* %.267, i8** %36, align 8
  %.275 = getelementptr inbounds i8, i8* %.269, i64 16
  %37 = bitcast i8* %.275 to i64*
  store i64 %.264, i64* %37, align 8
  %.277 = getelementptr inbounds i8, i8* %.269, i64 24
  %38 = bitcast i8* %.277 to i64*
  store i64 %.264, i64* %38, align 8
  %.281 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.282 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.281, i64 0, i32 2
  %.283 = load %FloRange.560223*, %FloRange.560223** %.282, align 8
  tail call void %.248(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.270, %FloRange.560223* %.283)
  ret void

for.body.endif.if.endif:                          ; preds = %for.body.endif.if
  %.288 = load %Program.560549*, %Program.560549** %.287, align 8
  %.290 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.288, %PropId.560449* nonnull %.227)
  %.294 = load %Program.560549*, %Program.560549** %.287, align 8
  %.296 = tail call i64 @get_class_prop_visibility(%Program.560549* %.294, %PropId.560449* nonnull %.227)
  %.300 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.301 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.300, i64 0, i32 9
  %.302 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.301, align 8
  %39 = bitcast i8* %.217 to %Type.560381**
  %.30642 = load %Type.560381*, %Type.560381** %39, align 8
  %.308 = tail call i1 %.302(%TypeChecker.560555* nonnull %.1, %Type.560381* %.290, %Type.560381* %.30642)
  br i1 %.308, label %for.body.endif.if.endif.endif, label %for.body.endif.if.endif.if

for.body.endif.if.endif.if:                       ; preds = %for.body.endif.if.endif
  %40 = inttoptr i64 %.443 to %string.560217*
  %.313 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.314 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.313, i64 0, i32 16
  %.315 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.314, align 8
  %.318 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.319 = load %string.560217*, %string.560217** %.318, align 8
  %.323 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.313, i64 0, i32 10
  %.324 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.323, align 8
  %.326 = tail call %string.560217* %.324(%TypeChecker.560555* nonnull %.1, %Type.560381* %.290)
  %.327 = getelementptr inbounds %string.560217, %string.560217* %40, i64 0, i32 0
  %.328 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.327, align 8
  %.329 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.328, i64 0, i32 11
  %.330 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.329, align 8
  %.331 = tail call i8* %.330(%string.560217* %40)
  %.332 = getelementptr inbounds %string.560217, %string.560217* %.319, i64 0, i32 0
  %.333 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.332, align 8
  %.334 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.333, i64 0, i32 11
  %.335 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.334, align 8
  %.336 = tail call i8* %.335(%string.560217* %.319)
  %.337 = getelementptr inbounds %string.560217, %string.560217* %.326, i64 0, i32 0
  %.338 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.337, align 8
  %.339 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.338, i64 0, i32 11
  %.340 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.339, align 8
  %.341 = tail call i8* %.340(%string.560217* %.326)
  %.343 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @str.252, i64 0, i64 0), i8* %.331, i8* %.336, i8* %.341)
  %.344 = add i64 %.343, 1
  %.346 = tail call i8* @malloc(i64 %.344)
  %.347 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.346, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @str.252, i64 0, i64 0), i8* %.331, i8* %.336, i8* %.341)
  %.348 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.349 = bitcast i8* %.348 to %string.560217*
  %.350 = bitcast i8* %.348 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.350, align 8
  %.352 = getelementptr inbounds i8, i8* %.348, i64 8
  %41 = bitcast i8* %.352 to i8**
  store i8* %.346, i8** %41, align 8
  %.354 = getelementptr inbounds i8, i8* %.348, i64 16
  %42 = bitcast i8* %.354 to i64*
  store i64 %.343, i64* %42, align 8
  %.356 = getelementptr inbounds i8, i8* %.348, i64 24
  %43 = bitcast i8* %.356 to i64*
  store i64 %.343, i64* %43, align 8
  %.360 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.361 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.360, i64 0, i32 2
  %.362 = load %FloRange.560223*, %FloRange.560223** %.361, align 8
  tail call void %.315(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.349, %FloRange.560223* %.362)
  ret void

for.body.endif.if.endif.endif:                    ; preds = %for.body.endif.if.endif
  %.367 = load i64, i64* %20, align 8
  %.369.not = icmp eq i64 %.367, %.296
  br i1 %.369.not, label %for.body.endif.if.endif.endif.endif, label %for.body.endif.if.endif.endif.if

for.body.endif.if.endif.endif.if:                 ; preds = %for.body.endif.if.endif.endif
  %44 = inttoptr i64 %.443 to %string.560217*
  %.373 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.374 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.373, i64 0, i32 16
  %.375 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.374, align 8
  %.378 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.379 = load %string.560217*, %string.560217** %.378, align 8
  %.381 = tail call %string.560217* @dump_access(i64 %.296)
  %.382 = getelementptr inbounds %string.560217, %string.560217* %44, i64 0, i32 0
  %.383 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.382, align 8
  %.384 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.383, i64 0, i32 11
  %.385 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.384, align 8
  %.386 = tail call i8* %.385(%string.560217* %44)
  %.387 = getelementptr inbounds %string.560217, %string.560217* %.379, i64 0, i32 0
  %.388 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.387, align 8
  %.389 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.388, i64 0, i32 11
  %.390 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.389, align 8
  %.391 = tail call i8* %.390(%string.560217* %.379)
  %.392 = getelementptr inbounds %string.560217, %string.560217* %.381, i64 0, i32 0
  %.393 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.392, align 8
  %.394 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.393, i64 0, i32 11
  %.395 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.394, align 8
  %.396 = tail call i8* %.395(%string.560217* %.381)
  %.398 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.253, i64 0, i64 0), i8* %.386, i8* %.391, i8* %.396)
  %.399 = add i64 %.398, 1
  %.401 = tail call i8* @malloc(i64 %.399)
  %.402 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.401, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.253, i64 0, i64 0), i8* %.386, i8* %.391, i8* %.396)
  %.403 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.404 = bitcast i8* %.403 to %string.560217*
  %.405 = bitcast i8* %.403 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.405, align 8
  %.407 = getelementptr inbounds i8, i8* %.403, i64 8
  %45 = bitcast i8* %.407 to i8**
  store i8* %.401, i8** %45, align 8
  %.409 = getelementptr inbounds i8, i8* %.403, i64 16
  %46 = bitcast i8* %.409 to i64*
  store i64 %.398, i64* %46, align 8
  %.411 = getelementptr inbounds i8, i8* %.403, i64 24
  %47 = bitcast i8* %.411 to i64*
  store i64 %.398, i64* %47, align 8
  %.415 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.416 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.415, i64 0, i32 2
  %.417 = load %FloRange.560223*, %FloRange.560223** %.416, align 8
  tail call void %.375(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.404, %FloRange.560223* %.417)
  ret void

for.body.endif.if.endif.endif.endif:              ; preds = %for.body.endif.if.endif.endif
  %.423 = load %Program.560549*, %Program.560549** %.287, align 8
  %.425 = tail call i64 @get_vtable_index(%Program.560549* %.423, %PropId.560449* nonnull %.227)
  br label %for.body.endif.endif

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.453 = load i1, i1* %.185, align 1
  br i1 %.453, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.else:                        ; preds = %for.body.endif.endif
  %.512 = load %string.560217*, %string.560217** %6, align 8
  %.513 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.514 = bitcast i8* %.513 to %string.560217*
  %.514.repack = bitcast i8* %.513 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.514.repack, align 8
  %.514.repack10 = getelementptr inbounds i8, i8* %.513, i64 8
  %48 = bitcast i8* %.514.repack10 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.255, i64 0, i64 0), i8** %48, align 8
  %.514.repack11 = getelementptr inbounds i8, i8* %.513, i64 16
  %49 = bitcast i8* %.514.repack11 to i64*
  store i64 11, i64* %49, align 8
  %.514.repack12 = getelementptr inbounds i8, i8* %.513, i64 24
  %50 = bitcast i8* %.514.repack12 to i64*
  store i64 11, i64* %50, align 8
  %.516 = getelementptr inbounds %string.560217, %string.560217* %.512, i64 0, i32 0
  %.517 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.516, align 8
  %.518 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.517, i64 0, i32 4
  %.519 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.518, align 8
  %.520 = tail call i1 %.519(%string.560217* %.512, %string.560217* %.514)
  br i1 %.520, label %for.body.endif.endif.else.if, label %for.body.endif.endif.else.else

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.else.endif.if.if, %for.body.endif.endif.else.endif.if, %for.body.endif.endif.else.endif, %for.body.endif.endif.if.endif.endif
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.082, %for.body.endif.endif.if.endif.endif ], [ %current_vtable_index.2, %for.body.endif.endif.else.endif ], [ %current_vtable_index.2, %for.body.endif.endif.else.endif.if ], [ %current_vtable_index.2, %for.body.endif.endif.else.endif.if.if ]
  %.65718 = load i64, i64* %8, align 8
  %.658 = getelementptr inbounds i8, i8* %.24, i64 72
  %51 = bitcast i8* %.658 to i64*
  store i64 %.65718, i64* %51, align 8
  %.662 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.661, align 8
  %.664 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.662, i64 0, i32 0
  %.665 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.664, align 8
  %.666 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.665, i64 0, i32 2
  %.667 = load void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)*, void (%"Array<ClassMethod>.560516"*, %ClassMethod.560511*)** %.666, align 8
  tail call void %.667(%"Array<ClassMethod>.560516"* %.662, %ClassMethod.560511* nonnull %.25)
  %.671 = getelementptr inbounds %Scope.560473, %Scope.560473* %.55, i64 0, i32 6
  %52 = bitcast %ScopeId.560471** %.671 to i64*
  %.67219 = load i64, i64* %52, align 8
  store i64 %.67219, i64* %0, align 8
  %.679 = add nuw nsw i64 %storemerge81, 1
  %.19 = load %"Array<MethodNode>.560347"*, %"Array<MethodNode>.560347"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.19, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp slt i64 %.679, %.21
  br i1 %.22, label %for.body, label %for.end

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.457 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.458 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.457, i64 0, i32 16
  %.459 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.458, align 8
  %.460 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.461 = bitcast i8* %.460 to %string.560217*
  %.461.repack = bitcast i8* %.460 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.461.repack, align 8
  %.461.repack37 = getelementptr inbounds i8, i8* %.460, i64 8
  %53 = bitcast i8* %.461.repack37 to i8**
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.254, i64 0, i64 0), i8** %53, align 8
  %.461.repack38 = getelementptr inbounds i8, i8* %.460, i64 16
  %54 = bitcast i8* %.461.repack38 to i64*
  store i64 31, i64* %54, align 8
  %.461.repack39 = getelementptr inbounds i8, i8* %.460, i64 24
  %55 = bitcast i8* %.461.repack39 to i64*
  store i64 31, i64* %55, align 8
  %.465 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.466 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.465, i64 0, i32 2
  %.467 = load %FloRange.560223*, %FloRange.560223** %.466, align 8
  tail call void %.459(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.461, %FloRange.560223* %.467)
  ret void

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if
  %.472 = load %string.560217*, %string.560217** %6, align 8
  %.473 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.474 = bitcast i8* %.473 to %string.560217*
  %.474.repack = bitcast i8* %.473 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.474.repack, align 8
  %.474.repack31 = getelementptr inbounds i8, i8* %.473, i64 8
  %56 = bitcast i8* %.474.repack31 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.255, i64 0, i64 0), i8** %56, align 8
  %.474.repack32 = getelementptr inbounds i8, i8* %.473, i64 16
  %57 = bitcast i8* %.474.repack32 to i64*
  store i64 11, i64* %57, align 8
  %.474.repack33 = getelementptr inbounds i8, i8* %.473, i64 24
  %58 = bitcast i8* %.474.repack33 to i64*
  store i64 11, i64* %58, align 8
  %.476 = getelementptr inbounds %string.560217, %string.560217* %.472, i64 0, i32 0
  %.477 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.476, align 8
  %.478 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.477, i64 0, i32 4
  %.479 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.478, align 8
  %.480 = tail call i1 %.479(%string.560217* %.472, %string.560217* %.474)
  br i1 %.480, label %for.body.endif.endif.if.endif.if, label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.484 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.485 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.484, i64 0, i32 16
  %.486 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.485, align 8
  %.487 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.488 = bitcast i8* %.487 to %string.560217*
  %.488.repack = bitcast i8* %.487 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.488.repack, align 8
  %.488.repack34 = getelementptr inbounds i8, i8* %.487, i64 8
  %59 = bitcast i8* %.488.repack34 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.256, i64 0, i64 0), i8** %59, align 8
  %.488.repack35 = getelementptr inbounds i8, i8* %.487, i64 16
  %60 = bitcast i8* %.488.repack35 to i64*
  store i64 33, i64* %60, align 8
  %.488.repack36 = getelementptr inbounds i8, i8* %.487, i64 24
  %61 = bitcast i8* %.488.repack36 to i64*
  store i64 33, i64* %61, align 8
  %.492 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.493 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.492, i64 0, i32 2
  %.494 = load %FloRange.560223*, %FloRange.560223** %.493, align 8
  tail call void %.486(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.488, %FloRange.560223* %.494)
  ret void

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif
  %.499 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.498, align 8
  %.500 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.499, i64 0, i32 0
  %.501 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.500, align 8
  %.502 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.501, i64 0, i32 2
  %.503 = load void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)** %.502, align 8
  %.507 = load %PropId.560449*, %PropId.560449** %33, align 8
  tail call void %.503(%"Map<string, PropId>.560517"* %.499, %string.560217* %14, %PropId.560449* %.507)
  br label %for.body.endif.endif.endif

for.body.endif.endif.else.if:                     ; preds = %for.body.endif.endif.else
  %.524 = load i1, i1* %.185, align 1
  br i1 %.524, label %for.body.endif.endif.else.if.if, label %for.body.endif.endif.else.if.endif

for.body.endif.endif.else.else:                   ; preds = %for.body.endif.endif.else
  %.550 = load i64, i64* %20, align 8
  %.551.not = icmp eq i64 %.550, 1
  br i1 %.551.not, label %for.body.endif.endif.else.else.else, label %for.body.endif.endif.else.else.if

for.body.endif.endif.else.endif:                  ; preds = %for.body.endif.endif.else.else.endif, %for.body.endif.endif.else.if.endif
  %current_vtable_index.2 = phi i64 [ %current_vtable_index.082, %for.body.endif.endif.else.if.endif ], [ %current_vtable_index.3, %for.body.endif.endif.else.else.endif ]
  %.594 = load %ClassId.560397*, %ClassId.560397** %.238, align 8
  %.595 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.596 = bitcast i8* %.595 to %ObjectType.560407*
  %.597 = bitcast i8* %.595 to %ObjectType_vtable_ty.560408**
  store %ObjectType_vtable_ty.560408* @ObjectType_vtable_data, %ObjectType_vtable_ty.560408** %.597, align 8
  tail call void @ObjectType_constructor(%ObjectType.560407* %.596, %ClassId.560397* %.594)
  %.603 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.604 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.603, i64 0, i32 25
  %.605 = load %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)*, %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)** %.604, align 8
  %.606 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.607 = bitcast i8* %.606 to %string.560217*
  %.607.repack = bitcast i8* %.606 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.607.repack, align 8
  %.607.repack13 = getelementptr inbounds i8, i8* %.606, i64 8
  %62 = bitcast i8* %.607.repack13 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.159, i64 0, i64 0), i8** %62, align 8
  %.607.repack14 = getelementptr inbounds i8, i8* %.606, i64 16
  %63 = bitcast i8* %.607.repack14 to i64*
  store i64 4, i64* %63, align 8
  %.607.repack15 = getelementptr inbounds i8, i8* %.606, i64 24
  %64 = bitcast i8* %.607.repack15 to i64*
  store i64 4, i64* %64, align 8
  %65 = bitcast i8* %.595 to %Type.560381*
  %.611 = tail call %Const.560507* %.605(%TypeChecker.560555* nonnull %.1, %string.560217* %.607, %Expression.560401* null, %Type.560381* %65)
  %.61517 = load i64, i64* %4, align 8
  %.616 = trunc i64 %.61517 to i32
  %.618.not = icmp eq i32 %.616, 0
  br i1 %.618.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.else.endif.if

for.body.endif.endif.else.if.if:                  ; preds = %for.body.endif.endif.else.if
  %.528 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.529 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.528, i64 0, i32 16
  %.530 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.529, align 8
  %.531 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.532 = bitcast i8* %.531 to %string.560217*
  %.532.repack = bitcast i8* %.531 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.532.repack, align 8
  %.532.repack28 = getelementptr inbounds i8, i8* %.531, i64 8
  %66 = bitcast i8* %.532.repack28 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.257, i64 0, i64 0), i8** %66, align 8
  %.532.repack29 = getelementptr inbounds i8, i8* %.531, i64 16
  %67 = bitcast i8* %.532.repack29 to i64*
  store i64 35, i64* %67, align 8
  %.532.repack30 = getelementptr inbounds i8, i8* %.531, i64 24
  %68 = bitcast i8* %.532.repack30 to i64*
  store i64 35, i64* %68, align 8
  %.536 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.537 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.536, i64 0, i32 2
  %.538 = load %FloRange.560223*, %FloRange.560223** %.537, align 8
  tail call void %.530(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.532, %FloRange.560223* %.538)
  ret void

for.body.endif.endif.else.if.endif:               ; preds = %for.body.endif.endif.else.if
  %69 = bitcast i8* %.445 to i64*
  %.54427 = load i64, i64* %69, align 8
  store i64 %.54427, i64* %3, align 8
  br label %for.body.endif.endif.else.endif

for.body.endif.endif.else.else.if:                ; preds = %for.body.endif.endif.else.else
  %.556 = add i64 %current_vtable_index.082, 1
  br label %for.body.endif.endif.else.else.endif

for.body.endif.endif.else.else.else:              ; preds = %for.body.endif.endif.else.else
  %.561 = load i1, i1* %.185, align 1
  br i1 %.561, label %for.body.endif.endif.else.else.else.if, label %for.body.endif.endif.else.else.endif

for.body.endif.endif.else.else.endif:             ; preds = %for.body.endif.endif.else.else.else, %for.body.endif.endif.else.else.if
  %current_vtable_index.3 = phi i64 [ %.556, %for.body.endif.endif.else.else.if ], [ %current_vtable_index.082, %for.body.endif.endif.else.else.else ]
  %.581 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.220, align 8
  %.582 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.581, i64 0, i32 0
  %.583 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.582, align 8
  %.584 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.583, i64 0, i32 2
  %.585 = load void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)** %.584, align 8
  %.589 = load %PropId.560449*, %PropId.560449** %33, align 8
  tail call void %.585(%"Map<string, PropId>.560517"* %.581, %string.560217* %14, %PropId.560449* %.589)
  br label %for.body.endif.endif.else.endif

for.body.endif.endif.else.else.else.if:           ; preds = %for.body.endif.endif.else.else.else
  %.565 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.566 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.565, i64 0, i32 16
  %.567 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.566, align 8
  %.568 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.569 = bitcast i8* %.568 to %string.560217*
  %.569.repack = bitcast i8* %.568 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.569.repack, align 8
  %.569.repack24 = getelementptr inbounds i8, i8* %.568, i64 8
  %70 = bitcast i8* %.569.repack24 to i8**
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.258, i64 0, i64 0), i8** %70, align 8
  %.569.repack25 = getelementptr inbounds i8, i8* %.568, i64 16
  %71 = bitcast i8* %.569.repack25 to i64*
  store i64 58, i64* %71, align 8
  %.569.repack26 = getelementptr inbounds i8, i8* %.568, i64 24
  %72 = bitcast i8* %.569.repack26 to i64*
  store i64 58, i64* %72, align 8
  %.573 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.41, align 8
  %.574 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.573, i64 0, i32 2
  %.575 = load %FloRange.560223*, %FloRange.560223** %.574, align 8
  tail call void %.567(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.569, %FloRange.560223* %.575)
  ret void

for.body.endif.endif.else.endif.if:               ; preds = %for.body.endif.endif.else.endif
  %73 = inttoptr i64 %.61517 to %Type.560381*
  %.622 = load %Program.560549*, %Program.560549** %.287, align 8
  %.626 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.622, %Type.560381* %73)
  %.627 = getelementptr inbounds %Class.560513, %Class.560513* %.626, i64 0, i32 4
  %74 = bitcast %PropId.560449** %.627 to i64*
  %.62820 = load i64, i64* %74, align 8
  %.631 = trunc i64 %.62820 to i32
  %.633.not = icmp eq i32 %.631, 0
  br i1 %.633.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.else.endif.if.if

for.body.endif.endif.else.endif.if.if:            ; preds = %for.body.endif.endif.else.endif.if
  %75 = inttoptr i64 %.62820 to %PropId.560449*
  %.637 = load %Program.560549*, %Program.560549** %.287, align 8
  %.639 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.637, %PropId.560449* %75)
  %.643 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.644 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.643, i64 0, i32 25
  %.645 = load %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)*, %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)** %.644, align 8
  %.646 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.647 = bitcast i8* %.646 to %string.560217*
  %.647.repack = bitcast i8* %.646 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.647.repack, align 8
  %.647.repack21 = getelementptr inbounds i8, i8* %.646, i64 8
  %76 = bitcast i8* %.647.repack21 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.259, i64 0, i64 0), i8** %76, align 8
  %.647.repack22 = getelementptr inbounds i8, i8* %.646, i64 16
  %77 = bitcast i8* %.647.repack22 to i64*
  store i64 5, i64* %77, align 8
  %.647.repack23 = getelementptr inbounds i8, i8* %.646, i64 24
  %78 = bitcast i8* %.647.repack23 to i64*
  store i64 5, i64* %78, align 8
  %.650 = tail call %Const.560507* %.645(%TypeChecker.560555* nonnull %.1, %string.560217* %.647, %Expression.560401* null, %Type.560381* %.639)
  br label %for.body.endif.endif.endif
}

define void @TypeChecker_add_inherited_props_to_class(%TypeChecker.560555* %.1, %Class.560513* nocapture %.2, %ClassDeclarationNode.560343* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 3
  %.11 = load %Type.560381*, %Type.560381** %.10, align 8
  %.14 = tail call i1 @is_object(%Type.560381* %.11)
  br i1 %.14, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.18 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.19 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.18, align 8
  %.20 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.19, i64 0, i32 16
  %.21 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.20, align 8
  %.25 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.19, i64 0, i32 10
  %.26 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.25, align 8
  %.28 = tail call %string.560217* %.26(%TypeChecker.560555* %.1, %Type.560381* %.11)
  %.29 = getelementptr inbounds %string.560217, %string.560217* %.28, i64 0, i32 0
  %.30 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.29, align 8
  %.31 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.30, i64 0, i32 11
  %.32 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.31, align 8
  %.33 = tail call i8* %.32(%string.560217* %.28)
  %.35 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.260, i64 0, i64 0), i8* %.33)
  %.36 = add i64 %.35, 1
  %.38 = tail call i8* @malloc(i64 %.36)
  %.39 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.38, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.260, i64 0, i64 0), i8* %.33)
  %.40 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %string.560217*
  %.42 = bitcast i8* %.40 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.42, align 8
  %.44 = getelementptr inbounds i8, i8* %.40, i64 8
  %0 = bitcast i8* %.44 to i8**
  store i8* %.38, i8** %0, align 8
  %.46 = getelementptr inbounds i8, i8* %.40, i64 16
  %1 = bitcast i8* %.46 to i64*
  store i64 %.35, i64* %1, align 8
  %.48 = getelementptr inbounds i8, i8* %.40, i64 24
  %2 = bitcast i8* %.48 to i64*
  store i64 %.35, i64* %2, align 8
  %.51 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.3, i64 0, i32 3
  %.52 = load %RecordTypeNode.560271*, %RecordTypeNode.560271** %.51, align 8
  %.53 = getelementptr inbounds %RecordTypeNode.560271, %RecordTypeNode.560271* %.52, i64 0, i32 1
  %.54 = load %FloRange.560223*, %FloRange.560223** %.53, align 8
  tail call void %.21(%TypeChecker.560555* %.1, i64 5, %string.560217* %.41, %FloRange.560223* %.54)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.58 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.59 = load %Program.560549*, %Program.560549** %.58, align 8
  %.61 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.59, %Type.560381* %.11)
  %.64 = getelementptr inbounds %Class.560513, %Class.560513* %.61, i64 0, i32 7
  %.65 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.64, align 8
  %.66 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.65, i64 0, i32 0
  %.67 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.66, align 8
  %.68 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.67, i64 0, i32 4
  %.69 = load %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)*, %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)** %.68, align 8
  %.70 = tail call %"Array<Bucket<string, PropId>>.560523"* %.69(%"Map<string, PropId>.560517"* %.65)
  %.77 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.70, i64 0, i32 2
  %.784 = load i64, i64* %.77, align 8
  %.795 = icmp sgt i64 %.784, 0
  br i1 %.795, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif
  %.83 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.70, i64 0, i32 0
  %.108 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 7
  %.152 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 10
  %.165 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.187, %for.incr ]
  %.84 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.83, align 8
  %.85 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.84, i64 0, i32 5
  %.86 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.85, align 8
  %.87 = tail call %"Bucket<string, PropId>.560521"* %.86(%"Array<Bucket<string, PropId>>.560523"* nonnull %.70, i64 %storemerge6)
  %.88 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.87, i64 0, i32 1
  %.8917 = load %string.560217*, %string.560217** %.88, align 8
  %.94 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.83, align 8
  %.95 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.94, i64 0, i32 5
  %.96 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.95, align 8
  %.97 = tail call %"Bucket<string, PropId>.560521"* %.96(%"Array<Bucket<string, PropId>>.560523"* nonnull %.70, i64 %storemerge6)
  %.98 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.97, i64 0, i32 2
  %.9928 = load %PropId.560449*, %PropId.560449** %.98, align 8
  %.103 = load %Program.560549*, %Program.560549** %.58, align 8
  %.105 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.103, %PropId.560449* %.9928)
  %.109 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.108, align 8
  %.110 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.109, i64 0, i32 0
  %.111 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.110, align 8
  %.112 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.111, i64 0, i32 3
  %.113 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.112, align 8
  %.115 = tail call %PropId.560449* %.113(%"Map<string, PropId>.560517"* %.109, %string.560217* %.8917)
  %.119 = load %Program.560549*, %Program.560549** %.58, align 8
  %.121 = tail call i64 @get_class_prop_visibility(%Program.560549* %.119, %PropId.560449* %.9928)
  %.125 = load %Program.560549*, %Program.560549** %.58, align 8
  %.127 = tail call i1 @is_class_prop_static(%Program.560549* %.125, %PropId.560449* %.9928)
  br i1 %.127, label %for.incr, label %for.body.endif

for.incr:                                         ; preds = %for.body.endif, %for.body.endif.endif.if.endif.endif, %for.body
  %.187 = add nuw nsw i64 %storemerge6, 1
  %.78 = load i64, i64* %.77, align 8
  %.79 = icmp slt i64 %.187, %.78
  br i1 %.79, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.5.endif
  ret void

for.body.endif:                                   ; preds = %for.body
  %3 = ptrtoint %PropId.560449* %.115 to i64
  %.133 = icmp ne i64 %.121, 1
  %.135 = getelementptr inbounds %Type.560381, %Type.560381* %.105, i64 0, i32 1
  %.136 = load i64, i64* %.135, align 8
  %.137 = icmp ne i64 %.136, 17
  %.138.not = or i1 %.133, %.137
  %.142 = trunc i64 %3 to i32
  %.144 = icmp eq i32 %.142, 0
  %or.cond = and i1 %.138.not, %.144
  br i1 %or.cond, label %for.body.endif.endif.if, label %for.incr

for.body.endif.endif.if:                          ; preds = %for.body.endif
  %.147 = getelementptr inbounds %PropId.560449, %PropId.560449* %.9928, i64 0, i32 1
  %.148 = load i64, i64* %.147, align 8
  %.149 = icmp eq i64 %.148, 1
  br i1 %.149, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.153 = load i64, i64* %.152, align 8
  %.154 = add i64 %.153, 1
  store i64 %.154, i64* %.152, align 8
  %.161.pr = load i64, i64* %.147, align 8
  br label %for.body.endif.endif.if.endif

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if.if, %for.body.endif.endif.if
  %.161 = phi i64 [ %.161.pr, %for.body.endif.endif.if.if ], [ %.148, %for.body.endif.endif.if ]
  %.162 = icmp eq i64 %.161, 0
  br i1 %.162, label %for.body.endif.endif.if.endif.if, label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.166 = load i64, i64* %.165, align 8
  %.167 = add i64 %.166, 1
  store i64 %.167, i64* %.165, align 8
  br label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif.if, %for.body.endif.endif.if.endif
  %.174 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.108, align 8
  %.175 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.174, i64 0, i32 0
  %.176 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.175, align 8
  %.177 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.176, i64 0, i32 2
  %.178 = load void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)*, void (%"Map<string, PropId>.560517"*, %string.560217*, %PropId.560449*)** %.177, align 8
  tail call void %.178(%"Map<string, PropId>.560517"* %.174, %string.560217* %.8917, %PropId.560449* nonnull %.9928)
  br label %for.incr
}

define void @TypeChecker_check_class_body(%TypeChecker.560555* %.1, %ClassDeclarationNode.560343* %.2) {
.4:
  %.8 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.2, i64 0, i32 1
  %.9 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.9, i64 0, i32 3
  %.11 = load %string.560217*, %string.560217** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.15, i64 0, i32 14
  %.17 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.16, align 8
  %.19 = tail call %Type.560381* %.17(%TypeChecker.560555* %.1, %string.560217* %.11)
  %.22 = getelementptr inbounds %Type.560381, %Type.560381* %.19, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 21
  br i1 %.24, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %for.body.1.endif, %.4.endif.endif.endif, %.4.endif.endif, %.4
  ret void

.4.endif:                                         ; preds = %.4
  %.28 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.29 = load %Program.560549*, %Program.560549** %.28, align 8
  %.31 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.29, %Type.560381* %.19)
  %.34 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 3
  %0 = bitcast %ClassId.560397** %.34 to i64*
  %.351 = load i64, i64* %0, align 8
  %.39 = getelementptr inbounds %Class.560513, %Class.560513* %.31, i64 0, i32 1
  %1 = bitcast %ClassId.560397** %.39 to i64*
  %.402 = load i64, i64* %1, align 8
  store i64 %.402, i64* %0, align 8
  %.44 = getelementptr inbounds %Class.560513, %Class.560513* %.31, i64 0, i32 3
  %2 = bitcast %Type.560381** %.44 to i64*
  %.453 = load i64, i64* %2, align 8
  %.46 = trunc i64 %.453 to i32
  %.48.not = icmp eq i32 %.46, 0
  br i1 %.48.not, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.52 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.52, i64 0, i32 43
  %.54 = load void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)** %.53, align 8
  tail call void %.54(%TypeChecker.560555* nonnull %.1, %Class.560513* %.31, %ClassDeclarationNode.560343* nonnull %.2)
  br label %.4.endif.endif

.4.endif.endif:                                   ; preds = %.4.endif, %.4.endif.if
  %.61 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.62 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.61, i64 0, i32 41
  %.63 = load void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)** %.62, align 8
  tail call void %.63(%TypeChecker.560555* nonnull %.1, %Class.560513* %.31, %ClassDeclarationNode.560343* nonnull %.2)
  %.69 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.69, i64 0, i32 17
  %.71 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.70, align 8
  %.72 = tail call i1 %.71(%TypeChecker.560555* nonnull %.1)
  br i1 %.72, label %.4.if, label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif
  %.77 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.78 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.77, i64 0, i32 42
  %.79 = load void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)*, void (%TypeChecker.560555*, %Class.560513*, %ClassDeclarationNode.560343*)** %.78, align 8
  tail call void %.79(%TypeChecker.560555* nonnull %.1, %Class.560513* %.31, %ClassDeclarationNode.560343* nonnull %.2)
  %.85 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.85, i64 0, i32 17
  %.87 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.86, align 8
  %.88 = tail call i1 %.87(%TypeChecker.560555* nonnull %.1)
  br i1 %.88, label %.4.if, label %.4.endif.endif.endif.endif

.4.endif.endif.endif.endif:                       ; preds = %.4.endif.endif.endif
  %.92 = getelementptr inbounds %Class.560513, %Class.560513* %.31, i64 0, i32 7
  %.93 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.92, align 8
  %.94 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.93, i64 0, i32 0
  %.95 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.94, align 8
  %.96 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.95, i64 0, i32 4
  %.97 = load %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)*, %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)** %.96, align 8
  %.98 = tail call %"Array<Bucket<string, PropId>>.560523"* %.97(%"Map<string, PropId>.560517"* %.93)
  %.105 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.98, i64 0, i32 2
  %.10622 = load i64, i64* %.105, align 8
  %.10723 = icmp sgt i64 %.10622, 0
  br i1 %.10723, label %for.body.lr.ph, label %for.entry.1

for.body.lr.ph:                                   ; preds = %.4.endif.endif.endif.endif
  %.111 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.98, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge24 = phi i64 [ 0, %for.body.lr.ph ], [ %.194, %for.body.endif ]
  %.112 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.111, align 8
  %.113 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.112, i64 0, i32 5
  %.114 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.113, align 8
  %.115 = tail call %"Bucket<string, PropId>.560521"* %.114(%"Array<Bucket<string, PropId>>.560523"* nonnull %.98, i64 %storemerge24)
  %.116 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.115, i64 0, i32 2
  %.1171228 = load %PropId.560449*, %PropId.560449** %.116, align 8
  %.122 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.111, align 8
  %.123 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.122, i64 0, i32 5
  %.124 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.123, align 8
  %.125 = tail call %"Bucket<string, PropId>.560521"* %.124(%"Array<Bucket<string, PropId>>.560523"* nonnull %.98, i64 %storemerge24)
  %.130 = getelementptr inbounds %PropId.560449, %PropId.560449* %.1171228, i64 0, i32 1
  %.131 = load i64, i64* %.130, align 8
  %.132 = icmp eq i64 %.131, 0
  br i1 %.132, label %for.body.if, label %for.body.endif

for.body.if:                                      ; preds = %for.body
  %.126 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.125, i64 0, i32 1
  %.1271329 = load %string.560217*, %string.560217** %.126, align 8
  %.136 = load %Program.560549*, %Program.560549** %.28, align 8
  %.138 = tail call %ClassMethod.560511* @get_method(%Program.560549* %.136, %PropId.560449* %.1171228)
  %.141 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.138, i64 0, i32 8
  %.142 = load i1, i1* %.141, align 1
  br i1 %.142, label %for.body.if.if, label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.194 = add nuw nsw i64 %storemerge24, 1
  %.106 = load i64, i64* %.105, align 8
  %.107 = icmp slt i64 %.194, %.106
  br i1 %.107, label %for.body, label %for.entry.1

for.body.if.if:                                   ; preds = %for.body.if
  %.145 = getelementptr inbounds %Class.560513, %Class.560513* %.31, i64 0, i32 4
  %3 = bitcast %PropId.560449** %.145 to i64*
  %.14614 = load i64, i64* %3, align 8
  %.147 = trunc i64 %.14614 to i32
  %.149.not = icmp eq i32 %.147, 0
  br i1 %.149.not, label %for.body.if.if.endif, label %for.body.if.if.if

for.body.if.if.if:                                ; preds = %for.body.if.if
  %.153 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.154 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.153, i64 0, i32 16
  %.155 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.154, align 8
  %.157 = getelementptr inbounds %string.560217, %string.560217* %.1271329, i64 0, i32 0
  %.158 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.157, align 8
  %.159 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.158, i64 0, i32 11
  %.160 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.159, align 8
  %.161 = tail call i8* %.160(%string.560217* %.1271329)
  %.163 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @str.261, i64 0, i64 0), i8* %.161)
  %.164 = add i64 %.163, 1
  %.166 = tail call i8* @malloc(i64 %.164)
  %.167 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.166, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @str.261, i64 0, i64 0), i8* %.161)
  %.168 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.169 = bitcast i8* %.168 to %string.560217*
  %.170 = bitcast i8* %.168 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.170, align 8
  %.172 = getelementptr inbounds i8, i8* %.168, i64 8
  %4 = bitcast i8* %.172 to i8**
  store i8* %.166, i8** %4, align 8
  %.174 = getelementptr inbounds i8, i8* %.168, i64 16
  %5 = bitcast i8* %.174 to i64*
  store i64 %.163, i64* %5, align 8
  %.176 = getelementptr inbounds i8, i8* %.168, i64 24
  %6 = bitcast i8* %.176 to i64*
  store i64 %.163, i64* %6, align 8
  %.180 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.181 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.180, i64 0, i32 2
  %.182 = load %FloRange.560223*, %FloRange.560223** %.181, align 8
  tail call void %.155(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.169, %FloRange.560223* %.182)
  ret void

for.body.if.if.endif:                             ; preds = %for.body.if.if
  %.186 = getelementptr inbounds %Class.560513, %Class.560513* %.31, i64 0, i32 11
  store i1 true, i1* %.186, align 1
  br label %for.entry.1

for.entry.1:                                      ; preds = %for.body.endif, %.4.endif.endif.endif.endif, %for.body.if.if.endif
  %.202 = getelementptr inbounds %Class.560513, %Class.560513* %.31, i64 0, i32 6
  %.20316 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.202, align 8
  %.20417 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.20316, i64 0, i32 2
  %.20518 = load i64, i64* %.20417, align 8
  %.20619 = icmp sgt i64 %.20518, 0
  br i1 %.20619, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.entry.1
  %.222 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 5
  %7 = bitcast %PropId.560449** %.222 to i64*
  %.226 = getelementptr inbounds %ClassDeclarationNode.560343, %ClassDeclarationNode.560343* %.2, i64 0, i32 5
  %.238 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %8 = bitcast %ScopeId.560471** %.238 to i64*
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.incr.1
  %.20321 = phi %"Array<ClassMethod>.560516"* [ %.20316, %for.body.1.lr.ph ], [ %.203, %for.incr.1 ]
  %storemerge420 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.333, %for.incr.1 ]
  %.212 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.20321, i64 0, i32 0
  %.213 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.212, align 8
  %.214 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.213, i64 0, i32 5
  %.215 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.214, align 8
  %.216 = tail call %ClassMethod.560511* %.215(%"Array<ClassMethod>.560516"* %.20321, i64 %storemerge420)
  %.220 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.216, i64 0, i32 1
  %9 = bitcast %PropId.560449** %.220 to i64*
  %.2216 = load i64, i64* %9, align 8
  store i64 %.2216, i64* %7, align 8
  %.227 = load %"Array<MethodNode>.560347"*, %"Array<MethodNode>.560347"** %.226, align 8
  %.228 = getelementptr inbounds %"Array<MethodNode>.560347", %"Array<MethodNode>.560347"* %.227, i64 0, i32 0
  %.229 = load %"Array<MethodNode>_vtable_ty.560350"*, %"Array<MethodNode>_vtable_ty.560350"** %.228, align 8
  %.230 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.560350", %"Array<MethodNode>_vtable_ty.560350"* %.229, i64 0, i32 5
  %.231 = load %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)*, %MethodNode.560337* (%"Array<MethodNode>.560347"*, i64)** %.230, align 8
  %.232 = tail call %MethodNode.560337* %.231(%"Array<MethodNode>.560347"* %.227, i64 %storemerge420)
  %.236 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.216, i64 0, i32 9
  %10 = bitcast %ScopeId.560471** %.236 to i64*
  %.2377 = load i64, i64* %10, align 8
  store i64 %.2377, i64* %8, align 8
  %.241 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.216, i64 0, i32 8
  %.242 = load i1, i1* %.241, align 1
  br i1 %.242, label %for.incr.1, label %for.body.1.endif

for.incr.1:                                       ; preds = %for.body.1, %for.body.1.endif.endif.endif
  %.333 = add nuw nsw i64 %storemerge420, 1
  %.203 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.202, align 8
  %.204 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.203, i64 0, i32 2
  %.205 = load i64, i64* %.204, align 8
  %.206 = icmp slt i64 %.333, %.205
  br i1 %.206, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.incr.1, %for.entry.1
  store i64 %.351, i64* %0, align 8
  ret void

for.body.1.endif:                                 ; preds = %for.body.1
  %.248 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.249 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.248, i64 0, i32 83
  %.250 = load %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)*, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)** %.249, align 8
  %.252 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.232, i64 0, i32 3
  %.253 = load %BlockNode.560281*, %BlockNode.560281** %.252, align 8
  %.254 = tail call %Block.560455* %.250(%TypeChecker.560555* nonnull %.1, %BlockNode.560281* %.253)
  %.255 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.216, i64 0, i32 6
  store %Block.560455* %.254, %Block.560455** %.255, align 8
  %.259 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.260 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.259, i64 0, i32 17
  %.261 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.260, align 8
  %.262 = tail call i1 %.261(%TypeChecker.560555* nonnull %.1)
  br i1 %.262, label %.4.if, label %for.body.1.endif.endif

for.body.1.endif.endif:                           ; preds = %for.body.1.endif
  %.267 = load %Block.560455*, %Block.560455** %.255, align 8
  %.268 = getelementptr inbounds %Block.560455, %Block.560455* %.267, i64 0, i32 2
  %.269 = load i1, i1* %.268, align 1
  br i1 %.269, label %for.body.1.endif.endif.endif, label %for.body.1.endif.endif.if

for.body.1.endif.endif.if:                        ; preds = %for.body.1.endif.endif
  %.273 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.216, i64 0, i32 5
  %.274 = load %FunctionType.560387*, %FunctionType.560387** %.273, align 8
  %.275 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.274, i64 0, i32 3
  %.276 = load %Type.560381*, %Type.560381** %.275, align 8
  %.277 = getelementptr inbounds %Type.560381, %Type.560381* %.276, i64 0, i32 1
  %.278 = load i64, i64* %.277, align 8
  %.279 = icmp eq i64 %.278, 12
  br i1 %.279, label %for.body.1.endif.endif.if.if, label %for.body.1.endif.endif.if.else

for.body.1.endif.endif.endif:                     ; preds = %for.body.1.endif.endif, %for.body.1.endif.endif.if.if
  store %PropId.560449* null, %PropId.560449** %.222, align 8
  %.320 = load %Program.560549*, %Program.560549** %.28, align 8
  %.323 = load %ScopeId.560471*, %ScopeId.560471** %.236, align 8
  %.324 = tail call %Scope.560473* @get_scope(%Program.560549* %.320, %ScopeId.560471* %.323)
  %.325 = getelementptr inbounds %Scope.560473, %Scope.560473* %.324, i64 0, i32 6
  %11 = bitcast %ScopeId.560471** %.325 to i64*
  %.3268 = load i64, i64* %11, align 8
  store i64 %.3268, i64* %8, align 8
  br label %for.incr.1

for.body.1.endif.endif.if.if:                     ; preds = %for.body.1.endif.endif.if
  %.284 = getelementptr inbounds %Block.560455, %Block.560455* %.267, i64 0, i32 1
  %.285 = load %"Array<Statement>.560457"*, %"Array<Statement>.560457"** %.284, align 8
  %.286 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.287 = bitcast i8* %.286 to %ReturnStatement.560469*
  %.288 = bitcast i8* %.286 to %ReturnStatement_vtable_ty.560470**
  store %ReturnStatement_vtable_ty.560470* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.560470** %.288, align 8
  tail call void @ReturnStatement_constructor(%ReturnStatement.560469* %.287)
  %.291 = bitcast i8* %.286 to %Statement.560393*
  %.292 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.285, i64 0, i32 0
  %.293 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.292, align 8
  %.294 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.293, i64 0, i32 2
  %.295 = load void (%"Array<Statement>.560457"*, %Statement.560393*)*, void (%"Array<Statement>.560457"*, %Statement.560393*)** %.294, align 8
  tail call void %.295(%"Array<Statement>.560457"* %.285, %Statement.560393* %.291)
  br label %for.body.1.endif.endif.endif

for.body.1.endif.endif.if.else:                   ; preds = %for.body.1.endif.endif.if
  %.300 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.301 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.300, i64 0, i32 16
  %.302 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.301, align 8
  %.303 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.560217*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.304.repack, align 8
  %.304.repack9 = getelementptr inbounds i8, i8* %.303, i64 8
  %12 = bitcast i8* %.304.repack9 to i8**
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.262, i64 0, i64 0), i8** %12, align 8
  %.304.repack10 = getelementptr inbounds i8, i8* %.303, i64 16
  %13 = bitcast i8* %.304.repack10 to i64*
  store i64 38, i64* %13, align 8
  %.304.repack11 = getelementptr inbounds i8, i8* %.303, i64 24
  %14 = bitcast i8* %.304.repack11 to i64*
  store i64 38, i64* %14, align 8
  %.307 = getelementptr inbounds %MethodNode.560337, %MethodNode.560337* %.232, i64 0, i32 5
  %.308 = load %TypeNode.560269*, %TypeNode.560269** %.307, align 8
  %.309 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.308, i64 0, i32 1
  %.310 = load %FloRange.560223*, %FloRange.560223** %.309, align 8
  tail call void %.302(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.304, %FloRange.560223* %.310)
  ret void
}

define void @TypeChecker_check_function_body(%TypeChecker.560555* %.1, %Function.560501* nocapture %.2, %FunctionDeclarationNode.560333* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 7
  %.11 = load i1, i1* %.10, align 1
  br i1 %.11, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif, %.5
  ret void

.5.endif:                                         ; preds = %.5
  %.20 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 1
  %0 = bitcast %VarId.560441** %.20 to i64*
  %.212 = load i64, i64* %0, align 8
  %.22 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 4
  %1 = bitcast %VarId.560441** %.22 to i64*
  store i64 %.212, i64* %1, align 8
  %.30 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 6
  %2 = bitcast %ScopeId.560471** %.30 to i64*
  %.314 = load i64, i64* %2, align 8
  %.32 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %3 = bitcast %ScopeId.560471** %.32 to i64*
  store i64 %.314, i64* %3, align 8
  %.36 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.37 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.36, align 8
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.37, i64 0, i32 83
  %.39 = load %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)*, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)** %.38, align 8
  %.41 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.3, i64 0, i32 3
  %.42 = load %BlockNode.560281*, %BlockNode.560281** %.41, align 8
  %.43 = tail call %Block.560455* %.39(%TypeChecker.560555* %.1, %BlockNode.560281* %.42)
  %.44 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 4
  store %Block.560455* %.43, %Block.560455** %.44, align 8
  %.48 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.36, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.48, i64 0, i32 17
  %.50 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.49, align 8
  %.51 = tail call i1 %.50(%TypeChecker.560555* %.1)
  br i1 %.51, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.56 = load %Block.560455*, %Block.560455** %.44, align 8
  %.57 = getelementptr inbounds %Block.560455, %Block.560455* %.56, i64 0, i32 2
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.62 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 5
  %.63 = load %FunctionType.560387*, %FunctionType.560387** %.62, align 8
  %.64 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.63, i64 0, i32 3
  %.65 = load %Type.560381*, %Type.560381** %.64, align 8
  %.66 = getelementptr inbounds %Type.560381, %Type.560381* %.65, i64 0, i32 1
  %.67 = load i64, i64* %.66, align 8
  %.68 = icmp eq i64 %.67, 12
  br i1 %.68, label %.5.endif.endif.if.if, label %.5.endif.endif.if.else

.5.endif.endif.endif:                             ; preds = %.5.endif.endif, %.5.endif.endif.if.if
  %.105 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.106 = load %Program.560549*, %Program.560549** %.105, align 8
  %.109 = load %ScopeId.560471*, %ScopeId.560471** %.30, align 8
  %.110 = tail call %Scope.560473* @get_scope(%Program.560549* %.106, %ScopeId.560471* %.109)
  %.111 = getelementptr inbounds %Scope.560473, %Scope.560473* %.110, i64 0, i32 6
  %4 = bitcast %ScopeId.560471** %.111 to i64*
  %.1125 = load i64, i64* %4, align 8
  store i64 %.1125, i64* %3, align 8
  ret void

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.73 = getelementptr inbounds %Block.560455, %Block.560455* %.56, i64 0, i32 1
  %.74 = load %"Array<Statement>.560457"*, %"Array<Statement>.560457"** %.73, align 8
  %.75 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.76 = bitcast i8* %.75 to %ReturnStatement.560469*
  %.77 = bitcast i8* %.75 to %ReturnStatement_vtable_ty.560470**
  store %ReturnStatement_vtable_ty.560470* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.560470** %.77, align 8
  tail call void @ReturnStatement_constructor(%ReturnStatement.560469* %.76)
  %.80 = bitcast i8* %.75 to %Statement.560393*
  %.81 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.74, i64 0, i32 0
  %.82 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.81, align 8
  %.83 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.82, i64 0, i32 2
  %.84 = load void (%"Array<Statement>.560457"*, %Statement.560393*)*, void (%"Array<Statement>.560457"*, %Statement.560393*)** %.83, align 8
  tail call void %.84(%"Array<Statement>.560457"* %.74, %Statement.560393* %.80)
  br label %.5.endif.endif.endif

.5.endif.endif.if.else:                           ; preds = %.5.endif.endif.if
  %.89 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.36, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.89, i64 0, i32 16
  %.91 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.90, align 8
  %.92 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.560217*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.93.repack, align 8
  %.93.repack6 = getelementptr inbounds i8, i8* %.92, i64 8
  %5 = bitcast i8* %.93.repack6 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.263, i64 0, i64 0), i8** %5, align 8
  %.93.repack7 = getelementptr inbounds i8, i8* %.92, i64 16
  %6 = bitcast i8* %.93.repack7 to i64*
  store i64 40, i64* %6, align 8
  %.93.repack8 = getelementptr inbounds i8, i8* %.92, i64 24
  %7 = bitcast i8* %.93.repack8 to i64*
  store i64 40, i64* %7, align 8
  %.96 = getelementptr inbounds %FunctionDeclarationNode.560333, %FunctionDeclarationNode.560333* %.3, i64 0, i32 4
  %.97 = load %TypeNode.560269*, %TypeNode.560269** %.96, align 8
  %.98 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.97, i64 0, i32 1
  %.99 = load %FloRange.560223*, %FloRange.560223** %.98, align 8
  tail call void %.91(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.93, %FloRange.560223* %.99)
  ret void
}

define %Type.560381* @TypeChecker_check_type(%TypeChecker.560555* %.1, %TypeNode.560269* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp eq i64 %.9, 0
  br i1 %.10, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.12 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.13 = bitcast i8* %.12 to %Type.560381*
  %.14 = bitcast i8* %.12 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.14, align 8
  tail call void @Type_constructor(%Type.560381* %.13, i64 0)
  ret %Type.560381* %.13

.4.endif:                                         ; preds = %.4
  %.20.off = add i64 %.9, -1
  %0 = icmp ult i64 %.20.off, 11
  br i1 %0, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.31 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.32 = bitcast i8* %.31 to %Type.560381*
  %.33 = bitcast i8* %.31 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.33, align 8
  tail call void @Type_constructor(%Type.560381* %.32, i64 %.9)
  ret %Type.560381* %.32

.4.endif.endif:                                   ; preds = %.4.endif
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif.endif.endif [
    i64 12, label %.4.endif.endif.if
    i64 15, label %.4.endif.endif.endif.if
    i64 16, label %.4.endif.endif.endif.endif.if
    i64 17, label %.4.endif.endif.endif.endif.endif.if
    i64 18, label %.4.endif.endif.endif.endif.endif.endif.if
  ]

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  %.42 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.43 = bitcast i8* %.42 to %Type.560381*
  %.44 = bitcast i8* %.42 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.44, align 8
  tail call void @Type_constructor(%Type.560381* %.43, i64 12)
  ret %Type.560381* %.43

.4.endif.endif.endif.if:                          ; preds = %.4.endif.endif
  %.54 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.55 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.54, align 8
  %.56 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.55, i64 0, i32 46
  %.57 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.56, align 8
  %.60 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 1
  %1 = bitcast %TypeNode.560269* %.60 to %TypeNode.560269**
  %.61 = load %TypeNode.560269*, %TypeNode.560269** %1, align 8
  %.62 = tail call %Type.560381* %.57(%TypeChecker.560555* %.1, %TypeNode.560269* %.61)
  %.63 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.64 = bitcast i8* %.63 to %PointerType.560385*
  %.65 = bitcast i8* %.63 to %PointerType_vtable_ty.560386**
  store %PointerType_vtable_ty.560386* @PointerType_vtable_data, %PointerType_vtable_ty.560386** %.65, align 8
  tail call void @PointerType_constructor(%PointerType.560385* %.64, %Type.560381* %.62)
  %.68 = bitcast i8* %.63 to %Type.560381*
  ret %Type.560381* %.68

.4.endif.endif.endif.endif.if:                    ; preds = %.4.endif.endif
  %.79 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.80 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.79, align 8
  %.81 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.80, i64 0, i32 72
  %.82 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.81, align 8
  %.83 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.84 = bitcast i8* %.83 to %Type.560381*
  %.85 = bitcast i8* %.83 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.85, align 8
  tail call void @Type_constructor(%Type.560381* %.84, i64 7)
  %.89 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 1, i32 1
  %2 = bitcast %FloRange.560223** %.89 to %ExpressionNode.560285**
  %.90 = load %ExpressionNode.560285*, %ExpressionNode.560285** %2, align 8
  %.91 = tail call %Expression.560401* %.82(%TypeChecker.560555* %.1, %Type.560381* %.84, %ExpressionNode.560285* %.90)
  %.94 = getelementptr inbounds %Expression.560401, %Expression.560401* %.91, i64 0, i32 4
  %.95 = load %Type.560381*, %Type.560381** %.94, align 8
  %.96 = tail call i1 @is_int(%Type.560381* %.95)
  br i1 %.96, label %.4.endif.endif.endif.endif.if.endif, label %.4.endif.endif.endif.endif.if.if

.4.endif.endif.endif.endif.if.if:                 ; preds = %.4.endif.endif.endif.endif.if
  %.101 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.79, align 8
  %.102 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.101, i64 0, i32 16
  %.103 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.102, align 8
  %.104 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.105 = bitcast i8* %.104 to %string.560217*
  %.105.repack = bitcast i8* %.104 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.105.repack, align 8
  %.105.repack12 = getelementptr inbounds i8, i8* %.104, i64 8
  %3 = bitcast i8* %.105.repack12 to i8**
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.264, i64 0, i64 0), i8** %3, align 8
  %.105.repack13 = getelementptr inbounds i8, i8* %.104, i64 16
  %4 = bitcast i8* %.105.repack13 to i64*
  store i64 16, i64* %4, align 8
  %.105.repack14 = getelementptr inbounds i8, i8* %.104, i64 24
  %5 = bitcast i8* %.105.repack14 to i64*
  store i64 16, i64* %5, align 8
  %.109 = load %ExpressionNode.560285*, %ExpressionNode.560285** %2, align 8
  %.110 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.109, i64 0, i32 1
  %.111 = load %FloRange.560223*, %FloRange.560223** %.110, align 8
  tail call void %.103(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.105, %FloRange.560223* %.111)
  ret %Type.560381* null

.4.endif.endif.endif.endif.if.endif:              ; preds = %.4.endif.endif.endif.endif.if
  %.115 = getelementptr inbounds %Expression.560401, %Expression.560401* %.91, i64 0, i32 2
  %.116 = load i1, i1* %.115, align 1
  br i1 %.116, label %.4.endif.endif.endif.endif.if.endif.endif, label %.4.endif.endif.endif.endif.if.endif.if

.4.endif.endif.endif.endif.if.endif.if:           ; preds = %.4.endif.endif.endif.endif.if.endif
  %.121 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.79, align 8
  %.122 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.121, i64 0, i32 16
  %.123 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.122, align 8
  %.124 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.125 = bitcast i8* %.124 to %string.560217*
  %.125.repack = bitcast i8* %.124 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.125.repack, align 8
  %.125.repack9 = getelementptr inbounds i8, i8* %.124, i64 8
  %6 = bitcast i8* %.125.repack9 to i8**
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str.265, i64 0, i64 0), i8** %6, align 8
  %.125.repack10 = getelementptr inbounds i8, i8* %.124, i64 16
  %7 = bitcast i8* %.125.repack10 to i64*
  store i64 30, i64* %7, align 8
  %.125.repack11 = getelementptr inbounds i8, i8* %.124, i64 24
  %8 = bitcast i8* %.125.repack11 to i64*
  store i64 30, i64* %8, align 8
  %.129 = load %ExpressionNode.560285*, %ExpressionNode.560285** %2, align 8
  %.130 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.129, i64 0, i32 1
  %.131 = load %FloRange.560223*, %FloRange.560223** %.130, align 8
  tail call void %.123(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.125, %FloRange.560223* %.131)
  ret %Type.560381* null

.4.endif.endif.endif.endif.if.endif.endif:        ; preds = %.4.endif.endif.endif.endif.if.endif
  %.135 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.136 = load %Program.560549*, %Program.560549** %.135, align 8
  %.138 = tail call i64 @evaluate_const_int_expression(%Program.560549* %.136, %Expression.560401* nonnull %.91)
  %.141 = icmp slt i64 %.138, 0
  %.145 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.79, align 8
  br i1 %.141, label %.4.endif.endif.endif.endif.if.endif.endif.if, label %.4.endif.endif.endif.endif.if.endif.endif.endif

.4.endif.endif.endif.endif.if.endif.endif.if:     ; preds = %.4.endif.endif.endif.endif.if.endif.endif
  %.146 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.145, i64 0, i32 16
  %.147 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.146, align 8
  %.148 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.560217*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.149.repack, align 8
  %.149.repack6 = getelementptr inbounds i8, i8* %.148, i64 8
  %9 = bitcast i8* %.149.repack6 to i8**
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.266, i64 0, i64 0), i8** %9, align 8
  %.149.repack7 = getelementptr inbounds i8, i8* %.148, i64 16
  %10 = bitcast i8* %.149.repack7 to i64*
  store i64 31, i64* %10, align 8
  %.149.repack8 = getelementptr inbounds i8, i8* %.148, i64 24
  %11 = bitcast i8* %.149.repack8 to i64*
  store i64 31, i64* %11, align 8
  %.153 = load %ExpressionNode.560285*, %ExpressionNode.560285** %2, align 8
  %.154 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.153, i64 0, i32 1
  %.155 = load %FloRange.560223*, %FloRange.560223** %.154, align 8
  tail call void %.147(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.149, %FloRange.560223* %.155)
  ret %Type.560381* null

.4.endif.endif.endif.endif.if.endif.endif.endif:  ; preds = %.4.endif.endif.endif.endif.if.endif.endif
  %.161 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.145, i64 0, i32 46
  %.162 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.161, align 8
  %.164 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 1
  %12 = bitcast %TypeNode.560269* %.164 to %TypeNode.560269**
  %.165 = load %TypeNode.560269*, %TypeNode.560269** %12, align 8
  %.166 = tail call %Type.560381* %.162(%TypeChecker.560555* nonnull %.1, %TypeNode.560269* %.165)
  %.170 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.171 = bitcast i8* %.170 to %ArrayType.560403*
  %.172 = bitcast i8* %.170 to %ArrayType_vtable_ty.560404**
  store %ArrayType_vtable_ty.560404* @ArrayType_vtable_data, %ArrayType_vtable_ty.560404** %.172, align 8
  tail call void @ArrayType_constructor(%ArrayType.560403* %.171, %Type.560381* %.166, i64 %.138)
  %.175 = bitcast i8* %.170 to %Type.560381*
  ret %Type.560381* %.175

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4.endif.endif
  %.186 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.188 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.190 = bitcast i8* %.188 to %"Array<Type>_vtable_ty.560390"**
  store %"Array<Type>_vtable_ty.560390"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.560390"** %.190, align 8
  %.192 = getelementptr inbounds i8, i8* %.188, i64 8
  %13 = bitcast i8* %.192 to i8**
  store i8* %.186, i8** %13, align 8
  %.194 = getelementptr inbounds i8, i8* %.188, i64 16
  %14 = bitcast i8* %.194 to i64*
  store i64 0, i64* %14, align 8
  %.196 = getelementptr inbounds i8, i8* %.188, i64 24
  %15 = bitcast i8* %.196 to i64*
  store i64 8, i64* %15, align 8
  %.20416 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 1
  %16 = bitcast %TypeNode.560269* %.20416 to %"Array<TypeNode>.560273"**
  %.20517 = load %"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"** %16, align 8
  %.20618 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.20517, i64 0, i32 2
  %.20719 = load i64, i64* %.20618, align 8
  %.20820 = icmp sgt i64 %.20719, 0
  %17 = bitcast i8* %.188 to %"Array<Type>.560389"*
  br i1 %.20820, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.endif.endif.endif.endif.endif.if
  %.212 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.226 = bitcast i8* %.188 to %"Array<Type>_vtable_ty.560390"**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.20522 = phi %"Array<TypeNode>.560273"* [ %.20517, %for.body.lr.ph ], [ %.205, %for.body ]
  %storemerge521 = phi i64 [ 0, %for.body.lr.ph ], [ %.235, %for.body ]
  %.213 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.212, align 8
  %.214 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.213, i64 0, i32 46
  %.215 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.214, align 8
  %.220 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.20522, i64 0, i32 0
  %.221 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.220, align 8
  %.222 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.221, i64 0, i32 5
  %.223 = load %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)*, %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)** %.222, align 8
  %.224 = tail call %TypeNode.560269* %.223(%"Array<TypeNode>.560273"* %.20522, i64 %storemerge521)
  %.225 = tail call %Type.560381* %.215(%TypeChecker.560555* %.1, %TypeNode.560269* %.224)
  %.227 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.226, align 8
  %.228 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.227, i64 0, i32 2
  %.229 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.228, align 8
  tail call void %.229(%"Array<Type>.560389"* %17, %Type.560381* %.225)
  %.235 = add nuw nsw i64 %storemerge521, 1
  %.205 = load %"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"** %16, align 8
  %.206 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.205, i64 0, i32 2
  %.207 = load i64, i64* %.206, align 8
  %.208 = icmp slt i64 %.235, %.207
  br i1 %.208, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.endif.endif.endif.endif.endif.if
  %.239 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.240 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.239, align 8
  %.241 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.240, i64 0, i32 46
  %.242 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.241, align 8
  %.244 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 1, i32 1
  %18 = bitcast %FloRange.560223** %.244 to %TypeNode.560269**
  %.245 = load %TypeNode.560269*, %TypeNode.560269** %18, align 8
  %.246 = tail call %Type.560381* %.242(%TypeChecker.560555* %.1, %TypeNode.560269* %.245)
  %.250 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.251 = bitcast i8* %.250 to %FunctionType.560387*
  %.252 = bitcast i8* %.250 to %FunctionType_vtable_ty.560388**
  store %FunctionType_vtable_ty.560388* @FunctionType_vtable_data, %FunctionType_vtable_ty.560388** %.252, align 8
  tail call void @FunctionType_constructor(%FunctionType.560387* %.251, %"Array<Type>.560389"* %17, %Type.560381* %.246)
  %.255 = bitcast i8* %.250 to %Type.560381*
  ret %Type.560381* %.255

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4.endif.endif
  %.266 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.268 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.270 = bitcast i8* %.268 to %"Array<Type>_vtable_ty.560390"**
  store %"Array<Type>_vtable_ty.560390"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.560390"** %.270, align 8
  %.272 = getelementptr inbounds i8, i8* %.268, i64 8
  %19 = bitcast i8* %.272 to i8**
  store i8* %.266, i8** %19, align 8
  %.274 = getelementptr inbounds i8, i8* %.268, i64 16
  %20 = bitcast i8* %.274 to i64*
  store i64 0, i64* %20, align 8
  %.276 = getelementptr inbounds i8, i8* %.268, i64 24
  %21 = bitcast i8* %.276 to i64*
  store i64 8, i64* %21, align 8
  %.280 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 1
  %22 = bitcast %TypeNode.560269* %.280 to %IdentifierToken.560263**
  %.281129 = load %IdentifierToken.560263*, %IdentifierToken.560263** %22, align 8
  %.284 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 1, i32 1
  %23 = bitcast %FloRange.560223** %.284 to %"Array<TypeNode>.560273"**
  %.285 = load %"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"** %23, align 8
  %.286 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.285, i64 0, i32 2
  %.287 = load i64, i64* %.286, align 8
  %.288 = icmp sgt i64 %.287, 0
  %24 = bitcast i8* %.268 to %"Array<Type>.560389"*
  br i1 %.288, label %for.body.1.lr.ph, label %.4.endif.endif.endif.endif.endif.endif.if.endif

for.body.1.lr.ph:                                 ; preds = %.4.endif.endif.endif.endif.endif.endif.if
  %.303 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.317 = bitcast i8* %.268 to %"Array<Type>_vtable_ty.560390"**
  br label %for.body.1

.4.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.4.endif.endif
  %.431 = tail call %Type.560381* @Type_unknown()
  ret %Type.560381* %.431

.4.endif.endif.endif.endif.endif.endif.if.endif:  ; preds = %for.end.1.endif.endif, %.4.endif.endif.endif.endif.endif.endif.if
  %.381 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.382 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.381, align 8
  %.383 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.382, i64 0, i32 14
  %.384 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.383, align 8
  %.386 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.281129, i64 0, i32 3
  %.387 = load %string.560217*, %string.560217** %.386, align 8
  %.388 = tail call %Type.560381* %.384(%TypeChecker.560555* %.1, %string.560217* %.387)
  %.391 = getelementptr inbounds %Type.560381, %Type.560381* %.388, i64 0, i32 1
  %.392 = load i64, i64* %.391, align 8
  %.393 = icmp eq i64 %.392, 21
  br i1 %.393, label %.4.endif.endif.endif.endif.endif.endif.if.endif.if, label %for.end.1.if

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.29628 = phi %"Array<TypeNode>.560273"* [ %.285, %for.body.1.lr.ph ], [ %.296, %for.body.1 ]
  %storemerge27 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.326, %for.body.1 ]
  %.304 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.303, align 8
  %.305 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.304, i64 0, i32 46
  %.306 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.305, align 8
  %.311 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.29628, i64 0, i32 0
  %.312 = load %"Array<TypeNode>_vtable_ty.560274"*, %"Array<TypeNode>_vtable_ty.560274"** %.311, align 8
  %.313 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.560274", %"Array<TypeNode>_vtable_ty.560274"* %.312, i64 0, i32 5
  %.314 = load %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)*, %TypeNode.560269* (%"Array<TypeNode>.560273"*, i64)** %.313, align 8
  %.315 = tail call %TypeNode.560269* %.314(%"Array<TypeNode>.560273"* %.29628, i64 %storemerge27)
  %.316 = tail call %Type.560381* %.306(%TypeChecker.560555* %.1, %TypeNode.560269* %.315)
  %.318 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.317, align 8
  %.319 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.318, i64 0, i32 2
  %.320 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.319, align 8
  tail call void %.320(%"Array<Type>.560389"* %24, %Type.560381* %.316)
  %.326 = add nuw nsw i64 %storemerge27, 1
  %.296 = load %"Array<TypeNode>.560273"*, %"Array<TypeNode>.560273"** %23, align 8
  %.297 = getelementptr inbounds %"Array<TypeNode>.560273", %"Array<TypeNode>.560273"* %.296, i64 0, i32 2
  %.298 = load i64, i64* %.297, align 8
  %.299 = icmp slt i64 %.326, %.298
  br i1 %.299, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1
  %.330 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.331 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.330, align 8
  %.332 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.331, i64 0, i32 17
  %.333 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.332, align 8
  %.334 = tail call i1 %.333(%TypeChecker.560555* nonnull %.1)
  br i1 %.334, label %for.end.1.if, label %for.end.1.endif

for.end.1.if:                                     ; preds = %.4.endif.endif.endif.endif.endif.endif.if.endif, %for.end.1
  %merge = phi %Type.560381* [ null, %for.end.1 ], [ %.388, %.4.endif.endif.endif.endif.endif.endif.if.endif ]
  ret %Type.560381* %merge

for.end.1.endif:                                  ; preds = %for.end.1
  %.339 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.330, align 8
  %.340 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.339, i64 0, i32 23
  %.341 = load %GenericType.560405* (%TypeChecker.560555*, %string.560217*, %"Array<Type>.560389"*)*, %GenericType.560405* (%TypeChecker.560555*, %string.560217*, %"Array<Type>.560389"*)** %.340, align 8
  %.343 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.281129, i64 0, i32 3
  %.344 = load %string.560217*, %string.560217** %.343, align 8
  %.346 = tail call %GenericType.560405* %.341(%TypeChecker.560555* nonnull %.1, %string.560217* %.344, %"Array<Type>.560389"* nonnull %24)
  %.350 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.330, align 8
  %.351 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.350, i64 0, i32 17
  %.352 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.351, align 8
  %.353 = tail call i1 %.352(%TypeChecker.560555* nonnull %.1)
  %25 = ptrtoint %GenericType.560405* %.346 to i64
  br i1 %.353, label %for.end.1.endif.if, label %for.end.1.endif.endif

for.end.1.endif.if:                               ; preds = %for.end.1.endif
  %.356 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 7
  %.357 = load %Compiler.560235*, %Compiler.560235** %.356, align 8
  %.358 = getelementptr inbounds %Compiler.560235, %Compiler.560235* %.357, i64 0, i32 6
  %.359 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %.358, align 8
  %.360 = getelementptr inbounds %"Array<FloError>.560238", %"Array<FloError>.560238"* %.359, i64 0, i32 0
  %.361 = load %"Array<FloError>_vtable_ty.560241"*, %"Array<FloError>_vtable_ty.560241"** %.360, align 8
  %.362 = getelementptr inbounds %"Array<FloError>_vtable_ty.560241", %"Array<FloError>_vtable_ty.560241"* %.361, i64 0, i32 5
  %.363 = load %FloError.560225* (%"Array<FloError>.560238"*, i64)*, %FloError.560225* (%"Array<FloError>.560238"*, i64)** %.362, align 8
  %.364 = tail call %FloError.560225* %.363(%"Array<FloError>.560238"* %.359, i64 0)
  %.366 = getelementptr inbounds %TypeNode.560269, %TypeNode.560269* %.2, i64 0, i32 1
  %26 = bitcast %FloRange.560223** %.366 to i64*
  %.3674 = load i64, i64* %26, align 8
  %.368 = getelementptr inbounds %FloError.560225, %FloError.560225* %.364, i64 0, i32 3
  %27 = bitcast %FloRange.560223** %.368 to i64*
  store i64 %.3674, i64* %27, align 8
  br label %for.end.1.endif.endif

for.end.1.endif.endif:                            ; preds = %for.end.1.endif.if, %for.end.1.endif
  %.372 = trunc i64 %25 to i32
  %.374.not = icmp eq i32 %.372, 0
  br i1 %.374.not, label %.4.endif.endif.endif.endif.endif.endif.if.endif, label %for.end.1.endif.endif.if

for.end.1.endif.endif.if:                         ; preds = %for.end.1.endif.endif
  %28 = bitcast %GenericType.560405* %.346 to %Type.560381*
  ret %Type.560381* %28

.4.endif.endif.endif.endif.endif.endif.if.endif.if: ; preds = %.4.endif.endif.endif.endif.endif.endif.if.endif
  %.397 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.381, align 8
  %.398 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.397, i64 0, i32 16
  %.399 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.398, align 8
  %.402 = load %string.560217*, %string.560217** %.386, align 8
  %.403 = getelementptr inbounds %string.560217, %string.560217* %.402, i64 0, i32 0
  %.404 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.403, align 8
  %.405 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.404, i64 0, i32 11
  %.406 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.405, align 8
  %.407 = tail call i8* %.406(%string.560217* %.402)
  %.409 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.267, i64 0, i64 0), i8* %.407)
  %.410 = add i64 %.409, 1
  %.412 = tail call i8* @malloc(i64 %.410)
  %.413 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.412, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.267, i64 0, i64 0), i8* %.407)
  %.414 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.415 = bitcast i8* %.414 to %string.560217*
  %.416 = bitcast i8* %.414 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.416, align 8
  %.418 = getelementptr inbounds i8, i8* %.414, i64 8
  %29 = bitcast i8* %.418 to i8**
  store i8* %.412, i8** %29, align 8
  %.420 = getelementptr inbounds i8, i8* %.414, i64 16
  %30 = bitcast i8* %.420 to i64*
  store i64 %.409, i64* %30, align 8
  %.422 = getelementptr inbounds i8, i8* %.414, i64 24
  %31 = bitcast i8* %.422 to i64*
  store i64 %.409, i64* %31, align 8
  %.425 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.281129, i64 0, i32 2
  %.426 = load %FloRange.560223*, %FloRange.560223** %.425, align 8
  tail call void %.399(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.415, %FloRange.560223* %.426)
  ret %Type.560381* null
}

define %ArrayExpression.560423* @TypeChecker_check_array_expression(%TypeChecker.560555* %.1, %Type.560381* %.2, %ArrayExpressionNode.560301* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 17
  %.13 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.12, align 8
  %.14 = tail call i1 %.13(%TypeChecker.560555* %.1)
  br i1 %.14, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %for.body, %.5.endif.endif.if, %.5
  ret %ArrayExpression.560423* null

.5.endif:                                         ; preds = %.5
  %.18 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.20 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.20 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.22, align 8
  %.24 = getelementptr inbounds i8, i8* %.20, i64 8
  %0 = bitcast i8* %.24 to i8**
  store i8* %.18, i8** %0, align 8
  %.26 = getelementptr inbounds i8, i8* %.20, i64 16
  %1 = bitcast i8* %.26 to i64*
  store i64 0, i64* %1, align 8
  %.28 = getelementptr inbounds i8, i8* %.20, i64 24
  %2 = bitcast i8* %.28 to i64*
  store i64 8, i64* %2, align 8
  %.31 = tail call %Type.560381* @Type_unknown()
  %.37 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 0, i32 1
  %.38 = load i64, i64* %.37, align 8
  %3 = bitcast i8* %.20 to %"Array<Expression>.560419"*
  %4 = ptrtoint %Type.560381* %.31 to i64
  %5 = ptrtoint %Type.560381* %.2 to i64
  switch i64 %.38, label %.5.endif.endif [
    i64 16, label %.5.endif.if
    i64 20, label %.5.endif.else.if
  ]

.5.endif.if:                                      ; preds = %.5.endif
  %.43 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %6 = bitcast %Type.560381* %.43 to i64*
  %.4416 = load i64, i64* %6, align 8
  %7 = inttoptr i64 %.4416 to %Type.560381*
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif, %.5.endif.else.if, %.5.endif.else.if.if, %.5.endif.if
  %.323545 = phi i64 [ %4, %.5.endif ], [ %4, %.5.endif.else.if ], [ %13, %.5.endif.else.if.if ], [ %.4416, %.5.endif.if ]
  %.27540 = phi %Type.560381* [ %.31, %.5.endif ], [ %.31, %.5.endif.else.if ], [ %.79, %.5.endif.else.if.if ], [ %7, %.5.endif.if ]
  %.120 = phi i1 [ true, %.5.endif ], [ false, %.5.endif.else.if ], [ false, %.5.endif.else.if.if ], [ true, %.5.endif.if ]
  %.85 = getelementptr inbounds %ArrayExpressionNode.560301, %ArrayExpressionNode.560301* %.3, i64 0, i32 4
  %.86 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.85, align 8
  %.87 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.86, i64 0, i32 2
  %.88 = load i64, i64* %.87, align 8
  %.89 = icmp sgt i64 %.88, 0
  br i1 %.89, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.else.if:                                 ; preds = %.5.endif
  %.58 = tail call i1 @is_object(%Type.560381* nonnull %.2)
  %.60 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %8 = bitcast %Type.560381* %.60 to %string.560217**
  %.61 = load %string.560217*, %string.560217** %8, align 8
  %.62 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.63 = bitcast i8* %.62 to %string.560217*
  %.63.repack = bitcast i8* %.62 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.63.repack, align 8
  %.63.repack13 = getelementptr inbounds i8, i8* %.62, i64 8
  %9 = bitcast i8* %.63.repack13 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.156, i64 0, i64 0), i8** %9, align 8
  %.63.repack14 = getelementptr inbounds i8, i8* %.62, i64 16
  %10 = bitcast i8* %.63.repack14 to i64*
  store i64 5, i64* %10, align 8
  %.63.repack15 = getelementptr inbounds i8, i8* %.62, i64 24
  %11 = bitcast i8* %.63.repack15 to i64*
  store i64 5, i64* %11, align 8
  %.65 = getelementptr inbounds %string.560217, %string.560217* %.61, i64 0, i32 0
  %.66 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.65, align 8
  %.67 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.66, i64 0, i32 4
  %.68 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.67, align 8
  %.69 = tail call i1 %.68(%string.560217* %.61, %string.560217* %.63)
  %.70 = and i1 %.58, %.69
  br i1 %.70, label %.5.endif.else.if.if, label %.5.endif.endif

.5.endif.else.if.if:                              ; preds = %.5.endif.else.if
  %.73 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %12 = bitcast i64* %.73 to %"Array<Type>.560389"**
  %.74 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %12, align 8
  %.75 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.74, i64 0, i32 0
  %.76 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.75, align 8
  %.77 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.76, i64 0, i32 5
  %.78 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.77, align 8
  %.79 = tail call %Type.560381* %.78(%"Array<Type>.560389"* %.74, i64 0)
  %13 = ptrtoint %Type.560381* %.79 to i64
  br label %.5.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.94 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.95 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.94, i64 0, i32 72
  %.96 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.95, align 8
  %.101 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.86, i64 0, i32 0
  %.102 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.101, align 8
  %.103 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.102, i64 0, i32 5
  %.104 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.103, align 8
  %.105 = tail call %ExpressionNode.560285* %.104(%"Array<ExpressionNode>.560297"* %.86, i64 0)
  %.106 = tail call %Expression.560401* %.96(%TypeChecker.560555* nonnull %.1, %Type.560381* %.27540, %ExpressionNode.560285* %.105)
  %.107 = bitcast i8* %.20 to %"Array<Expression>_vtable_ty.560420"**
  %.108 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.107, align 8
  %.109 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.108, i64 0, i32 2
  %.110 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.109, align 8
  tail call void %.110(%"Array<Expression>.560419"* %3, %Expression.560401* %.106)
  %.114 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.114, i64 0, i32 17
  %.116 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.115, align 8
  %.117 = tail call i1 %.116(%TypeChecker.560555* nonnull %.1)
  br i1 %.117, label %.5.if, label %.5.endif.endif.if.endif

.5.endif.endif.endif:                             ; preds = %for.body.endif.if, %for.entry, %.5.endif.endif
  %.36047 = phi i1 [ %.129, %for.entry ], [ %.120, %.5.endif.endif ], [ %.186, %for.body.endif.if ]
  %.3235 = phi i64 [ %.323544, %for.entry ], [ %.323545, %.5.endif.endif ], [ %.323544, %for.body.endif.if ]
  %.275 = phi %Type.560381* [ %.27539, %for.entry ], [ %.27540, %.5.endif.endif ], [ %.27539, %for.body.endif.if ]
  %.276 = getelementptr inbounds %Type.560381, %Type.560381* %.275, i64 0, i32 1
  %.277 = load i64, i64* %.276, align 8
  %.278 = icmp eq i64 %.277, 21
  br i1 %.278, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.123 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.107, align 8
  %.124 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.123, i64 0, i32 5
  %.125 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.124, align 8
  %.126 = tail call %Expression.560401* %.125(%"Array<Expression>.560419"* nonnull %3, i64 0)
  %.127 = getelementptr inbounds %Expression.560401, %Expression.560401* %.126, i64 0, i32 2
  %.128 = load i1, i1* %.127, align 1
  %.129 = and i1 %.120, %.128
  %.132 = getelementptr inbounds %Type.560381, %Type.560381* %.27540, i64 0, i32 1
  %.133 = load i64, i64* %.132, align 8
  %.134 = icmp eq i64 %.133, 21
  br i1 %.134, label %.5.endif.endif.if.endif.if, label %for.entry

.5.endif.endif.if.endif.if:                       ; preds = %.5.endif.endif.if.endif
  %.138 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.107, align 8
  %.139 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.138, i64 0, i32 5
  %.140 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.139, align 8
  %.141 = tail call %Expression.560401* %.140(%"Array<Expression>.560419"* nonnull %3, i64 0)
  %.142 = getelementptr inbounds %Expression.560401, %Expression.560401* %.141, i64 0, i32 4
  %14 = bitcast %Type.560381** %.142 to i64*
  %.14311 = load i64, i64* %14, align 8
  %15 = inttoptr i64 %.14311 to %Type.560381*
  br label %for.entry

for.entry:                                        ; preds = %.5.endif.endif.if.endif, %.5.endif.endif.if.endif.if
  %.323544 = phi i64 [ %.323545, %.5.endif.endif.if.endif ], [ %.14311, %.5.endif.endif.if.endif.if ]
  %.27539 = phi %Type.560381* [ %.27540, %.5.endif.endif.if.endif ], [ %15, %.5.endif.endif.if.endif.if ]
  %.15220 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.85, align 8
  %.15321 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.15220, i64 0, i32 2
  %.15422 = load i64, i64* %.15321, align 8
  %.15523 = icmp sgt i64 %.15422, 1
  br i1 %.15523, label %for.body, label %.5.endif.endif.endif

for.body:                                         ; preds = %for.entry, %for.body.endif.if
  %.18626 = phi i1 [ %.186, %for.body.endif.if ], [ %.129, %for.entry ]
  %.15225 = phi %"Array<ExpressionNode>.560297"* [ %.152, %for.body.endif.if ], [ %.15220, %for.entry ]
  %storemerge24 = phi i64 [ %.271, %for.body.endif.if ], [ 1, %for.entry ]
  %.159 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.160 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.159, i64 0, i32 72
  %.161 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.160, align 8
  %.167 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.15225, i64 0, i32 0
  %.168 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.167, align 8
  %.169 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.168, i64 0, i32 5
  %.170 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.169, align 8
  %.171 = tail call %ExpressionNode.560285* %.170(%"Array<ExpressionNode>.560297"* %.15225, i64 %storemerge24)
  %.172 = tail call %Expression.560401* %.161(%TypeChecker.560555* nonnull %.1, %Type.560381* %.27539, %ExpressionNode.560285* %.171)
  %.176 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.177 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.176, i64 0, i32 17
  %.178 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.177, align 8
  %.179 = tail call i1 %.178(%TypeChecker.560555* nonnull %.1)
  br i1 %.179, label %.5.if, label %for.body.endif

for.body.endif:                                   ; preds = %for.body
  %.184 = getelementptr inbounds %Expression.560401, %Expression.560401* %.172, i64 0, i32 2
  %.185 = load i1, i1* %.184, align 1
  %.186 = and i1 %.18626, %.185
  %.190 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.191 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.190, i64 0, i32 9
  %.192 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.191, align 8
  %.195 = getelementptr inbounds %Expression.560401, %Expression.560401* %.172, i64 0, i32 4
  %.196 = load %Type.560381*, %Type.560381** %.195, align 8
  %.197 = tail call i1 %.192(%TypeChecker.560555* nonnull %.1, %Type.560381* %.27539, %Type.560381* %.196)
  br i1 %.197, label %for.body.endif.if, label %for.body.endif.else

for.body.endif.if:                                ; preds = %for.body.endif
  %.202 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.107, align 8
  %.203 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.202, i64 0, i32 2
  %.204 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.203, align 8
  tail call void %.204(%"Array<Expression>.560419"* nonnull %3, %Expression.560401* nonnull %.172)
  %.271 = add nuw nsw i64 %storemerge24, 1
  %.152 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.85, align 8
  %.153 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.152, i64 0, i32 2
  %.154 = load i64, i64* %.153, align 8
  %.155 = icmp slt i64 %.271, %.154
  br i1 %.155, label %for.body, label %.5.endif.endif.endif

for.body.endif.else:                              ; preds = %for.body.endif
  %.209 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.210 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.209, i64 0, i32 16
  %.211 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.210, align 8
  %.215 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.209, i64 0, i32 10
  %.216 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.215, align 8
  %.218 = tail call %string.560217* %.216(%TypeChecker.560555* nonnull %.1, %Type.560381* %.27539)
  %.221 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.222 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.221, i64 0, i32 10
  %.223 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.222, align 8
  %.226 = load %Type.560381*, %Type.560381** %.195, align 8
  %.227 = tail call %string.560217* %.223(%TypeChecker.560555* nonnull %.1, %Type.560381* %.226)
  %.228 = getelementptr inbounds %string.560217, %string.560217* %.218, i64 0, i32 0
  %.229 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.228, align 8
  %.230 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.229, i64 0, i32 11
  %.231 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.230, align 8
  %.232 = tail call i8* %.231(%string.560217* %.218)
  %.233 = getelementptr inbounds %string.560217, %string.560217* %.227, i64 0, i32 0
  %.234 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.233, align 8
  %.235 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.234, i64 0, i32 11
  %.236 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.235, align 8
  %.237 = tail call i8* %.236(%string.560217* %.227)
  %.239 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.268, i64 0, i64 0), i8* %.232, i8* %.237)
  %.240 = add i64 %.239, 1
  %.242 = tail call i8* @malloc(i64 %.240)
  %.243 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.242, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.268, i64 0, i64 0), i8* %.232, i8* %.237)
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.245 = bitcast i8* %.244 to %string.560217*
  %.246 = bitcast i8* %.244 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.246, align 8
  %.248 = getelementptr inbounds i8, i8* %.244, i64 8
  %16 = bitcast i8* %.248 to i8**
  store i8* %.242, i8** %16, align 8
  %.250 = getelementptr inbounds i8, i8* %.244, i64 16
  %17 = bitcast i8* %.250 to i64*
  store i64 %.239, i64* %17, align 8
  %.252 = getelementptr inbounds i8, i8* %.244, i64 24
  %18 = bitcast i8* %.252 to i64*
  store i64 %.239, i64* %18, align 8
  %.257 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.85, align 8
  %.258 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.257, i64 0, i32 0
  %.259 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.258, align 8
  %.260 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.259, i64 0, i32 5
  %.261 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.260, align 8
  %.262 = tail call %ExpressionNode.560285* %.261(%"Array<ExpressionNode>.560297"* %.257, i64 %storemerge24)
  %.263 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.262, i64 0, i32 1
  %.264 = load %FloRange.560223*, %FloRange.560223** %.263, align 8
  tail call void %.211(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.245, %FloRange.560223* %.264)
  ret %ArrayExpression.560423* null

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.282 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.283 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.282, i64 0, i32 16
  %.284 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.283, align 8
  %.285 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.286 = bitcast i8* %.285 to %string.560217*
  %.286.repack = bitcast i8* %.285 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.286.repack, align 8
  %.286.repack8 = getelementptr inbounds i8, i8* %.285, i64 8
  %19 = bitcast i8* %.286.repack8 to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.269, i64 0, i64 0), i8** %19, align 8
  %.286.repack9 = getelementptr inbounds i8, i8* %.285, i64 16
  %20 = bitcast i8* %.286.repack9 to i64*
  store i64 37, i64* %20, align 8
  %.286.repack10 = getelementptr inbounds i8, i8* %.285, i64 24
  %21 = bitcast i8* %.286.repack10 to i64*
  store i64 37, i64* %21, align 8
  %.289 = getelementptr inbounds %ArrayExpressionNode.560301, %ArrayExpressionNode.560301* %.3, i64 0, i32 1
  %.290 = load %FloRange.560223*, %FloRange.560223** %.289, align 8
  tail call void %.284(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.286, %FloRange.560223* %.290)
  ret %ArrayExpression.560423* null

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.295 = load i64, i64* %.37, align 8
  %.296 = icmp eq i64 %.295, 21
  br i1 %.296, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.300 = getelementptr inbounds i8, i8* %.20, i64 16
  %22 = bitcast i8* %.300 to i64*
  %.301 = load i64, i64* %22, align 8
  %.302 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.303 = bitcast i8* %.302 to %ArrayType.560403*
  %.304 = bitcast i8* %.302 to %ArrayType_vtable_ty.560404**
  store %ArrayType_vtable_ty.560404* @ArrayType_vtable_data, %ArrayType_vtable_ty.560404** %.304, align 8
  tail call void @ArrayType_constructor(%ArrayType.560403* %.303, %Type.560381* %.275, i64 %.301)
  %.311.phi.trans.insert = getelementptr inbounds i8, i8* %.302, i64 8
  %23 = bitcast i8* %.311.phi.trans.insert to i64*
  %.312.pre = load i64, i64* %23, align 8
  %24 = ptrtoint i8* %.302 to i64
  br label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif
  %.364149 = phi i64 [ %24, %.5.endif.endif.endif.endif.if ], [ %5, %.5.endif.endif.endif.endif ]
  %.312 = phi i64 [ %.312.pre, %.5.endif.endif.endif.endif.if ], [ %.295, %.5.endif.endif.endif.endif ]
  %.313.not = icmp eq i64 %.312, 16
  br i1 %.313.not, label %.5.endif.endif.endif.endif.endif.endif, label %.5.endif.endif.endif.endif.endif.if

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  %.317 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.318 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.317, i64 0, i32 23
  %.319 = load %GenericType.560405* (%TypeChecker.560555*, %string.560217*, %"Array<Type>.560389"*)*, %GenericType.560405* (%TypeChecker.560555*, %string.560217*, %"Array<Type>.560389"*)** %.318, align 8
  %.320 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.321 = bitcast i8* %.320 to %string.560217*
  %.321.repack = bitcast i8* %.320 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.321.repack, align 8
  %.321.repack2 = getelementptr inbounds i8, i8* %.320, i64 8
  %25 = bitcast i8* %.321.repack2 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.156, i64 0, i64 0), i8** %25, align 8
  %.321.repack3 = getelementptr inbounds i8, i8* %.320, i64 16
  %26 = bitcast i8* %.321.repack3 to i64*
  store i64 5, i64* %26, align 8
  %.321.repack4 = getelementptr inbounds i8, i8* %.320, i64 24
  %27 = bitcast i8* %.321.repack4 to i64*
  store i64 5, i64* %27, align 8
  %.325 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %28 = bitcast i8* %.325 to i64*
  store i64 %.3235, i64* %28, align 8
  %.329 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.330 = bitcast i8* %.329 to %"Array<Type>.560389"*
  %.331 = bitcast i8* %.329 to %"Array<Type>_vtable_ty.560390"**
  store %"Array<Type>_vtable_ty.560390"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.560390"** %.331, align 8
  %.333 = getelementptr inbounds i8, i8* %.329, i64 8
  %29 = bitcast i8* %.333 to i8**
  store i8* %.325, i8** %29, align 8
  %.335 = getelementptr inbounds i8, i8* %.329, i64 16
  %30 = bitcast i8* %.335 to i64*
  store i64 1, i64* %30, align 8
  %.337 = getelementptr inbounds i8, i8* %.329, i64 24
  %31 = bitcast i8* %.337 to i64*
  store i64 8, i64* %31, align 8
  %.339 = tail call %GenericType.560405* %.319(%TypeChecker.560555* nonnull %.1, %string.560217* %.321, %"Array<Type>.560389"* %.330)
  %32 = ptrtoint %GenericType.560405* %.339 to i64
  %.342 = trunc i64 %32 to i32
  %.344.not = icmp eq i32 %.342, 0
  %spec.select = select i1 %.344.not, i64 %.364149, i64 %32
  %spec.select54 = and i1 %.344.not, %.36047
  br label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif
  %.3641 = phi i64 [ %.364149, %.5.endif.endif.endif.endif.endif ], [ %spec.select, %.5.endif.endif.endif.endif.endif.if ]
  %.360 = phi i1 [ %.36047, %.5.endif.endif.endif.endif.endif ], [ %spec.select54, %.5.endif.endif.endif.endif.endif.if ]
  %.353 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.354 = bitcast i8* %.353 to %ArrayExpression.560423*
  %.355 = bitcast i8* %.353 to %ArrayExpression_vtable_ty.560424**
  store %ArrayExpression_vtable_ty.560424* @ArrayExpression_vtable_data, %ArrayExpression_vtable_ty.560424** %.355, align 8
  tail call void @ArrayExpression_constructor(%ArrayExpression.560423* %.354, %"Array<Expression>.560419"* %3)
  %.361 = getelementptr inbounds i8, i8* %.353, i64 16
  %33 = bitcast i8* %.361 to i1*
  store i1 %.360, i1* %33, align 1
  %.365 = getelementptr inbounds i8, i8* %.353, i64 32
  %34 = bitcast i8* %.365 to i64*
  store i64 %.3641, i64* %34, align 8
  ret %ArrayExpression.560423* %.354
}

define noalias %Expression.560401* @TypeChecker_check_var_access_expr(%TypeChecker.560555* %.1, %Type.560381* %.2, %VarAccessExpressionNode.560299* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %VarAccessExpressionNode.560299, %VarAccessExpressionNode.560299* %.3, i64 0, i32 4
  %.11 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.10, align 8
  %.12 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.11, i64 0, i32 3
  %.13 = load %string.560217*, %string.560217** %.12, align 8
  %.16 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %string.560217*
  %.17.repack = bitcast i8* %.16 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.17.repack, align 8
  %.17.repack1 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.17.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.225, i64 0, i64 0), i8** %0, align 8
  %.17.repack2 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.17.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.17.repack3 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.17.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.19 = getelementptr inbounds %string.560217, %string.560217* %.13, i64 0, i32 0
  %.20 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.19, align 8
  %.21 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.20, i64 0, i32 4
  %.22 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.21, align 8
  %.23 = tail call i1 %.22(%string.560217* %.13, %string.560217* %.17)
  br i1 %.23, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.26 = bitcast i8* %.25 to %BooleanExpression.560413*
  %.27 = bitcast i8* %.25 to %BooleanExpression_vtable_ty.560414**
  store %BooleanExpression_vtable_ty.560414* @BooleanExpression_vtable_data, %BooleanExpression_vtable_ty.560414** %.27, align 8
  tail call void @BooleanExpression_constructor(%BooleanExpression.560413* %.26, i1 true)
  %.30 = bitcast i8* %.25 to %Expression.560401*
  ret %Expression.560401* %.30

.5.endif:                                         ; preds = %.5
  %.33 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.560217*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.34.repack, align 8
  %.34.repack4 = getelementptr inbounds i8, i8* %.33, i64 8
  %3 = bitcast i8* %.34.repack4 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.226, i64 0, i64 0), i8** %3, align 8
  %.34.repack5 = getelementptr inbounds i8, i8* %.33, i64 16
  %4 = bitcast i8* %.34.repack5 to i64*
  store i64 5, i64* %4, align 8
  %.34.repack6 = getelementptr inbounds i8, i8* %.33, i64 24
  %5 = bitcast i8* %.34.repack6 to i64*
  store i64 5, i64* %5, align 8
  %.37 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.19, align 8
  %.38 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.37, i64 0, i32 4
  %.39 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.38, align 8
  %.40 = tail call i1 %.39(%string.560217* %.13, %string.560217* %.34)
  br i1 %.40, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.42 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.43 = bitcast i8* %.42 to %BooleanExpression.560413*
  %.44 = bitcast i8* %.42 to %BooleanExpression_vtable_ty.560414**
  store %BooleanExpression_vtable_ty.560414* @BooleanExpression_vtable_data, %BooleanExpression_vtable_ty.560414** %.44, align 8
  tail call void @BooleanExpression_constructor(%BooleanExpression.560413* %.43, i1 false)
  %.47 = bitcast i8* %.42 to %Expression.560401*
  ret %Expression.560401* %.47

.5.endif.endif:                                   ; preds = %.5.endif
  %.50 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.560217*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.51.repack, align 8
  %.51.repack7 = getelementptr inbounds i8, i8* %.50, i64 8
  %6 = bitcast i8* %.51.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.227, i64 0, i64 0), i8** %6, align 8
  %.51.repack8 = getelementptr inbounds i8, i8* %.50, i64 16
  %7 = bitcast i8* %.51.repack8 to i64*
  store i64 4, i64* %7, align 8
  %.51.repack9 = getelementptr inbounds i8, i8* %.50, i64 24
  %8 = bitcast i8* %.51.repack9 to i64*
  store i64 4, i64* %8, align 8
  %.54 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.19, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.54, i64 0, i32 4
  %.56 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.55, align 8
  %.57 = tail call i1 %.56(%string.560217* nonnull %.13, %string.560217* %.51)
  br i1 %.57, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.60 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.61 = bitcast i8* %.60 to %NullExpression.560421*
  %.62 = bitcast i8* %.60 to %NullExpression_vtable_ty.560422**
  store %NullExpression_vtable_ty.560422* @NullExpression_vtable_data, %NullExpression_vtable_ty.560422** %.62, align 8
  tail call void @NullExpression_constructor(%NullExpression.560421* %.61, %Type.560381* %.2)
  %.65 = bitcast i8* %.60 to %Expression.560401*
  ret %Expression.560401* %.65

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.68 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.69 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.68, align 8
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.69, i64 0, i32 2
  %.71 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.70, align 8
  %.72 = tail call %Scope.560473* %.71(%TypeChecker.560555* %.1)
  %.76 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.68, align 8
  %.77 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.76, i64 0, i32 13
  %.78 = load %VarId.560441* (%TypeChecker.560555*, %string.560217*)*, %VarId.560441* (%TypeChecker.560555*, %string.560217*)** %.77, align 8
  %.80 = tail call %VarId.560441* %.78(%TypeChecker.560555* %.1, %string.560217* nonnull %.13)
  %.82 = tail call %Type.560381* @Type_unknown()
  %9 = ptrtoint %VarId.560441* %.80 to i64
  %.85 = trunc i64 %9 to i32
  %.87.not = icmp eq i32 %.85, 0
  br i1 %.87.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.92 = getelementptr inbounds %VarId.560441, %VarId.560441* %.80, i64 0, i32 1
  %.93 = load i64, i64* %.92, align 8
  switch i64 %.93, label %.5.endif.endif.endif.if.else.else.else [
    i64 0, label %.5.endif.endif.endif.if.if
    i64 1, label %.5.endif.endif.endif.if.else.if
    i64 2, label %.5.endif.endif.endif.if.else.else.if
  ]

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.166 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.68, align 8
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.166, i64 0, i32 16
  %.168 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.167, align 8
  %.171 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.19, align 8
  %.172 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.171, i64 0, i32 11
  %.173 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.172, align 8
  %.174 = tail call i8* %.173(%string.560217* nonnull %.13)
  %.176 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.270, i64 0, i64 0), i8* %.174)
  %.177 = add i64 %.176, 1
  %.179 = tail call i8* @malloc(i64 %.177)
  %.180 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.179, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.270, i64 0, i64 0), i8* %.174)
  %.181 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.182 = bitcast i8* %.181 to %string.560217*
  %.183 = bitcast i8* %.181 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.183, align 8
  %.185 = getelementptr inbounds i8, i8* %.181, i64 8
  %10 = bitcast i8* %.185 to i8**
  store i8* %.179, i8** %10, align 8
  %.187 = getelementptr inbounds i8, i8* %.181, i64 16
  %11 = bitcast i8* %.187 to i64*
  store i64 %.176, i64* %11, align 8
  %.189 = getelementptr inbounds i8, i8* %.181, i64 24
  %12 = bitcast i8* %.189 to i64*
  store i64 %.176, i64* %12, align 8
  %.192 = getelementptr inbounds %VarAccessExpressionNode.560299, %VarAccessExpressionNode.560299* %.3, i64 0, i32 1
  %.193 = load %FloRange.560223*, %FloRange.560223** %.192, align 8
  tail call void %.168(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.182, %FloRange.560223* %.193)
  ret %Expression.560401* null

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %.97 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.98 = load %Program.560549*, %Program.560549** %.97, align 8
  %.100 = tail call %Function.560501* @get_func(%Program.560549* %.98, %VarId.560441* nonnull %.80)
  %.101 = getelementptr inbounds %Function.560501, %Function.560501* %.100, i64 0, i32 5
  %13 = bitcast %FunctionType.560387** %.101 to %Type.560381**
  %.102141519 = load %Type.560381*, %Type.560381** %13, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.endif:                    ; preds = %.5.endif.endif.endif.if.else.else.else, %.5.endif.endif.endif.if.else.else.else.if, %.5.endif.endif.endif.if.else.else.if, %.5.endif.endif.endif.if.else.if, %.5.endif.endif.endif.if.if
  %.156 = phi %Type.560381* [ %.82, %.5.endif.endif.endif.if.else.else.else ], [ %.146, %.5.endif.endif.endif.if.else.else.else.if ], [ %.1321217, %.5.endif.endif.endif.if.else.else.if ], [ %.1171318, %.5.endif.endif.endif.if.else.if ], [ %.102141519, %.5.endif.endif.endif.if.if ]
  %.157 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.158 = bitcast i8* %.157 to %VarAccessExpression.560453*
  %.159 = bitcast i8* %.157 to %VarAccessExpression_vtable_ty.560454**
  store %VarAccessExpression_vtable_ty.560454* @VarAccessExpression_vtable_data, %VarAccessExpression_vtable_ty.560454** %.159, align 8
  tail call void @VarAccessExpression_constructor(%VarAccessExpression.560453* %.158, %VarId.560441* nonnull %.80, %Type.560381* %.156)
  %.162 = bitcast i8* %.157 to %Expression.560401*
  ret %Expression.560401* %.162

.5.endif.endif.endif.if.else.if:                  ; preds = %.5.endif.endif.endif.if
  %.112 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.113 = load %Program.560549*, %Program.560549** %.112, align 8
  %.115 = tail call %Var.560505* @get_var(%Program.560549* %.113, %VarId.560441* nonnull %.80)
  %.116 = getelementptr inbounds %Var.560505, %Var.560505* %.115, i64 0, i32 1
  %.1171318 = load %Type.560381*, %Type.560381** %.116, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.if:             ; preds = %.5.endif.endif.endif.if
  %14 = bitcast %VarId.560441* %.80 to %ConstId.560447*
  %.126 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.127 = load %Program.560549*, %Program.560549** %.126, align 8
  %.130 = tail call %Const.560507* @get_const(%Program.560549* %.127, %ConstId.560447* %14)
  %.131 = getelementptr inbounds %Const.560507, %Const.560507* %.130, i64 0, i32 1
  %.1321217 = load %Type.560381*, %Type.560381** %.131, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.else:           ; preds = %.5.endif.endif.endif.if
  %15 = add i64 %.93, -3
  %16 = icmp ult i64 %15, 2
  br i1 %16, label %.5.endif.endif.endif.if.else.else.else.if, label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.else.if:        ; preds = %.5.endif.endif.endif.if.else.else.else
  %.145 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.146 = bitcast i8* %.145 to %Type.560381*
  %.147 = bitcast i8* %.145 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.147, align 8
  tail call void @Type_constructor(%Type.560381* %.146, i64 18)
  br label %.5.endif.endif.endif.if.endif
}

define %Expression.560401* @TypeChecker_check_assignment(%TypeChecker.560555* %.1, %Expression.560401* %.2, %Expression.560401* %.3, %BinaryExpressionNode.560313* %.4) {
.6:
  %.12 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.4, i64 0, i32 5
  %.13 = load i64, i64* %.12, align 8
  %.16.not = icmp eq i64 %.13, 19
  br i1 %.16.not, label %.6.endif, label %.6.if

.6.if:                                            ; preds = %.6
  %.19 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 4
  %.20 = load %Type.560381*, %Type.560381** %.19, align 8
  %.21 = tail call i1 @is_object(%Type.560381* %.20)
  br i1 %.21, label %.6.if.if, label %.6.if.endif

.6.endif:                                         ; preds = %.6, %.6.if.endif
  %right.0 = phi %Expression.560401* [ %.58, %.6.if.endif ], [ %.3, %.6 ]
  %.62 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 4
  %.63 = load %Type.560381*, %Type.560381** %.62, align 8
  %.64 = getelementptr inbounds %Type.560381, %Type.560381* %.63, i64 0, i32 1
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp eq i64 %.65, 18
  br i1 %.66, label %.6.endif.if, label %.6.endif.endif

.6.if.if:                                         ; preds = %.6.if
  %.24 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.25 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.24, align 8
  %.26 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.25, i64 0, i32 50
  %.27 = load %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)** %.26, align 8
  %.30 = tail call %Expression.560401* %.27(%TypeChecker.560555* %.1, %Expression.560401* nonnull %.2, %BinaryExpressionNode.560313* nonnull %.4)
  %0 = ptrtoint %Expression.560401* %.30 to i64
  %.33 = trunc i64 %0 to i32
  %.35 = icmp ne i32 %.33, 0
  %.38 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.24, align 8
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.38, i64 0, i32 17
  %.40 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.39, align 8
  %.41 = tail call i1 %.40(%TypeChecker.560555* %.1)
  %.42 = or i1 %.35, %.41
  br i1 %.42, label %.6.if.if.if, label %.6.if.if..6.if.endif_crit_edge

.6.if.if..6.if.endif_crit_edge:                   ; preds = %.6.if.if
  %.54.pre = load %Type.560381*, %Type.560381** %.19, align 8
  br label %.6.if.endif

.6.if.endif:                                      ; preds = %.6.if.if..6.if.endif_crit_edge, %.6.if
  %.54 = phi %Type.560381* [ %.54.pre, %.6.if.if..6.if.endif_crit_edge ], [ %.20, %.6.if ]
  %.48 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.49 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.48, align 8
  %.50 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.49, i64 0, i32 53
  %.51 = load %BinaryExpression.560425* (%TypeChecker.560555*, %Type.560381*, %BinaryExpressionNode.560313*)*, %BinaryExpression.560425* (%TypeChecker.560555*, %Type.560381*, %BinaryExpressionNode.560313*)** %.50, align 8
  %.56 = tail call %BinaryExpressionNode.560313* @lower_bin_assign_node(%BinaryExpressionNode.560313* nonnull %.4)
  %.57 = tail call %BinaryExpression.560425* %.51(%TypeChecker.560555* %.1, %Type.560381* %.54, %BinaryExpressionNode.560313* %.56)
  %.58 = bitcast %BinaryExpression.560425* %.57 to %Expression.560401*
  br label %.6.endif

.6.if.if.if:                                      ; preds = %.6.if.if
  ret %Expression.560401* %.30

.6.endif.if:                                      ; preds = %.6.endif
  %.69 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.70 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.69, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.70, i64 0, i32 16
  %.72 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.71, align 8
  %.73 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.74 = bitcast i8* %.73 to %string.560217*
  %.74.repack = bitcast i8* %.73 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.74.repack, align 8
  %.74.repack4 = getelementptr inbounds i8, i8* %.73, i64 8
  %1 = bitcast i8* %.74.repack4 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.271, i64 0, i64 0), i8** %1, align 8
  %.74.repack5 = getelementptr inbounds i8, i8* %.73, i64 16
  %2 = bitcast i8* %.74.repack5 to i64*
  store i64 33, i64* %2, align 8
  %.74.repack6 = getelementptr inbounds i8, i8* %.73, i64 24
  %3 = bitcast i8* %.74.repack6 to i64*
  store i64 33, i64* %3, align 8
  %.77 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.4, i64 0, i32 1
  %.78 = load %FloRange.560223*, %FloRange.560223** %.77, align 8
  tail call void %.72(%TypeChecker.560555* %.1, i64 5, %string.560217* %.74, %FloRange.560223* %.78)
  ret %Expression.560401* null

.6.endif.endif:                                   ; preds = %.6.endif
  %.82 = tail call i1 @check_is_var(%Expression.560401* nonnull %.2)
  %.99 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.100 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  br i1 %.82, label %.6.endif.endif.endif, label %.6.endif.endif.if

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.88 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.100, i64 0, i32 16
  %.89 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.88, align 8
  %.90 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.90 to %string.560217*
  %.91.repack = bitcast i8* %.90 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.91.repack, align 8
  %.91.repack1 = getelementptr inbounds i8, i8* %.90, i64 8
  %4 = bitcast i8* %.91.repack1 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.272, i64 0, i64 0), i8** %4, align 8
  %.91.repack2 = getelementptr inbounds i8, i8* %.90, i64 16
  %5 = bitcast i8* %.91.repack2 to i64*
  store i64 35, i64* %5, align 8
  %.91.repack3 = getelementptr inbounds i8, i8* %.90, i64 24
  %6 = bitcast i8* %.91.repack3 to i64*
  store i64 35, i64* %6, align 8
  %.94 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.4, i64 0, i32 1
  %.95 = load %FloRange.560223*, %FloRange.560223** %.94, align 8
  tail call void %.89(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.91, %FloRange.560223* %.95)
  ret %Expression.560401* null

.6.endif.endif.endif:                             ; preds = %.6.endif.endif
  %.101 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.100, i64 0, i32 9
  %.102 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.101, align 8
  %.107 = getelementptr inbounds %Expression.560401, %Expression.560401* %right.0, i64 0, i32 4
  %.108 = load %Type.560381*, %Type.560381** %.107, align 8
  %.109 = tail call i1 %.102(%TypeChecker.560555* nonnull %.1, %Type.560381* %.63, %Type.560381* %.108)
  br i1 %.109, label %.6.endif.endif.endif.endif, label %.6.endif.endif.endif.if

.6.endif.endif.endif.if:                          ; preds = %.6.endif.endif.endif
  %.114 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.114, i64 0, i32 16
  %.116 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.115, align 8
  %.120 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.114, i64 0, i32 10
  %.121 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.120, align 8
  %.124 = load %Type.560381*, %Type.560381** %.107, align 8
  %.125 = tail call %string.560217* %.121(%TypeChecker.560555* nonnull %.1, %Type.560381* %.124)
  %.128 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.129 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.128, i64 0, i32 10
  %.130 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.129, align 8
  %.133 = load %Type.560381*, %Type.560381** %.62, align 8
  %.134 = tail call %string.560217* %.130(%TypeChecker.560555* nonnull %.1, %Type.560381* %.133)
  %.135 = getelementptr inbounds %string.560217, %string.560217* %.125, i64 0, i32 0
  %.136 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.135, align 8
  %.137 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.136, i64 0, i32 11
  %.138 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.137, align 8
  %.139 = tail call i8* %.138(%string.560217* %.125)
  %.140 = getelementptr inbounds %string.560217, %string.560217* %.134, i64 0, i32 0
  %.141 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.140, align 8
  %.142 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.141, i64 0, i32 11
  %.143 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.142, align 8
  %.144 = tail call i8* %.143(%string.560217* %.134)
  %.146 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.273, i64 0, i64 0), i8* %.139, i8* %.144)
  %.147 = add i64 %.146, 1
  %.149 = tail call i8* @malloc(i64 %.147)
  %.150 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.149, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.273, i64 0, i64 0), i8* %.139, i8* %.144)
  %.151 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.152 = bitcast i8* %.151 to %string.560217*
  %.153 = bitcast i8* %.151 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.153, align 8
  %.155 = getelementptr inbounds i8, i8* %.151, i64 8
  %7 = bitcast i8* %.155 to i8**
  store i8* %.149, i8** %7, align 8
  %.157 = getelementptr inbounds i8, i8* %.151, i64 16
  %8 = bitcast i8* %.157 to i64*
  store i64 %.146, i64* %8, align 8
  %.159 = getelementptr inbounds i8, i8* %.151, i64 24
  %9 = bitcast i8* %.159 to i64*
  store i64 %.146, i64* %9, align 8
  %.162 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.4, i64 0, i32 1
  %.163 = load %FloRange.560223*, %FloRange.560223** %.162, align 8
  tail call void %.116(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.152, %FloRange.560223* %.163)
  ret %Expression.560401* null

.6.endif.endif.endif.endif:                       ; preds = %.6.endif.endif.endif
  %.170 = load %Type.560381*, %Type.560381** %.107, align 8
  %.171 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.172 = bitcast i8* %.171 to %BinaryExpression.560425*
  %.173 = bitcast i8* %.171 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.173, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.172, %Expression.560401* nonnull %.2, i64 19, %Expression.560401* nonnull %right.0, %Type.560381* %.170, i1 false)
  %.176 = bitcast i8* %.171 to %Expression.560401*
  ret %Expression.560401* %.176
}

define noalias %Expression.560401* @TypeChecker_check_object_bin_assign(%TypeChecker.560555* %.1, %Expression.560401* %.2, %BinaryExpressionNode.560313* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.14 = tail call %string.560217* @bin_op_to_op_overload_name(i64 %.11)
  %.17 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.18 = load %Program.560549*, %Program.560549** %.17, align 8
  %.20 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 4
  %.2112 = load %Type.560381*, %Type.560381** %.20, align 8
  %.24 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.18, %Type.560381* %.2112)
  %.27 = getelementptr inbounds %Class.560513, %Class.560513* %.24, i64 0, i32 7
  %.28 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.27, align 8
  %.29 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.28, i64 0, i32 0
  %.30 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.29, align 8
  %.31 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.30, i64 0, i32 3
  %.32 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.31, align 8
  %.34 = tail call %PropId.560449* %.32(%"Map<string, PropId>.560517"* %.28, %string.560217* %.14)
  %0 = ptrtoint %PropId.560449* %.34 to i64
  %.37 = trunc i64 %0 to i32
  %.39 = icmp eq i32 %.37, 0
  br i1 %.39, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif, %.5
  ret %Expression.560401* null

.5.endif:                                         ; preds = %.5
  %.44 = load %Program.560549*, %Program.560549** %.17, align 8
  %.46 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.44, %PropId.560449* %.34)
  %.50 = getelementptr inbounds %Type.560381, %Type.560381* %.46, i64 1
  %1 = bitcast %Type.560381* %.50 to %"Array<Type>.560389"**
  %.51 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %1, align 8
  %.52 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.51, i64 0, i32 0
  %.53 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.52, align 8
  %.54 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.53, i64 0, i32 5
  %.55 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.54, align 8
  %.56 = tail call %Type.560381* %.55(%"Array<Type>.560389"* %.51, i64 0)
  %.59 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.60 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.61 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.60, i64 0, i32 72
  %.62 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.61, align 8
  %.65 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 6
  %.66 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.65, align 8
  %.67 = tail call %Expression.560401* %.62(%TypeChecker.560555* nonnull %.1, %Type.560381* %.56, %ExpressionNode.560285* %.66)
  %.71 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.72 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.71, i64 0, i32 17
  %.73 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.72, align 8
  %.74 = tail call i1 %.73(%TypeChecker.560555* nonnull %.1)
  br i1 %.74, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.79 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.79, i64 0, i32 9
  %.81 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.80, align 8
  %.84 = getelementptr inbounds %Expression.560401, %Expression.560401* %.67, i64 0, i32 4
  %.85 = load %Type.560381*, %Type.560381** %.84, align 8
  %.86 = tail call i1 %.81(%TypeChecker.560555* nonnull %.1, %Type.560381* %.56, %Type.560381* %.85)
  br i1 %.86, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.91 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.91, i64 0, i32 16
  %.93 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.92, align 8
  %.97 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.91, i64 0, i32 10
  %.98 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.97, align 8
  %.100 = tail call %string.560217* %.98(%TypeChecker.560555* nonnull %.1, %Type.560381* %.56)
  %.103 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.104 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.103, i64 0, i32 10
  %.105 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.104, align 8
  %.108 = load %Type.560381*, %Type.560381** %.84, align 8
  %.109 = tail call %string.560217* %.105(%TypeChecker.560555* nonnull %.1, %Type.560381* %.108)
  %.110 = getelementptr inbounds %string.560217, %string.560217* %.100, i64 0, i32 0
  %.111 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.110, align 8
  %.112 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.111, i64 0, i32 11
  %.113 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.112, align 8
  %.114 = tail call i8* %.113(%string.560217* %.100)
  %.115 = getelementptr inbounds %string.560217, %string.560217* %.109, i64 0, i32 0
  %.116 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.115, align 8
  %.117 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.116, i64 0, i32 11
  %.118 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.117, align 8
  %.119 = tail call i8* %.118(%string.560217* %.109)
  %.121 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.114, i8* %.119)
  %.122 = add i64 %.121, 1
  %.124 = tail call i8* @malloc(i64 %.122)
  %.125 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.124, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.114, i8* %.119)
  %.126 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.127 = bitcast i8* %.126 to %string.560217*
  %.128 = bitcast i8* %.126 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.128, align 8
  %.130 = getelementptr inbounds i8, i8* %.126, i64 8
  %2 = bitcast i8* %.130 to i8**
  store i8* %.124, i8** %2, align 8
  %.132 = getelementptr inbounds i8, i8* %.126, i64 16
  %3 = bitcast i8* %.132 to i64*
  store i64 %.121, i64* %3, align 8
  %.134 = getelementptr inbounds i8, i8* %.126, i64 24
  %4 = bitcast i8* %.134 to i64*
  store i64 %.121, i64* %4, align 8
  %.138 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.65, align 8
  %.139 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.138, i64 0, i32 1
  %.140 = load %FloRange.560223*, %FloRange.560223** %.139, align 8
  tail call void %.93(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.127, %FloRange.560223* %.140)
  ret %Expression.560401* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %5 = ptrtoint %Expression.560401* %.67 to i64
  %.147 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.148 = bitcast i8* %.147 to %MemberExpression.560451*
  %.149 = bitcast i8* %.147 to %MemberExpression_vtable_ty.560452**
  store %MemberExpression_vtable_ty.560452* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.560452** %.149, align 8
  tail call void @MemberExpression_constructor(%MemberExpression.560451* %.148, %Expression.560401* nonnull %.2, %PropId.560449* %.34, %Type.560381* %.46)
  %.155 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %6 = bitcast i8* %.155 to i64*
  store i64 %5, i64* %6, align 8
  %.159 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.159 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.161, align 8
  %.163 = getelementptr inbounds i8, i8* %.159, i64 8
  %7 = bitcast i8* %.163 to i8**
  store i8* %.155, i8** %7, align 8
  %.165 = getelementptr inbounds i8, i8* %.159, i64 16
  %8 = bitcast i8* %.165 to i64*
  store i64 1, i64* %8, align 8
  %.167 = getelementptr inbounds i8, i8* %.159, i64 24
  %9 = bitcast i8* %.167 to i64*
  store i64 8, i64* %9, align 8
  %10 = bitcast i8* %.147 to %Expression.560401*
  %.172.cast = bitcast i8* %.159 to %"Array<Expression>.560419"*
  %.174 = getelementptr inbounds %Type.560381, %Type.560381* %.46, i64 1, i32 1
  %11 = bitcast i64* %.174 to %Type.560381**
  %.175 = load %Type.560381*, %Type.560381** %11, align 8
  %.176 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.177 = bitcast i8* %.176 to %CallExpression.560437*
  %.178 = bitcast i8* %.176 to %CallExpression_vtable_ty.560438**
  store %CallExpression_vtable_ty.560438* @CallExpression_vtable_data, %CallExpression_vtable_ty.560438** %.178, align 8
  tail call void @CallExpression_constructor(%CallExpression.560437* %.177, %Expression.560401* %10, %"Array<Expression>.560419"* %.172.cast, %Type.560381* %.175)
  %.181 = bitcast i8* %.176 to %Expression.560401*
  ret %Expression.560401* %.181
}

define noalias %Expression.560401* @TypeChecker_check_object_binary_expr(%TypeChecker.560555* %.1, %Expression.560401* %.2, %BinaryExpressionNode.560313* nocapture readonly %.3, %Expression.560401* %.4) {
.6:
  %.12 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 5
  %.13 = load i64, i64* %.12, align 8
  %.16 = tail call %string.560217* @bin_op_to_op_overload_name(i64 %.13)
  %0 = ptrtoint %string.560217* %.16 to i64
  %.19 = trunc i64 %0 to i32
  %.21 = icmp eq i32 %.19, 0
  br i1 %.21, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.24 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.25 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.24, align 8
  %.26 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.25, i64 0, i32 16
  %.27 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.26, align 8
  %.29 = tail call %string.560217* @dump_bin_op(i64 %.13)
  %.30 = getelementptr inbounds %string.560217, %string.560217* %.29, i64 0, i32 0
  %.31 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.30, align 8
  %.32 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.31, i64 0, i32 11
  %.33 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.32, align 8
  %.34 = tail call i8* %.33(%string.560217* %.29)
  %.36 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.275, i64 0, i64 0), i8* %.34)
  %.37 = add i64 %.36, 1
  %.39 = tail call i8* @malloc(i64 %.37)
  %.40 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.39, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.275, i64 0, i64 0), i8* %.34)
  %.41 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %string.560217*
  %.43 = bitcast i8* %.41 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.43, align 8
  %.45 = getelementptr inbounds i8, i8* %.41, i64 8
  %1 = bitcast i8* %.45 to i8**
  store i8* %.39, i8** %1, align 8
  %.47 = getelementptr inbounds i8, i8* %.41, i64 16
  %2 = bitcast i8* %.47 to i64*
  store i64 %.36, i64* %2, align 8
  %.49 = getelementptr inbounds i8, i8* %.41, i64 24
  %3 = bitcast i8* %.49 to i64*
  store i64 %.36, i64* %3, align 8
  %.52 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 1
  %.53 = load %FloRange.560223*, %FloRange.560223** %.52, align 8
  tail call void %.27(%TypeChecker.560555* %.1, i64 4, %string.560217* %.42, %FloRange.560223* %.53)
  ret %Expression.560401* null

.6.endif:                                         ; preds = %.6
  %.57 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.58 = load %Program.560549*, %Program.560549** %.57, align 8
  %.60 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 4
  %.61 = load %Type.560381*, %Type.560381** %.60, align 8
  %.62 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.58, %Type.560381* %.61)
  %.65 = getelementptr inbounds %Class.560513, %Class.560513* %.62, i64 0, i32 7
  %.66 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.65, align 8
  %.67 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.66, i64 0, i32 0
  %.68 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.67, align 8
  %.69 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.68, i64 0, i32 3
  %.70 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.69, align 8
  %.72 = tail call %PropId.560449* %.70(%"Map<string, PropId>.560517"* %.66, %string.560217* %.16)
  %4 = ptrtoint %PropId.560449* %.72 to i64
  %.75 = trunc i64 %4 to i32
  %.77 = icmp eq i32 %.75, 0
  br i1 %.77, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  %5 = add i64 %.13, -11
  %6 = icmp ult i64 %5, 2
  %.88 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.89 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.88, align 8
  br i1 %6, label %.6.endif.if.if, label %.6.endif.if.endif

.6.endif.endif:                                   ; preds = %.6.endif
  %.161 = load %Program.560549*, %Program.560549** %.57, align 8
  %.163 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.161, %PropId.560449* %.72)
  %.167 = getelementptr inbounds %Type.560381, %Type.560381* %.163, i64 1
  %7 = bitcast %Type.560381* %.167 to %"Array<Type>.560389"**
  %.168 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %7, align 8
  %.169 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.168, i64 0, i32 0
  %.170 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.169, align 8
  %.171 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.170, i64 0, i32 5
  %.172 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.171, align 8
  %.173 = tail call %Type.560381* %.172(%"Array<Type>.560389"* %.168, i64 0)
  %8 = ptrtoint %Expression.560401* %.4 to i64
  %.176 = trunc i64 %8 to i32
  %.178 = icmp eq i32 %.176, 0
  br i1 %.178, label %.6.endif.endif.if, label %.6.endif.endif.endif

.6.endif.if.if:                                   ; preds = %.6.endif.if
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.89, i64 0, i32 72
  %.91 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.90, align 8
  %.94 = load %Type.560381*, %Type.560381** %.60, align 8
  %.96 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 6
  %.97 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.96, align 8
  %.98 = tail call %Expression.560401* %.91(%TypeChecker.560555* nonnull %.1, %Type.560381* %.94, %ExpressionNode.560285* %.97)
  %.99 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.100 = bitcast i8* %.99 to %BooleanType.560383*
  %.101 = bitcast i8* %.99 to %BooleanType_vtable_ty.560384**
  store %BooleanType_vtable_ty.560384* @BooleanType_vtable_data, %BooleanType_vtable_ty.560384** %.101, align 8
  tail call void @BooleanType_constructor(%BooleanType.560383* %.100)
  %.104 = bitcast i8* %.99 to %Type.560381*
  %.105 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.106 = bitcast i8* %.105 to %BinaryExpression.560425*
  %.107 = bitcast i8* %.105 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.107, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.106, %Expression.560401* nonnull %.2, i64 %.13, %Expression.560401* %.98, %Type.560381* %.104, i1 false)
  %.110 = bitcast i8* %.105 to %Expression.560401*
  ret %Expression.560401* %.110

.6.endif.if.endif:                                ; preds = %.6.endif.if
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.89, i64 0, i32 16
  %.116 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.115, align 8
  %.118 = tail call %string.560217* @dump_bin_op(i64 %.13)
  %.120 = getelementptr inbounds %Class.560513, %Class.560513* %.62, i64 0, i32 2
  %.121 = load %string.560217*, %string.560217** %.120, align 8
  %.123 = getelementptr inbounds %string.560217, %string.560217* %.118, i64 0, i32 0
  %.124 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.123, align 8
  %.125 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.124, i64 0, i32 11
  %.126 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.125, align 8
  %.127 = tail call i8* %.126(%string.560217* %.118)
  %.128 = getelementptr inbounds %string.560217, %string.560217* %.121, i64 0, i32 0
  %.129 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.128, align 8
  %.130 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.129, i64 0, i32 11
  %.131 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.130, align 8
  %.132 = tail call i8* %.131(%string.560217* %.121)
  %.133 = getelementptr inbounds %string.560217, %string.560217* %.16, i64 0, i32 0
  %.134 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.133, align 8
  %.135 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.134, i64 0, i32 11
  %.136 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.135, align 8
  %.137 = tail call i8* %.136(%string.560217* %.16)
  %.139 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @str.276, i64 0, i64 0), i8* %.127, i8* %.132, i8* %.137)
  %.140 = add i64 %.139, 1
  %.142 = tail call i8* @malloc(i64 %.140)
  %.143 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.142, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @str.276, i64 0, i64 0), i8* %.127, i8* %.132, i8* %.137)
  %.144 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.145 = bitcast i8* %.144 to %string.560217*
  %.146 = bitcast i8* %.144 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.146, align 8
  %.148 = getelementptr inbounds i8, i8* %.144, i64 8
  %9 = bitcast i8* %.148 to i8**
  store i8* %.142, i8** %9, align 8
  %.150 = getelementptr inbounds i8, i8* %.144, i64 16
  %10 = bitcast i8* %.150 to i64*
  store i64 %.139, i64* %10, align 8
  %.152 = getelementptr inbounds i8, i8* %.144, i64 24
  %11 = bitcast i8* %.152 to i64*
  store i64 %.139, i64* %11, align 8
  %.155 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 1
  %.156 = load %FloRange.560223*, %FloRange.560223** %.155, align 8
  tail call void %.116(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.145, %FloRange.560223* %.156)
  ret %Expression.560401* null

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.181 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.182 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.181, align 8
  %.183 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.182, i64 0, i32 72
  %.184 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.183, align 8
  %.187 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 6
  %.188 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.187, align 8
  %.189 = tail call %Expression.560401* %.184(%TypeChecker.560555* nonnull %.1, %Type.560381* %.173, %ExpressionNode.560285* %.188)
  br label %.6.endif.endif.endif

.6.endif.endif.endif:                             ; preds = %.6.endif.endif.if, %.6.endif.endif
  %right.0 = phi %Expression.560401* [ %.189, %.6.endif.endif.if ], [ %.4, %.6.endif.endif ]
  %.193 = tail call i1 @is_null(%Expression.560401* %right.0)
  %12 = add i64 %.13, -11
  %13 = icmp ult i64 %12, 2
  %.199 = and i1 %13, %.193
  br i1 %.199, label %.6.endif.endif.endif.if, label %.6.endif.endif.endif.endif

.6.endif.endif.endif.if:                          ; preds = %.6.endif.endif.endif
  %.204 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.205 = bitcast i8* %.204 to %BooleanType.560383*
  %.206 = bitcast i8* %.204 to %BooleanType_vtable_ty.560384**
  store %BooleanType_vtable_ty.560384* @BooleanType_vtable_data, %BooleanType_vtable_ty.560384** %.206, align 8
  tail call void @BooleanType_constructor(%BooleanType.560383* %.205)
  %.209 = bitcast i8* %.204 to %Type.560381*
  %.210 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.211 = bitcast i8* %.210 to %BinaryExpression.560425*
  %.212 = bitcast i8* %.210 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.212, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.211, %Expression.560401* nonnull %.2, i64 %.13, %Expression.560401* %right.0, %Type.560381* %.209, i1 false)
  %.215 = bitcast i8* %.210 to %Expression.560401*
  ret %Expression.560401* %.215

.6.endif.endif.endif.endif:                       ; preds = %.6.endif.endif.endif
  %.218 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.219 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.218, align 8
  %.220 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.219, i64 0, i32 9
  %.221 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.220, align 8
  %.224 = getelementptr inbounds %Expression.560401, %Expression.560401* %right.0, i64 0, i32 4
  %.225 = load %Type.560381*, %Type.560381** %.224, align 8
  %.226 = tail call i1 %.221(%TypeChecker.560555* nonnull %.1, %Type.560381* %.173, %Type.560381* %.225)
  br i1 %.226, label %.6.endif.endif.endif.endif.endif, label %.6.endif.endif.endif.endif.if

.6.endif.endif.endif.endif.if:                    ; preds = %.6.endif.endif.endif.endif
  %.231 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.218, align 8
  %.232 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.231, i64 0, i32 16
  %.233 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.232, align 8
  %.237 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.231, i64 0, i32 10
  %.238 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.237, align 8
  %.240 = tail call %string.560217* %.238(%TypeChecker.560555* nonnull %.1, %Type.560381* %.173)
  %.243 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.218, align 8
  %.244 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.243, i64 0, i32 10
  %.245 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.244, align 8
  %.248 = load %Type.560381*, %Type.560381** %.224, align 8
  %.249 = tail call %string.560217* %.245(%TypeChecker.560555* nonnull %.1, %Type.560381* %.248)
  %.250 = getelementptr inbounds %string.560217, %string.560217* %.240, i64 0, i32 0
  %.251 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.250, align 8
  %.252 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.251, i64 0, i32 11
  %.253 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.252, align 8
  %.254 = tail call i8* %.253(%string.560217* %.240)
  %.255 = getelementptr inbounds %string.560217, %string.560217* %.249, i64 0, i32 0
  %.256 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.255, align 8
  %.257 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.256, i64 0, i32 11
  %.258 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.257, align 8
  %.259 = tail call i8* %.258(%string.560217* %.249)
  %.261 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.254, i8* %.259)
  %.262 = add i64 %.261, 1
  %.264 = tail call i8* @malloc(i64 %.262)
  %.265 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.264, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.254, i8* %.259)
  %.266 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.267 = bitcast i8* %.266 to %string.560217*
  %.268 = bitcast i8* %.266 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.268, align 8
  %.270 = getelementptr inbounds i8, i8* %.266, i64 8
  %14 = bitcast i8* %.270 to i8**
  store i8* %.264, i8** %14, align 8
  %.272 = getelementptr inbounds i8, i8* %.266, i64 16
  %15 = bitcast i8* %.272 to i64*
  store i64 %.261, i64* %15, align 8
  %.274 = getelementptr inbounds i8, i8* %.266, i64 24
  %16 = bitcast i8* %.274 to i64*
  store i64 %.261, i64* %16, align 8
  %.277 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 6
  %.278 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.277, align 8
  %.279 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.278, i64 0, i32 1
  %.280 = load %FloRange.560223*, %FloRange.560223** %.279, align 8
  tail call void %.233(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.267, %FloRange.560223* %.280)
  ret %Expression.560401* null

.6.endif.endif.endif.endif.endif:                 ; preds = %.6.endif.endif.endif.endif
  %.287 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.288 = bitcast i8* %.287 to %MemberExpression.560451*
  %.289 = bitcast i8* %.287 to %MemberExpression_vtable_ty.560452**
  store %MemberExpression_vtable_ty.560452* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.560452** %.289, align 8
  tail call void @MemberExpression_constructor(%MemberExpression.560451* %.288, %Expression.560401* nonnull %.2, %PropId.560449* %.72, %Type.560381* %.163)
  %.295 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.296 = bitcast i8* %.295 to %Expression.560401**
  store %Expression.560401* %right.0, %Expression.560401** %.296, align 8
  %.299 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.301 = bitcast i8* %.299 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.301, align 8
  %.303 = getelementptr inbounds i8, i8* %.299, i64 8
  %17 = bitcast i8* %.303 to i8**
  store i8* %.295, i8** %17, align 8
  %.305 = getelementptr inbounds i8, i8* %.299, i64 16
  %18 = bitcast i8* %.305 to i64*
  store i64 1, i64* %18, align 8
  %.307 = getelementptr inbounds i8, i8* %.299, i64 24
  %19 = bitcast i8* %.307 to i64*
  store i64 8, i64* %19, align 8
  %20 = bitcast i8* %.287 to %Expression.560401*
  %.312.cast = bitcast i8* %.299 to %"Array<Expression>.560419"*
  %.314 = getelementptr inbounds %Type.560381, %Type.560381* %.163, i64 1, i32 1
  %21 = bitcast i64* %.314 to %Type.560381**
  %.315 = load %Type.560381*, %Type.560381** %21, align 8
  %.316 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.317 = bitcast i8* %.316 to %CallExpression.560437*
  %.318 = bitcast i8* %.316 to %CallExpression_vtable_ty.560438**
  store %CallExpression_vtable_ty.560438* @CallExpression_vtable_data, %CallExpression_vtable_ty.560438** %.318, align 8
  tail call void @CallExpression_constructor(%CallExpression.560437* %.317, %Expression.560401* %20, %"Array<Expression>.560419"* %.312.cast, %Type.560381* %.315)
  %.321 = bitcast i8* %.316 to %Expression.560401*
  ret %Expression.560401* %.321
}

define noalias %Expression.560401* @TypeChecker_check_object_setitem_expr(%TypeChecker.560555* %.1, %Expression.560401* %.2, %BinaryExpressionNode.560313* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 4
  %0 = bitcast %ExpressionNode.560285** %.10 to %ExpressionIndexNode.560305**
  %.112 = load %ExpressionIndexNode.560305*, %ExpressionIndexNode.560305** %0, align 8
  %.15 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.16 = load %Program.560549*, %Program.560549** %.15, align 8
  %.18 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 4
  %.19 = load %Type.560381*, %Type.560381** %.18, align 8
  %.20 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.16, %Type.560381* %.19)
  %.23 = getelementptr inbounds %Class.560513, %Class.560513* %.20, i64 0, i32 7
  %.24 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.24, i64 0, i32 0
  %.26 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.25, align 8
  %.27 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.26, i64 0, i32 3
  %.28 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.27, align 8
  %.29 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.560217*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.30.repack, align 8
  %.30.repack3 = getelementptr inbounds i8, i8* %.29, i64 8
  %1 = bitcast i8* %.30.repack3 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.202, i64 0, i64 0), i8** %1, align 8
  %.30.repack4 = getelementptr inbounds i8, i8* %.29, i64 16
  %2 = bitcast i8* %.30.repack4 to i64*
  store i64 11, i64* %2, align 8
  %.30.repack5 = getelementptr inbounds i8, i8* %.29, i64 24
  %3 = bitcast i8* %.30.repack5 to i64*
  store i64 11, i64* %3, align 8
  %.32 = tail call %PropId.560449* %.28(%"Map<string, PropId>.560517"* %.24, %string.560217* %.30)
  %4 = ptrtoint %PropId.560449* %.32 to i64
  %.35 = trunc i64 %4 to i32
  %.37 = icmp eq i32 %.35, 0
  br i1 %.37, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.40 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.41 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.40, align 8
  %.42 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.41, i64 0, i32 16
  %.43 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.42, align 8
  %.45 = getelementptr inbounds %Class.560513, %Class.560513* %.20, i64 0, i32 2
  %.46 = load %string.560217*, %string.560217** %.45, align 8
  %.47 = getelementptr inbounds %string.560217, %string.560217* %.46, i64 0, i32 0
  %.48 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.48, i64 0, i32 11
  %.50 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.49, align 8
  %.51 = tail call i8* %.50(%string.560217* %.46)
  %.53 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @str.277, i64 0, i64 0), i8* %.51)
  %.54 = add i64 %.53, 1
  %.56 = tail call i8* @malloc(i64 %.54)
  %.57 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @str.277, i64 0, i64 0), i8* %.51)
  %.58 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.560217*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %5 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %5, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %6 = bitcast i8* %.64 to i64*
  store i64 %.53, i64* %6, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %7 = bitcast i8* %.66 to i64*
  store i64 %.53, i64* %7, align 8
  %.69 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.112, i64 0, i32 1
  %.70 = load %FloRange.560223*, %FloRange.560223** %.69, align 8
  tail call void %.43(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.59, %FloRange.560223* %.70)
  ret %Expression.560401* null

.5.endif:                                         ; preds = %.5
  %.75 = load %Program.560549*, %Program.560549** %.15, align 8
  %.77 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.75, %PropId.560449* %.32)
  %.81 = getelementptr inbounds %Type.560381, %Type.560381* %.77, i64 1
  %8 = bitcast %Type.560381* %.81 to %"Array<Type>.560389"**
  %.82 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %8, align 8
  %.83 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.82, i64 0, i32 0
  %.84 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.83, align 8
  %.85 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.84, i64 0, i32 5
  %.86 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.85, align 8
  %.87 = tail call %Type.560381* %.86(%"Array<Type>.560389"* %.82, i64 0)
  %.90 = getelementptr inbounds %Type.560381, %Type.560381* %.77, i64 1
  %9 = bitcast %Type.560381* %.90 to %"Array<Type>.560389"**
  %.91 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %9, align 8
  %.92 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.91, i64 0, i32 0
  %.93 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.92, align 8
  %.94 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.93, i64 0, i32 5
  %.95 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.94, align 8
  %.96 = tail call %Type.560381* %.95(%"Array<Type>.560389"* %.91, i64 1)
  %.99 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.100 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.101 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.100, i64 0, i32 17
  %.102 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.101, align 8
  %.103 = tail call i1 %.102(%TypeChecker.560555* nonnull %.1)
  br i1 %.103, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif.endif.endif, %.5.endif
  ret %Expression.560401* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.108 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.109 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.108, i64 0, i32 72
  %.110 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.109, align 8
  %.113 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.112, i64 0, i32 5
  %.114 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.113, align 8
  %.115 = tail call %Expression.560401* %.110(%TypeChecker.560555* nonnull %.1, %Type.560381* %.87, %ExpressionNode.560285* %.114)
  %.119 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.120 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.119, i64 0, i32 9
  %.121 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.120, align 8
  %.124 = getelementptr inbounds %Expression.560401, %Expression.560401* %.115, i64 0, i32 4
  %.125 = load %Type.560381*, %Type.560381** %.124, align 8
  %.126 = tail call i1 %.121(%TypeChecker.560555* nonnull %.1, %Type.560381* %.87, %Type.560381* %.125)
  %.185 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  br i1 %.126, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.132 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.185, i64 0, i32 16
  %.133 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.132, align 8
  %.137 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.185, i64 0, i32 10
  %.138 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.137, align 8
  %.140 = tail call %string.560217* %.138(%TypeChecker.560555* nonnull %.1, %Type.560381* %.87)
  %.143 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.144 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.143, i64 0, i32 10
  %.145 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.144, align 8
  %.148 = load %Type.560381*, %Type.560381** %.124, align 8
  %.149 = tail call %string.560217* %.145(%TypeChecker.560555* nonnull %.1, %Type.560381* %.148)
  %.150 = getelementptr inbounds %string.560217, %string.560217* %.140, i64 0, i32 0
  %.151 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.150, align 8
  %.152 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.151, i64 0, i32 11
  %.153 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.152, align 8
  %.154 = tail call i8* %.153(%string.560217* %.140)
  %.155 = getelementptr inbounds %string.560217, %string.560217* %.149, i64 0, i32 0
  %.156 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.155, align 8
  %.157 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.156, i64 0, i32 11
  %.158 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.157, align 8
  %.159 = tail call i8* %.158(%string.560217* %.149)
  %.161 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.154, i8* %.159)
  %.162 = add i64 %.161, 1
  %.164 = tail call i8* @malloc(i64 %.162)
  %.165 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.164, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.154, i8* %.159)
  %.166 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.167 = bitcast i8* %.166 to %string.560217*
  %.168 = bitcast i8* %.166 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.168, align 8
  %.170 = getelementptr inbounds i8, i8* %.166, i64 8
  %10 = bitcast i8* %.170 to i8**
  store i8* %.164, i8** %10, align 8
  %.172 = getelementptr inbounds i8, i8* %.166, i64 16
  %11 = bitcast i8* %.172 to i64*
  store i64 %.161, i64* %11, align 8
  %.174 = getelementptr inbounds i8, i8* %.166, i64 24
  %12 = bitcast i8* %.174 to i64*
  store i64 %.161, i64* %12, align 8
  %.178 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.113, align 8
  %.179 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.178, i64 0, i32 1
  %.180 = load %FloRange.560223*, %FloRange.560223** %.179, align 8
  tail call void %.133(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.167, %FloRange.560223* %.180)
  ret %Expression.560401* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.186 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.185, i64 0, i32 72
  %.187 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.186, align 8
  %.190 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 6
  %.191 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.190, align 8
  %.192 = tail call %Expression.560401* %.187(%TypeChecker.560555* nonnull %.1, %Type.560381* %.96, %ExpressionNode.560285* %.191)
  %.196 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.197 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.196, i64 0, i32 17
  %.198 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.197, align 8
  %.199 = tail call i1 %.198(%TypeChecker.560555* nonnull %.1)
  br i1 %.199, label %.5.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.204 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.205 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.204, i64 0, i32 9
  %.206 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.205, align 8
  %.210 = load %Type.560381*, %Type.560381** %.124, align 8
  %.211 = tail call i1 %.206(%TypeChecker.560555* nonnull %.1, %Type.560381* %.87, %Type.560381* %.210)
  br i1 %.211, label %.5.endif.endif.endif.endif.endif, label %.5.endif.endif.endif.endif.if

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.216 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.217 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.216, i64 0, i32 16
  %.218 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.217, align 8
  %.222 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.216, i64 0, i32 10
  %.223 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.222, align 8
  %.225 = tail call %string.560217* %.223(%TypeChecker.560555* nonnull %.1, %Type.560381* %.96)
  %.228 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.99, align 8
  %.229 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.228, i64 0, i32 10
  %.230 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.229, align 8
  %.232 = getelementptr inbounds %Expression.560401, %Expression.560401* %.192, i64 0, i32 4
  %.233 = load %Type.560381*, %Type.560381** %.232, align 8
  %.234 = tail call %string.560217* %.230(%TypeChecker.560555* nonnull %.1, %Type.560381* %.233)
  %.235 = getelementptr inbounds %string.560217, %string.560217* %.225, i64 0, i32 0
  %.236 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.235, align 8
  %.237 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.236, i64 0, i32 11
  %.238 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.237, align 8
  %.239 = tail call i8* %.238(%string.560217* %.225)
  %.240 = getelementptr inbounds %string.560217, %string.560217* %.234, i64 0, i32 0
  %.241 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.240, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.241, i64 0, i32 11
  %.243 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.242, align 8
  %.244 = tail call i8* %.243(%string.560217* %.234)
  %.246 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.239, i8* %.244)
  %.247 = add i64 %.246, 1
  %.249 = tail call i8* @malloc(i64 %.247)
  %.250 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.249, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.239, i8* %.244)
  %.251 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.252 = bitcast i8* %.251 to %string.560217*
  %.253 = bitcast i8* %.251 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.253, align 8
  %.255 = getelementptr inbounds i8, i8* %.251, i64 8
  %13 = bitcast i8* %.255 to i8**
  store i8* %.249, i8** %13, align 8
  %.257 = getelementptr inbounds i8, i8* %.251, i64 16
  %14 = bitcast i8* %.257 to i64*
  store i64 %.246, i64* %14, align 8
  %.259 = getelementptr inbounds i8, i8* %.251, i64 24
  %15 = bitcast i8* %.259 to i64*
  store i64 %.246, i64* %15, align 8
  %.263 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.190, align 8
  %.264 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.263, i64 0, i32 1
  %.265 = load %FloRange.560223*, %FloRange.560223** %.264, align 8
  tail call void %.218(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.252, %FloRange.560223* %.265)
  ret %Expression.560401* null

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %16 = ptrtoint %Expression.560401* %.192 to i64
  %17 = ptrtoint %Expression.560401* %.115 to i64
  %.272 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.273 = bitcast i8* %.272 to %MemberExpression.560451*
  %.274 = bitcast i8* %.272 to %MemberExpression_vtable_ty.560452**
  store %MemberExpression_vtable_ty.560452* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.560452** %.274, align 8
  tail call void @MemberExpression_constructor(%MemberExpression.560451* %.273, %Expression.560401* nonnull %.2, %PropId.560449* %.32, %Type.560381* %.77)
  %.281 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %18 = bitcast i8* %.281 to i64*
  store i64 %17, i64* %18, align 8
  %.285 = getelementptr inbounds i8, i8* %.281, i64 8
  %19 = bitcast i8* %.285 to i64*
  store i64 %16, i64* %19, align 8
  %.287 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.289 = bitcast i8* %.287 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.289, align 8
  %.291 = getelementptr inbounds i8, i8* %.287, i64 8
  %20 = bitcast i8* %.291 to i8**
  store i8* %.281, i8** %20, align 8
  %.293 = getelementptr inbounds i8, i8* %.287, i64 16
  %21 = bitcast i8* %.293 to i64*
  store i64 2, i64* %21, align 8
  %.295 = getelementptr inbounds i8, i8* %.287, i64 24
  %22 = bitcast i8* %.295 to i64*
  store i64 16, i64* %22, align 8
  %23 = bitcast i8* %.272 to %Expression.560401*
  %.300.cast = bitcast i8* %.287 to %"Array<Expression>.560419"*
  %.302 = getelementptr inbounds %Type.560381, %Type.560381* %.77, i64 1, i32 1
  %24 = bitcast i64* %.302 to %Type.560381**
  %.303 = load %Type.560381*, %Type.560381** %24, align 8
  %.304 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.305 = bitcast i8* %.304 to %CallExpression.560437*
  %.306 = bitcast i8* %.304 to %CallExpression_vtable_ty.560438**
  store %CallExpression_vtable_ty.560438* @CallExpression_vtable_data, %CallExpression_vtable_ty.560438** %.306, align 8
  tail call void @CallExpression_constructor(%CallExpression.560437* %.305, %Expression.560401* %23, %"Array<Expression>.560419"* %.300.cast, %Type.560381* %.303)
  %.309 = bitcast i8* %.304 to %Expression.560401*
  ret %Expression.560401* %.309
}

define %BinaryExpression.560425* @TypeChecker_check_bin_expr(%TypeChecker.560555* %.1, %Type.560381* %.2, %BinaryExpressionNode.560313* %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.11.off = add i64 %.11, -19
  %0 = icmp ult i64 %.11.off, 12
  %.20 = icmp eq i64 %.11, 19
  %.22 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 4
  %.23 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.22, align 8
  %.24 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.23, i64 0, i32 3
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp eq i64 %.25, 13
  %.27 = and i1 %.20, %.26
  br i1 %.27, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.30 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.31 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.32 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.31, i64 0, i32 72
  %.33 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.32, align 8
  %.34 = tail call %Type.560381* @Type_unknown()
  %1 = bitcast %ExpressionNode.560285** %.22 to %ExpressionIndexNode.560305**
  %.3714 = load %ExpressionIndexNode.560305*, %ExpressionIndexNode.560305** %1, align 8
  %.39 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.3714, i64 0, i32 4
  %.40 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.39, align 8
  %.41 = tail call %Expression.560401* %.33(%TypeChecker.560555* %.1, %Type.560381* %.34, %ExpressionNode.560285* %.40)
  %.44 = getelementptr inbounds %Expression.560401, %Expression.560401* %.41, i64 0, i32 4
  %.45 = load %Type.560381*, %Type.560381** %.44, align 8
  %.46 = tail call i1 @is_object(%Type.560381* %.45)
  br i1 %.46, label %.5.if.if, label %.5.if..5.endif_crit_edge

.5.if..5.endif_crit_edge:                         ; preds = %.5.if
  %.67.pre = load %ExpressionNode.560285*, %ExpressionNode.560285** %.22, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if..5.endif_crit_edge, %.5
  %.67 = phi %ExpressionNode.560285* [ %.67.pre, %.5.if..5.endif_crit_edge ], [ %.23, %.5 ]
  %.60 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.61 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  %.62 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.61, i64 0, i32 72
  %.63 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.62, align 8
  %.68 = tail call %Expression.560401* %.63(%TypeChecker.560555* %.1, %Type.560381* %.2, %ExpressionNode.560285* %.67)
  %left = alloca %Expression.560401*, align 8
  store %Expression.560401* %.68, %Expression.560401** %left, align 8
  %.72 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  %.73 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.72, i64 0, i32 17
  %.74 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.73, align 8
  %.75 = tail call i1 %.74(%TypeChecker.560555* %.1)
  br i1 %.75, label %.5.endif.if, label %.5.endif.endif

.5.if.if:                                         ; preds = %.5.if
  %.50 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.30, align 8
  %.51 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.50, i64 0, i32 52
  %.52 = load %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*)** %.51, align 8
  %.55 = tail call %Expression.560401* %.52(%TypeChecker.560555* nonnull %.1, %Expression.560401* %.41, %BinaryExpressionNode.560313* nonnull %.3)
  %.56 = bitcast %Expression.560401* %.55 to %BinaryExpression.560425*
  ret %BinaryExpression.560425* %.56

.5.endif.if:                                      ; preds = %.5.endif.endif.endif.endif.endif, %.5.endif.endif.endif, %.5.endif
  ret %BinaryExpression.560425* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.79 = getelementptr inbounds %Expression.560401, %Expression.560401* %.68, i64 0, i32 4
  %.80 = load %Type.560381*, %Type.560381** %.79, align 8
  %.81 = tail call i1 @is_object(%Type.560381* %.80)
  %.83 = xor i1 %0, true
  %.84 = and i1 %.81, %.83
  %.86 = icmp ne i64 %.11, 18
  %.87 = and i1 %.86, %.84
  %.91 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  br i1 %.87, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.91, i64 0, i32 51
  %.93 = load %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*, %Expression.560401*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*, %Expression.560401*)** %.92, align 8
  %.96 = tail call %Expression.560401* %.93(%TypeChecker.560555* nonnull %.1, %Expression.560401* nonnull %.68, %BinaryExpressionNode.560313* nonnull %.3, %Expression.560401* null)
  %.97 = bitcast %Expression.560401* %.96 to %BinaryExpression.560425*
  ret %BinaryExpression.560425* %.97

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.102 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.91, i64 0, i32 72
  %.103 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.102, align 8
  %.108 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 6
  %.109 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.108, align 8
  %.110 = tail call %Expression.560401* %.103(%TypeChecker.560555* nonnull %.1, %Type.560381* %.80, %ExpressionNode.560285* %.109)
  %right = alloca %Expression.560401*, align 8
  store %Expression.560401* %.110, %Expression.560401** %right, align 8
  %.114 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.114, i64 0, i32 17
  %.116 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.115, align 8
  %.117 = tail call i1 %.116(%TypeChecker.560555* nonnull %.1)
  br i1 %.117, label %.5.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.121 = getelementptr inbounds %Expression.560401, %Expression.560401* %.110, i64 0, i32 4
  %.122 = load %Type.560381*, %Type.560381** %.121, align 8
  %.123 = tail call i1 @is_object(%Type.560381* %.122)
  %.125 = icmp eq i64 %.11, 18
  %.126 = and i1 %.125, %.123
  %.130 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  br i1 %.126, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 51
  %.132 = load %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*, %Expression.560401*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %BinaryExpressionNode.560313*, %Expression.560401*)** %.131, align 8
  %.136 = tail call %Expression.560401* %.132(%TypeChecker.560555* nonnull %.1, %Expression.560401* nonnull %.110, %BinaryExpressionNode.560313* nonnull %.3, %Expression.560401* nonnull %.68)
  %.137 = bitcast %Expression.560401* %.136 to %BinaryExpression.560425*
  ret %BinaryExpression.560425* %.137

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.142 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 17
  %.143 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.142, align 8
  %.144 = tail call i1 %.143(%TypeChecker.560555* nonnull %.1)
  br i1 %.144, label %.5.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif
  %.148 = getelementptr inbounds %Expression.560401, %Expression.560401* %.68, i64 0, i32 2
  %.149 = load i1, i1* %.148, align 1
  %.151 = getelementptr inbounds %Expression.560401, %Expression.560401* %.110, i64 0, i32 2
  %.152 = load i1, i1* %.151, align 1
  %.153 = and i1 %.149, %.152
  br i1 %0, label %.5.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5.endif.endif.endif.endif.endif.endif
  %.159 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  %.160 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.159, i64 0, i32 49
  %.161 = load %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %Expression.560401*, %BinaryExpressionNode.560313*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %Expression.560401*, %BinaryExpressionNode.560313*)** %.160, align 8
  %.165 = tail call %Expression.560401* %.161(%TypeChecker.560555* nonnull %.1, %Expression.560401* nonnull %.68, %Expression.560401* nonnull %.110, %BinaryExpressionNode.560313* nonnull %.3)
  %.166 = bitcast %Expression.560401* %.165 to %BinaryExpression.560425*
  ret %BinaryExpression.560425* %.166

.5.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.5.endif.endif.endif.endif.endif.endif
  %.170 = load %Type.560381*, %Type.560381** %.79, align 8
  %.171 = getelementptr inbounds %Type.560381, %Type.560381* %.170, i64 0, i32 1
  %.172 = load i64, i64* %.171, align 8
  %.173 = icmp eq i64 %.172, 21
  %.176 = load %Type.560381*, %Type.560381** %.121, align 8
  %.177 = getelementptr inbounds %Type.560381, %Type.560381* %.176, i64 0, i32 1
  %.178 = load i64, i64* %.177, align 8
  %.179 = icmp ne i64 %.178, 21
  %.180 = and i1 %.173, %.179
  br i1 %.180, label %.5.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5.endif.endif.endif.endif.endif.endif.endif
  %2 = ptrtoint %Type.560381* %.176 to i64
  %3 = bitcast %Type.560381** %.79 to i64*
  store i64 %2, i64* %3, align 8
  %.195.pre = load %Type.560381*, %Type.560381** %.121, align 8
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif
  %.195 = phi %Type.560381* [ %.195.pre, %.5.endif.endif.endif.endif.endif.endif.endif.if ], [ %.176, %.5.endif.endif.endif.endif.endif.endif.endif ]
  %.191 = phi %Type.560381* [ %.176, %.5.endif.endif.endif.endif.endif.endif.endif.if ], [ %.170, %.5.endif.endif.endif.endif.endif.endif.endif ]
  %.192 = tail call i1 @is_numeric(%Type.560381* %.191)
  %.196 = tail call i1 @is_numeric(%Type.560381* %.195)
  %.197 = and i1 %.192, %.196
  br i1 %.197, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.else

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.200 = icmp eq i64 %.11, 6
  br i1 %.200, label %.5.endif.endif.endif.endi...if, label %.5.endif.endif.endif.endi...endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.else: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.329 = tail call i1 @is_bool(%Type.560381* %.191)
  %.333 = tail call i1 @is_bool(%Type.560381* %.195)
  %.334 = and i1 %.329, %.333
  %.11.off8 = add i64 %.11, -15
  %4 = icmp ult i64 %.11.off8, 2
  %or.cond = and i1 %4, %.334
  br i1 %or.cond, label %.5.endif.endif.endif.endi...if.1.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.else, %.5.endif.endif.endif.endi...endif.endif
  %.11.off1 = add i64 %.11, -7
  %5 = icmp ult i64 %.11.off1, 6
  br i1 %5, label %.5.endif.endif.endif.endi...if.2, label %.5.endif.endif.endif.endi...endif.2

.5.endif.endif.endif.endi...if:                   ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
  %.205 = tail call i1 @is_int(%Type.560381* %.191)
  br i1 %.205, label %.5.endif.endif.endif.endi...if.if, label %.5.endif.endif.endif.endi...if.endif

.5.endif.endif.endif.endi...endif:                ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
  %.11.off9 = add i64 %.11, -1
  %6 = icmp ult i64 %.11.off9, 10
  br i1 %6, label %.5.endif.endif.endif.endi...endif.if, label %.5.endif.endif.endif.endi...endif.endif

.5.endif.endif.endif.endi...if.if:                ; preds = %.5.endif.endif.endif.endi...if
  %.208 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.209 = bitcast i8* %.208 to %Type.560381*
  %.210 = bitcast i8* %.208 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.210, align 8
  tail call void @Type_constructor(%Type.560381* %.209, i64 11)
  %.213 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* nonnull %.68, %Type.560381* %.209)
  store %Expression.560401* %.213, %Expression.560401** %left, align 8
  %.218.pre = load %Type.560381*, %Type.560381** %.121, align 8
  br label %.5.endif.endif.endif.endi...if.endif

.5.endif.endif.endif.endi...if.endif:             ; preds = %.5.endif.endif.endif.endi...if.if, %.5.endif.endif.endif.endi...if
  %.230 = phi %Expression.560401* [ %.213, %.5.endif.endif.endif.endi...if.if ], [ %.68, %.5.endif.endif.endif.endi...if ]
  %.218 = phi %Type.560381* [ %.218.pre, %.5.endif.endif.endif.endi...if.if ], [ %.195, %.5.endif.endif.endif.endi...if ]
  %.219 = tail call i1 @is_int(%Type.560381* %.218)
  br i1 %.219, label %.5.endif.endif.endif.endi...if.endif.if, label %.5.endif.endif.endif.endi...if.endif.endif

.5.endif.endif.endif.endi...if.endif.if:          ; preds = %.5.endif.endif.endif.endi...if.endif
  %.222 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.223 = bitcast i8* %.222 to %Type.560381*
  %.224 = bitcast i8* %.222 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.224, align 8
  tail call void @Type_constructor(%Type.560381* %.223, i64 11)
  %.227 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* nonnull %.110, %Type.560381* %.223)
  store %Expression.560401* %.227, %Expression.560401** %right, align 8
  br label %.5.endif.endif.endif.endi...if.endif.endif

.5.endif.endif.endif.endi...if.endif.endif:       ; preds = %.5.endif.endif.endif.endi...if.endif.if, %.5.endif.endif.endif.endi...if.endif
  %.232 = phi %Expression.560401* [ %.227, %.5.endif.endif.endif.endi...if.endif.if ], [ %.110, %.5.endif.endif.endif.endi...if.endif ]
  %.234 = getelementptr inbounds %Expression.560401, %Expression.560401* %.230, i64 0, i32 4
  %.235 = load %Type.560381*, %Type.560381** %.234, align 8
  %.236 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.237 = bitcast i8* %.236 to %BinaryExpression.560425*
  %.238 = bitcast i8* %.236 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.238, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.237, %Expression.560401* %.230, i64 6, %Expression.560401* %.232, %Type.560381* %.235, i1 false)
  ret %BinaryExpression.560425* %.237

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5.endif.endif.endif.endi...endif
  call void @check_cast_lower_bits(%Expression.560401** nonnull %left, %Expression.560401** nonnull %right)
  %.249 = load %Expression.560401*, %Expression.560401** %left, align 8
  %.250 = getelementptr inbounds %Expression.560401, %Expression.560401* %.249, i64 0, i32 4
  %.2511126 = load %Type.560381*, %Type.560381** %.250, align 8
  %.11.off12 = add nsw i64 %.11, -7
  %7 = icmp ult i64 %.11.off12, 4
  br i1 %7, label %.5.endif.endif.endif.endi...endif.if.if, label %.5.endif.endif.endif.endi...endif.if.endif

.5.endif.endif.endif.endi...endif.endif:          ; preds = %.5.endif.endif.endif.endi...endif
  %.11.off10 = add i64 %.11, -13
  %8 = icmp ult i64 %.11.off10, 5
  br i1 %8, label %.5.endif.endif.endif.endi...endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endi...endif.if.if:          ; preds = %.5.endif.endif.endif.endi...endif.if
  %.259 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.260 = bitcast i8* %.259 to %BooleanType.560383*
  %.261 = bitcast i8* %.259 to %BooleanType_vtable_ty.560384**
  store %BooleanType_vtable_ty.560384* @BooleanType_vtable_data, %BooleanType_vtable_ty.560384** %.261, align 8
  tail call void @BooleanType_constructor(%BooleanType.560383* %.260)
  %9 = bitcast i8* %.259 to %Type.560381*
  br label %.5.endif.endif.endif.endi...endif.if.endif

.5.endif.endif.endif.endi...endif.if.endif:       ; preds = %.5.endif.endif.endif.endi...endif.if.if, %.5.endif.endif.endif.endi...endif.if
  %.270 = phi %Type.560381* [ %9, %.5.endif.endif.endif.endi...endif.if.if ], [ %.2511126, %.5.endif.endif.endif.endi...endif.if ]
  %.269 = load %Expression.560401*, %Expression.560401** %right, align 8
  %.272 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.273 = bitcast i8* %.272 to %BinaryExpression.560425*
  %.274 = bitcast i8* %.272 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.274, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.273, %Expression.560401* %.249, i64 %.11, %Expression.560401* %.269, %Type.560381* %.270, i1 %.153)
  ret %BinaryExpression.560425* %.273

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5.endif.endif.endif.endi...endif.endif
  %.287 = tail call i1 @is_float(%Type.560381* %.191)
  br i1 %.287, label %.5.endif.endif.endif.endi...endif.endif.if.if, label %.5.endif.endif.endif.endi...endif.endif.if.endif

.5.endif.endif.endif.endi...endif.endif.if.if:    ; preds = %.5.endif.endif.endif.endi...endif.endif.if
  %.290 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.291 = bitcast i8* %.290 to %Type.560381*
  %.292 = bitcast i8* %.290 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.292, align 8
  tail call void @Type_constructor(%Type.560381* %.291, i64 7)
  %.295 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* nonnull %.68, %Type.560381* %.291)
  store %Expression.560401* %.295, %Expression.560401** %left, align 8
  %.300.pre = load %Type.560381*, %Type.560381** %.121, align 8
  br label %.5.endif.endif.endif.endi...endif.endif.if.endif

.5.endif.endif.endif.endi...endif.endif.if.endif: ; preds = %.5.endif.endif.endif.endi...endif.endif.if.if, %.5.endif.endif.endif.endi...endif.endif.if
  %.312 = phi %Expression.560401* [ %.295, %.5.endif.endif.endif.endi...endif.endif.if.if ], [ %.68, %.5.endif.endif.endif.endi...endif.endif.if ]
  %.300 = phi %Type.560381* [ %.300.pre, %.5.endif.endif.endif.endi...endif.endif.if.if ], [ %.195, %.5.endif.endif.endif.endi...endif.endif.if ]
  %.301 = tail call i1 @is_float(%Type.560381* %.300)
  br i1 %.301, label %.5.endif.endif.endif.endi...endif.endif.if.endif.if, label %.5.endif.endif.endif.endi...endif.endif.if.endif.endif

.5.endif.endif.endif.endi...endif.endif.if.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.endif.if.endif
  %.304 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.305 = bitcast i8* %.304 to %Type.560381*
  %.306 = bitcast i8* %.304 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.306, align 8
  tail call void @Type_constructor(%Type.560381* %.305, i64 7)
  %.309 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* nonnull %.110, %Type.560381* %.305)
  store %Expression.560401* %.309, %Expression.560401** %right, align 8
  br label %.5.endif.endif.endif.endi...endif.endif.if.endif.endif

.5.endif.endif.endif.endi...endif.endif.if.endif.endif: ; preds = %.5.endif.endif.endif.endi...endif.endif.if.endif.if, %.5.endif.endif.endif.endi...endif.endif.if.endif
  %.314 = phi %Expression.560401* [ %.309, %.5.endif.endif.endif.endi...endif.endif.if.endif.if ], [ %.110, %.5.endif.endif.endif.endi...endif.endif.if.endif ]
  %.316 = getelementptr inbounds %Expression.560401, %Expression.560401* %.312, i64 0, i32 4
  %.317 = load %Type.560381*, %Type.560381** %.316, align 8
  %.319 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.320 = bitcast i8* %.319 to %BinaryExpression.560425*
  %.321 = bitcast i8* %.319 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.321, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.320, %Expression.560401* %.312, i64 %.11, %Expression.560401* %.314, %Type.560381* %.317, i1 %.153)
  ret %BinaryExpression.560425* %.320

.5.endif.endif.endif.endi...if.1.if:              ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.else
  %.349 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.350 = bitcast i8* %.349 to %BinaryExpression.560425*
  %.351 = bitcast i8* %.349 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.351, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.350, %Expression.560401* nonnull %.68, i64 %.11, %Expression.560401* nonnull %.110, %Type.560381* %.191, i1 %.153)
  ret %BinaryExpression.560425* %.350

.5.endif.endif.endif.endi...if.2:                 ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.363 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.364 = bitcast i8* %.363 to %BooleanType.560383*
  %.365 = bitcast i8* %.363 to %BooleanType_vtable_ty.560384**
  store %BooleanType_vtable_ty.560384* @BooleanType_vtable_data, %BooleanType_vtable_ty.560384** %.365, align 8
  tail call void @BooleanType_constructor(%BooleanType.560383* %.364)
  %.3727.cast = bitcast i8* %.363 to %Type.560381*
  %.375 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.376 = bitcast i8* %.375 to %BinaryExpression.560425*
  %.377 = bitcast i8* %.375 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.377, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.376, %Expression.560401* nonnull %.68, i64 %.11, %Expression.560401* nonnull %.110, %Type.560381* %.3727.cast, i1 %.153)
  ret %BinaryExpression.560425* %.376

.5.endif.endif.endif.endi...endif.2:              ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %10 = add i64 %.11, -1
  %11 = icmp ult i64 %10, 2
  %.389 = tail call i1 @is_pointer(%Type.560381* %.191)
  %.390 = and i1 %11, %.389
  %.394 = getelementptr inbounds %Type.560381, %Type.560381* %.195, i64 0, i32 1
  %.395 = load i64, i64* %.394, align 8
  %.396 = icmp eq i64 %.395, 7
  %.397 = and i1 %.390, %.396
  br i1 %.397, label %.5.endif.endif.endif.endi...endif.2.if, label %.5.endif.endif.endif.endi...endif.2.endif

.5.endif.endif.endif.endi...endif.2.if:           ; preds = %.5.endif.endif.endif.endi...endif.2
  %.405 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.406 = bitcast i8* %.405 to %BinaryExpression.560425*
  %.407 = bitcast i8* %.405 to %BinaryExpression_vtable_ty.560426**
  store %BinaryExpression_vtable_ty.560426* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.560426** %.407, align 8
  tail call void @BinaryExpression_constructor(%BinaryExpression.560425* %.406, %Expression.560401* nonnull %.68, i64 %.11, %Expression.560401* nonnull %.110, %Type.560381* %.191, i1 false)
  ret %BinaryExpression.560425* %.406

.5.endif.endif.endif.endi...endif.2.endif:        ; preds = %.5.endif.endif.endif.endi...endif.2
  %.412 = icmp eq i64 %.11, 31
  %.416 = getelementptr inbounds %Type.560381, %Type.560381* %.191, i64 0, i32 1
  %.417 = load i64, i64* %.416, align 8
  %.418 = icmp eq i64 %.417, 7
  %.419 = and i1 %.412, %.418
  %.426 = and i1 %.396, %.419
  %.430 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  br i1 %.426, label %.5.endif.endif.endif.endi...endif.2.endif.if, label %.5.endif.endif.endif.endi...endif.2.endif.endif

.5.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.5.endif.endif.endif.endi...endif.2.endif
  %12 = ptrtoint %Expression.560401* %.110 to i64
  %13 = ptrtoint %Expression.560401* %.68 to i64
  %.431 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.430, i64 0, i32 14
  %.432 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.431, align 8
  %.433 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.434 = bitcast i8* %.433 to %string.560217*
  %.434.repack = bitcast i8* %.433 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.434.repack, align 8
  %.434.repack2 = getelementptr inbounds i8, i8* %.433, i64 8
  %14 = bitcast i8* %.434.repack2 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.278, i64 0, i64 0), i8** %14, align 8
  %.434.repack3 = getelementptr inbounds i8, i8* %.433, i64 16
  %15 = bitcast i8* %.434.repack3 to i64*
  store i64 5, i64* %15, align 8
  %.434.repack4 = getelementptr inbounds i8, i8* %.433, i64 24
  %16 = bitcast i8* %.434.repack4 to i64*
  store i64 5, i64* %16, align 8
  %.436 = tail call %Type.560381* %.432(%TypeChecker.560555* nonnull %.1, %string.560217* %.434)
  %.443 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %17 = bitcast i8* %.443 to i64*
  store i64 %13, i64* %17, align 8
  %.447 = getelementptr inbounds i8, i8* %.443, i64 8
  %18 = bitcast i8* %.447 to i64*
  store i64 %12, i64* %18, align 8
  %.449 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.450 = bitcast i8* %.449 to %"Array<Expression>.560419"*
  %.451 = bitcast i8* %.449 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.451, align 8
  %.453 = getelementptr inbounds i8, i8* %.449, i64 8
  %19 = bitcast i8* %.453 to i8**
  store i8* %.443, i8** %19, align 8
  %.455 = getelementptr inbounds i8, i8* %.449, i64 16
  %20 = bitcast i8* %.455 to i64*
  store i64 2, i64* %20, align 8
  %.457 = getelementptr inbounds i8, i8* %.449, i64 24
  %21 = bitcast i8* %.457 to i64*
  store i64 16, i64* %21, align 8
  %.459 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.460 = bitcast i8* %.459 to %NewExpression.560433*
  %.461 = bitcast i8* %.459 to %NewExpression_vtable_ty.560434**
  store %NewExpression_vtable_ty.560434* @NewExpression_vtable_data, %NewExpression_vtable_ty.560434** %.461, align 8
  tail call void @NewExpression_constructor(%NewExpression.560433* %.460, %Type.560381* %.436, %Type.560381* %.436, %"Array<Expression>.560419"* %.450, i1 true)
  %.464 = bitcast i8* %.459 to %BinaryExpression.560425*
  ret %BinaryExpression.560425* %.464

.5.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.5.endif.endif.endif.endi...endif.2.endif
  %.469 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.430, i64 0, i32 16
  %.470 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.469, align 8
  %.472 = tail call %string.560217* @dump_bin_op(i64 %.11)
  %.475 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  %.476 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.475, i64 0, i32 10
  %.477 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.476, align 8
  %.480 = load %Type.560381*, %Type.560381** %.79, align 8
  %.481 = tail call %string.560217* %.477(%TypeChecker.560555* nonnull %.1, %Type.560381* %.480)
  %.484 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.60, align 8
  %.485 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.484, i64 0, i32 10
  %.486 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.485, align 8
  %.489 = load %Type.560381*, %Type.560381** %.121, align 8
  %.490 = tail call %string.560217* %.486(%TypeChecker.560555* nonnull %.1, %Type.560381* %.489)
  %.491 = getelementptr inbounds %string.560217, %string.560217* %.472, i64 0, i32 0
  %.492 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.491, align 8
  %.493 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.492, i64 0, i32 11
  %.494 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.493, align 8
  %.495 = tail call i8* %.494(%string.560217* %.472)
  %.496 = getelementptr inbounds %string.560217, %string.560217* %.481, i64 0, i32 0
  %.497 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.496, align 8
  %.498 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.497, i64 0, i32 11
  %.499 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.498, align 8
  %.500 = tail call i8* %.499(%string.560217* %.481)
  %.501 = getelementptr inbounds %string.560217, %string.560217* %.490, i64 0, i32 0
  %.502 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.501, align 8
  %.503 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.502, i64 0, i32 11
  %.504 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.503, align 8
  %.505 = tail call i8* %.504(%string.560217* %.490)
  %.507 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.279, i64 0, i64 0), i8* %.495, i8* %.500, i8* %.505)
  %.508 = add i64 %.507, 1
  %.510 = tail call i8* @malloc(i64 %.508)
  %.511 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.510, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.279, i64 0, i64 0), i8* %.495, i8* %.500, i8* %.505)
  %.512 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.513 = bitcast i8* %.512 to %string.560217*
  %.514 = bitcast i8* %.512 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.514, align 8
  %.516 = getelementptr inbounds i8, i8* %.512, i64 8
  %22 = bitcast i8* %.516 to i8**
  store i8* %.510, i8** %22, align 8
  %.518 = getelementptr inbounds i8, i8* %.512, i64 16
  %23 = bitcast i8* %.518 to i64*
  store i64 %.507, i64* %23, align 8
  %.520 = getelementptr inbounds i8, i8* %.512, i64 24
  %24 = bitcast i8* %.520 to i64*
  store i64 %.507, i64* %24, align 8
  %.523 = getelementptr inbounds %BinaryExpressionNode.560313, %BinaryExpressionNode.560313* %.3, i64 0, i32 1
  %.524 = load %FloRange.560223*, %FloRange.560223** %.523, align 8
  tail call void %.470(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.513, %FloRange.560223* %.524)
  ret %BinaryExpression.560425* null
}

define noalias %UnaryExpression.560427* @TypeChecker_check_unary_expr(%TypeChecker.560555* %.1, %Type.560381* %.2, %UnaryExpressionNode.560317* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %UnaryExpressionNode.560317, %UnaryExpressionNode.560317* %.3, i64 0, i32 4
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.15, i64 0, i32 72
  %.17 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.16, align 8
  %.20 = getelementptr inbounds %UnaryExpressionNode.560317, %UnaryExpressionNode.560317* %.3, i64 0, i32 5
  %.21 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.20, align 8
  %.22 = tail call %Expression.560401* %.17(%TypeChecker.560555* %.1, %Type.560381* %.2, %ExpressionNode.560285* %.21)
  %.26 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.26, i64 0, i32 17
  %.28 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.27, align 8
  %.29 = tail call i1 %.28(%TypeChecker.560555* %.1)
  br i1 %.29, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %UnaryExpression.560427* null

.5.endif:                                         ; preds = %.5
  %.33 = getelementptr inbounds %Expression.560401, %Expression.560401* %.22, i64 0, i32 4
  %.3414 = load %Type.560381*, %Type.560381** %.33, align 8
  %.37 = getelementptr inbounds %Expression.560401, %Expression.560401* %.22, i64 0, i32 2
  %.38 = load i1, i1* %.37, align 1
  switch i64 %.11, label %.5.endif.endif.endif [
    i64 5, label %.5.endif.if
    i64 6, label %.5.endif.endif.if
  ]

.5.endif.if:                                      ; preds = %.5.endif
  %.44 = tail call i1 @is_numeric(%Type.560381* %.3414)
  br i1 %.44, label %.5.endif.if.if, label %.5.endif.endif.endif.endif.endif

.5.endif.if.if:                                   ; preds = %.5.endif.if
  %.50 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.51 = bitcast i8* %.50 to %UnaryExpression.560427*
  %.52 = bitcast i8* %.50 to %UnaryExpression_vtable_ty.560428**
  store %UnaryExpression_vtable_ty.560428* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.560428** %.52, align 8
  tail call void @UnaryExpression_constructor(%UnaryExpression.560427* %.51, i64 5, %Expression.560401* nonnull %.22, %Type.560381* %.3414, i1 %.38)
  ret %UnaryExpression.560427* %.51

.5.endif.endif.if:                                ; preds = %.5.endif
  %.61 = tail call i1 @is_bool(%Type.560381* %.3414)
  %.63 = tail call i1 @is_numeric(%Type.560381* %.3414)
  %.64 = or i1 %.61, %.63
  br i1 %.64, label %.5.endif.endif.if.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif
  %.11.off = add i64 %.11, -1
  %0 = icmp ult i64 %.11.off, 4
  br i1 %0, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.70 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.71 = bitcast i8* %.70 to %UnaryExpression.560427*
  %.72 = bitcast i8* %.70 to %UnaryExpression_vtable_ty.560428**
  store %UnaryExpression_vtable_ty.560428* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.560428** %.72, align 8
  tail call void @UnaryExpression_constructor(%UnaryExpression.560427* %.71, i64 6, %Expression.560401* nonnull %.22, %Type.560381* %.3414, i1 %.38)
  ret %UnaryExpression.560427* %.71

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.84 = tail call i1 @is_numeric(%Type.560381* %.3414)
  %.86 = tail call i1 @is_pointer(%Type.560381* %.3414)
  %.87 = or i1 %.84, %.86
  br i1 %.87, label %.5.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.139 = icmp eq i64 %.11, 7
  br i1 %.139, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %.90 = tail call i1 @check_is_var(%Expression.560401* nonnull %.22)
  br i1 %.90, label %.5.endif.endif.endif.if.if.endif, label %.5.endif.endif.endif.if.if.if

.5.endif.endif.endif.if.if.if:                    ; preds = %.5.endif.endif.endif.if.if
  %.95 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.96 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.95, i64 0, i32 16
  %.97 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.96, align 8
  %.99 = tail call %string.560217* @dump_unary_op(i64 %.11)
  %.100 = getelementptr inbounds %string.560217, %string.560217* %.99, i64 0, i32 0
  %.101 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.100, align 8
  %.102 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.101, i64 0, i32 11
  %.103 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.102, align 8
  %.104 = tail call i8* %.103(%string.560217* %.99)
  %.106 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.280, i64 0, i64 0), i8* %.104)
  %.107 = add i64 %.106, 1
  %.109 = tail call i8* @malloc(i64 %.107)
  %.110 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.109, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.280, i64 0, i64 0), i8* %.104)
  %.111 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.112 = bitcast i8* %.111 to %string.560217*
  %.113 = bitcast i8* %.111 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.113, align 8
  %.115 = getelementptr inbounds i8, i8* %.111, i64 8
  %1 = bitcast i8* %.115 to i8**
  store i8* %.109, i8** %1, align 8
  %.117 = getelementptr inbounds i8, i8* %.111, i64 16
  %2 = bitcast i8* %.117 to i64*
  store i64 %.106, i64* %2, align 8
  %.119 = getelementptr inbounds i8, i8* %.111, i64 24
  %3 = bitcast i8* %.119 to i64*
  store i64 %.106, i64* %3, align 8
  %.123 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.20, align 8
  %.124 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.123, i64 0, i32 1
  %.125 = load %FloRange.560223*, %FloRange.560223** %.124, align 8
  tail call void %.97(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.112, %FloRange.560223* %.125)
  ret %UnaryExpression.560427* null

.5.endif.endif.endif.if.if.endif:                 ; preds = %.5.endif.endif.endif.if.if
  %.131 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.132 = bitcast i8* %.131 to %UnaryExpression.560427*
  %.133 = bitcast i8* %.131 to %UnaryExpression_vtable_ty.560428**
  store %UnaryExpression_vtable_ty.560428* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.560428** %.133, align 8
  tail call void @UnaryExpression_constructor(%UnaryExpression.560427* %.132, i64 %.11, %Expression.560401* nonnull %.22, %Type.560381* %.3414, i1 false)
  ret %UnaryExpression.560427* %.132

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.142 = tail call i1 @check_is_var(%Expression.560401* nonnull %.22)
  br i1 %.142, label %.5.endif.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.if, %.5.endif.if, %.5.endif.endif.endif.if, %.5.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif
  %.164 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.165 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.164, i64 0, i32 16
  %.166 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.165, align 8
  %.168 = tail call %string.560217* @dump_unary_op(i64 %.11)
  %.171 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.172 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.171, i64 0, i32 10
  %.173 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.172, align 8
  %.175 = tail call %string.560217* %.173(%TypeChecker.560555* nonnull %.1, %Type.560381* %.3414)
  %.176 = getelementptr inbounds %string.560217, %string.560217* %.168, i64 0, i32 0
  %.177 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.176, align 8
  %.178 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.177, i64 0, i32 11
  %.179 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.178, align 8
  %.180 = tail call i8* %.179(%string.560217* %.168)
  %.181 = getelementptr inbounds %string.560217, %string.560217* %.175, i64 0, i32 0
  %.182 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.181, align 8
  %.183 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.182, i64 0, i32 11
  %.184 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.183, align 8
  %.185 = tail call i8* %.184(%string.560217* %.175)
  %.187 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.281, i64 0, i64 0), i8* %.180, i8* %.185)
  %.188 = add i64 %.187, 1
  %.190 = tail call i8* @malloc(i64 %.188)
  %.191 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.190, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.281, i64 0, i64 0), i8* %.180, i8* %.185)
  %.192 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.193 = bitcast i8* %.192 to %string.560217*
  %.194 = bitcast i8* %.192 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.194, align 8
  %.196 = getelementptr inbounds i8, i8* %.192, i64 8
  %4 = bitcast i8* %.196 to i8**
  store i8* %.190, i8** %4, align 8
  %.198 = getelementptr inbounds i8, i8* %.192, i64 16
  %5 = bitcast i8* %.198 to i64*
  store i64 %.187, i64* %5, align 8
  %.200 = getelementptr inbounds i8, i8* %.192, i64 24
  %6 = bitcast i8* %.200 to i64*
  store i64 %.187, i64* %6, align 8
  %.203 = getelementptr inbounds %UnaryExpressionNode.560317, %UnaryExpressionNode.560317* %.3, i64 0, i32 1
  %.204 = load %FloRange.560223*, %FloRange.560223** %.203, align 8
  tail call void %.166(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.193, %FloRange.560223* %.204)
  ret %UnaryExpression.560427* null

.5.endif.endif.endif.endif.if.if:                 ; preds = %.5.endif.endif.endif.endif.if
  %.149 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.150 = bitcast i8* %.149 to %PointerType.560385*
  %.151 = bitcast i8* %.149 to %PointerType_vtable_ty.560386**
  store %PointerType_vtable_ty.560386* @PointerType_vtable_data, %PointerType_vtable_ty.560386** %.151, align 8
  tail call void @PointerType_constructor(%PointerType.560385* %.150, %Type.560381* %.3414)
  %.154 = bitcast i8* %.149 to %Type.560381*
  %.155 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.156 = bitcast i8* %.155 to %UnaryExpression.560427*
  %.157 = bitcast i8* %.155 to %UnaryExpression_vtable_ty.560428**
  store %UnaryExpression_vtable_ty.560428* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.560428** %.157, align 8
  tail call void @UnaryExpression_constructor(%UnaryExpression.560427* %.156, i64 7, %Expression.560401* nonnull %.22, %Type.560381* %.154, i1 false)
  ret %UnaryExpression.560427* %.156
}

define noalias %Expression.560401* @TypeChecker_check_typecast_expr(%TypeChecker.560555* %.1, %TypeCastExpressionNode.560311* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 72
  %.11 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.10, align 8
  %.12 = tail call %Type.560381* @Type_unknown()
  %.14 = getelementptr inbounds %TypeCastExpressionNode.560311, %TypeCastExpressionNode.560311* %.2, i64 0, i32 4
  %.15 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.14, align 8
  %.16 = tail call %Expression.560401* %.11(%TypeChecker.560555* %.1, %Type.560381* %.12, %ExpressionNode.560285* %.15)
  %.19 = getelementptr inbounds %Expression.560401, %Expression.560401* %.16, i64 0, i32 4
  %.20 = load %Type.560381*, %Type.560381** %.19, align 8
  %.24 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.25 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.24, i64 0, i32 46
  %.26 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.25, align 8
  %.28 = getelementptr inbounds %TypeCastExpressionNode.560311, %TypeCastExpressionNode.560311* %.2, i64 0, i32 5
  %.29 = load %TypeNode.560269*, %TypeNode.560269** %.28, align 8
  %.30 = tail call %Type.560381* %.26(%TypeChecker.560555* %.1, %TypeNode.560269* %.29)
  %.34 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.35 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.34, i64 0, i32 17
  %.36 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.35, align 8
  %.37 = tail call i1 %.36(%TypeChecker.560555* %.1)
  br i1 %.37, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret %Expression.560401* null

.4.endif:                                         ; preds = %.4
  %.41 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.42 = load %Program.560549*, %Program.560549** %.41, align 8
  %.44 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %string.560217*
  %.45.repack = bitcast i8* %.44 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.45.repack, align 8
  %.45.repack1 = getelementptr inbounds i8, i8* %.44, i64 8
  %0 = bitcast i8* %.45.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.282, i64 0, i64 0), i8** %0, align 8
  %.45.repack2 = getelementptr inbounds i8, i8* %.44, i64 16
  %1 = bitcast i8* %.45.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.45.repack3 = getelementptr inbounds i8, i8* %.44, i64 24
  %2 = bitcast i8* %.45.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.47 = tail call i1 @is_buitin(%Program.560549* %.42, %Type.560381* %.30, %string.560217* %.45)
  br i1 %.47, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.49 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.50 = bitcast i8* %.49 to %string.560217*
  %.51 = bitcast i8* %.49 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.51, align 8
  %.53 = getelementptr inbounds i8, i8* %.49, i64 8
  %3 = bitcast i8* %.53 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %3, align 8
  %.55 = getelementptr inbounds i8, i8* %.49, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.55, i8 0, i64 16, i1 false)
  %.60 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.61 = bitcast i8* %.60 to i64*
  store i64 0, i64* %.61, align 8
  %.64 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %"Array<int>.560257"*
  %.66 = bitcast i8* %.64 to %"Array<int>_vtable_ty.560262"**
  store %"Array<int>_vtable_ty.560262"* @"Array<int>_vtable_data", %"Array<int>_vtable_ty.560262"** %.66, align 8
  %.68 = getelementptr inbounds i8, i8* %.64, i64 8
  %4 = bitcast i8* %.68 to i8**
  store i8* %.60, i8** %4, align 8
  %.70 = getelementptr inbounds i8, i8* %.64, i64 16
  %5 = bitcast i8* %.70 to i64*
  store i64 1, i64* %5, align 8
  %.72 = getelementptr inbounds i8, i8* %.64, i64 24
  %6 = bitcast i8* %.72 to i64*
  store i64 8, i64* %6, align 8
  %.76 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.77 = bitcast i8* %.76 to %Expression.560401**
  store %Expression.560401* %.16, %Expression.560401** %.77, align 8
  %.80 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.81 = bitcast i8* %.80 to %"Array<Expression>.560419"*
  %.82 = bitcast i8* %.80 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.82, align 8
  %.84 = getelementptr inbounds i8, i8* %.80, i64 8
  %7 = bitcast i8* %.84 to i8**
  store i8* %.76, i8** %7, align 8
  %.86 = getelementptr inbounds i8, i8* %.80, i64 16
  %8 = bitcast i8* %.86 to i64*
  store i64 1, i64* %8, align 8
  %.88 = getelementptr inbounds i8, i8* %.80, i64 24
  %9 = bitcast i8* %.88 to i64*
  store i64 8, i64* %9, align 8
  %.91 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.92 = bitcast i8* %.91 to %StringExpression.560417*
  %.93 = bitcast i8* %.91 to %StringExpression_vtable_ty.560418**
  store %StringExpression_vtable_ty.560418* @StringExpression_vtable_data, %StringExpression_vtable_ty.560418** %.93, align 8
  tail call void @StringExpression_constructor(%StringExpression.560417* %.92, %string.560217* %.50, %"Array<int>.560257"* %.65, %"Array<Expression>.560419"* %.81, %Type.560381* %.30)
  %.96 = bitcast i8* %.91 to %Expression.560401*
  ret %Expression.560401* %.96

.4.endif.endif:                                   ; preds = %.4.endif
  %.100 = tail call i1 @is_numeric(%Type.560381* %.30)
  %.102 = tail call i1 @is_numeric(%Type.560381* %.20)
  %.103 = and i1 %.100, %.102
  %.108 = tail call i1 @is_int(%Type.560381* %.30)
  %.110 = getelementptr inbounds %Type.560381, %Type.560381* %.20, i64 0, i32 1
  %.111 = load i64, i64* %.110, align 8
  %.112 = icmp eq i64 %.111, 14
  %.113 = and i1 %.108, %.112
  %spec.store.select9 = or i1 %.103, %.113
  %.118 = tail call i1 @is_int(%Type.560381* nonnull %.20)
  %.120 = getelementptr inbounds %Type.560381, %Type.560381* %.30, i64 0, i32 1
  %.121 = load i64, i64* %.120, align 8
  %.122 = icmp eq i64 %.121, 14
  %.123 = and i1 %.118, %.122
  %spec.store.select10 = or i1 %spec.store.select9, %.123
  %.131 = load %Program.560549*, %Program.560549** %.41, align 8
  %.133 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.134 = bitcast i8* %.133 to %string.560217*
  %.134.repack = bitcast i8* %.133 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.134.repack, align 8
  %.134.repack4 = getelementptr inbounds i8, i8* %.133, i64 8
  %10 = bitcast i8* %.134.repack4 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.282, i64 0, i64 0), i8** %10, align 8
  %.134.repack5 = getelementptr inbounds i8, i8* %.133, i64 16
  %11 = bitcast i8* %.134.repack5 to i64*
  store i64 6, i64* %11, align 8
  %.134.repack6 = getelementptr inbounds i8, i8* %.133, i64 24
  %12 = bitcast i8* %.134.repack6 to i64*
  store i64 6, i64* %12, align 8
  %.136 = tail call i1 @is_buitin(%Program.560549* %.131, %Type.560381* nonnull %.20, %string.560217* %.134)
  %.137 = and i1 %.100, %.136
  br i1 %.137, label %.4.endif.endif.endif.endif.endif.if, label %.4.endif.endif.endif.endif.endif.endif

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4.endif.endif
  %.141 = tail call i1 @is_float(%Type.560381* nonnull %.30)
  br i1 %.141, label %.4.endif.endif.endif.endif.endif.if.if, label %.4.endif.endif.endif.endif.endif.if.else

.4.endif.endif.endif.endif.endif.endif:           ; preds = %.4.endif.endif.endif.endif.endif.if.endif, %.4.endif.endif
  %.217.pr14 = phi i1 [ true, %.4.endif.endif.endif.endif.endif.if.endif ], [ %spec.store.select10, %.4.endif.endif ]
  %exp.0 = phi %Expression.560401* [ %.1967, %.4.endif.endif.endif.endif.endif.if.endif ], [ %.16, %.4.endif.endif ]
  %.202 = tail call i1 @is_object(%Type.560381* nonnull %.30)
  %.204 = tail call i1 @is_object(%Type.560381* nonnull %.20)
  %.205 = and i1 %.202, %.204
  %spec.select = or i1 %.205, %.217.pr14
  %.210 = tail call i1 @is_pointer(%Type.560381* nonnull %.30)
  %.212 = tail call i1 @is_pointer(%Type.560381* nonnull %.20)
  %.213 = and i1 %.210, %.212
  %brmerge = or i1 %.213, %spec.select
  br i1 %brmerge, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.if

.4.endif.endif.endif.endif.endif.if.if:           ; preds = %.4.endif.endif.endif.endif.endif.if
  %.143 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.144 = bitcast i8* %.143 to %IntrinsicCall.560439*
  %.145 = bitcast i8* %.143 to %IntrinsicCall_vtable_ty.560440**
  store %IntrinsicCall_vtable_ty.560440* @IntrinsicCall_vtable_data, %IntrinsicCall_vtable_ty.560440** %.145, align 8
  tail call void @IntrinsicCall_constructor(%IntrinsicCall.560439* %.144, i64 0)
  br label %.4.endif.endif.endif.endif.endif.if.endif

.4.endif.endif.endif.endif.endif.if.else:         ; preds = %.4.endif.endif.endif.endif.endif.if
  %.152 = load i64, i64* %.120, align 8
  %.153 = icmp slt i64 %.152, 5
  %.162 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.163 = bitcast i8* %.162 to %IntrinsicCall.560439*
  %.164 = bitcast i8* %.162 to %IntrinsicCall_vtable_ty.560440**
  store %IntrinsicCall_vtable_ty.560440* @IntrinsicCall_vtable_data, %IntrinsicCall_vtable_ty.560440** %.164, align 8
  br i1 %.153, label %.4.endif.endif.endif.endif.endif.if.else.if, label %.4.endif.endif.endif.endif.endif.if.else.else

.4.endif.endif.endif.endif.endif.if.endif:        ; preds = %.4.endif.endif.endif.endif.endif.if.else.if, %.4.endif.endif.endif.endif.endif.if.else.else, %.4.endif.endif.endif.endif.endif.if.if
  %.1967.in = phi i8* [ %.162, %.4.endif.endif.endif.endif.endif.if.else.if ], [ %.162, %.4.endif.endif.endif.endif.endif.if.else.else ], [ %.143, %.4.endif.endif.endif.endif.endif.if.if ]
  %.177 = phi %IntrinsicCall.560439* [ %.163, %.4.endif.endif.endif.endif.endif.if.else.if ], [ %.163, %.4.endif.endif.endif.endif.endif.if.else.else ], [ %.144, %.4.endif.endif.endif.endif.endif.if.if ]
  %.1967 = bitcast i8* %.1967.in to %Expression.560401*
  %.180 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.181 = bitcast i8* %.180 to %Expression.560401**
  store %Expression.560401* %.16, %Expression.560401** %.181, align 8
  %.184 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.186 = bitcast i8* %.184 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.186, align 8
  %.188 = getelementptr inbounds i8, i8* %.184, i64 8
  %13 = bitcast i8* %.188 to i8**
  store i8* %.180, i8** %13, align 8
  %.190 = getelementptr inbounds i8, i8* %.184, i64 16
  %14 = bitcast i8* %.190 to i64*
  store i64 1, i64* %14, align 8
  %.192 = getelementptr inbounds i8, i8* %.184, i64 24
  %15 = bitcast i8* %.192 to i64*
  store i64 8, i64* %15, align 8
  %.194 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.177, i64 0, i32 6
  %16 = bitcast %"Array<Expression>.560419"** %.194 to i8**
  store i8* %.184, i8** %16, align 8
  br label %.4.endif.endif.endif.endif.endif.endif

.4.endif.endif.endif.endif.endif.if.else.if:      ; preds = %.4.endif.endif.endif.endif.endif.if.else
  tail call void @IntrinsicCall_constructor(%IntrinsicCall.560439* %.163, i64 1)
  br label %.4.endif.endif.endif.endif.endif.if.endif

.4.endif.endif.endif.endif.endif.if.else.else:    ; preds = %.4.endif.endif.endif.endif.endif.if.else
  tail call void @IntrinsicCall_constructor(%IntrinsicCall.560439* %.163, i64 2)
  br label %.4.endif.endif.endif.endif.endif.if.endif

.4.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4.endif.endif.endif.endif.endif.endif
  %.222 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.223 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.222, i64 0, i32 16
  %.224 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.223, align 8
  %.228 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.222, i64 0, i32 10
  %.229 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.228, align 8
  %.231 = tail call %string.560217* %.229(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.20)
  %.234 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.235 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.234, i64 0, i32 10
  %.236 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.235, align 8
  %.238 = tail call %string.560217* %.236(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.30)
  %.239 = getelementptr inbounds %string.560217, %string.560217* %.231, i64 0, i32 0
  %.240 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.239, align 8
  %.241 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.240, i64 0, i32 11
  %.242 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.241, align 8
  %.243 = tail call i8* %.242(%string.560217* %.231)
  %.244 = getelementptr inbounds %string.560217, %string.560217* %.238, i64 0, i32 0
  %.245 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.244, align 8
  %.246 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.245, i64 0, i32 11
  %.247 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.246, align 8
  %.248 = tail call i8* %.247(%string.560217* %.238)
  %.250 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.283, i64 0, i64 0), i8* %.243, i8* %.248)
  %.251 = add i64 %.250, 1
  %.253 = tail call i8* @malloc(i64 %.251)
  %.254 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.253, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.283, i64 0, i64 0), i8* %.243, i8* %.248)
  %.255 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.256 = bitcast i8* %.255 to %string.560217*
  %.257 = bitcast i8* %.255 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.257, align 8
  %.259 = getelementptr inbounds i8, i8* %.255, i64 8
  %17 = bitcast i8* %.259 to i8**
  store i8* %.253, i8** %17, align 8
  %.261 = getelementptr inbounds i8, i8* %.255, i64 16
  %18 = bitcast i8* %.261 to i64*
  store i64 %.250, i64* %18, align 8
  %.263 = getelementptr inbounds i8, i8* %.255, i64 24
  %19 = bitcast i8* %.263 to i64*
  store i64 %.250, i64* %19, align 8
  %.266 = getelementptr inbounds %TypeCastExpressionNode.560311, %TypeCastExpressionNode.560311* %.2, i64 0, i32 1
  %.267 = load %FloRange.560223*, %FloRange.560223** %.266, align 8
  tail call void %.224(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.256, %FloRange.560223* %.267)
  ret %Expression.560401* null

.4.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.4.endif.endif.endif.endif.endif.endif
  %.272 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.273 = bitcast i8* %.272 to %TypeCastExpression.560431*
  %.274 = bitcast i8* %.272 to %TypeCastExpression_vtable_ty.560432**
  store %TypeCastExpression_vtable_ty.560432* @TypeCastExpression_vtable_data, %TypeCastExpression_vtable_ty.560432** %.274, align 8
  tail call void @TypeCastExpression_constructor(%TypeCastExpression.560431* %.273, %Expression.560401* %exp.0, %Type.560381* nonnull %.30)
  %.277 = bitcast i8* %.272 to %Expression.560401*
  ret %Expression.560401* %.277
}

define noalias %string.560217* @TypeChecker_check_constructor_call(%TypeChecker.560555* %.1, %ClassId.560397* nocapture readonly %.2, %"Array<ExpressionNode>.560297"* %.3, %"Array<Expression>.560419"** nocapture %.4) {
.6:
  %.12 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.13 = load %Program.560549*, %Program.560549** %.12, align 8
  %.15 = tail call %Class.560513* @get_class(%Program.560549* %.13, %ClassId.560397* %.2)
  %.18 = getelementptr inbounds %Class.560513, %Class.560513* %.15, i64 0, i32 4
  %.19 = load %PropId.560449*, %PropId.560449** %.18, align 8
  %0 = ptrtoint %PropId.560449* %.19 to i64
  %.22 = trunc i64 %0 to i32
  %.24 = icmp eq i32 %.22, 0
  br i1 %.24, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.26 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.560217*
  %.27.repack = bitcast i8* %.26 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.27.repack, align 8
  %.27.repack3 = getelementptr inbounds i8, i8* %.26, i64 8
  %1 = bitcast i8* %.27.repack3 to i8**
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.284, i64 0, i64 0), i8** %1, align 8
  %.27.repack4 = getelementptr inbounds i8, i8* %.26, i64 16
  %2 = bitcast i8* %.27.repack4 to i64*
  store i64 44, i64* %2, align 8
  %.27.repack5 = getelementptr inbounds i8, i8* %.26, i64 24
  %3 = bitcast i8* %.27.repack5 to i64*
  store i64 44, i64* %3, align 8
  ret %string.560217* %.27

.6.endif:                                         ; preds = %.6
  %.31 = getelementptr inbounds %PropId.560449, %PropId.560449* %.19, i64 0, i32 3
  %.32 = load i64, i64* %.31, align 8
  %.34 = getelementptr inbounds %Class.560513, %Class.560513* %.15, i64 0, i32 6
  %.35 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.35, i64 0, i32 0
  %.37 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.37, i64 0, i32 5
  %.39 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.38, align 8
  %.40 = tail call %ClassMethod.560511* %.39(%"Array<ClassMethod>.560516"* %.35, i64 %.32)
  %.43 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.40, i64 0, i32 5
  %.4416 = load %FunctionType.560387*, %FunctionType.560387** %.43, align 8
  %.47 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.48 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.47, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.48, i64 0, i32 64
  %.50 = load %"Array<Expression>.560419"* (%TypeChecker.560555*, %FunctionType.560387*, %"Array<FunctionArg>.560503"*, %"Array<ExpressionNode>.560297"*)*, %"Array<Expression>.560419"* (%TypeChecker.560555*, %FunctionType.560387*, %"Array<FunctionArg>.560503"*, %"Array<ExpressionNode>.560297"*)** %.49, align 8
  %.53 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.40, i64 0, i32 7
  %.54 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %.53, align 8
  %.56 = tail call %"Array<Expression>.560419"* %.50(%TypeChecker.560555* nonnull %.1, %FunctionType.560387* %.4416, %"Array<FunctionArg>.560503"* %.54, %"Array<ExpressionNode>.560297"* %.3)
  %.60 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.47, align 8
  %.61 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.60, i64 0, i32 17
  %.62 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.61, align 8
  %.63 = tail call i1 %.62(%TypeChecker.560555* nonnull %.1)
  br i1 %.63, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  ret %string.560217* null

.6.endif.endif:                                   ; preds = %.6.endif
  %.68 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.47, align 8
  %.69 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.68, i64 0, i32 65
  %.70 = load i64 (%TypeChecker.560555*, %FunctionType.560387*, %"Array<Expression>.560419"*)*, i64 (%TypeChecker.560555*, %FunctionType.560387*, %"Array<Expression>.560419"*)** %.69, align 8
  %.73 = tail call i64 %.70(%TypeChecker.560555* nonnull %.1, %FunctionType.560387* %.4416, %"Array<Expression>.560419"* %.56)
  %.77 = icmp sgt i64 %.73, -2
  br i1 %.77, label %.6.endif.endif.if, label %.6.endif.endif.endif

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.81 = icmp eq i64 %.73, -1
  br i1 %.81, label %.6.endif.endif.if.if, label %.6.endif.endif.if.else

.6.endif.endif.endif:                             ; preds = %.6.endif.endif
  %4 = ptrtoint %"Array<Expression>.560419"* %.56 to i64
  %5 = bitcast %"Array<Expression>.560419"** %.4 to i64*
  store i64 %4, i64* %5, align 8
  ret %string.560217* null

.6.endif.endif.if.if:                             ; preds = %.6.endif.endif.if
  %.84 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.4416, i64 0, i32 2
  %.85 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.85, i64 0, i32 2
  %.87 = load i64, i64* %.86, align 8
  %.89 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.3, i64 0, i32 2
  %.90 = load i64, i64* %.89, align 8
  %.92 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.285, i64 0, i64 0), i64 %.87, i64 %.90)
  %.93 = add i64 %.92, 1
  %.95 = tail call i8* @malloc(i64 %.93)
  %.96 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.95, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.285, i64 0, i64 0), i64 %.87, i64 %.90)
  %.97 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.98 = bitcast i8* %.97 to %string.560217*
  %.99 = bitcast i8* %.97 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.99, align 8
  %.101 = getelementptr inbounds i8, i8* %.97, i64 8
  %6 = bitcast i8* %.101 to i8**
  store i8* %.95, i8** %6, align 8
  %.103 = getelementptr inbounds i8, i8* %.97, i64 16
  %7 = bitcast i8* %.103 to i64*
  store i64 %.92, i64* %7, align 8
  %.105 = getelementptr inbounds i8, i8* %.97, i64 24
  %8 = bitcast i8* %.105 to i64*
  store i64 %.92, i64* %8, align 8
  ret %string.560217* %.98

.6.endif.endif.if.else:                           ; preds = %.6.endif.endif.if
  %.110 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.47, align 8
  %.111 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.110, i64 0, i32 10
  %.112 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.111, align 8
  %.115 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.4416, i64 0, i32 2
  %.116 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %.115, align 8
  %.117 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.116, i64 0, i32 0
  %.118 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.117, align 8
  %.119 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.118, i64 0, i32 5
  %.120 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.119, align 8
  %.121 = tail call %Type.560381* %.120(%"Array<Type>.560389"* %.116, i64 %.73)
  %.122 = tail call %string.560217* %.112(%TypeChecker.560555* nonnull %.1, %Type.560381* %.121)
  %.125 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.47, align 8
  %.126 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.125, i64 0, i32 10
  %.127 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.126, align 8
  %.130 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.56, i64 0, i32 0
  %.131 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.130, align 8
  %.132 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.131, i64 0, i32 5
  %.133 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.132, align 8
  %.134 = tail call %Expression.560401* %.133(%"Array<Expression>.560419"* %.56, i64 %.73)
  %.135 = getelementptr inbounds %Expression.560401, %Expression.560401* %.134, i64 0, i32 4
  %.136 = load %Type.560381*, %Type.560381** %.135, align 8
  %.137 = tail call %string.560217* %.127(%TypeChecker.560555* nonnull %.1, %Type.560381* %.136)
  %.139 = getelementptr inbounds %string.560217, %string.560217* %.122, i64 0, i32 0
  %.140 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.139, align 8
  %.141 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.140, i64 0, i32 11
  %.142 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.141, align 8
  %.143 = tail call i8* %.142(%string.560217* %.122)
  %.144 = getelementptr inbounds %string.560217, %string.560217* %.137, i64 0, i32 0
  %.145 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.144, align 8
  %.146 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.145, i64 0, i32 11
  %.147 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.146, align 8
  %.148 = tail call i8* %.147(%string.560217* %.137)
  %.150 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.286, i64 0, i64 0), i8* %.143, i8* %.148, i64 %.73)
  %.151 = add i64 %.150, 1
  %.153 = tail call i8* @malloc(i64 %.151)
  %.154 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.153, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.286, i64 0, i64 0), i8* %.143, i8* %.148, i64 %.73)
  %.155 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %string.560217*
  %.157 = bitcast i8* %.155 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.157, align 8
  %.159 = getelementptr inbounds i8, i8* %.155, i64 8
  %9 = bitcast i8* %.159 to i8**
  store i8* %.153, i8** %9, align 8
  %.161 = getelementptr inbounds i8, i8* %.155, i64 16
  %10 = bitcast i8* %.161 to i64*
  store i64 %.150, i64* %10, align 8
  %.163 = getelementptr inbounds i8, i8* %.155, i64 24
  %11 = bitcast i8* %.163 to i64*
  store i64 %.150, i64* %11, align 8
  ret %string.560217* %.156
}

define noalias %NewExpression.560433* @TypeChecker_check_new_expr(%TypeChecker.560555* %.1, %NewExpressionNode.560303* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 46
  %.11 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.10, align 8
  %.13 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.2, i64 0, i32 4
  %.14 = load %TypeNode.560269*, %TypeNode.560269** %.13, align 8
  %.15 = tail call %Type.560381* %.11(%TypeChecker.560555* %.1, %TypeNode.560269* %.14)
  %.20 = getelementptr inbounds %Type.560381, %Type.560381* %.15, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp eq i64 %.21, 20
  br i1 %.22, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.26 = getelementptr inbounds %Type.560381, %Type.560381* %.15, i64 2
  %0 = bitcast %Type.560381* %.26 to %Type.560381**
  %.27 = load %Type.560381*, %Type.560381** %0, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4.if, %.4
  %value_type.0 = phi %Type.560381* [ %.27, %.4.if ], [ %.15, %.4 ]
  %.31 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.33 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.33 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.35, align 8
  %.37 = getelementptr inbounds i8, i8* %.33, i64 8
  %1 = bitcast i8* %.37 to i8**
  store i8* %.31, i8** %1, align 8
  %.39 = getelementptr inbounds i8, i8* %.33, i64 16
  %2 = bitcast i8* %.39 to i64*
  store i64 0, i64* %2, align 8
  %.41 = getelementptr inbounds i8, i8* %.33, i64 24
  %3 = bitcast i8* %.41 to i64*
  store i64 8, i64* %3, align 8
  %args = alloca %"Array<Expression>.560419"*, align 8
  %4 = bitcast %"Array<Expression>.560419"** %args to i8**
  store i8* %.33, i8** %4, align 8
  %.46 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.47 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.46, i64 0, i32 17
  %.48 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.47, align 8
  %.49 = tail call i1 %.48(%TypeChecker.560555* nonnull %.1)
  %5 = bitcast i8* %.33 to %"Array<Expression>.560419"*
  br i1 %.49, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  ret %NewExpression.560433* null

.4.endif.endif:                                   ; preds = %.4.endif
  %.53 = tail call i1 @is_object(%Type.560381* %.15)
  br i1 %.53, label %.4.endif.endif.if, label %.4.endif.endif.else

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  %.57 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.58 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.57, i64 0, i32 56
  %.59 = load %string.560217* (%TypeChecker.560555*, %ClassId.560397*, %"Array<ExpressionNode>.560297"*, %"Array<Expression>.560419"**)*, %string.560217* (%TypeChecker.560555*, %ClassId.560397*, %"Array<ExpressionNode>.560297"*, %"Array<Expression>.560419"**)** %.58, align 8
  %.61 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.62 = load %Program.560549*, %Program.560549** %.61, align 8
  %.64 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.62, %Type.560381* %.15)
  %.65 = getelementptr inbounds %Class.560513, %Class.560513* %.64, i64 0, i32 1
  %.66 = load %ClassId.560397*, %ClassId.560397** %.65, align 8
  %.68 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.2, i64 0, i32 6
  %.69 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.68, align 8
  %.70 = call %string.560217* %.59(%TypeChecker.560555* nonnull %.1, %ClassId.560397* %.66, %"Array<ExpressionNode>.560297"* %.69, %"Array<Expression>.560419"** nonnull %args)
  %6 = ptrtoint %string.560217* %.70 to i64
  %.73 = trunc i64 %6 to i32
  %.75.not = icmp eq i32 %.73, 0
  br i1 %.75.not, label %.4.endif.endif.if..4.endif.endif.endif_crit_edge, label %.4.endif.endif.if.if

.4.endif.endif.if..4.endif.endif.endif_crit_edge: ; preds = %.4.endif.endif.if
  %.233.pre = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %args, align 8
  br label %.4.endif.endif.endif

.4.endif.endif.else:                              ; preds = %.4.endif.endif
  %.91 = load i64, i64* %.20, align 8
  %.92 = icmp eq i64 %.91, 15
  br i1 %.92, label %.4.endif.endif.else.if, label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif.if..4.endif.endif.endif_crit_edge, %.4.endif.endif.else, %.4.endif.endif.else.if.endif.endif
  %.233 = phi %"Array<Expression>.560419"* [ %.233.pre, %.4.endif.endif.if..4.endif.endif.endif_crit_edge ], [ %5, %.4.endif.endif.else ], [ %5, %.4.endif.endif.else.if.endif.endif ]
  %.235 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.2, i64 0, i32 5
  %.236 = load i1, i1* %.235, align 1
  %.237 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.238 = bitcast i8* %.237 to %NewExpression.560433*
  %.239 = bitcast i8* %.237 to %NewExpression_vtable_ty.560434**
  store %NewExpression_vtable_ty.560434* @NewExpression_vtable_data, %NewExpression_vtable_ty.560434** %.239, align 8
  call void @NewExpression_constructor(%NewExpression.560433* %.238, %Type.560381* %value_type.0, %Type.560381* %.15, %"Array<Expression>.560419"* %.233, i1 %.236)
  ret %NewExpression.560433* %.238

.4.endif.endif.if.if:                             ; preds = %.4.endif.endif.if
  %.79 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.79, i64 0, i32 16
  %.81 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.80, align 8
  %.84 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.2, i64 0, i32 1
  %.85 = load %FloRange.560223*, %FloRange.560223** %.84, align 8
  call void %.81(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.70, %FloRange.560223* %.85)
  ret %NewExpression.560433* null

.4.endif.endif.else.if:                           ; preds = %.4.endif.endif.else
  %.95 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.2, i64 0, i32 6
  %.96 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.95, align 8
  %.97 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.96, i64 0, i32 2
  %.98 = load i64, i64* %.97, align 8
  %.101.not = icmp eq i64 %.98, 1
  br i1 %.101.not, label %.4.endif.endif.else.if.endif, label %.4.endif.endif.else.if.if

.4.endif.endif.else.if.if:                        ; preds = %.4.endif.endif.else.if
  %.105 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.106 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.105, i64 0, i32 16
  %.107 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.106, align 8
  %.110 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.287, i64 0, i64 0), i64 %.98)
  %.111 = add i64 %.110, 1
  %.113 = tail call i8* @malloc(i64 %.111)
  %.114 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.113, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.287, i64 0, i64 0), i64 %.98)
  %.115 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.116 = bitcast i8* %.115 to %string.560217*
  %.117 = bitcast i8* %.115 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.117, align 8
  %.119 = getelementptr inbounds i8, i8* %.115, i64 8
  %7 = bitcast i8* %.119 to i8**
  store i8* %.113, i8** %7, align 8
  %.121 = getelementptr inbounds i8, i8* %.115, i64 16
  %8 = bitcast i8* %.121 to i64*
  store i64 %.110, i64* %8, align 8
  %.123 = getelementptr inbounds i8, i8* %.115, i64 24
  %9 = bitcast i8* %.123 to i64*
  store i64 %.110, i64* %9, align 8
  %.126 = getelementptr inbounds %NewExpressionNode.560303, %NewExpressionNode.560303* %.2, i64 0, i32 1
  %.127 = load %FloRange.560223*, %FloRange.560223** %.126, align 8
  tail call void %.107(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.116, %FloRange.560223* %.127)
  ret %NewExpression.560433* null

.4.endif.endif.else.if.endif:                     ; preds = %.4.endif.endif.else.if
  %.130 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.131 = bitcast i8* %.130 to %Type.560381*
  %.132 = bitcast i8* %.130 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.132, align 8
  tail call void @Type_constructor(%Type.560381* %.131, i64 7)
  %.138 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.139 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.138, i64 0, i32 72
  %.140 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.139, align 8
  %.144 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.95, align 8
  %.145 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.144, i64 0, i32 0
  %.146 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.145, align 8
  %.147 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.146, i64 0, i32 5
  %.148 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.147, align 8
  %.149 = tail call %ExpressionNode.560285* %.148(%"Array<ExpressionNode>.560297"* %.144, i64 0)
  %.150 = tail call %Expression.560401* %.140(%TypeChecker.560555* nonnull %.1, %Type.560381* %.131, %ExpressionNode.560285* %.149)
  %.154 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.155 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.154, i64 0, i32 9
  %.156 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.155, align 8
  %.159 = getelementptr inbounds %Expression.560401, %Expression.560401* %.150, i64 0, i32 4
  %.160 = load %Type.560381*, %Type.560381** %.159, align 8
  %.161 = tail call i1 %.156(%TypeChecker.560555* nonnull %.1, %Type.560381* %.131, %Type.560381* %.160)
  br i1 %.161, label %.4.endif.endif.else.if.endif.endif, label %.4.endif.endif.else.if.endif.if

.4.endif.endif.else.if.endif.if:                  ; preds = %.4.endif.endif.else.if.endif
  %.166 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.166, i64 0, i32 16
  %.168 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.167, align 8
  %.172 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.166, i64 0, i32 10
  %.173 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.172, align 8
  %.175 = tail call %string.560217* %.173(%TypeChecker.560555* nonnull %.1, %Type.560381* %.131)
  %.179 = getelementptr inbounds %string.560217, %string.560217* %.175, i64 0, i32 0
  %.180 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.179, align 8
  %.181 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.180, i64 0, i32 11
  %.182 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.181, align 8
  %.183 = tail call i8* %.182(%string.560217* %.175)
  %.184 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.184 to %string.560217*
  %.186 = bitcast i8* %.184 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.186, align 8
  tail call void @string_constructor(%string.560217* %.185, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.289, i64 0, i64 0), i64 5)
  %.190 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.186, align 8
  %.191 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.190, i64 0, i32 11
  %.192 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.191, align 8
  %.193 = tail call i8* %.192(%string.560217* %.185)
  %.195 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @str.288, i64 0, i64 0), i8* %.183, i8* %.193)
  %.196 = add i64 %.195, 1
  %.198 = tail call i8* @malloc(i64 %.196)
  %.199 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.198, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @str.288, i64 0, i64 0), i8* %.183, i8* %.193)
  %.200 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.201 = bitcast i8* %.200 to %string.560217*
  %.202 = bitcast i8* %.200 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.202, align 8
  %.204 = getelementptr inbounds i8, i8* %.200, i64 8
  %10 = bitcast i8* %.204 to i8**
  store i8* %.198, i8** %10, align 8
  %.206 = getelementptr inbounds i8, i8* %.200, i64 16
  %11 = bitcast i8* %.206 to i64*
  store i64 %.195, i64* %11, align 8
  %.208 = getelementptr inbounds i8, i8* %.200, i64 24
  %12 = bitcast i8* %.208 to i64*
  store i64 %.195, i64* %12, align 8
  %.212 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.95, align 8
  %.213 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.212, i64 0, i32 0
  %.214 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.213, align 8
  %.215 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.214, i64 0, i32 5
  %.216 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.215, align 8
  %.217 = tail call %ExpressionNode.560285* %.216(%"Array<ExpressionNode>.560297"* %.212, i64 0)
  %.218 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.217, i64 0, i32 1
  %.219 = load %FloRange.560223*, %FloRange.560223** %.218, align 8
  tail call void %.168(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.201, %FloRange.560223* %.219)
  ret %NewExpression.560433* null

.4.endif.endif.else.if.endif.endif:               ; preds = %.4.endif.endif.else.if.endif
  %.224 = bitcast i8* %.33 to %"Array<Expression>_vtable_ty.560420"**
  %.225 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.224, align 8
  %.226 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.225, i64 0, i32 2
  %.227 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.226, align 8
  tail call void %.227(%"Array<Expression>.560419"* %5, %Expression.560401* %.150)
  br label %.4.endif.endif.endif
}

define noalias %string.560217* @TypeChecker_check_member_access(%TypeChecker.560555* nocapture readonly %.1, %PropId.560449* nocapture readonly %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.10 = load %Program.560549*, %Program.560549** %.9, align 8
  %.12 = tail call %Class.560513* @get_class_from_prop_id(%Program.560549* %.10, %PropId.560449* %.2)
  %.26 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 1
  %.27 = load i64, i64* %.26, align 8
  %.28 = icmp eq i64 %.27, 0
  %.31 = getelementptr inbounds %PropId.560449, %PropId.560449* %.2, i64 0, i32 3
  %.32 = load i64, i64* %.31, align 8
  br i1 %.28, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.34 = getelementptr inbounds %Class.560513, %Class.560513* %.12, i64 0, i32 6
  %.35 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.35, i64 0, i32 0
  %.37 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.37, i64 0, i32 5
  %.39 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.38, align 8
  %.40 = tail call %ClassMethod.560511* %.39(%"Array<ClassMethod>.560516"* %.35, i64 %.32)
  %.43 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.40, i64 0, i32 3
  %.47 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.40, i64 0, i32 4
  br label %.4.endif

.4.else:                                          ; preds = %.4
  %.55 = getelementptr inbounds %Class.560513, %Class.560513* %.12, i64 0, i32 5
  %.56 = load %"Array<ClassField>.560515"*, %"Array<ClassField>.560515"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.56, i64 0, i32 0
  %.58 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.57, align 8
  %.59 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.58, i64 0, i32 5
  %.60 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.59, align 8
  %.61 = tail call %ClassField.560509* %.60(%"Array<ClassField>.560515"* %.56, i64 %.32)
  %.64 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.61, i64 0, i32 3
  %.68 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.61, i64 0, i32 4
  br label %.4.endif

.4.endif:                                         ; preds = %.4.else, %.4.if
  %visibility.0.in = phi i64* [ %.43, %.4.if ], [ %.64, %.4.else ]
  %member_name.0.in = phi %string.560217** [ %.47, %.4.if ], [ %.68, %.4.else ]
  %member_name.0 = load %string.560217*, %string.560217** %member_name.0.in, align 8
  %visibility.0 = load i64, i64* %visibility.0.in, align 8
  %.73 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 3
  %0 = bitcast %ClassId.560397** %.73 to i64*
  %.741 = load i64, i64* %0, align 8
  %.75 = trunc i64 %.741 to i32
  %.77.not = icmp eq i32 %.75, 0
  %1 = inttoptr i64 %.741 to %ClassId.560397*
  br i1 %.77.not, label %.4.endif.else, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.82 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %1, i64 0, i32 1
  %.83 = load i64, i64* %.82, align 8
  %.85 = getelementptr inbounds %Class.560513, %Class.560513* %.12, i64 0, i32 1
  %.86 = load %ClassId.560397*, %ClassId.560397** %.85, align 8
  %.87 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %.86, i64 0, i32 1
  %.88 = load i64, i64* %.87, align 8
  %.89 = icmp ne i64 %.83, %.88
  %.93 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %.86, i64 0, i32 3
  %.94 = load i64, i64* %.93, align 8
  %.98 = getelementptr inbounds %ClassId.560397, %ClassId.560397* %1, i64 0, i32 3
  %.99 = load i64, i64* %.98, align 8
  %.100 = icmp ne i64 %.94, %.99
  %.101 = or i1 %.89, %.100
  %.104 = icmp eq i64 %visibility.0, 1
  %or.cond = and i1 %.104, %.101
  br i1 %or.cond, label %.4.endif.if.if.if, label %.4.endif.endif

.4.endif.else:                                    ; preds = %.4.endif
  %.140.not = icmp eq i64 %visibility.0, 2
  br i1 %.140.not, label %.4.endif.endif, label %.4.endif.else.if

.4.endif.endif:                                   ; preds = %.4.endif.else, %.4.endif.if
  ret %string.560217* null

.4.endif.if.if.if:                                ; preds = %.4.endif.if
  %.108 = getelementptr inbounds %Class.560513, %Class.560513* %.12, i64 0, i32 2
  %.109 = load %string.560217*, %string.560217** %.108, align 8
  %.110 = getelementptr inbounds %string.560217, %string.560217* %member_name.0, i64 0, i32 0
  %.111 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.110, align 8
  %.112 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.111, i64 0, i32 11
  %.113 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.112, align 8
  %.114 = tail call i8* %.113(%string.560217* %member_name.0)
  %.115 = getelementptr inbounds %string.560217, %string.560217* %.109, i64 0, i32 0
  %.116 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.115, align 8
  %.117 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.116, i64 0, i32 11
  %.118 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.117, align 8
  %.119 = tail call i8* %.118(%string.560217* %.109)
  %.121 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.290, i64 0, i64 0), i8* %.114, i8* %.119)
  %.122 = add i64 %.121, 1
  %.124 = tail call i8* @malloc(i64 %.122)
  %.125 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.124, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.290, i64 0, i64 0), i8* %.114, i8* %.119)
  %.126 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.127 = bitcast i8* %.126 to %string.560217*
  %.128 = bitcast i8* %.126 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.128, align 8
  %.130 = getelementptr inbounds i8, i8* %.126, i64 8
  %2 = bitcast i8* %.130 to i8**
  store i8* %.124, i8** %2, align 8
  %.132 = getelementptr inbounds i8, i8* %.126, i64 16
  %3 = bitcast i8* %.132 to i64*
  store i64 %.121, i64* %3, align 8
  %.134 = getelementptr inbounds i8, i8* %.126, i64 24
  %4 = bitcast i8* %.134 to i64*
  store i64 %.121, i64* %4, align 8
  ret %string.560217* %.127

.4.endif.else.if:                                 ; preds = %.4.endif.else
  %.144 = tail call %string.560217* @dump_access(i64 %visibility.0)
  %.146 = getelementptr inbounds %Class.560513, %Class.560513* %.12, i64 0, i32 2
  %.147 = load %string.560217*, %string.560217** %.146, align 8
  %.148 = getelementptr inbounds %string.560217, %string.560217* %member_name.0, i64 0, i32 0
  %.149 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.148, align 8
  %.150 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.149, i64 0, i32 11
  %.151 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.150, align 8
  %.152 = tail call i8* %.151(%string.560217* %member_name.0)
  %.153 = getelementptr inbounds %string.560217, %string.560217* %.144, i64 0, i32 0
  %.154 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.153, align 8
  %.155 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.154, i64 0, i32 11
  %.156 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.155, align 8
  %.157 = tail call i8* %.156(%string.560217* %.144)
  %.158 = getelementptr inbounds %string.560217, %string.560217* %.147, i64 0, i32 0
  %.159 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.158, align 8
  %.160 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.159, i64 0, i32 11
  %.161 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.160, align 8
  %.162 = tail call i8* %.161(%string.560217* %.147)
  %.164 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.291, i64 0, i64 0), i8* %.152, i8* %.157, i8* %.162)
  %.165 = add i64 %.164, 1
  %.167 = tail call i8* @malloc(i64 %.165)
  %.168 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.167, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.291, i64 0, i64 0), i8* %.152, i8* %.157, i8* %.162)
  %.169 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.560217*
  %.171 = bitcast i8* %.169 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.171, align 8
  %.173 = getelementptr inbounds i8, i8* %.169, i64 8
  %5 = bitcast i8* %.173 to i8**
  store i8* %.167, i8** %5, align 8
  %.175 = getelementptr inbounds i8, i8* %.169, i64 16
  %6 = bitcast i8* %.175 to i64*
  store i64 %.164, i64* %6, align 8
  %.177 = getelementptr inbounds i8, i8* %.169, i64 24
  %7 = bitcast i8* %.177 to i64*
  store i64 %.164, i64* %7, align 8
  ret %string.560217* %.170
}

define %MemberExpression.560451* @TypeChecker_check_member_expr(%TypeChecker.560555* %.1, %Type.560381* nocapture readnone %.2, %MemberExpressionNode.560307* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 72
  %.13 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.12, align 8
  %.14 = tail call %Type.560381* @Type_unknown()
  %.16 = getelementptr inbounds %MemberExpressionNode.560307, %MemberExpressionNode.560307* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.16, align 8
  %.18 = tail call %Expression.560401* %.13(%TypeChecker.560555* %.1, %Type.560381* %.14, %ExpressionNode.560285* %.17)
  %.22 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.22, i64 0, i32 17
  %.24 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.23, align 8
  %.25 = tail call i1 %.24(%TypeChecker.560555* %.1)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %MemberExpression.560451* null

.5.endif:                                         ; preds = %.5
  %.29 = getelementptr inbounds %Expression.560401, %Expression.560401* %.18, i64 0, i32 4
  %0 = bitcast %Type.560381** %.29 to i64*
  %.3010 = load i64, i64* %0, align 8
  %.33 = getelementptr inbounds %MemberExpressionNode.560307, %MemberExpressionNode.560307* %.3, i64 0, i32 5
  %.34 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.33, align 8
  %.35 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.34, i64 0, i32 3
  %.361136 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = tail call %Type.560381* @Type_unknown()
  %1 = inttoptr i64 %.3010 to %Type.560381*
  %.44 = tail call i1 @is_object(%Type.560381* %1)
  %.47 = getelementptr inbounds %Type.560381, %Type.560381* %1, i64 0, i32 1
  %.48 = load i64, i64* %.47, align 8
  br i1 %.44, label %.5.endif.if, label %.5.endif.else

.5.endif.if:                                      ; preds = %.5.endif
  %.49 = icmp eq i64 %.48, 20
  br i1 %.49, label %while.entry, label %while.exit

.5.endif.else:                                    ; preds = %.5.endif
  %.160 = icmp eq i64 %.48, 18
  br i1 %.160, label %.5.endif.else.if, label %.5.endif.else.else

.5.endif.endif:                                   ; preds = %.5.endif.else.if.if.endif.endif, %.5.endif.else.if.else.endif, %while.exit.endif.endif
  %.520 = phi %Type.560381* [ %.267, %.5.endif.else.if.if.endif.endif ], [ %18, %.5.endif.else.if.else.endif ], [ %.154, %while.exit.endif.endif ]
  %.519 = phi %PropId.560449* [ %.188, %.5.endif.else.if.if.endif.endif ], [ %.286, %.5.endif.else.if.else.endif ], [ %.75, %while.exit.endif.endif ]
  %.521 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.522 = bitcast i8* %.521 to %MemberExpression.560451*
  %.523 = bitcast i8* %.521 to %MemberExpression_vtable_ty.560452**
  store %MemberExpression_vtable_ty.560452* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.560452** %.523, align 8
  tail call void @MemberExpression_constructor(%MemberExpression.560451* %.522, %Expression.560401* %.18, %PropId.560449* %.519, %Type.560381* %.520)
  ret %MemberExpression.560451* %.522

while.entry:                                      ; preds = %.5.endif.if, %while.entry
  %.5129.in = phi i64 [ %.5430, %while.entry ], [ %.3010, %.5.endif.if ]
  %.5129 = inttoptr i64 %.5129.in to %GenericType.560405*
  %.53 = getelementptr inbounds %GenericType.560405, %GenericType.560405* %.5129, i64 0, i32 4
  %2 = bitcast %Type.560381** %.53 to i64*
  %.5430 = load i64, i64* %2, align 8
  %.56.cast = inttoptr i64 %.5430 to %Type.560381*
  %.57 = getelementptr inbounds %Type.560381, %Type.560381* %.56.cast, i64 0, i32 1
  %.58 = load i64, i64* %.57, align 8
  %.59 = icmp eq i64 %.58, 20
  br i1 %.59, label %while.entry, label %while.exit.loopexit

while.exit.loopexit:                              ; preds = %while.entry
  %.56.cast.le = inttoptr i64 %.5430 to %Type.560381*
  br label %while.exit

while.exit:                                       ; preds = %while.exit.loopexit, %.5.endif.if
  %.64 = phi %Type.560381* [ %1, %.5.endif.if ], [ %.56.cast.le, %while.exit.loopexit ]
  %.62 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.63 = load %Program.560549*, %Program.560549** %.62, align 8
  %.65 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.63, %Type.560381* %.64)
  %.68 = getelementptr inbounds %Class.560513, %Class.560513* %.65, i64 0, i32 7
  %.69 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.68, align 8
  %.70 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.69, i64 0, i32 0
  %.71 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.70, align 8
  %.72 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.71, i64 0, i32 3
  %.73 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.72, align 8
  %.75 = tail call %PropId.560449* %.73(%"Map<string, PropId>.560517"* %.69, %string.560217* %.361136)
  %3 = ptrtoint %PropId.560449* %.75 to i64
  %.78 = trunc i64 %3 to i32
  %.80 = icmp eq i32 %.78, 0
  %.84 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  br i1 %.80, label %while.exit.if, label %while.exit.endif

while.exit.if:                                    ; preds = %while.exit
  %.85 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.84, i64 0, i32 16
  %.86 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.85, align 8
  %.89 = getelementptr inbounds %Class.560513, %Class.560513* %.65, i64 0, i32 2
  %.90 = load %string.560217*, %string.560217** %.89, align 8
  %.91 = getelementptr inbounds %string.560217, %string.560217* %.361136, i64 0, i32 0
  %.92 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.91, align 8
  %.93 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.92, i64 0, i32 11
  %.94 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.93, align 8
  %.95 = tail call i8* %.94(%string.560217* %.361136)
  %.96 = getelementptr inbounds %string.560217, %string.560217* %.90, i64 0, i32 0
  %.97 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.96, align 8
  %.98 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.97, i64 0, i32 11
  %.99 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.98, align 8
  %.100 = tail call i8* %.99(%string.560217* %.90)
  %.102 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.292, i64 0, i64 0), i8* %.95, i8* %.100)
  %.103 = add i64 %.102, 1
  %.105 = tail call i8* @malloc(i64 %.103)
  %.106 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.105, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.292, i64 0, i64 0), i8* %.95, i8* %.100)
  %.107 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.108 = bitcast i8* %.107 to %string.560217*
  %.109 = bitcast i8* %.107 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.109, align 8
  %.111 = getelementptr inbounds i8, i8* %.107, i64 8
  %4 = bitcast i8* %.111 to i8**
  store i8* %.105, i8** %4, align 8
  %.113 = getelementptr inbounds i8, i8* %.107, i64 16
  %5 = bitcast i8* %.113 to i64*
  store i64 %.102, i64* %5, align 8
  %.115 = getelementptr inbounds i8, i8* %.107, i64 24
  %6 = bitcast i8* %.115 to i64*
  store i64 %.102, i64* %6, align 8
  %.119 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.33, align 8
  %.120 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.119, i64 0, i32 2
  %.121 = load %FloRange.560223*, %FloRange.560223** %.120, align 8
  tail call void %.86(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.108, %FloRange.560223* %.121)
  ret %MemberExpression.560451* null

while.exit.endif:                                 ; preds = %while.exit
  %.127 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.84, i64 0, i32 58
  %.128 = load %string.560217* (%TypeChecker.560555*, %PropId.560449*)*, %string.560217* (%TypeChecker.560555*, %PropId.560449*)** %.127, align 8
  %.130 = tail call %string.560217* %.128(%TypeChecker.560555* nonnull %.1, %PropId.560449* %.75)
  %7 = ptrtoint %string.560217* %.130 to i64
  %.133 = trunc i64 %7 to i32
  %.135.not = icmp eq i32 %.133, 0
  br i1 %.135.not, label %while.exit.endif.endif, label %while.exit.endif.if

while.exit.endif.if:                              ; preds = %while.exit.endif
  %.139 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.140 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.139, i64 0, i32 16
  %.141 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.140, align 8
  %.145 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.33, align 8
  %.146 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.145, i64 0, i32 2
  %.147 = load %FloRange.560223*, %FloRange.560223** %.146, align 8
  tail call void %.141(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.130, %FloRange.560223* %.147)
  ret %MemberExpression.560451* null

while.exit.endif.endif:                           ; preds = %while.exit.endif
  %.152 = load %Program.560549*, %Program.560549** %.62, align 8
  %.154 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.152, %PropId.560449* %.75)
  br label %.5.endif.endif

.5.endif.else.if:                                 ; preds = %.5.endif.else
  %.164 = getelementptr inbounds %Expression.560401, %Expression.560401* %.18, i64 1
  %8 = bitcast %Expression.560401* %.164 to %VarId.560441**
  %.1652837 = load %VarId.560441*, %VarId.560441** %8, align 8
  %.168 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1652837, i64 0, i32 1
  %.169 = load i64, i64* %.168, align 8
  %.170 = icmp eq i64 %.169, 3
  %.174 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  br i1 %.170, label %.5.endif.else.if.if, label %.5.endif.else.if.else

.5.endif.else.else:                               ; preds = %.5.endif.else
  %.348 = tail call i1 @is_pointer(%Type.560381* %1)
  br i1 %.348, label %.5.endif.else.else.if, label %.5.endif.else.else.else

.5.endif.else.if.if:                              ; preds = %.5.endif.else.if
  %.175 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.174, i64 0, i32 7
  %.176 = load %Class.560513* (%TypeChecker.560555*, %VarId.560441*)*, %Class.560513* (%TypeChecker.560555*, %VarId.560441*)** %.175, align 8
  %.178 = tail call %Class.560513* %.176(%TypeChecker.560555* nonnull %.1, %VarId.560441* %.1652837)
  %.181 = getelementptr inbounds %Class.560513, %Class.560513* %.178, i64 0, i32 8
  %.182 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.181, align 8
  %.183 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.182, i64 0, i32 0
  %.184 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.183, align 8
  %.185 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.184, i64 0, i32 3
  %.186 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.185, align 8
  %.188 = tail call %PropId.560449* %.186(%"Map<string, PropId>.560517"* %.182, %string.560217* %.361136)
  %9 = ptrtoint %PropId.560449* %.188 to i64
  %.191 = trunc i64 %9 to i32
  %.193 = icmp eq i32 %.191, 0
  %.197 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  br i1 %.193, label %.5.endif.else.if.if.if, label %.5.endif.else.if.if.endif

.5.endif.else.if.else:                            ; preds = %.5.endif.else.if
  %.273 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.174, i64 0, i32 8
  %.274 = load %Enum.560527* (%TypeChecker.560555*, %VarId.560441*)*, %Enum.560527* (%TypeChecker.560555*, %VarId.560441*)** %.273, align 8
  %.276 = tail call %Enum.560527* %.274(%TypeChecker.560555* nonnull %.1, %VarId.560441* %.1652837)
  %.279 = getelementptr inbounds %Enum.560527, %Enum.560527* %.276, i64 0, i32 4
  %.280 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.279, align 8
  %.281 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.280, i64 0, i32 0
  %.282 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.281, align 8
  %.283 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.282, i64 0, i32 3
  %.284 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.283, align 8
  %.286 = tail call %PropId.560449* %.284(%"Map<string, PropId>.560517"* %.280, %string.560217* %.361136)
  %10 = ptrtoint %PropId.560449* %.286 to i64
  %.289 = trunc i64 %10 to i32
  %.291 = icmp eq i32 %.289, 0
  br i1 %.291, label %.5.endif.else.if.else.if, label %.5.endif.else.if.else.endif

.5.endif.else.if.if.if:                           ; preds = %.5.endif.else.if.if
  %.198 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.197, i64 0, i32 16
  %.199 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.198, align 8
  %.202 = getelementptr inbounds %Class.560513, %Class.560513* %.178, i64 0, i32 2
  %.203 = load %string.560217*, %string.560217** %.202, align 8
  %.204 = getelementptr inbounds %string.560217, %string.560217* %.361136, i64 0, i32 0
  %.205 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.204, align 8
  %.206 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.205, i64 0, i32 11
  %.207 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.206, align 8
  %.208 = tail call i8* %.207(%string.560217* %.361136)
  %.209 = getelementptr inbounds %string.560217, %string.560217* %.203, i64 0, i32 0
  %.210 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.209, align 8
  %.211 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.210, i64 0, i32 11
  %.212 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.211, align 8
  %.213 = tail call i8* %.212(%string.560217* %.203)
  %.215 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.293, i64 0, i64 0), i8* %.208, i8* %.213)
  %.216 = add i64 %.215, 1
  %.218 = tail call i8* @malloc(i64 %.216)
  %.219 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.218, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.293, i64 0, i64 0), i8* %.208, i8* %.213)
  %.220 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.221 = bitcast i8* %.220 to %string.560217*
  %.222 = bitcast i8* %.220 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.222, align 8
  %.224 = getelementptr inbounds i8, i8* %.220, i64 8
  %11 = bitcast i8* %.224 to i8**
  store i8* %.218, i8** %11, align 8
  %.226 = getelementptr inbounds i8, i8* %.220, i64 16
  %12 = bitcast i8* %.226 to i64*
  store i64 %.215, i64* %12, align 8
  %.228 = getelementptr inbounds i8, i8* %.220, i64 24
  %13 = bitcast i8* %.228 to i64*
  store i64 %.215, i64* %13, align 8
  %.232 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.33, align 8
  %.233 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.232, i64 0, i32 2
  %.234 = load %FloRange.560223*, %FloRange.560223** %.233, align 8
  tail call void %.199(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.221, %FloRange.560223* %.234)
  ret %MemberExpression.560451* null

.5.endif.else.if.if.endif:                        ; preds = %.5.endif.else.if.if
  %.240 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.197, i64 0, i32 58
  %.241 = load %string.560217* (%TypeChecker.560555*, %PropId.560449*)*, %string.560217* (%TypeChecker.560555*, %PropId.560449*)** %.240, align 8
  %.243 = tail call %string.560217* %.241(%TypeChecker.560555* nonnull %.1, %PropId.560449* %.188)
  %14 = ptrtoint %string.560217* %.243 to i64
  %.246 = trunc i64 %14 to i32
  %.248.not = icmp eq i32 %.246, 0
  br i1 %.248.not, label %.5.endif.else.if.if.endif.endif, label %.5.endif.else.if.if.endif.if

.5.endif.else.if.if.endif.if:                     ; preds = %.5.endif.else.if.if.endif
  %.252 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.253 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.252, i64 0, i32 16
  %.254 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.253, align 8
  %.258 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.33, align 8
  %.259 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.258, i64 0, i32 2
  %.260 = load %FloRange.560223*, %FloRange.560223** %.259, align 8
  tail call void %.254(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.243, %FloRange.560223* %.260)
  ret %MemberExpression.560451* null

.5.endif.else.if.if.endif.endif:                  ; preds = %.5.endif.else.if.if.endif
  %.264 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.265 = load %Program.560549*, %Program.560549** %.264, align 8
  %.267 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.265, %PropId.560449* %.188)
  br label %.5.endif.endif

.5.endif.else.if.else.if:                         ; preds = %.5.endif.else.if.else
  %.295 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.296 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.295, i64 0, i32 16
  %.297 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.296, align 8
  %.300 = getelementptr inbounds %Enum.560527, %Enum.560527* %.276, i64 0, i32 2
  %.301 = load %string.560217*, %string.560217** %.300, align 8
  %.302 = getelementptr inbounds %string.560217, %string.560217* %.361136, i64 0, i32 0
  %.303 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.302, align 8
  %.304 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.303, i64 0, i32 11
  %.305 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.304, align 8
  %.306 = tail call i8* %.305(%string.560217* %.361136)
  %.307 = getelementptr inbounds %string.560217, %string.560217* %.301, i64 0, i32 0
  %.308 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.307, align 8
  %.309 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.308, i64 0, i32 11
  %.310 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.309, align 8
  %.311 = tail call i8* %.310(%string.560217* %.301)
  %.313 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.294, i64 0, i64 0), i8* %.306, i8* %.311)
  %.314 = add i64 %.313, 1
  %.316 = tail call i8* @malloc(i64 %.314)
  %.317 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.316, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.294, i64 0, i64 0), i8* %.306, i8* %.311)
  %.318 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.319 = bitcast i8* %.318 to %string.560217*
  %.320 = bitcast i8* %.318 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.320, align 8
  %.322 = getelementptr inbounds i8, i8* %.318, i64 8
  %15 = bitcast i8* %.322 to i8**
  store i8* %.316, i8** %15, align 8
  %.324 = getelementptr inbounds i8, i8* %.318, i64 16
  %16 = bitcast i8* %.324 to i64*
  store i64 %.313, i64* %16, align 8
  %.326 = getelementptr inbounds i8, i8* %.318, i64 24
  %17 = bitcast i8* %.326 to i64*
  store i64 %.313, i64* %17, align 8
  %.330 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.33, align 8
  %.331 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.330, i64 0, i32 2
  %.332 = load %FloRange.560223*, %FloRange.560223** %.331, align 8
  tail call void %.297(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.319, %FloRange.560223* %.332)
  ret %MemberExpression.560451* null

.5.endif.else.if.else.endif:                      ; preds = %.5.endif.else.if.else
  %.336 = getelementptr inbounds %Enum.560527, %Enum.560527* %.276, i64 0, i32 1
  %.337 = load %EnumId.560399*, %EnumId.560399** %.336, align 8
  %.338 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.339 = bitcast i8* %.338 to %EnumType.560409*
  %.340 = bitcast i8* %.338 to %EnumType_vtable_ty.560410**
  store %EnumType_vtable_ty.560410* @EnumType_vtable_data, %EnumType_vtable_ty.560410** %.340, align 8
  tail call void @EnumType_constructor(%EnumType.560409* %.339, %EnumId.560399* %.337)
  %18 = bitcast i8* %.338 to %Type.560381*
  br label %.5.endif.endif

.5.endif.else.else.if:                            ; preds = %.5.endif.else.else
  %.352 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.353 = bitcast i8* %.352 to %string.560217*
  %.353.repack = bitcast i8* %.352 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.353.repack, align 8
  %.353.repack12 = getelementptr inbounds i8, i8* %.352, i64 8
  %19 = bitcast i8* %.353.repack12 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.295, i64 0, i64 0), i8** %19, align 8
  %.353.repack13 = getelementptr inbounds i8, i8* %.352, i64 16
  %20 = bitcast i8* %.353.repack13 to i64*
  store i64 9, i64* %20, align 8
  %.353.repack14 = getelementptr inbounds i8, i8* %.352, i64 24
  %21 = bitcast i8* %.353.repack14 to i64*
  store i64 9, i64* %21, align 8
  %.355 = getelementptr inbounds %string.560217, %string.560217* %.361136, i64 0, i32 0
  %.356 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.355, align 8
  %.357 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.356, i64 0, i32 4
  %.358 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.357, align 8
  %.359 = tail call i1 %.358(%string.560217* %.361136, %string.560217* %.353)
  br i1 %.359, label %.5.endif.else.else.if.endif, label %.5.endif.else.else.if.else

.5.endif.else.else.else:                          ; preds = %.5.endif.else.else
  %.470 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.471 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.470, i64 0, i32 16
  %.472 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.471, align 8
  %.477 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.470, i64 0, i32 10
  %.478 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.477, align 8
  %.481 = load %Type.560381*, %Type.560381** %.29, align 8
  %.482 = tail call %string.560217* %.478(%TypeChecker.560555* nonnull %.1, %Type.560381* %.481)
  %.483 = getelementptr inbounds %string.560217, %string.560217* %.361136, i64 0, i32 0
  %.484 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.483, align 8
  %.485 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.484, i64 0, i32 11
  %.486 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.485, align 8
  %.487 = tail call i8* %.486(%string.560217* %.361136)
  %.488 = getelementptr inbounds %string.560217, %string.560217* %.482, i64 0, i32 0
  %.489 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.488, align 8
  %.490 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.489, i64 0, i32 11
  %.491 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.490, align 8
  %.492 = tail call i8* %.491(%string.560217* %.482)
  %.494 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.301, i64 0, i64 0), i8* %.487, i8* %.492)
  %.495 = add i64 %.494, 1
  %.497 = tail call i8* @malloc(i64 %.495)
  %.498 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.497, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.301, i64 0, i64 0), i8* %.487, i8* %.492)
  %.499 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.500 = bitcast i8* %.499 to %string.560217*
  %.501 = bitcast i8* %.499 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.501, align 8
  %.503 = getelementptr inbounds i8, i8* %.499, i64 8
  %22 = bitcast i8* %.503 to i8**
  store i8* %.497, i8** %22, align 8
  %.505 = getelementptr inbounds i8, i8* %.499, i64 16
  %23 = bitcast i8* %.505 to i64*
  store i64 %.494, i64* %23, align 8
  %.507 = getelementptr inbounds i8, i8* %.499, i64 24
  %24 = bitcast i8* %.507 to i64*
  store i64 %.494, i64* %24, align 8
  %.511 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.16, align 8
  %.512 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.511, i64 0, i32 1
  %.513 = load %FloRange.560223*, %FloRange.560223** %.512, align 8
  tail call void %.472(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.500, %FloRange.560223* %.513)
  ret %MemberExpression.560451* null

.5.endif.else.else.if.else:                       ; preds = %.5.endif.else.else.if
  %.364 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.365 = bitcast i8* %.364 to %string.560217*
  %.365.repack = bitcast i8* %.364 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.365.repack, align 8
  %.365.repack15 = getelementptr inbounds i8, i8* %.364, i64 8
  %25 = bitcast i8* %.365.repack15 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.296, i64 0, i64 0), i8** %25, align 8
  %.365.repack16 = getelementptr inbounds i8, i8* %.364, i64 16
  %26 = bitcast i8* %.365.repack16 to i64*
  store i64 9, i64* %26, align 8
  %.365.repack17 = getelementptr inbounds i8, i8* %.364, i64 24
  %27 = bitcast i8* %.365.repack17 to i64*
  store i64 9, i64* %27, align 8
  %.368 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.355, align 8
  %.369 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.368, i64 0, i32 4
  %.370 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.369, align 8
  %.371 = tail call i1 %.370(%string.560217* nonnull %.361136, %string.560217* %.365)
  br i1 %.371, label %.5.endif.else.else.if.endif, label %.5.endif.else.else.if.else.else

.5.endif.else.else.if.endif:                      ; preds = %.5.endif.else.else.if.else.else.else.else, %.5.endif.else.else.if.else.else.else, %.5.endif.else.else.if.else.else, %.5.endif.else.else.if.else, %.5.endif.else.else.if
  %.449 = phi i64 [ 3, %.5.endif.else.else.if ], [ 4, %.5.endif.else.else.if.else ], [ 5, %.5.endif.else.else.if.else.else ], [ 6, %.5.endif.else.else.if.else.else.else ], [ 7, %.5.endif.else.else.if.else.else.else.else ]
  %.450 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.451 = bitcast i8* %.450 to %IntrinsicCall.560439*
  %.452 = bitcast i8* %.450 to %IntrinsicCall_vtable_ty.560440**
  store %IntrinsicCall_vtable_ty.560440* @IntrinsicCall_vtable_data, %IntrinsicCall_vtable_ty.560440** %.452, align 8
  tail call void @IntrinsicCall_constructor(%IntrinsicCall.560439* %.451, i64 %.449)
  %.457 = getelementptr inbounds i8, i8* %.450, i64 48
  %28 = bitcast i8* %.457 to %"Array<Expression>.560419"**
  %.458 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %28, align 8
  %.460 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.458, i64 0, i32 0
  %.461 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.460, align 8
  %.462 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.461, i64 0, i32 2
  %.463 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.462, align 8
  tail call void %.463(%"Array<Expression>.560419"* %.458, %Expression.560401* nonnull %.18)
  %29 = bitcast i8* %.450 to %MemberExpression.560451*
  ret %MemberExpression.560451* %29

.5.endif.else.else.if.else.else:                  ; preds = %.5.endif.else.else.if.else
  %.376 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.377 = bitcast i8* %.376 to %string.560217*
  %.377.repack = bitcast i8* %.376 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.377.repack, align 8
  %.377.repack18 = getelementptr inbounds i8, i8* %.376, i64 8
  %30 = bitcast i8* %.377.repack18 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.297, i64 0, i64 0), i8** %30, align 8
  %.377.repack19 = getelementptr inbounds i8, i8* %.376, i64 16
  %31 = bitcast i8* %.377.repack19 to i64*
  store i64 9, i64* %31, align 8
  %.377.repack20 = getelementptr inbounds i8, i8* %.376, i64 24
  %32 = bitcast i8* %.377.repack20 to i64*
  store i64 9, i64* %32, align 8
  %.380 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.355, align 8
  %.381 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.380, i64 0, i32 4
  %.382 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.381, align 8
  %.383 = tail call i1 %.382(%string.560217* nonnull %.361136, %string.560217* %.377)
  br i1 %.383, label %.5.endif.else.else.if.endif, label %.5.endif.else.else.if.else.else.else

.5.endif.else.else.if.else.else.else:             ; preds = %.5.endif.else.else.if.else.else
  %.388 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.389 = bitcast i8* %.388 to %string.560217*
  %.389.repack = bitcast i8* %.388 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.389.repack, align 8
  %.389.repack21 = getelementptr inbounds i8, i8* %.388, i64 8
  %33 = bitcast i8* %.389.repack21 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.298, i64 0, i64 0), i8** %33, align 8
  %.389.repack22 = getelementptr inbounds i8, i8* %.388, i64 16
  %34 = bitcast i8* %.389.repack22 to i64*
  store i64 6, i64* %34, align 8
  %.389.repack23 = getelementptr inbounds i8, i8* %.388, i64 24
  %35 = bitcast i8* %.389.repack23 to i64*
  store i64 6, i64* %35, align 8
  %.392 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.355, align 8
  %.393 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.392, i64 0, i32 4
  %.394 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.393, align 8
  %.395 = tail call i1 %.394(%string.560217* nonnull %.361136, %string.560217* %.389)
  br i1 %.395, label %.5.endif.else.else.if.endif, label %.5.endif.else.else.if.else.else.else.else

.5.endif.else.else.if.else.else.else.else:        ; preds = %.5.endif.else.else.if.else.else.else
  %.400 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.401 = bitcast i8* %.400 to %string.560217*
  %.401.repack = bitcast i8* %.400 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.401.repack, align 8
  %.401.repack24 = getelementptr inbounds i8, i8* %.400, i64 8
  %36 = bitcast i8* %.401.repack24 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.299, i64 0, i64 0), i8** %36, align 8
  %.401.repack25 = getelementptr inbounds i8, i8* %.400, i64 16
  %37 = bitcast i8* %.401.repack25 to i64*
  store i64 7, i64* %37, align 8
  %.401.repack26 = getelementptr inbounds i8, i8* %.400, i64 24
  %38 = bitcast i8* %.401.repack26 to i64*
  store i64 7, i64* %38, align 8
  %.404 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.355, align 8
  %.405 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.404, i64 0, i32 4
  %.406 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.405, align 8
  %.407 = tail call i1 %.406(%string.560217* nonnull %.361136, %string.560217* %.401)
  br i1 %.407, label %.5.endif.else.else.if.endif, label %.5.endif.else.else.if.else.else.else.else.else

.5.endif.else.else.if.else.else.else.else.else:   ; preds = %.5.endif.else.else.if.else.else.else.else
  %.413 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.414 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.413, i64 0, i32 16
  %.415 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.414, align 8
  %.418 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.355, align 8
  %.419 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.418, i64 0, i32 11
  %.420 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.419, align 8
  %.421 = tail call i8* %.420(%string.560217* nonnull %.361136)
  %.423 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.300, i64 0, i64 0), i8* %.421)
  %.424 = add i64 %.423, 1
  %.426 = tail call i8* @malloc(i64 %.424)
  %.427 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.426, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.300, i64 0, i64 0), i8* %.421)
  %.428 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.429 = bitcast i8* %.428 to %string.560217*
  %.430 = bitcast i8* %.428 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.430, align 8
  %.432 = getelementptr inbounds i8, i8* %.428, i64 8
  %39 = bitcast i8* %.432 to i8**
  store i8* %.426, i8** %39, align 8
  %.434 = getelementptr inbounds i8, i8* %.428, i64 16
  %40 = bitcast i8* %.434 to i64*
  store i64 %.423, i64* %40, align 8
  %.436 = getelementptr inbounds i8, i8* %.428, i64 24
  %41 = bitcast i8* %.436 to i64*
  store i64 %.423, i64* %41, align 8
  %.440 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.33, align 8
  %.441 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.440, i64 0, i32 2
  %.442 = load %FloRange.560223*, %FloRange.560223** %.441, align 8
  tail call void %.415(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.429, %FloRange.560223* %.442)
  ret %MemberExpression.560451* null
}

define noalias %TernaryExpression.560429* @TypeChecker_check_ternary_expr(%TypeChecker.560555* %.1, %Type.560381* %.2, %TernaryExpressionNode.560315* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 73
  %.13 = load %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)** %.12, align 8
  %.15 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.3, i64 0, i32 4
  %.16 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.15, align 8
  %.17 = tail call %Expression.560401* %.13(%TypeChecker.560555* %.1, %ExpressionNode.560285* %.16)
  %.21 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.21, i64 0, i32 17
  %.23 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.22, align 8
  %.24 = tail call i1 %.23(%TypeChecker.560555* %.1)
  br i1 %.24, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif.endif, %.5.endif, %.5
  ret %TernaryExpression.560429* null

.5.endif:                                         ; preds = %.5
  %.29 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.30 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.29, i64 0, i32 72
  %.31 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.30, align 8
  %.34 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.3, i64 0, i32 5
  %.35 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.34, align 8
  %.36 = tail call %Expression.560401* %.31(%TypeChecker.560555* nonnull %.1, %Type.560381* %.2, %ExpressionNode.560285* %.35)
  %.40 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.40, i64 0, i32 17
  %.42 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.41, align 8
  %.43 = tail call i1 %.42(%TypeChecker.560555* nonnull %.1)
  br i1 %.43, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.47 = getelementptr inbounds %Expression.560401, %Expression.560401* %.36, i64 0, i32 4
  %.4813 = load %Type.560381*, %Type.560381** %.47, align 8
  %.52 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.52, i64 0, i32 72
  %.54 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.53, align 8
  %.57 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.3, i64 0, i32 6
  %.58 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.57, align 8
  %.59 = tail call %Expression.560401* %.54(%TypeChecker.560555* nonnull %.1, %Type.560381* %.4813, %ExpressionNode.560285* %.58)
  %.63 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.63, i64 0, i32 17
  %.65 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.64, align 8
  %.66 = tail call i1 %.65(%TypeChecker.560555* nonnull %.1)
  br i1 %.66, label %.5.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.70 = getelementptr inbounds %Expression.560401, %Expression.560401* %.59, i64 0, i32 4
  %.7124 = load %Type.560381*, %Type.560381** %.70, align 8
  %.75 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.76 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.75, i64 0, i32 9
  %.77 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.76, align 8
  %.80 = tail call i1 %.77(%TypeChecker.560555* nonnull %.1, %Type.560381* %.4813, %Type.560381* %.7124)
  br i1 %.80, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.85 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.85, i64 0, i32 16
  %.87 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.86, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.85, i64 0, i32 10
  %.92 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.91, align 8
  %.94 = tail call %string.560217* %.92(%TypeChecker.560555* nonnull %.1, %Type.560381* %.4813)
  %.97 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.97, i64 0, i32 10
  %.99 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.98, align 8
  %.101 = tail call %string.560217* %.99(%TypeChecker.560555* nonnull %.1, %Type.560381* %.7124)
  %.102 = getelementptr inbounds %string.560217, %string.560217* %.94, i64 0, i32 0
  %.103 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.102, align 8
  %.104 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.103, i64 0, i32 11
  %.105 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.104, align 8
  %.106 = tail call i8* %.105(%string.560217* %.94)
  %.107 = getelementptr inbounds %string.560217, %string.560217* %.101, i64 0, i32 0
  %.108 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.107, align 8
  %.109 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.108, i64 0, i32 11
  %.110 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.109, align 8
  %.111 = tail call i8* %.110(%string.560217* %.101)
  %.113 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.302, i64 0, i64 0), i8* %.106, i8* %.111)
  %.114 = add i64 %.113, 1
  %.116 = tail call i8* @malloc(i64 %.114)
  %.117 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.116, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.302, i64 0, i64 0), i8* %.106, i8* %.111)
  %.118 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.119 = bitcast i8* %.118 to %string.560217*
  %.120 = bitcast i8* %.118 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.120, align 8
  %.122 = getelementptr inbounds i8, i8* %.118, i64 8
  %0 = bitcast i8* %.122 to i8**
  store i8* %.116, i8** %0, align 8
  %.124 = getelementptr inbounds i8, i8* %.118, i64 16
  %1 = bitcast i8* %.124 to i64*
  store i64 %.113, i64* %1, align 8
  %.126 = getelementptr inbounds i8, i8* %.118, i64 24
  %2 = bitcast i8* %.126 to i64*
  store i64 %.113, i64* %2, align 8
  %.129 = getelementptr inbounds %TernaryExpressionNode.560315, %TernaryExpressionNode.560315* %.3, i64 0, i32 1
  %.130 = load %FloRange.560223*, %FloRange.560223** %.129, align 8
  tail call void %.87(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.119, %FloRange.560223* %.130)
  ret %TernaryExpression.560429* null

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.136 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.137 = bitcast i8* %.136 to %TernaryExpression.560429*
  %.138 = bitcast i8* %.136 to %TernaryExpression_vtable_ty.560430**
  store %TernaryExpression_vtable_ty.560430* @TernaryExpression_vtable_data, %TernaryExpression_vtable_ty.560430** %.138, align 8
  tail call void @TernaryExpression_constructor(%TernaryExpression.560429* %.137, %Expression.560401* %.17, %Expression.560401* nonnull %.36, %Expression.560401* nonnull %.59)
  ret %TernaryExpression.560429* %.137
}

define noalias %Expression.560401* @TypeChecker_check_object_index_expr(%TypeChecker.560555* %.1, %Expression.560401* %.2, %ExpressionIndexNode.560305* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.11 = load %Program.560549*, %Program.560549** %.10, align 8
  %.13 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 4
  %.14 = load %Type.560381*, %Type.560381** %.13, align 8
  %.15 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.11, %Type.560381* %.14)
  %.18 = getelementptr inbounds %Class.560513, %Class.560513* %.15, i64 0, i32 7
  %.19 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.18, align 8
  %.20 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.19, i64 0, i32 0
  %.21 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.20, align 8
  %.22 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.21, i64 0, i32 3
  %.23 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.22, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.560217*
  %.25.repack = bitcast i8* %.24 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.25.repack, align 8
  %.25.repack1 = getelementptr inbounds i8, i8* %.24, i64 8
  %0 = bitcast i8* %.25.repack1 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.201, i64 0, i64 0), i8** %0, align 8
  %.25.repack2 = getelementptr inbounds i8, i8* %.24, i64 16
  %1 = bitcast i8* %.25.repack2 to i64*
  store i64 11, i64* %1, align 8
  %.25.repack3 = getelementptr inbounds i8, i8* %.24, i64 24
  %2 = bitcast i8* %.25.repack3 to i64*
  store i64 11, i64* %2, align 8
  %.27 = tail call %PropId.560449* %.23(%"Map<string, PropId>.560517"* %.19, %string.560217* %.25)
  %3 = ptrtoint %PropId.560449* %.27 to i64
  %.30 = trunc i64 %3 to i32
  %.32 = icmp eq i32 %.30, 0
  br i1 %.32, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.35 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.36 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.35, align 8
  %.37 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.36, i64 0, i32 16
  %.38 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.37, align 8
  %.40 = getelementptr inbounds %Class.560513, %Class.560513* %.15, i64 0, i32 2
  %.41 = load %string.560217*, %string.560217** %.40, align 8
  %.42 = getelementptr inbounds %string.560217, %string.560217* %.41, i64 0, i32 0
  %.43 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.42, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.43, i64 0, i32 11
  %.45 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.44, align 8
  %.46 = tail call i8* %.45(%string.560217* %.41)
  %.48 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @str.303, i64 0, i64 0), i8* %.46)
  %.49 = add i64 %.48, 1
  %.51 = tail call i8* @malloc(i64 %.49)
  %.52 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.51, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @str.303, i64 0, i64 0), i8* %.46)
  %.53 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.54 = bitcast i8* %.53 to %string.560217*
  %.55 = bitcast i8* %.53 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.55, align 8
  %.57 = getelementptr inbounds i8, i8* %.53, i64 8
  %4 = bitcast i8* %.57 to i8**
  store i8* %.51, i8** %4, align 8
  %.59 = getelementptr inbounds i8, i8* %.53, i64 16
  %5 = bitcast i8* %.59 to i64*
  store i64 %.48, i64* %5, align 8
  %.61 = getelementptr inbounds i8, i8* %.53, i64 24
  %6 = bitcast i8* %.61 to i64*
  store i64 %.48, i64* %6, align 8
  %.64 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.3, i64 0, i32 1
  %.65 = load %FloRange.560223*, %FloRange.560223** %.64, align 8
  tail call void %.38(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.54, %FloRange.560223* %.65)
  ret %Expression.560401* null

.5.endif:                                         ; preds = %.5
  %.70 = load %Program.560549*, %Program.560549** %.10, align 8
  %.72 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.70, %PropId.560449* %.27)
  %.76 = getelementptr inbounds %Type.560381, %Type.560381* %.72, i64 1
  %7 = bitcast %Type.560381* %.76 to %"Array<Type>.560389"**
  %.77 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %7, align 8
  %.78 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.77, i64 0, i32 0
  %.79 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.79, i64 0, i32 5
  %.81 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.80, align 8
  %.82 = tail call %Type.560381* %.81(%"Array<Type>.560389"* %.77, i64 0)
  %.85 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.86 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.85, align 8
  %.87 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.86, i64 0, i32 72
  %.88 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.87, align 8
  %.91 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.3, i64 0, i32 5
  %.92 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.91, align 8
  %.93 = tail call %Expression.560401* %.88(%TypeChecker.560555* nonnull %.1, %Type.560381* %.82, %ExpressionNode.560285* %.92)
  %.97 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.85, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.97, i64 0, i32 9
  %.99 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.98, align 8
  %.102 = getelementptr inbounds %Expression.560401, %Expression.560401* %.93, i64 0, i32 4
  %.103 = load %Type.560381*, %Type.560381** %.102, align 8
  %.104 = tail call i1 %.99(%TypeChecker.560555* nonnull %.1, %Type.560381* %.82, %Type.560381* %.103)
  br i1 %.104, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.109 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.85, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.109, i64 0, i32 16
  %.111 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.110, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.109, i64 0, i32 10
  %.116 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.115, align 8
  %.118 = tail call %string.560217* %.116(%TypeChecker.560555* nonnull %.1, %Type.560381* %.82)
  %.121 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.85, align 8
  %.122 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.121, i64 0, i32 10
  %.123 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.122, align 8
  %.126 = load %Type.560381*, %Type.560381** %.102, align 8
  %.127 = tail call %string.560217* %.123(%TypeChecker.560555* nonnull %.1, %Type.560381* %.126)
  %.128 = getelementptr inbounds %string.560217, %string.560217* %.118, i64 0, i32 0
  %.129 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.128, align 8
  %.130 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.129, i64 0, i32 11
  %.131 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.130, align 8
  %.132 = tail call i8* %.131(%string.560217* %.118)
  %.133 = getelementptr inbounds %string.560217, %string.560217* %.127, i64 0, i32 0
  %.134 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.133, align 8
  %.135 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.134, i64 0, i32 11
  %.136 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.135, align 8
  %.137 = tail call i8* %.136(%string.560217* %.127)
  %.139 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.132, i8* %.137)
  %.140 = add i64 %.139, 1
  %.142 = tail call i8* @malloc(i64 %.140)
  %.143 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.142, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.274, i64 0, i64 0), i8* %.132, i8* %.137)
  %.144 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.145 = bitcast i8* %.144 to %string.560217*
  %.146 = bitcast i8* %.144 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.146, align 8
  %.148 = getelementptr inbounds i8, i8* %.144, i64 8
  %8 = bitcast i8* %.148 to i8**
  store i8* %.142, i8** %8, align 8
  %.150 = getelementptr inbounds i8, i8* %.144, i64 16
  %9 = bitcast i8* %.150 to i64*
  store i64 %.139, i64* %9, align 8
  %.152 = getelementptr inbounds i8, i8* %.144, i64 24
  %10 = bitcast i8* %.152 to i64*
  store i64 %.139, i64* %10, align 8
  %.156 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.91, align 8
  %.157 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.156, i64 0, i32 1
  %.158 = load %FloRange.560223*, %FloRange.560223** %.157, align 8
  tail call void %.111(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.145, %FloRange.560223* %.158)
  ret %Expression.560401* null

.5.endif.endif:                                   ; preds = %.5.endif
  %11 = ptrtoint %Expression.560401* %.93 to i64
  %.165 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.166 = bitcast i8* %.165 to %MemberExpression.560451*
  %.167 = bitcast i8* %.165 to %MemberExpression_vtable_ty.560452**
  store %MemberExpression_vtable_ty.560452* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.560452** %.167, align 8
  tail call void @MemberExpression_constructor(%MemberExpression.560451* %.166, %Expression.560401* nonnull %.2, %PropId.560449* %.27, %Type.560381* %.72)
  %.173 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %12 = bitcast i8* %.173 to i64*
  store i64 %11, i64* %12, align 8
  %.177 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.179 = bitcast i8* %.177 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.179, align 8
  %.181 = getelementptr inbounds i8, i8* %.177, i64 8
  %13 = bitcast i8* %.181 to i8**
  store i8* %.173, i8** %13, align 8
  %.183 = getelementptr inbounds i8, i8* %.177, i64 16
  %14 = bitcast i8* %.183 to i64*
  store i64 1, i64* %14, align 8
  %.185 = getelementptr inbounds i8, i8* %.177, i64 24
  %15 = bitcast i8* %.185 to i64*
  store i64 8, i64* %15, align 8
  %16 = bitcast i8* %.165 to %Expression.560401*
  %.190.cast = bitcast i8* %.177 to %"Array<Expression>.560419"*
  %.192 = getelementptr inbounds %Type.560381, %Type.560381* %.72, i64 1, i32 1
  %17 = bitcast i64* %.192 to %Type.560381**
  %.193 = load %Type.560381*, %Type.560381** %17, align 8
  %.194 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.195 = bitcast i8* %.194 to %CallExpression.560437*
  %.196 = bitcast i8* %.194 to %CallExpression_vtable_ty.560438**
  store %CallExpression_vtable_ty.560438* @CallExpression_vtable_data, %CallExpression_vtable_ty.560438** %.196, align 8
  tail call void @CallExpression_constructor(%CallExpression.560437* %.195, %Expression.560401* %16, %"Array<Expression>.560419"* %.190.cast, %Type.560381* %.193)
  %.199 = bitcast i8* %.194 to %Expression.560401*
  ret %Expression.560401* %.199
}

define %IndexExpression.560435* @TypeChecker_check_index_expr(%TypeChecker.560555* %.1, %Type.560381* nocapture readnone %.2, %ExpressionIndexNode.560305* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 72
  %.13 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.12, align 8
  %.14 = tail call %Type.560381* @Type_unknown()
  %.16 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.16, align 8
  %.18 = tail call %Expression.560401* %.13(%TypeChecker.560555* %.1, %Type.560381* %.14, %ExpressionNode.560285* %.17)
  %.21 = getelementptr inbounds %Expression.560401, %Expression.560401* %.18, i64 0, i32 4
  %.22 = load %Type.560381*, %Type.560381** %.21, align 8
  %.23 = tail call i1 @is_object(%Type.560381* %.22)
  %.27 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  br i1 %.23, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.28 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.27, i64 0, i32 61
  %.29 = load %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %ExpressionIndexNode.560305*)*, %Expression.560401* (%TypeChecker.560555*, %Expression.560401*, %ExpressionIndexNode.560305*)** %.28, align 8
  %.32 = tail call %Expression.560401* %.29(%TypeChecker.560555* nonnull %.1, %Expression.560401* %.18, %ExpressionIndexNode.560305* nonnull %.3)
  %.33 = bitcast %Expression.560401* %.32 to %IndexExpression.560435*
  ret %IndexExpression.560435* %.33

.5.endif:                                         ; preds = %.5
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.27, i64 0, i32 72
  %.39 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.38, align 8
  %.40 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.41 = bitcast i8* %.40 to %Type.560381*
  %.42 = bitcast i8* %.40 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.42, align 8
  tail call void @Type_constructor(%Type.560381* %.41, i64 7)
  %.46 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.3, i64 0, i32 5
  %.47 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.46, align 8
  %.48 = tail call %Expression.560401* %.39(%TypeChecker.560555* nonnull %.1, %Type.560381* %.41, %ExpressionNode.560285* %.47)
  %.52 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.52, i64 0, i32 17
  %.54 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.53, align 8
  %.55 = tail call i1 %.54(%TypeChecker.560555* nonnull %.1)
  br i1 %.55, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  ret %IndexExpression.560435* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.59 = getelementptr inbounds %Expression.560401, %Expression.560401* %.48, i64 0, i32 4
  %.60 = load %Type.560381*, %Type.560381** %.59, align 8
  %.61 = tail call i1 @is_int(%Type.560381* %.60)
  br i1 %.61, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.66 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.67 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.66, i64 0, i32 16
  %.68 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.67, align 8
  %.69 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.70 = bitcast i8* %.69 to %string.560217*
  %.70.repack = bitcast i8* %.69 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.70.repack, align 8
  %.70.repack6 = getelementptr inbounds i8, i8* %.69, i64 8
  %0 = bitcast i8* %.70.repack6 to i8**
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.304, i64 0, i64 0), i8** %0, align 8
  %.70.repack7 = getelementptr inbounds i8, i8* %.69, i64 16
  %1 = bitcast i8* %.70.repack7 to i64*
  store i64 34, i64* %1, align 8
  %.70.repack8 = getelementptr inbounds i8, i8* %.69, i64 24
  %2 = bitcast i8* %.70.repack8 to i64*
  store i64 34, i64* %2, align 8
  %.74 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.46, align 8
  %.75 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.74, i64 0, i32 1
  %.76 = load %FloRange.560223*, %FloRange.560223** %.75, align 8
  tail call void %.68(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.70, %FloRange.560223* %.76)
  ret %IndexExpression.560435* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.79 = tail call %Type.560381* @Type_unknown()
  %3 = bitcast %Type.560381** %.21 to i64*
  %.831 = load i64, i64* %3, align 8
  %.85.cast = inttoptr i64 %.831 to %Type.560381*
  %.86 = getelementptr inbounds %Type.560381, %Type.560381* %.85.cast, i64 0, i32 1
  %.87 = load i64, i64* %.86, align 8
  switch i64 %.87, label %.5.endif.endif.endif.else.else [
    i64 15, label %.5.endif.endif.endif.if
    i64 16, label %.5.endif.endif.endif.else.if
  ]

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %4 = inttoptr i64 %.831 to %PointerType.560385*
  %.92 = getelementptr inbounds %PointerType.560385, %PointerType.560385* %4, i64 0, i32 2
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.else.if, %.5.endif.endif.endif.if
  %.148.in = phi %Type.560381** [ %.103, %.5.endif.endif.endif.else.if ], [ %.92, %.5.endif.endif.endif.if ]
  %.148 = load %Type.560381*, %Type.560381** %.148.in, align 8
  %.149 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.150 = bitcast i8* %.149 to %IndexExpression.560435*
  %.151 = bitcast i8* %.149 to %IndexExpression_vtable_ty.560436**
  store %IndexExpression_vtable_ty.560436* @IndexExpression_vtable_data, %IndexExpression_vtable_ty.560436** %.151, align 8
  tail call void @IndexExpression_constructor(%IndexExpression.560435* %.150, %Expression.560401* nonnull %.18, %Expression.560401* nonnull %.48, %Type.560381* %.148)
  ret %IndexExpression.560435* %.150

.5.endif.endif.endif.else.if:                     ; preds = %.5.endif.endif.endif
  %5 = inttoptr i64 %.831 to %ArrayType.560403*
  %.103 = getelementptr inbounds %ArrayType.560403, %ArrayType.560403* %5, i64 0, i32 2
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.else.else:                   ; preds = %.5.endif.endif.endif
  %.109 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.109, i64 0, i32 16
  %.111 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.110, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.109, i64 0, i32 10
  %.116 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.115, align 8
  %.118 = tail call %string.560217* %.116(%TypeChecker.560555* nonnull %.1, %Type.560381* %.85.cast)
  %.119 = getelementptr inbounds %string.560217, %string.560217* %.118, i64 0, i32 0
  %.120 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.119, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.120, i64 0, i32 11
  %.122 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.121, align 8
  %.123 = tail call i8* %.122(%string.560217* %.118)
  %.125 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.305, i64 0, i64 0), i8* %.123)
  %.126 = add i64 %.125, 1
  %.128 = tail call i8* @malloc(i64 %.126)
  %.129 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.128, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.305, i64 0, i64 0), i8* %.123)
  %.130 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.131 = bitcast i8* %.130 to %string.560217*
  %.132 = bitcast i8* %.130 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.132, align 8
  %.134 = getelementptr inbounds i8, i8* %.130, i64 8
  %6 = bitcast i8* %.134 to i8**
  store i8* %.128, i8** %6, align 8
  %.136 = getelementptr inbounds i8, i8* %.130, i64 16
  %7 = bitcast i8* %.136 to i64*
  store i64 %.125, i64* %7, align 8
  %.138 = getelementptr inbounds i8, i8* %.130, i64 24
  %8 = bitcast i8* %.138 to i64*
  store i64 %.125, i64* %8, align 8
  %.141 = getelementptr inbounds %ExpressionIndexNode.560305, %ExpressionIndexNode.560305* %.3, i64 0, i32 1
  %.142 = load %FloRange.560223*, %FloRange.560223** %.141, align 8
  tail call void %.111(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.131, %FloRange.560223* %.142)
  ret %IndexExpression.560435* null
}

define %"Array<FunctionArg>.560503"* @TypeChecker_get_func_args_from_expression(%TypeChecker.560555* nocapture readonly %.1, %Expression.560401* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif [
    i64 7, label %.4.if
    i64 12, label %.4.else.if
  ]

.4.if:                                            ; preds = %.4
  %.14 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1
  %0 = bitcast %Expression.560401* %.14 to %VarId.560441**
  %.1534 = load %VarId.560441*, %VarId.560441** %0, align 8
  %.18 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1534, i64 0, i32 1
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp eq i64 %.19, 0
  br i1 %.20, label %.4.if.if, label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  ret %"Array<FunctionArg>.560503"* null

.4.if.if:                                         ; preds = %.4.if
  %.23 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.24 = load %Program.560549*, %Program.560549** %.23, align 8
  %.26 = tail call %Function.560501* @get_func(%Program.560549* %.24, %VarId.560441* %.1534)
  %.27 = getelementptr inbounds %Function.560501, %Function.560501* %.26, i64 0, i32 3
  %.28 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %.27, align 8
  ret %"Array<FunctionArg>.560503"* %.28

.4.else.if:                                       ; preds = %.4
  %.38 = getelementptr inbounds %Expression.560401, %Expression.560401* %.2, i64 1, i32 1
  %1 = bitcast i64* %.38 to %PropId.560449**
  %.3912 = load %PropId.560449*, %PropId.560449** %1, align 8
  %.42 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 1
  %.43 = load %Program.560549*, %Program.560549** %.42, align 8
  %.45 = tail call %ClassMethod.560511* @get_method(%Program.560549* %.43, %PropId.560449* %.3912)
  %.46 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.45, i64 0, i32 7
  %.47 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %.46, align 8
  ret %"Array<FunctionArg>.560503"* %.47
}

define %"Array<Expression>.560419"* @TypeChecker_fill_in_call_args(%TypeChecker.560555* %.1, %FunctionType.560387* nocapture readonly %.2, %"Array<FunctionArg>.560503"* %.3, %"Array<ExpressionNode>.560297"* %.4) {
.6:
  %.12 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.14 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Array<Expression>.560419"*
  %.16 = bitcast i8* %.14 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.16, align 8
  %.18 = getelementptr inbounds i8, i8* %.14, i64 8
  %0 = bitcast i8* %.18 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.20 to i64*
  store i64 0, i64* %1, align 8
  %.22 = getelementptr inbounds i8, i8* %.14, i64 24
  %2 = bitcast i8* %.22 to i64*
  store i64 8, i64* %2, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.4, i64 0, i32 2
  %.3111 = load i64, i64* %.30, align 8
  %.3212 = icmp sgt i64 %.3111, 0
  br i1 %.3212, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.35 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.2, i64 0, i32 2
  %.58 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.65 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.4, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %end
  %storemerge13 = phi i64 [ 0, %for.body.lr.ph ], [ %.80, %end ]
  %.36 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %.35, align 8
  %.37 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.36, i64 0, i32 2
  %.38 = load i64, i64* %.37, align 8
  %.40 = icmp sgt i64 %.38, %storemerge13
  br i1 %.40, label %true_block, label %false_block

for.end:                                          ; preds = %end, %.6
  %.84 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.85 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.84, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.85, i64 0, i32 17
  %.87 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.86, align 8
  %.88 = tail call i1 %.87(%TypeChecker.560555* %.1)
  %3 = ptrtoint %"Array<FunctionArg>.560503"* %.3 to i64
  %.90 = trunc i64 %3 to i32
  %.92 = icmp eq i32 %.90, 0
  %.93 = or i1 %.92, %.88
  br i1 %.93, label %for.end.if, label %for.end.endif

true_block:                                       ; preds = %for.body
  %.46 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.36, i64 0, i32 0
  %.47 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.47, i64 0, i32 5
  %.49 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.48, align 8
  %.50 = tail call %Type.560381* %.49(%"Array<Type>.560389"* %.36, i64 %storemerge13)
  br label %end

false_block:                                      ; preds = %for.body
  %.52 = tail call %Type.560381* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.54 = phi %Type.560381* [ %.50, %true_block ], [ %.52, %false_block ]
  %.59 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.58, align 8
  %.60 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.59, i64 0, i32 72
  %.61 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.60, align 8
  %.66 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.65, align 8
  %.67 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.66, i64 0, i32 5
  %.68 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.67, align 8
  %.69 = tail call %ExpressionNode.560285* %.68(%"Array<ExpressionNode>.560297"* nonnull %.4, i64 %storemerge13)
  %.70 = tail call %Expression.560401* %.61(%TypeChecker.560555* %.1, %Type.560381* %.54, %ExpressionNode.560285* %.69)
  %.72 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.16, align 8
  %.73 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.72, i64 0, i32 2
  %.74 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.73, align 8
  tail call void %.74(%"Array<Expression>.560419"* %.15, %Expression.560401* %.70)
  %.80 = add nuw nsw i64 %storemerge13, 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.80, %.31
  br i1 %.32, label %for.body, label %for.end

for.end.if:                                       ; preds = %for.body.1.endif, %for.end.endif, %for.end
  ret %"Array<Expression>.560419"* %.15

for.end.endif:                                    ; preds = %for.end
  %.98 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.3, i64 0, i32 2
  %.99 = load i64, i64* %.98, align 8
  %.102 = load i64, i64* %.30, align 8
  %.103 = icmp sgt i64 %.99, %.102
  br i1 %.103, label %for.body.1.lr.ph, label %for.end.if

for.body.1.lr.ph:                                 ; preds = %for.end.endif
  %.119 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.3, i64 0, i32 0
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1.endif
  %storemerge110 = phi i64 [ %.102, %for.body.1.lr.ph ], [ %.146, %for.body.1.endif ]
  %.120 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.119, align 8
  %.121 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.120, i64 0, i32 5
  %.122 = load %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)*, %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)** %.121, align 8
  %.123 = tail call %FunctionArg.560499* %.122(%"Array<FunctionArg>.560503"* nonnull %.3, i64 %storemerge110)
  %.126 = getelementptr inbounds %FunctionArg.560499, %FunctionArg.560499* %.123, i64 0, i32 7
  %4 = bitcast %Expression.560401** %.126 to i64*
  %.1272 = load i64, i64* %4, align 8
  %.128 = trunc i64 %.1272 to i32
  %.130.not = icmp eq i32 %.128, 0
  br i1 %.130.not, label %for.body.1.endif, label %for.body.1.if

for.body.1.if:                                    ; preds = %for.body.1
  %5 = inttoptr i64 %.1272 to %Expression.560401*
  %.137 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.16, align 8
  %.138 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.137, i64 0, i32 2
  %.139 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.138, align 8
  tail call void %.139(%"Array<Expression>.560419"* %.15, %Expression.560401* %5)
  br label %for.body.1.endif

for.body.1.endif:                                 ; preds = %for.body.1, %for.body.1.if
  %.146 = add nsw i64 %storemerge110, 1
  %.114 = load i64, i64* %.98, align 8
  %.115 = icmp slt i64 %.146, %.114
  br i1 %.115, label %for.body.1, label %for.end.if
}

define i64 @TypeChecker_check_function_call_args_match(%TypeChecker.560555* %.1, %FunctionType.560387* nocapture readonly %.2, %"Array<Expression>.560419"* %.3) {
.5:
  %.10 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.2, i64 0, i32 2
  %.11 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.15 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.3, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.13, %.16
  br i1 %.17.not, label %for.cond.preheader, label %.5.if

for.cond.preheader:                               ; preds = %.5
  %.282 = icmp sgt i64 %.13, 0
  br i1 %.282, label %for.body.lr.ph, label %.5.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.31 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.46 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.3, i64 0, i32 0
  br label %for.body

.5.if:                                            ; preds = %for.body.endif, %for.body, %for.cond.preheader, %.5
  %merge = phi i64 [ -1, %.5 ], [ -2, %for.cond.preheader ], [ -2, %for.body.endif ], [ %storemerge3, %for.body ]
  ret i64 %merge

for.body:                                         ; preds = %for.body.endif.for.body_crit_edge, %for.body.lr.ph
  %.38 = phi %"Array<Type>.560389"* [ %.11, %for.body.lr.ph ], [ %.38.pre, %for.body.endif.for.body_crit_edge ]
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.62, %for.body.endif.for.body_crit_edge ]
  %.32 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.32, i64 0, i32 9
  %.34 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.33, align 8
  %.39 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.38, i64 0, i32 0
  %.40 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.40, i64 0, i32 5
  %.42 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.41, align 8
  %.43 = tail call %Type.560381* %.42(%"Array<Type>.560389"* %.38, i64 %storemerge3)
  %.47 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.47, i64 0, i32 5
  %.49 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.48, align 8
  %.50 = tail call %Expression.560401* %.49(%"Array<Expression>.560419"* nonnull %.3, i64 %storemerge3)
  %.51 = getelementptr inbounds %Expression.560401, %Expression.560401* %.50, i64 0, i32 4
  %.52 = load %Type.560381*, %Type.560381** %.51, align 8
  %.53 = tail call i1 %.34(%TypeChecker.560555* %.1, %Type.560381* %.43, %Type.560381* %.52)
  br i1 %.53, label %for.body.endif, label %.5.if

for.body.endif:                                   ; preds = %for.body
  %.62 = add nuw nsw i64 %storemerge3, 1
  %.27 = load i64, i64* %.15, align 8
  %.28 = icmp slt i64 %.62, %.27
  br i1 %.28, label %for.body.endif.for.body_crit_edge, label %.5.if

for.body.endif.for.body_crit_edge:                ; preds = %for.body.endif
  %.38.pre = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %.10, align 8
  br label %for.body
}

define %CallExpression.560437* @TypeChecker_check_call_expr(%TypeChecker.560555* %.1, %Type.560381* nocapture readnone %.2, %CallExpressionNode.560309* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.11, i64 0, i32 72
  %.13 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.12, align 8
  %.14 = tail call %Type.560381* @Type_unknown()
  %.16 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.16, align 8
  %.18 = tail call %Expression.560401* %.13(%TypeChecker.560555* %.1, %Type.560381* %.14, %ExpressionNode.560285* %.17)
  %.22 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.22, i64 0, i32 17
  %.24 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.23, align 8
  %.25 = tail call i1 %.24(%TypeChecker.560555* %.1)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif.endif.endif.endif.if.if, %.5.endif.endif.endif.endif.if.else, %.5.endif.endif.endif, %.5
  ret %CallExpression.560437* null

.5.endif:                                         ; preds = %.5
  %.29 = getelementptr inbounds %Expression.560401, %Expression.560401* %.18, i64 0, i32 3
  %.30 = load i64, i64* %.29, align 8
  %.31 = icmp eq i64 %.30, 16
  %.33 = getelementptr inbounds %Expression.560401, %Expression.560401* %.18, i64 0, i32 4
  %.34 = load %Type.560381*, %Type.560381** %.33, align 8
  %.35 = getelementptr inbounds %Type.560381, %Type.560381* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 21
  %.38 = and i1 %.31, %.37
  br i1 %.38, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.42 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.43 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.42, i64 0, i32 67
  %.44 = load %IntrinsicCall.560439* (%TypeChecker.560555*, %IntrinsicCall.560439*, %CallExpressionNode.560309*)*, %IntrinsicCall.560439* (%TypeChecker.560555*, %IntrinsicCall.560439*, %CallExpressionNode.560309*)** %.43, align 8
  %.46 = bitcast %Expression.560401* %.18 to %IntrinsicCall.560439*
  %.48 = tail call %IntrinsicCall.560439* %.44(%TypeChecker.560555* nonnull %.1, %IntrinsicCall.560439* %.46, %CallExpressionNode.560309* nonnull %.3)
  %.49 = bitcast %IntrinsicCall.560439* %.48 to %CallExpression.560437*
  ret %CallExpression.560437* %.49

.5.endif.endif:                                   ; preds = %.5.endif
  %.56.not = icmp eq i64 %.36, 17
  %.107 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  br i1 %.56.not, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.61 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.107, i64 0, i32 16
  %.62 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.61, align 8
  %.66 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.107, i64 0, i32 10
  %.67 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.66, align 8
  %.71 = tail call %string.560217* %.67(%TypeChecker.560555* nonnull %.1, %Type.560381* %.34)
  %.72 = getelementptr inbounds %string.560217, %string.560217* %.71, i64 0, i32 0
  %.73 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.72, align 8
  %.74 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.73, i64 0, i32 11
  %.75 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.74, align 8
  %.76 = tail call i8* %.75(%string.560217* %.71)
  %.78 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.306, i64 0, i64 0), i8* %.76)
  %.79 = add i64 %.78, 1
  %.81 = tail call i8* @malloc(i64 %.79)
  %.82 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.81, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.306, i64 0, i64 0), i8* %.76)
  %.83 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.560217*
  %.85 = bitcast i8* %.83 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.85, align 8
  %.87 = getelementptr inbounds i8, i8* %.83, i64 8
  %0 = bitcast i8* %.87 to i8**
  store i8* %.81, i8** %0, align 8
  %.89 = getelementptr inbounds i8, i8* %.83, i64 16
  %1 = bitcast i8* %.89 to i64*
  store i64 %.78, i64* %1, align 8
  %.91 = getelementptr inbounds i8, i8* %.83, i64 24
  %2 = bitcast i8* %.91 to i64*
  store i64 %.78, i64* %2, align 8
  %.95 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.16, align 8
  %.96 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.95, i64 0, i32 1
  %.97 = load %FloRange.560223*, %FloRange.560223** %.96, align 8
  tail call void %.62(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.84, %FloRange.560223* %.97)
  ret %CallExpression.560437* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.108 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.107, i64 0, i32 63
  %.109 = load %"Array<FunctionArg>.560503"* (%TypeChecker.560555*, %Expression.560401*)*, %"Array<FunctionArg>.560503"* (%TypeChecker.560555*, %Expression.560401*)** %.108, align 8
  %.111 = tail call %"Array<FunctionArg>.560503"* %.109(%TypeChecker.560555* nonnull %.1, %Expression.560401* nonnull %.18)
  %.115 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.115, i64 0, i32 64
  %.117 = load %"Array<Expression>.560419"* (%TypeChecker.560555*, %FunctionType.560387*, %"Array<FunctionArg>.560503"*, %"Array<ExpressionNode>.560297"*)*, %"Array<Expression>.560419"* (%TypeChecker.560555*, %FunctionType.560387*, %"Array<FunctionArg>.560503"*, %"Array<ExpressionNode>.560297"*)** %.116, align 8
  %3 = bitcast %Type.560381* %.34 to %FunctionType.560387*
  %.121 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.3, i64 0, i32 5
  %.122 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.121, align 8
  %.123 = tail call %"Array<Expression>.560419"* %.117(%TypeChecker.560555* nonnull %.1, %FunctionType.560387* %3, %"Array<FunctionArg>.560503"* %.111, %"Array<ExpressionNode>.560297"* %.122)
  %.127 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.128 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.127, i64 0, i32 17
  %.129 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.128, align 8
  %.130 = tail call i1 %.129(%TypeChecker.560555* nonnull %.1)
  br i1 %.130, label %.5.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.135 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.136 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.135, i64 0, i32 65
  %.137 = load i64 (%TypeChecker.560555*, %FunctionType.560387*, %"Array<Expression>.560419"*)*, i64 (%TypeChecker.560555*, %FunctionType.560387*, %"Array<Expression>.560419"*)** %.136, align 8
  %.140 = tail call i64 %.137(%TypeChecker.560555* nonnull %.1, %FunctionType.560387* %3, %"Array<Expression>.560419"* %.123)
  %.144 = icmp sgt i64 %.140, -2
  br i1 %.144, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.148 = icmp eq i64 %.140, -1
  %.152 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.153 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.152, i64 0, i32 16
  %.154 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.153, align 8
  br i1 %.148, label %.5.endif.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif.if.else

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.262 = getelementptr inbounds %Type.560381, %Type.560381* %.34, i64 1, i32 1
  %4 = bitcast i64* %.262 to %Type.560381**
  %.263 = load %Type.560381*, %Type.560381** %4, align 8
  %.264 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.265 = bitcast i8* %.264 to %CallExpression.560437*
  %.266 = bitcast i8* %.264 to %CallExpression_vtable_ty.560438**
  store %CallExpression_vtable_ty.560438* @CallExpression_vtable_data, %CallExpression_vtable_ty.560438** %.266, align 8
  tail call void @CallExpression_constructor(%CallExpression.560437* %.265, %Expression.560401* nonnull %.18, %"Array<Expression>.560419"* %.123, %Type.560381* %.263)
  ret %CallExpression.560437* %.265

.5.endif.endif.endif.endif.if.if:                 ; preds = %.5.endif.endif.endif.endif.if
  %.156 = getelementptr inbounds %Type.560381, %Type.560381* %.34, i64 1
  %5 = bitcast %Type.560381* %.156 to %"Array<Type>.560389"**
  %.157 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %5, align 8
  %.158 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.157, i64 0, i32 2
  %.159 = load i64, i64* %.158, align 8
  %.161 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.123, i64 0, i32 2
  %.162 = load i64, i64* %.161, align 8
  %.164 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.307, i64 0, i64 0), i64 %.159, i64 %.162)
  %.165 = add i64 %.164, 1
  %.167 = tail call i8* @malloc(i64 %.165)
  %.168 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.167, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.307, i64 0, i64 0), i64 %.159, i64 %.162)
  %.169 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.560217*
  %.171 = bitcast i8* %.169 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.171, align 8
  %.173 = getelementptr inbounds i8, i8* %.169, i64 8
  %6 = bitcast i8* %.173 to i8**
  store i8* %.167, i8** %6, align 8
  %.175 = getelementptr inbounds i8, i8* %.169, i64 16
  %7 = bitcast i8* %.175 to i64*
  store i64 %.164, i64* %7, align 8
  %.177 = getelementptr inbounds i8, i8* %.169, i64 24
  %8 = bitcast i8* %.177 to i64*
  store i64 %.164, i64* %8, align 8
  %.180 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.3, i64 0, i32 1
  %.181 = load %FloRange.560223*, %FloRange.560223** %.180, align 8
  tail call void %.154(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.170, %FloRange.560223* %.181)
  br label %.5.if

.5.endif.endif.endif.endif.if.else:               ; preds = %.5.endif.endif.endif.endif.if
  %.192 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.152, i64 0, i32 10
  %.193 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.192, align 8
  %.196 = getelementptr inbounds %Type.560381, %Type.560381* %.34, i64 1
  %9 = bitcast %Type.560381* %.196 to %"Array<Type>.560389"**
  %.197 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %9, align 8
  %.198 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.197, i64 0, i32 0
  %.199 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.198, align 8
  %.200 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.199, i64 0, i32 5
  %.201 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.200, align 8
  %.202 = tail call %Type.560381* %.201(%"Array<Type>.560389"* %.197, i64 %.140)
  %.203 = tail call %string.560217* %.193(%TypeChecker.560555* nonnull %.1, %Type.560381* %.202)
  %.206 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.10, align 8
  %.207 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.206, i64 0, i32 10
  %.208 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.207, align 8
  %.211 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.123, i64 0, i32 0
  %.212 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.211, align 8
  %.213 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.212, i64 0, i32 5
  %.214 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.213, align 8
  %.215 = tail call %Expression.560401* %.214(%"Array<Expression>.560419"* %.123, i64 %.140)
  %.216 = getelementptr inbounds %Expression.560401, %Expression.560401* %.215, i64 0, i32 4
  %.217 = load %Type.560381*, %Type.560381** %.216, align 8
  %.218 = tail call %string.560217* %.208(%TypeChecker.560555* nonnull %.1, %Type.560381* %.217)
  %.219 = getelementptr inbounds %string.560217, %string.560217* %.203, i64 0, i32 0
  %.220 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.219, align 8
  %.221 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.220, i64 0, i32 11
  %.222 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.221, align 8
  %.223 = tail call i8* %.222(%string.560217* %.203)
  %.224 = getelementptr inbounds %string.560217, %string.560217* %.218, i64 0, i32 0
  %.225 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.224, align 8
  %.226 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.225, i64 0, i32 11
  %.227 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.226, align 8
  %.228 = tail call i8* %.227(%string.560217* %.218)
  %.230 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.308, i64 0, i64 0), i8* %.223, i8* %.228)
  %.231 = add i64 %.230, 1
  %.233 = tail call i8* @malloc(i64 %.231)
  %.234 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.233, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.308, i64 0, i64 0), i8* %.223, i8* %.228)
  %.235 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.236 = bitcast i8* %.235 to %string.560217*
  %.237 = bitcast i8* %.235 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.237, align 8
  %.239 = getelementptr inbounds i8, i8* %.235, i64 8
  %10 = bitcast i8* %.239 to i8**
  store i8* %.233, i8** %10, align 8
  %.241 = getelementptr inbounds i8, i8* %.235, i64 16
  %11 = bitcast i8* %.241 to i64*
  store i64 %.230, i64* %11, align 8
  %.243 = getelementptr inbounds i8, i8* %.235, i64 24
  %12 = bitcast i8* %.243 to i64*
  store i64 %.230, i64* %12, align 8
  %.248 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.121, align 8
  %.249 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.248, i64 0, i32 0
  %.250 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.249, align 8
  %.251 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.250, i64 0, i32 5
  %.252 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.251, align 8
  %.253 = tail call %ExpressionNode.560285* %.252(%"Array<ExpressionNode>.560297"* %.248, i64 %.140)
  %.254 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.253, i64 0, i32 1
  %.255 = load %FloRange.560223*, %FloRange.560223** %.254, align 8
  tail call void %.154(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.236, %FloRange.560223* %.255)
  br label %.5.if
}

define %IntrinsicCall.560439* @TypeChecker_check_intrinsic_call(%TypeChecker.560555* %.1, %IntrinsicCall.560439* %.2, %CallExpressionNode.560309* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.3, i64 0, i32 5
  %.11 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.10, align 8
  %.14 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.2, i64 0, i32 5
  %.15 = load i64, i64* %.14, align 8
  %.23 = icmp eq i64 %.15, 7
  %.31 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.11, i64 0, i32 2
  %.328 = load i64, i64* %.31, align 8
  %.3310 = icmp sgt i64 %.328, 0
  br i1 %.3310, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.43 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.2, i64 0, i32 6
  %.59 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.66 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.11, i64 0, i32 0
  switch i64 %.15, label %for.body [
    i64 7, label %for.body.us.preheader
    i64 4, label %for.body.us.preheader
    i64 3, label %for.body.us.preheader
  ]

for.body.us.preheader:                            ; preds = %for.body.lr.ph, %for.body.lr.ph, %for.body.lr.ph
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.us
  %storemerge11.us = phi i64 [ %.89.us, %for.cond.us ], [ 0, %for.body.us.preheader ]
  %.37.us = icmp eq i64 %storemerge11.us, 1
  br i1 %.37.us, label %true_block.us, label %false_block.us

for.cond.us:                                      ; preds = %end.us
  %.32.us = load i64, i64* %.31, align 8
  %.33.us = icmp slt i64 %.89.us, %.32.us
  br i1 %.33.us, label %for.body.us, label %for.end

false_block.us:                                   ; preds = %for.body.us
  %.44.us = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.43, align 8
  %.45.us = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.44.us, i64 0, i32 0
  %.46.us = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.45.us, align 8
  %.47.us = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.46.us, i64 0, i32 5
  %.48.us = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.47.us, align 8
  %.49.us = tail call %Expression.560401* %.48.us(%"Array<Expression>.560419"* %.44.us, i64 0)
  %.50.us = getelementptr inbounds %Expression.560401, %Expression.560401* %.49.us, i64 0, i32 4
  %.51.us = load %Type.560381*, %Type.560381** %.50.us, align 8
  br label %end.us

true_block.us:                                    ; preds = %for.body.us
  %.40.us = tail call %Type.560381* @Type_unknown()
  br label %end.us

end.us:                                           ; preds = %true_block.us, %false_block.us
  %.53.us = phi %Type.560381* [ %.40.us, %true_block.us ], [ %.51.us, %false_block.us ]
  %.57.us = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.43, align 8
  %.60.us = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.61.us = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.60.us, i64 0, i32 72
  %.62.us = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.61.us, align 8
  %.67.us = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.66, align 8
  %.68.us = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.67.us, i64 0, i32 5
  %.69.us = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.68.us, align 8
  %.70.us = tail call %ExpressionNode.560285* %.69.us(%"Array<ExpressionNode>.560297"* nonnull %.11, i64 %storemerge11.us)
  %.71.us = tail call %Expression.560401* %.62.us(%TypeChecker.560555* %.1, %Type.560381* %.53.us, %ExpressionNode.560285* %.70.us)
  %.72.us = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.57.us, i64 0, i32 0
  %.73.us = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.72.us, align 8
  %.74.us = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.73.us, i64 0, i32 2
  %.75.us = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.74.us, align 8
  tail call void %.75.us(%"Array<Expression>.560419"* %.57.us, %Expression.560401* %.71.us)
  %.79.us = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.80.us = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.79.us, i64 0, i32 17
  %.81.us = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.80.us, align 8
  %.82.us = tail call i1 %.81.us(%TypeChecker.560555* %.1)
  %.89.us = add nuw nsw i64 %storemerge11.us, 1
  br i1 %.82.us, label %end.if, label %for.cond.us

for.cond:                                         ; preds = %for.body
  %.32 = load i64, i64* %.31, align 8
  %.33 = icmp slt i64 %.89, %.32
  br i1 %.33, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge11 = phi i64 [ %.89, %for.cond ], [ 0, %for.body.lr.ph ]
  %.44 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.43, align 8
  %.45 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.44, i64 0, i32 0
  %.46 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.45, align 8
  %.47 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.46, i64 0, i32 5
  %.48 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.47, align 8
  %.49 = tail call %Expression.560401* %.48(%"Array<Expression>.560419"* %.44, i64 0)
  %.50 = getelementptr inbounds %Expression.560401, %Expression.560401* %.49, i64 0, i32 4
  %.51 = load %Type.560381*, %Type.560381** %.50, align 8
  %.57 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.43, align 8
  %.60 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.61 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.60, i64 0, i32 72
  %.62 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.61, align 8
  %.67 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.66, align 8
  %.68 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.67, i64 0, i32 5
  %.69 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.68, align 8
  %.70 = tail call %ExpressionNode.560285* %.69(%"Array<ExpressionNode>.560297"* nonnull %.11, i64 %storemerge11)
  %.71 = tail call %Expression.560401* %.62(%TypeChecker.560555* %.1, %Type.560381* %.51, %ExpressionNode.560285* %.70)
  %.72 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.57, i64 0, i32 0
  %.73 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.72, align 8
  %.74 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.73, i64 0, i32 2
  %.75 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.74, align 8
  tail call void %.75(%"Array<Expression>.560419"* %.57, %Expression.560401* %.71)
  %.79 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.59, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.79, i64 0, i32 17
  %.81 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.80, align 8
  %.82 = tail call i1 %.81(%TypeChecker.560555* %.1)
  %.89 = add nuw nsw i64 %storemerge11, 1
  br i1 %.82, label %end.if, label %for.cond

for.end:                                          ; preds = %for.cond.us, %for.cond, %.5
  %.93 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.2, i64 0, i32 6
  %.94 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.95 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.94, i64 0, i32 0
  %.96 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.95, align 8
  %.97 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.96, i64 0, i32 5
  %.98 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.97, align 8
  %.99 = tail call %Expression.560401* %.98(%"Array<Expression>.560419"* %.94, i64 0)
  %.100 = getelementptr inbounds %Expression.560401, %Expression.560401* %.99, i64 0, i32 4
  %.101 = load %Type.560381*, %Type.560381** %.100, align 8
  %.102 = tail call i1 @is_pointer(%Type.560381* %.101)
  br i1 %.102, label %for.end.endif, label %for.end.if

end.if:                                           ; preds = %end.us, %for.body, %for.end.endif, %for.end.endif.else.if.endif.endif.endif.endif, %for.end.endif.else.if.endif.endif.endif.endif.if, %for.end.endif.if.endif
  %merge = phi %IntrinsicCall.560439* [ %.2, %for.end.endif.if.endif ], [ %.2, %for.end.endif.else.if.endif.endif.endif.endif.if ], [ %.2, %for.end.endif.else.if.endif.endif.endif.endif ], [ %.2, %for.end.endif ], [ null, %for.body ], [ null, %end.us ]
  ret %IntrinsicCall.560439* %merge

for.end.if:                                       ; preds = %for.end
  %.106 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.107 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.106, align 8
  %.108 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.107, i64 0, i32 16
  %.109 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.108, align 8
  %.113 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.107, i64 0, i32 10
  %.114 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.113, align 8
  %.117 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.118 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.117, i64 0, i32 0
  %.119 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.118, align 8
  %.120 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.119, i64 0, i32 5
  %.121 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.120, align 8
  %.122 = tail call %Expression.560401* %.121(%"Array<Expression>.560419"* %.117, i64 0)
  %.123 = getelementptr inbounds %Expression.560401, %Expression.560401* %.122, i64 0, i32 4
  %.124 = load %Type.560381*, %Type.560381** %.123, align 8
  %.125 = tail call %string.560217* %.114(%TypeChecker.560555* %.1, %Type.560381* %.124)
  %.126 = getelementptr inbounds %string.560217, %string.560217* %.125, i64 0, i32 0
  %.127 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.126, align 8
  %.128 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.127, i64 0, i32 11
  %.129 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.128, align 8
  %.130 = tail call i8* %.129(%string.560217* %.125)
  %.132 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.309, i64 0, i64 0), i8* %.130)
  %.133 = add i64 %.132, 1
  %.135 = tail call i8* @malloc(i64 %.133)
  %.136 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.135, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.309, i64 0, i64 0), i8* %.130)
  %.137 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.138 = bitcast i8* %.137 to %string.560217*
  %.139 = bitcast i8* %.137 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.139, align 8
  %.141 = getelementptr inbounds i8, i8* %.137, i64 8
  %0 = bitcast i8* %.141 to i8**
  store i8* %.135, i8** %0, align 8
  %.143 = getelementptr inbounds i8, i8* %.137, i64 16
  %1 = bitcast i8* %.143 to i64*
  store i64 %.132, i64* %1, align 8
  %.145 = getelementptr inbounds i8, i8* %.137, i64 24
  %2 = bitcast i8* %.145 to i64*
  store i64 %.132, i64* %2, align 8
  %.148 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.3, i64 0, i32 4
  %.149 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.148, align 8
  %.150 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.149, i64 0, i32 1
  %.151 = load %FloRange.560223*, %FloRange.560223** %.150, align 8
  tail call void %.109(%TypeChecker.560555* %.1, i64 5, %string.560217* %.138, %FloRange.560223* %.151)
  ret %IntrinsicCall.560439* null

for.end.endif:                                    ; preds = %for.end
  switch i64 %.15, label %end.if [
    i64 6, label %for.end.endif.if
    i64 7, label %for.end.endif.else.if
    i64 5, label %for.end.endif.else.if
    i64 4, label %for.end.endif.else.if
    i64 3, label %for.end.endif.else.if
  ]

for.end.endif.if:                                 ; preds = %for.end.endif
  %.159 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.160 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.159, i64 0, i32 2
  %.161 = load i64, i64* %.160, align 8
  %.162.not = icmp eq i64 %.161, 2
  br i1 %.162.not, label %for.end.endif.if.endif, label %for.end.endif.if.if

for.end.endif.if.if:                              ; preds = %for.end.endif.if
  %.165 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.166 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.165, align 8
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.166, i64 0, i32 16
  %.168 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.167, align 8
  %.175 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.310, i64 0, i64 0), i64 %.161)
  %.176 = add i64 %.175, 1
  %.178 = tail call i8* @malloc(i64 %.176)
  %.179 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.178, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.310, i64 0, i64 0), i64 %.161)
  %.180 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.181 = bitcast i8* %.180 to %string.560217*
  %.182 = bitcast i8* %.180 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.182, align 8
  %.184 = getelementptr inbounds i8, i8* %.180, i64 8
  %3 = bitcast i8* %.184 to i8**
  store i8* %.178, i8** %3, align 8
  %.186 = getelementptr inbounds i8, i8* %.180, i64 16
  %4 = bitcast i8* %.186 to i64*
  store i64 %.175, i64* %4, align 8
  %.188 = getelementptr inbounds i8, i8* %.180, i64 24
  %5 = bitcast i8* %.188 to i64*
  store i64 %.175, i64* %5, align 8
  %.191 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.3, i64 0, i32 1
  %.192 = load %FloRange.560223*, %FloRange.560223** %.191, align 8
  tail call void %.168(%TypeChecker.560555* %.1, i64 4, %string.560217* %.181, %FloRange.560223* %.192)
  ret %IntrinsicCall.560439* null

for.end.endif.if.endif:                           ; preds = %for.end.endif.if
  %.199 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.159, i64 0, i32 0
  %.200 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.199, align 8
  %.201 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.200, i64 0, i32 5
  %.202 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.201, align 8
  %.203 = tail call %Expression.560401* %.202(%"Array<Expression>.560419"* %.159, i64 0)
  %.204 = getelementptr inbounds %Expression.560401, %Expression.560401* %.203, i64 0, i32 4
  %6 = bitcast %Type.560381** %.204 to i64*
  %.2055 = load i64, i64* %6, align 8
  %.206 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.2, i64 0, i32 4
  %7 = bitcast %Type.560381** %.206 to i64*
  store i64 %.2055, i64* %7, align 8
  %.210 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.211 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.210, i64 0, i32 0
  %.212 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.211, align 8
  %.213 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.212, i64 0, i32 5
  %.214 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.213, align 8
  %.215 = tail call %Expression.560401* %.214(%"Array<Expression>.560419"* %.210, i64 1)
  %.216 = getelementptr inbounds %Expression.560401, %Expression.560401* %.215, i64 0, i32 4
  %.217 = load %Type.560381*, %Type.560381** %.216, align 8
  %.218 = tail call i1 @is_int(%Type.560381* %.217)
  br i1 %.218, label %end.if, label %for.end.endif.if.endif.if

for.end.endif.if.endif.if:                        ; preds = %for.end.endif.if.endif
  %.222 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.223 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.222, align 8
  %.224 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.223, i64 0, i32 16
  %.225 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.224, align 8
  %.229 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.223, i64 0, i32 10
  %.230 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.229, align 8
  %.233 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.234 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.233, i64 0, i32 0
  %.235 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.234, align 8
  %.236 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.235, i64 0, i32 5
  %.237 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.236, align 8
  %.238 = tail call %Expression.560401* %.237(%"Array<Expression>.560419"* %.233, i64 1)
  %.239 = getelementptr inbounds %Expression.560401, %Expression.560401* %.238, i64 0, i32 4
  %.240 = load %Type.560381*, %Type.560381** %.239, align 8
  %.241 = tail call %string.560217* %.230(%TypeChecker.560555* %.1, %Type.560381* %.240)
  %.242 = getelementptr inbounds %string.560217, %string.560217* %.241, i64 0, i32 0
  %.243 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.242, align 8
  %.244 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.243, i64 0, i32 11
  %.245 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.244, align 8
  %.246 = tail call i8* %.245(%string.560217* %.241)
  %.248 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.311, i64 0, i64 0), i8* %.246)
  %.249 = add i64 %.248, 1
  %.251 = tail call i8* @malloc(i64 %.249)
  %.252 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.251, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.311, i64 0, i64 0), i8* %.246)
  %.253 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.254 = bitcast i8* %.253 to %string.560217*
  %.255 = bitcast i8* %.253 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.255, align 8
  %.257 = getelementptr inbounds i8, i8* %.253, i64 8
  %8 = bitcast i8* %.257 to i8**
  store i8* %.251, i8** %8, align 8
  %.259 = getelementptr inbounds i8, i8* %.253, i64 16
  %9 = bitcast i8* %.259 to i64*
  store i64 %.248, i64* %9, align 8
  %.261 = getelementptr inbounds i8, i8* %.253, i64 24
  %10 = bitcast i8* %.261 to i64*
  store i64 %.248, i64* %10, align 8
  %.265 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.10, align 8
  %.266 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.265, i64 0, i32 0
  %.267 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.266, align 8
  %.268 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.267, i64 0, i32 5
  %.269 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.268, align 8
  %.270 = tail call %ExpressionNode.560285* %.269(%"Array<ExpressionNode>.560297"* %.265, i64 0)
  %.271 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.270, i64 0, i32 1
  %.272 = load %FloRange.560223*, %FloRange.560223** %.271, align 8
  tail call void %.225(%TypeChecker.560555* %.1, i64 5, %string.560217* %.254, %FloRange.560223* %.272)
  ret %IntrinsicCall.560439* null

for.end.endif.else.if:                            ; preds = %for.end.endif, %for.end.endif, %for.end.endif, %for.end.endif
  %.283 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.284 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.283, i64 0, i32 2
  %.285 = load i64, i64* %.284, align 8
  %.286.not = icmp eq i64 %.285, 3
  br i1 %.286.not, label %for.end.endif.else.if.endif, label %for.end.endif.else.if.if

for.end.endif.else.if.if:                         ; preds = %for.end.endif.else.if
  %.289 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.290 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.289, align 8
  %.291 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.290, i64 0, i32 16
  %.292 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.291, align 8
  %.299 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.312, i64 0, i64 0), i64 %.285)
  %.300 = add i64 %.299, 1
  %.302 = tail call i8* @malloc(i64 %.300)
  %.303 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.302, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.312, i64 0, i64 0), i64 %.285)
  %.304 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.305 = bitcast i8* %.304 to %string.560217*
  %.306 = bitcast i8* %.304 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.306, align 8
  %.308 = getelementptr inbounds i8, i8* %.304, i64 8
  %11 = bitcast i8* %.308 to i8**
  store i8* %.302, i8** %11, align 8
  %.310 = getelementptr inbounds i8, i8* %.304, i64 16
  %12 = bitcast i8* %.310 to i64*
  store i64 %.299, i64* %12, align 8
  %.312 = getelementptr inbounds i8, i8* %.304, i64 24
  %13 = bitcast i8* %.312 to i64*
  store i64 %.299, i64* %13, align 8
  %.315 = getelementptr inbounds %CallExpressionNode.560309, %CallExpressionNode.560309* %.3, i64 0, i32 1
  %.316 = load %FloRange.560223*, %FloRange.560223** %.315, align 8
  tail call void %.292(%TypeChecker.560555* %.1, i64 4, %string.560217* %.305, %FloRange.560223* %.316)
  ret %IntrinsicCall.560439* null

for.end.endif.else.if.endif:                      ; preds = %for.end.endif.else.if
  %.322 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.283, i64 0, i32 0
  %.323 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.322, align 8
  %.324 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.323, i64 0, i32 5
  %.325 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.324, align 8
  %.326 = tail call %Expression.560401* %.325(%"Array<Expression>.560419"* %.283, i64 0)
  %.327 = getelementptr inbounds %Expression.560401, %Expression.560401* %.326, i64 0, i32 4
  %14 = bitcast %Type.560381** %.327 to i64*
  %.3281 = load i64, i64* %14, align 8
  %.332 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.2, i64 0, i32 4
  %15 = bitcast %Type.560381** %.332 to i64*
  store i64 %.3281, i64* %15, align 8
  %.335 = icmp eq i64 %.15, 5
  br i1 %.335, label %for.end.endif.else.if.endif.if, label %for.end.endif.else.if.endif.endif

for.end.endif.else.if.endif.if:                   ; preds = %for.end.endif.else.if.endif
  %16 = inttoptr i64 %.3281 to %PointerType.560385*
  %.339 = getelementptr inbounds %PointerType.560385, %PointerType.560385* %16, i64 0, i32 2
  %17 = bitcast %Type.560381** %.339 to i64*
  %.3404 = load i64, i64* %17, align 8
  br label %for.end.endif.else.if.endif.endif

for.end.endif.else.if.endif.endif:                ; preds = %for.end.endif.else.if.endif.if, %for.end.endif.else.if.endif
  %.348.in = phi i64 [ %.3404, %for.end.endif.else.if.endif.if ], [ %.3281, %for.end.endif.else.if.endif ]
  %.348 = inttoptr i64 %.348.in to %Type.560381*
  %.344 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.345 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.344, align 8
  %.346 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.345, i64 0, i32 9
  %.347 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.346, align 8
  %.351 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.352 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.351, i64 0, i32 0
  %.353 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.352, align 8
  %.354 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.353, i64 0, i32 5
  %.355 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.354, align 8
  %.356 = tail call %Expression.560401* %.355(%"Array<Expression>.560419"* %.351, i64 1)
  %.357 = getelementptr inbounds %Expression.560401, %Expression.560401* %.356, i64 0, i32 4
  %.358 = load %Type.560381*, %Type.560381** %.357, align 8
  %.359 = tail call i1 %.347(%TypeChecker.560555* %.1, %Type.560381* %.348, %Type.560381* %.358)
  br i1 %.359, label %for.end.endif.else.if.endif.endif.endif, label %for.end.endif.else.if.endif.endif.if

for.end.endif.else.if.endif.endif.if:             ; preds = %for.end.endif.else.if.endif.endif
  %.364 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.344, align 8
  %.365 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.364, i64 0, i32 16
  %.366 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.365, align 8
  %.370 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.364, i64 0, i32 10
  %.371 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.370, align 8
  %.373 = tail call %string.560217* %.371(%TypeChecker.560555* nonnull %.1, %Type.560381* %.348)
  %.376 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.344, align 8
  %.377 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.376, i64 0, i32 10
  %.378 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.377, align 8
  %.381 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.382 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.381, i64 0, i32 0
  %.383 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.382, align 8
  %.384 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.383, i64 0, i32 5
  %.385 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.384, align 8
  %.386 = tail call %Expression.560401* %.385(%"Array<Expression>.560419"* %.381, i64 1)
  %.387 = getelementptr inbounds %Expression.560401, %Expression.560401* %.386, i64 0, i32 4
  %.388 = load %Type.560381*, %Type.560381** %.387, align 8
  %.389 = tail call %string.560217* %.378(%TypeChecker.560555* nonnull %.1, %Type.560381* %.388)
  %.390 = getelementptr inbounds %string.560217, %string.560217* %.373, i64 0, i32 0
  %.391 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.390, align 8
  %.392 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.391, i64 0, i32 11
  %.393 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.392, align 8
  %.394 = tail call i8* %.393(%string.560217* %.373)
  %.395 = getelementptr inbounds %string.560217, %string.560217* %.389, i64 0, i32 0
  %.396 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.395, align 8
  %.397 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.396, i64 0, i32 11
  %.398 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.397, align 8
  %.399 = tail call i8* %.398(%string.560217* %.389)
  %.401 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.313, i64 0, i64 0), i8* %.394, i8* %.399)
  %.402 = add i64 %.401, 1
  %.404 = tail call i8* @malloc(i64 %.402)
  %.405 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.404, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.313, i64 0, i64 0), i8* %.394, i8* %.399)
  %.406 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.407 = bitcast i8* %.406 to %string.560217*
  %.408 = bitcast i8* %.406 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.408, align 8
  %.410 = getelementptr inbounds i8, i8* %.406, i64 8
  %18 = bitcast i8* %.410 to i8**
  store i8* %.404, i8** %18, align 8
  %.412 = getelementptr inbounds i8, i8* %.406, i64 16
  %19 = bitcast i8* %.412 to i64*
  store i64 %.401, i64* %19, align 8
  %.414 = getelementptr inbounds i8, i8* %.406, i64 24
  %20 = bitcast i8* %.414 to i64*
  store i64 %.401, i64* %20, align 8
  %.418 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.10, align 8
  %.419 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.418, i64 0, i32 0
  %.420 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.419, align 8
  %.421 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.420, i64 0, i32 5
  %.422 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.421, align 8
  %.423 = tail call %ExpressionNode.560285* %.422(%"Array<ExpressionNode>.560297"* %.418, i64 0)
  %.424 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.423, i64 0, i32 1
  %.425 = load %FloRange.560223*, %FloRange.560223** %.424, align 8
  tail call void %.366(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.407, %FloRange.560223* %.425)
  ret %IntrinsicCall.560439* null

for.end.endif.else.if.endif.endif.endif:          ; preds = %for.end.endif.else.if.endif.endif
  %.430 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.431 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.430, i64 0, i32 0
  %.432 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.431, align 8
  %.433 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.432, i64 0, i32 5
  %.434 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.433, align 8
  %.435 = tail call %Expression.560401* %.434(%"Array<Expression>.560419"* %.430, i64 2)
  %.436 = getelementptr inbounds %Expression.560401, %Expression.560401* %.435, i64 0, i32 4
  %.437 = load %Type.560381*, %Type.560381** %.436, align 8
  %.438 = tail call i1 @is_int(%Type.560381* %.437)
  br i1 %.438, label %for.end.endif.else.if.endif.endif.endif.endif, label %for.end.endif.else.if.endif.endif.endif.if

for.end.endif.else.if.endif.endif.endif.if:       ; preds = %for.end.endif.else.if.endif.endif.endif
  %.443 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.344, align 8
  %.444 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.443, i64 0, i32 16
  %.445 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.444, align 8
  %.449 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.443, i64 0, i32 10
  %.450 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.449, align 8
  %.453 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.93, align 8
  %.454 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.453, i64 0, i32 0
  %.455 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.454, align 8
  %.456 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.455, i64 0, i32 5
  %.457 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.456, align 8
  %.458 = tail call %Expression.560401* %.457(%"Array<Expression>.560419"* %.453, i64 2)
  %.459 = getelementptr inbounds %Expression.560401, %Expression.560401* %.458, i64 0, i32 4
  %.460 = load %Type.560381*, %Type.560381** %.459, align 8
  %.461 = tail call %string.560217* %.450(%TypeChecker.560555* nonnull %.1, %Type.560381* %.460)
  %.462 = getelementptr inbounds %string.560217, %string.560217* %.461, i64 0, i32 0
  %.463 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.462, align 8
  %.464 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.463, i64 0, i32 11
  %.465 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.464, align 8
  %.466 = tail call i8* %.465(%string.560217* %.461)
  %.468 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.311, i64 0, i64 0), i8* %.466)
  %.469 = add i64 %.468, 1
  %.471 = tail call i8* @malloc(i64 %.469)
  %.472 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.471, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.311, i64 0, i64 0), i8* %.466)
  %.473 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.474 = bitcast i8* %.473 to %string.560217*
  %.475 = bitcast i8* %.473 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.475, align 8
  %.477 = getelementptr inbounds i8, i8* %.473, i64 8
  %21 = bitcast i8* %.477 to i8**
  store i8* %.471, i8** %21, align 8
  %.479 = getelementptr inbounds i8, i8* %.473, i64 16
  %22 = bitcast i8* %.479 to i64*
  store i64 %.468, i64* %22, align 8
  %.481 = getelementptr inbounds i8, i8* %.473, i64 24
  %23 = bitcast i8* %.481 to i64*
  store i64 %.468, i64* %23, align 8
  %.485 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.10, align 8
  %.486 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.485, i64 0, i32 0
  %.487 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.486, align 8
  %.488 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.487, i64 0, i32 5
  %.489 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.488, align 8
  %.490 = tail call %ExpressionNode.560285* %.489(%"Array<ExpressionNode>.560297"* %.485, i64 1)
  %.491 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.490, i64 0, i32 1
  %.492 = load %FloRange.560223*, %FloRange.560223** %.491, align 8
  tail call void %.445(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.474, %FloRange.560223* %.492)
  ret %IntrinsicCall.560439* null

for.end.endif.else.if.endif.endif.endif.endif:    ; preds = %for.end.endif.else.if.endif.endif.endif
  br i1 %.23, label %for.end.endif.else.if.endif.endif.endif.endif.if, label %end.if

for.end.endif.else.if.endif.endif.endif.endif.if: ; preds = %for.end.endif.else.if.endif.endif.endif.endif
  %.499 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.500 = bitcast i8* %.499 to %Type.560381*
  %.501 = bitcast i8* %.499 to %Type_vtable_ty.560382**
  store %Type_vtable_ty.560382* @Type_vtable_data, %Type_vtable_ty.560382** %.501, align 8
  tail call void @Type_constructor(%Type.560381* %.500, i64 7)
  %24 = bitcast %Type.560381** %.332 to i8**
  store i8* %.499, i8** %24, align 8
  br label %end.if
}

; Function Attrs: nofree nounwind
define noalias %IntExpression.560411* @TypeChecker_check_int_expression(%TypeChecker.560555* nocapture readnone %.1, %Type.560381* %.2, %IntExpressionNode.560289* nocapture readonly %.3) #4 {
.5:
  %.10 = getelementptr inbounds %IntExpressionNode.560289, %IntExpressionNode.560289* %.3, i64 0, i32 4
  %.11 = load %IntToken.560249*, %IntToken.560249** %.10, align 8
  %.12 = getelementptr inbounds %IntToken.560249, %IntToken.560249* %.11, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.14 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.15 = bitcast i8* %.14 to %IntExpression.560411*
  %.16 = bitcast i8* %.14 to %IntExpression_vtable_ty.560412**
  store %IntExpression_vtable_ty.560412* @IntExpression_vtable_data, %IntExpression_vtable_ty.560412** %.16, align 8
  tail call void @IntExpression_constructor(%IntExpression.560411* %.15, i64 %.13)
  %.21 = tail call i1 @is_int(%Type.560381* %.2)
  br i1 %.21, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = getelementptr inbounds i8, i8* %.14, i64 32
  %0 = bitcast i8* %.25 to %Type.560381**
  store %Type.560381* %.2, %Type.560381** %0, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %IntExpression.560411* %.15
}

; Function Attrs: nofree nounwind
define noalias %FloatExpression.560415* @TypeChecker_check_float_expression(%TypeChecker.560555* nocapture readnone %.1, %Type.560381* %.2, %FloatExpressionNode.560291* nocapture readonly %.3) #4 {
.5:
  %.10 = getelementptr inbounds %FloatExpressionNode.560291, %FloatExpressionNode.560291* %.3, i64 0, i32 4
  %.11 = load %FloatToken.560251*, %FloatToken.560251** %.10, align 8
  %.12 = getelementptr inbounds %FloatToken.560251, %FloatToken.560251* %.11, i64 0, i32 3
  %.13 = load double, double* %.12, align 8
  %.14 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.15 = bitcast i8* %.14 to %FloatExpression.560415*
  %.16 = bitcast i8* %.14 to %FloatExpression_vtable_ty.560416**
  store %FloatExpression_vtable_ty.560416* @FloatExpression_vtable_data, %FloatExpression_vtable_ty.560416** %.16, align 8
  tail call void @FloatExpression_constructor(%FloatExpression.560415* %.15, double %.13)
  %.21 = tail call i1 @is_float(%Type.560381* %.2)
  br i1 %.21, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = getelementptr inbounds i8, i8* %.14, i64 32
  %0 = bitcast i8* %.25 to %Type.560381**
  store %Type.560381* %.2, %Type.560381** %0, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %FloatExpression.560415* %.15
}

; Function Attrs: nofree nounwind
define noalias %IntExpression.560411* @TypeChecker_check_char_expression(%TypeChecker.560555* nocapture readnone %.1, %CharExpressionNode.560293* nocapture readonly %.2) #4 {
.4:
  %.8 = getelementptr inbounds %CharExpressionNode.560293, %CharExpressionNode.560293* %.2, i64 0, i32 4
  %.9 = load %CharToken.560253*, %CharToken.560253** %.8, align 8
  %.10 = getelementptr inbounds %CharToken.560253, %CharToken.560253* %.9, i64 0, i32 3
  %.11 = load i8, i8* %.10, align 1
  %.12 = zext i8 %.11 to i64
  %.13 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.14 = bitcast i8* %.13 to %IntExpression.560411*
  %.15 = bitcast i8* %.13 to %IntExpression_vtable_ty.560412**
  store %IntExpression_vtable_ty.560412* @IntExpression_vtable_data, %IntExpression_vtable_ty.560412** %.15, align 8
  tail call void @IntExpression_constructor(%IntExpression.560411* %.14, i64 %.12)
  %.20 = getelementptr inbounds i8, i8* %.13, i64 32
  %0 = bitcast i8* %.20 to %Type.560381**
  %.21 = load %Type.560381*, %Type.560381** %0, align 8
  %.22 = getelementptr inbounds %Type.560381, %Type.560381* %.21, i64 0, i32 1
  store i64 2, i64* %.22, align 8
  ret %IntExpression.560411* %.14
}

define noalias %StringExpression.560417* @TypeChecker_check_string_expression(%TypeChecker.560555* %.1, %Type.560381* %.2, %StringExpressionNode.560295* nocapture readonly %.3) {
.5:
  %.10 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.12 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %"Array<Expression>.560419"*
  %.14 = bitcast i8* %.12 to %"Array<Expression>_vtable_ty.560420"**
  store %"Array<Expression>_vtable_ty.560420"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.560420"** %.14, align 8
  %.16 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.16 to i8**
  store i8* %.10, i8** %0, align 8
  %.18 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.18 to i64*
  store i64 0, i64* %1, align 8
  %.20 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.20 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %StringExpressionNode.560295, %StringExpressionNode.560295* %.3, i64 0, i32 5
  %.295 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.28, align 8
  %.306 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.295, i64 0, i32 2
  %.317 = load i64, i64* %.306, align 8
  %.328 = icmp sgt i64 %.317, 0
  br i1 %.328, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.36 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge9 = phi i64 [ 0, %for.body.lr.ph ], [ %.60, %for.body ]
  %.37 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.36, align 8
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.37, i64 0, i32 72
  %.39 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.38, align 8
  %.40 = tail call %Type.560381* @Type_unknown()
  %.44 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.28, align 8
  %.45 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.44, i64 0, i32 0
  %.46 = load %"Array<ExpressionNode>_vtable_ty.560298"*, %"Array<ExpressionNode>_vtable_ty.560298"** %.45, align 8
  %.47 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.560298", %"Array<ExpressionNode>_vtable_ty.560298"* %.46, i64 0, i32 5
  %.48 = load %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)*, %ExpressionNode.560285* (%"Array<ExpressionNode>.560297"*, i64)** %.47, align 8
  %.49 = tail call %ExpressionNode.560285* %.48(%"Array<ExpressionNode>.560297"* %.44, i64 %storemerge9)
  %.50 = tail call %Expression.560401* %.39(%TypeChecker.560555* %.1, %Type.560381* %.40, %ExpressionNode.560285* %.49)
  %.52 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.14, align 8
  %.53 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.52, i64 0, i32 2
  %.54 = load void (%"Array<Expression>.560419"*, %Expression.560401*)*, void (%"Array<Expression>.560419"*, %Expression.560401*)** %.53, align 8
  tail call void %.54(%"Array<Expression>.560419"* %.13, %Expression.560401* %.50)
  %.60 = add nuw nsw i64 %storemerge9, 1
  %.29 = load %"Array<ExpressionNode>.560297"*, %"Array<ExpressionNode>.560297"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.560297", %"Array<ExpressionNode>.560297"* %.29, i64 0, i32 2
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.60, %.31
  br i1 %.32, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %.64 = tail call i1 @is_i8_ptr(%Type.560381* %.2)
  br i1 %.64, label %for.end.endif, label %for.end.if

for.end.if:                                       ; preds = %for.end
  %.68 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.69 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.68, align 8
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.69, i64 0, i32 14
  %.71 = load %Type.560381* (%TypeChecker.560555*, %string.560217*)*, %Type.560381* (%TypeChecker.560555*, %string.560217*)** %.70, align 8
  %.72 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.560217*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.73.repack, align 8
  %.73.repack1 = getelementptr inbounds i8, i8* %.72, i64 8
  %3 = bitcast i8* %.73.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.282, i64 0, i64 0), i8** %3, align 8
  %.73.repack2 = getelementptr inbounds i8, i8* %.72, i64 16
  %4 = bitcast i8* %.73.repack2 to i64*
  store i64 6, i64* %4, align 8
  %.73.repack3 = getelementptr inbounds i8, i8* %.72, i64 24
  %5 = bitcast i8* %.73.repack3 to i64*
  store i64 6, i64* %5, align 8
  %.75 = tail call %Type.560381* %.71(%TypeChecker.560555* %.1, %string.560217* %.73)
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end, %for.end.if
  %expected_type.0 = phi %Type.560381* [ %.75, %for.end.if ], [ %.2, %for.end ]
  %.79 = getelementptr inbounds %StringExpressionNode.560295, %StringExpressionNode.560295* %.3, i64 0, i32 4
  %.80 = load %StrToken.560255*, %StrToken.560255** %.79, align 8
  %.81 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.80, i64 0, i32 3
  %.82 = load %string.560217*, %string.560217** %.81, align 8
  %.86 = getelementptr inbounds %StrToken.560255, %StrToken.560255* %.80, i64 0, i32 4
  %.87 = load %"Array<int>.560257"*, %"Array<int>.560257"** %.86, align 8
  %.90 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.91 = bitcast i8* %.90 to %StringExpression.560417*
  %.92 = bitcast i8* %.90 to %StringExpression_vtable_ty.560418**
  store %StringExpression_vtable_ty.560418* @StringExpression_vtable_data, %StringExpression_vtable_ty.560418** %.92, align 8
  tail call void @StringExpression_constructor(%StringExpression.560417* %.91, %string.560217* %.82, %"Array<int>.560257"* %.87, %"Array<Expression>.560419"* %.13, %Type.560381* %expected_type.0)
  %.98 = getelementptr inbounds i8, i8* %.90, i64 32
  %6 = bitcast i8* %.98 to %Type.560381**
  store %Type.560381* %expected_type.0, %Type.560381** %6, align 8
  ret %StringExpression.560417* %.91
}

define %Expression.560401* @TypeChecker_check_expression(%TypeChecker.560555* %.1, %Type.560381* %.2, %ExpressionNode.560285* %.3) {
.5:
  %.10 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1 [
    i64 0, label %.5.if
    i64 1, label %.5.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.endif.if
    i64 6, label %.5.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 15, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 10, label %.5.endif.endif.endif.endi...if
    i64 11, label %.5.endif.endif.endif.endi...endif.if
    i64 12, label %.5.endif.endif.endif.endi...endif.endif.if
    i64 13, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endi...if.1
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.16 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.15, align 8
  %.17 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.16, i64 0, i32 68
  %.18 = load %IntExpression.560411* (%TypeChecker.560555*, %Type.560381*, %IntExpressionNode.560289*)*, %IntExpression.560411* (%TypeChecker.560555*, %Type.560381*, %IntExpressionNode.560289*)** %.17, align 8
  %.21 = bitcast %ExpressionNode.560285* %.3 to %IntExpressionNode.560289*
  %.22 = tail call %IntExpression.560411* %.18(%TypeChecker.560555* %.1, %Type.560381* %.2, %IntExpressionNode.560289* %.21)
  %.23 = bitcast %IntExpression.560411* %.22 to %Expression.560401*
  ret %Expression.560401* %.23

.5.endif.if:                                      ; preds = %.5
  %.31 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.32 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.32, i64 0, i32 69
  %.34 = load %FloatExpression.560415* (%TypeChecker.560555*, %Type.560381*, %FloatExpressionNode.560291*)*, %FloatExpression.560415* (%TypeChecker.560555*, %Type.560381*, %FloatExpressionNode.560291*)** %.33, align 8
  %.37 = bitcast %ExpressionNode.560285* %.3 to %FloatExpressionNode.560291*
  %.38 = tail call %FloatExpression.560415* %.34(%TypeChecker.560555* %.1, %Type.560381* %.2, %FloatExpressionNode.560291* %.37)
  %.39 = bitcast %FloatExpression.560415* %.38 to %Expression.560401*
  ret %Expression.560401* %.39

.5.endif.endif.if:                                ; preds = %.5
  %.47 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.48 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.47, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.48, i64 0, i32 70
  %.50 = load %IntExpression.560411* (%TypeChecker.560555*, %CharExpressionNode.560293*)*, %IntExpression.560411* (%TypeChecker.560555*, %CharExpressionNode.560293*)** %.49, align 8
  %.52 = bitcast %ExpressionNode.560285* %.3 to %CharExpressionNode.560293*
  %.53 = tail call %IntExpression.560411* %.50(%TypeChecker.560555* %.1, %CharExpressionNode.560293* %.52)
  %.54 = bitcast %IntExpression.560411* %.53 to %Expression.560401*
  ret %Expression.560401* %.54

.5.endif.endif.endif.if:                          ; preds = %.5
  %.62 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.63 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.62, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.63, i64 0, i32 71
  %.65 = load %StringExpression.560417* (%TypeChecker.560555*, %Type.560381*, %StringExpressionNode.560295*)*, %StringExpression.560417* (%TypeChecker.560555*, %Type.560381*, %StringExpressionNode.560295*)** %.64, align 8
  %.68 = bitcast %ExpressionNode.560285* %.3 to %StringExpressionNode.560295*
  %.69 = tail call %StringExpression.560417* %.65(%TypeChecker.560555* %.1, %Type.560381* %.2, %StringExpressionNode.560295* %.68)
  %.70 = bitcast %StringExpression.560417* %.69 to %Expression.560401*
  ret %Expression.560401* %.70

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.78 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.79 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.78, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.79, i64 0, i32 47
  %.81 = load %ArrayExpression.560423* (%TypeChecker.560555*, %Type.560381*, %ArrayExpressionNode.560301*)*, %ArrayExpression.560423* (%TypeChecker.560555*, %Type.560381*, %ArrayExpressionNode.560301*)** %.80, align 8
  %.84 = bitcast %ExpressionNode.560285* %.3 to %ArrayExpressionNode.560301*
  %.85 = tail call %ArrayExpression.560423* %.81(%TypeChecker.560555* %.1, %Type.560381* %.2, %ArrayExpressionNode.560301* %.84)
  %.86 = bitcast %ArrayExpression.560423* %.85 to %Expression.560401*
  ret %Expression.560401* %.86

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.94 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.95 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.94, align 8
  %.96 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.95, i64 0, i32 48
  %.97 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %VarAccessExpressionNode.560299*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %VarAccessExpressionNode.560299*)** %.96, align 8
  %.100 = bitcast %ExpressionNode.560285* %.3 to %VarAccessExpressionNode.560299*
  %.101 = tail call %Expression.560401* %.97(%TypeChecker.560555* %.1, %Type.560381* %.2, %VarAccessExpressionNode.560299* %.100)
  ret %Expression.560401* %.101

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.109 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.110 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.109, align 8
  %.111 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.110, i64 0, i32 53
  %.112 = load %BinaryExpression.560425* (%TypeChecker.560555*, %Type.560381*, %BinaryExpressionNode.560313*)*, %BinaryExpression.560425* (%TypeChecker.560555*, %Type.560381*, %BinaryExpressionNode.560313*)** %.111, align 8
  %.115 = bitcast %ExpressionNode.560285* %.3 to %BinaryExpressionNode.560313*
  %.116 = tail call %BinaryExpression.560425* %.112(%TypeChecker.560555* %.1, %Type.560381* %.2, %BinaryExpressionNode.560313* %.115)
  %.117 = bitcast %BinaryExpression.560425* %.116 to %Expression.560401*
  ret %Expression.560401* %.117

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.125 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.126 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.125, align 8
  %.127 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.126, i64 0, i32 54
  %.128 = load %UnaryExpression.560427* (%TypeChecker.560555*, %Type.560381*, %UnaryExpressionNode.560317*)*, %UnaryExpression.560427* (%TypeChecker.560555*, %Type.560381*, %UnaryExpressionNode.560317*)** %.127, align 8
  %.131 = bitcast %ExpressionNode.560285* %.3 to %UnaryExpressionNode.560317*
  %.132 = tail call %UnaryExpression.560427* %.128(%TypeChecker.560555* %.1, %Type.560381* %.2, %UnaryExpressionNode.560317* %.131)
  %.133 = bitcast %UnaryExpression.560427* %.132 to %Expression.560401*
  ret %Expression.560401* %.133

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.141 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.142 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.141, align 8
  %.143 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.142, i64 0, i32 60
  %.144 = load %TernaryExpression.560429* (%TypeChecker.560555*, %Type.560381*, %TernaryExpressionNode.560315*)*, %TernaryExpression.560429* (%TypeChecker.560555*, %Type.560381*, %TernaryExpressionNode.560315*)** %.143, align 8
  %.147 = bitcast %ExpressionNode.560285* %.3 to %TernaryExpressionNode.560315*
  %.148 = tail call %TernaryExpression.560429* %.144(%TypeChecker.560555* %.1, %Type.560381* %.2, %TernaryExpressionNode.560315* %.147)
  %.149 = bitcast %TernaryExpression.560429* %.148 to %Expression.560401*
  ret %Expression.560401* %.149

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.157 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.158 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.157, align 8
  %.159 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.158, i64 0, i32 55
  %.160 = load %Expression.560401* (%TypeChecker.560555*, %TypeCastExpressionNode.560311*)*, %Expression.560401* (%TypeChecker.560555*, %TypeCastExpressionNode.560311*)** %.159, align 8
  %.162 = bitcast %ExpressionNode.560285* %.3 to %TypeCastExpressionNode.560311*
  %.163 = tail call %Expression.560401* %.160(%TypeChecker.560555* %.1, %TypeCastExpressionNode.560311* %.162)
  ret %Expression.560401* %.163

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.171 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.172 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.171, align 8
  %.173 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.172, i64 0, i32 57
  %.174 = load %NewExpression.560433* (%TypeChecker.560555*, %NewExpressionNode.560303*)*, %NewExpression.560433* (%TypeChecker.560555*, %NewExpressionNode.560303*)** %.173, align 8
  %.176 = bitcast %ExpressionNode.560285* %.3 to %NewExpressionNode.560303*
  %.177 = tail call %NewExpression.560433* %.174(%TypeChecker.560555* %.1, %NewExpressionNode.560303* %.176)
  %.178 = bitcast %NewExpression.560433* %.177 to %Expression.560401*
  ret %Expression.560401* %.178

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5
  %.186 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.187 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.186, align 8
  %.188 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.187, i64 0, i32 59
  %.189 = load %MemberExpression.560451* (%TypeChecker.560555*, %Type.560381*, %MemberExpressionNode.560307*)*, %MemberExpression.560451* (%TypeChecker.560555*, %Type.560381*, %MemberExpressionNode.560307*)** %.188, align 8
  %.192 = bitcast %ExpressionNode.560285* %.3 to %MemberExpressionNode.560307*
  %.193 = tail call %MemberExpression.560451* %.189(%TypeChecker.560555* %.1, %Type.560381* %.2, %MemberExpressionNode.560307* %.192)
  %.194 = bitcast %MemberExpression.560451* %.193 to %Expression.560401*
  ret %Expression.560401* %.194

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5
  %.202 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.203 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.202, align 8
  %.204 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.203, i64 0, i32 62
  %.205 = load %IndexExpression.560435* (%TypeChecker.560555*, %Type.560381*, %ExpressionIndexNode.560305*)*, %IndexExpression.560435* (%TypeChecker.560555*, %Type.560381*, %ExpressionIndexNode.560305*)** %.204, align 8
  %.208 = bitcast %ExpressionNode.560285* %.3 to %ExpressionIndexNode.560305*
  %.209 = tail call %IndexExpression.560435* %.205(%TypeChecker.560555* %.1, %Type.560381* %.2, %ExpressionIndexNode.560305* %.208)
  %.210 = bitcast %IndexExpression.560435* %.209 to %Expression.560401*
  ret %Expression.560401* %.210

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5
  %.218 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.219 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.218, align 8
  %.220 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.219, i64 0, i32 66
  %.221 = load %CallExpression.560437* (%TypeChecker.560555*, %Type.560381*, %CallExpressionNode.560309*)*, %CallExpression.560437* (%TypeChecker.560555*, %Type.560381*, %CallExpressionNode.560309*)** %.220, align 8
  %.224 = bitcast %ExpressionNode.560285* %.3 to %CallExpressionNode.560309*
  %.225 = tail call %CallExpression.560437* %.221(%TypeChecker.560555* %.1, %Type.560381* %.2, %CallExpressionNode.560309* %.224)
  %.226 = bitcast %CallExpression.560437* %.225 to %Expression.560401*
  ret %Expression.560401* %.226

.5.endif.endif.endif.endi...endif.1:              ; preds = %.5
  ret %Expression.560401* null
}

define %Expression.560401* @TypeChecker_check_condition(%TypeChecker.560555* %.1, %ExpressionNode.560285* %.2) {
.4:
  %.7 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.8 = bitcast i8* %.7 to %BooleanType.560383*
  %.9 = bitcast i8* %.7 to %BooleanType_vtable_ty.560384**
  store %BooleanType_vtable_ty.560384* @BooleanType_vtable_data, %BooleanType_vtable_ty.560384** %.9, align 8
  tail call void @BooleanType_constructor(%BooleanType.560383* %.8)
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.15, i64 0, i32 72
  %.17 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.16, align 8
  %.18 = tail call %Type.560381* @Type_unknown()
  %.20 = tail call %Expression.560401* %.17(%TypeChecker.560555* %.1, %Type.560381* %.18, %ExpressionNode.560285* %.2)
  %.24 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.25 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.24, i64 0, i32 17
  %.26 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.25, align 8
  %.27 = tail call i1 %.26(%TypeChecker.560555* %.1)
  br i1 %.27, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %true_block, %.4.endif, %.4
  %merge = phi %Expression.560401* [ null, %.4 ], [ %.39, %true_block ], [ %.20, %.4.endif ]
  ret %Expression.560401* %merge

.4.endif:                                         ; preds = %.4
  %.31 = getelementptr inbounds %Expression.560401, %Expression.560401* %.20, i64 0, i32 4
  %.32 = load %Type.560381*, %Type.560381** %.31, align 8
  %.33 = tail call i1 @is_bool(%Type.560381* %.32)
  br i1 %.33, label %.4.if, label %true_block

true_block:                                       ; preds = %.4.endif
  %.38 = bitcast i8* %.7 to %Type.560381*
  %.39 = tail call %Expression.560401* @cast_exp_to_type(%Expression.560401* nonnull %.20, %Type.560381* %.38)
  br label %.4.if
}

define noalias %IfStatement.560459* @TypeChecker_check_if_stamement(%TypeChecker.560555* %.1, %IfStatementNode.560319* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 73
  %.11 = load %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)** %.10, align 8
  %.13 = getelementptr inbounds %IfStatementNode.560319, %IfStatementNode.560319* %.2, i64 0, i32 3
  %.14 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.13, align 8
  %.15 = tail call %Expression.560401* %.11(%TypeChecker.560555* %.1, %ExpressionNode.560285* %.14)
  %.19 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.20 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.19, i64 0, i32 83
  %.21 = load %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)*, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)** %.20, align 8
  %.23 = getelementptr inbounds %IfStatementNode.560319, %IfStatementNode.560319* %.2, i64 0, i32 4
  %.24 = load %BlockNode.560281*, %BlockNode.560281** %.23, align 8
  %.25 = tail call %Block.560455* %.21(%TypeChecker.560555* %.1, %BlockNode.560281* %.24)
  %.28 = getelementptr inbounds %IfStatementNode.560319, %IfStatementNode.560319* %.2, i64 0, i32 5
  %0 = bitcast %BlockNode.560281** %.28 to i64*
  %.291 = load i64, i64* %0, align 8
  %.30 = trunc i64 %.291 to i32
  %.32.not = icmp eq i32 %.30, 0
  br i1 %.32.not, label %end, label %true_block

true_block:                                       ; preds = %.4
  %1 = inttoptr i64 %.291 to %BlockNode.560281*
  %.36 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.37 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.36, i64 0, i32 83
  %.38 = load %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)*, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)** %.37, align 8
  %.42 = tail call %Block.560455* %.38(%TypeChecker.560555* nonnull %.1, %BlockNode.560281* %1)
  br label %end

end:                                              ; preds = %.4, %true_block
  %.45 = phi %Block.560455* [ %.42, %true_block ], [ null, %.4 ]
  %.50 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.51 = bitcast i8* %.50 to %IfStatement.560459*
  %.52 = bitcast i8* %.50 to %IfStatement_vtable_ty.560460**
  store %IfStatement_vtable_ty.560460* @IfStatement_vtable_data, %IfStatement_vtable_ty.560460** %.52, align 8
  tail call void @IfStatement_constructor(%IfStatement.560459* %.51, %Expression.560401* %.15, %Block.560455* %.25, %Block.560455* %.45)
  ret %IfStatement.560459* %.51
}

define noalias %VarDeclaration.560461* @TypeChecker_check_var_declaration(%TypeChecker.560555* %.1, %VarDeclarationStatement.560327* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarDeclarationStatement.560327, %VarDeclarationStatement.560327* %.2, i64 0, i32 3
  %.9 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.9, i64 0, i32 3
  %.11 = load %string.560217*, %string.560217** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.15, i64 0, i32 12
  %.17 = load i1 (%TypeChecker.560555*, %string.560217*)*, i1 (%TypeChecker.560555*, %string.560217*)** %.16, align 8
  %.19 = tail call i1 %.17(%TypeChecker.560555* %.1, %string.560217* %.11)
  %.23 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.23, i64 0, i32 16
  %.25 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.24, align 8
  %.27 = getelementptr inbounds %string.560217, %string.560217* %.11, i64 0, i32 0
  %.28 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.27, align 8
  %.29 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.28, i64 0, i32 11
  %.30 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.29, align 8
  %.31 = tail call i8* %.30(%string.560217* %.11)
  %.33 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.238, i64 0, i64 0), i8* %.31)
  %.34 = add i64 %.33, 1
  %.36 = tail call i8* @malloc(i64 %.34)
  %.37 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.36, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.238, i64 0, i64 0), i8* %.31)
  %.38 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.560217*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.40, align 8
  %.42 = getelementptr inbounds i8, i8* %.38, i64 8
  %0 = bitcast i8* %.42 to i8**
  store i8* %.36, i8** %0, align 8
  %.44 = getelementptr inbounds i8, i8* %.38, i64 16
  %1 = bitcast i8* %.44 to i64*
  store i64 %.33, i64* %1, align 8
  %.46 = getelementptr inbounds i8, i8* %.38, i64 24
  %2 = bitcast i8* %.46 to i64*
  store i64 %.33, i64* %2, align 8
  %.50 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.51 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.50, i64 0, i32 2
  %.52 = load %FloRange.560223*, %FloRange.560223** %.51, align 8
  tail call void %.25(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.39, %FloRange.560223* %.52)
  ret %VarDeclaration.560461* null

.4.endif:                                         ; preds = %.4
  %.58 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.23, i64 0, i32 2
  %.59 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.58, align 8
  %.60 = tail call %Scope.560473* %.59(%TypeChecker.560555* nonnull %.1)
  %.63 = getelementptr inbounds %VarDeclarationStatement.560327, %VarDeclarationStatement.560327* %.2, i64 0, i32 4
  %3 = bitcast %TypeNode.560269** %.63 to i64*
  %.641 = load i64, i64* %3, align 8
  %.65 = trunc i64 %.641 to i32
  %.67.not = icmp eq i32 %.65, 0
  br i1 %.67.not, label %false_block, label %true_block

true_block:                                       ; preds = %.4.endif
  %4 = inttoptr i64 %.641 to %TypeNode.560269*
  %.71 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.72 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.71, i64 0, i32 46
  %.73 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.72, align 8
  %.77 = tail call %Type.560381* %.73(%TypeChecker.560555* nonnull %.1, %TypeNode.560269* %4)
  br label %end

false_block:                                      ; preds = %.4.endif
  %.79 = tail call %Type.560381* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.81 = phi %Type.560381* [ %.77, %true_block ], [ %.79, %false_block ]
  %.85 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.85, i64 0, i32 17
  %.87 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.86, align 8
  %.88 = tail call i1 %.87(%TypeChecker.560555* nonnull %.1)
  br i1 %.88, label %end.if, label %end.endif

end.if:                                           ; preds = %end.1, %end
  ret %VarDeclaration.560461* null

end.endif:                                        ; preds = %end
  %.92 = getelementptr inbounds %VarDeclarationStatement.560327, %VarDeclarationStatement.560327* %.2, i64 0, i32 5
  %5 = bitcast %ExpressionNode.560285** %.92 to i64*
  %.932 = load i64, i64* %5, align 8
  %.94 = trunc i64 %.932 to i32
  %.96 = icmp eq i32 %.94, 0
  %.98 = getelementptr inbounds %Type.560381, %Type.560381* %.81, i64 0, i32 1
  %.99 = load i64, i64* %.98, align 8
  %.100 = icmp eq i64 %.99, 21
  %.101 = and i1 %.96, %.100
  %6 = inttoptr i64 %.932 to %ExpressionNode.560285*
  br i1 %.101, label %end.endif.if, label %end.endif.endif

end.endif.if:                                     ; preds = %end.endif
  %.105 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.106 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.105, i64 0, i32 16
  %.107 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.106, align 8
  %.109 = getelementptr inbounds %string.560217, %string.560217* %.11, i64 0, i32 0
  %.110 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.109, align 8
  %.111 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.110, i64 0, i32 11
  %.112 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.111, align 8
  %.113 = tail call i8* %.112(%string.560217* %.11)
  %.115 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.314, i64 0, i64 0), i8* %.113)
  %.116 = add i64 %.115, 1
  %.118 = tail call i8* @malloc(i64 %.116)
  %.119 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.118, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.314, i64 0, i64 0), i8* %.113)
  %.120 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.560217*
  %.122 = bitcast i8* %.120 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.122, align 8
  %.124 = getelementptr inbounds i8, i8* %.120, i64 8
  %7 = bitcast i8* %.124 to i8**
  store i8* %.118, i8** %7, align 8
  %.126 = getelementptr inbounds i8, i8* %.120, i64 16
  %8 = bitcast i8* %.126 to i64*
  store i64 %.115, i64* %8, align 8
  %.128 = getelementptr inbounds i8, i8* %.120, i64 24
  %9 = bitcast i8* %.128 to i64*
  store i64 %.115, i64* %9, align 8
  %.132 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.133 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.132, i64 0, i32 2
  %.134 = load %FloRange.560223*, %FloRange.560223** %.133, align 8
  tail call void %.107(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.121, %FloRange.560223* %.134)
  ret %VarDeclaration.560461* null

end.endif.endif:                                  ; preds = %end.endif
  br i1 %.96, label %end.1, label %true_block.1

true_block.1:                                     ; preds = %end.endif.endif
  %.146 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.147 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.146, i64 0, i32 72
  %.148 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.147, align 8
  %.153 = tail call %Expression.560401* %.148(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.81, %ExpressionNode.560285* %6)
  br label %end.1

end.1:                                            ; preds = %end.endif.endif, %true_block.1
  %.156 = phi %Expression.560401* [ %.153, %true_block.1 ], [ null, %end.endif.endif ]
  %.160 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.161 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.160, i64 0, i32 17
  %.162 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.161, align 8
  %.163 = tail call i1 %.162(%TypeChecker.560555* nonnull %.1)
  br i1 %.163, label %end.if, label %end.1.endif

end.1.endif:                                      ; preds = %end.1
  %10 = ptrtoint %Expression.560401* %.156 to i64
  %.167 = trunc i64 %10 to i32
  %.169.not = icmp eq i32 %.167, 0
  br i1 %.169.not, label %end.1.endif.endif, label %end.1.endif.if

end.1.endif.if:                                   ; preds = %end.1.endif
  %.172 = tail call i1 @is_null(%Expression.560401* %.156)
  %.174 = getelementptr inbounds %Expression.560401, %Expression.560401* %.156, i64 0, i32 4
  %.175 = load %Type.560381*, %Type.560381** %.174, align 8
  %.176 = getelementptr inbounds %Type.560381, %Type.560381* %.175, i64 0, i32 1
  %.177 = load i64, i64* %.176, align 8
  %.178 = icmp eq i64 %.177, 21
  %.179 = and i1 %.172, %.178
  br i1 %.179, label %end.1.endif.if.if, label %end.1.endif.if.endif

end.1.endif.endif:                                ; preds = %end.1.endif.if.endif.endif, %end.1.endif.if.endif.endif.if, %end.1.endif
  %.328 = phi %Type.560381* [ %.81, %end.1.endif.if.endif.endif ], [ %.270510, %end.1.endif.if.endif.endif.if ], [ %.81, %end.1.endif ]
  %.275 = getelementptr inbounds %Scope.560473, %Scope.560473* %.60, i64 0, i32 2
  %.276 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.275, align 8
  %.277 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.276, i64 0, i32 0
  %.278 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.277, align 8
  %.279 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.278, i64 0, i32 3
  %.280 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.279, align 8
  %.282 = tail call %VarId.560441* %.280(%"Map<string, VarId>.560475"* %.276, %string.560217* %.11)
  %11 = ptrtoint %VarId.560441* %.282 to i64
  %.283 = trunc i64 %11 to i32
  %.285.not = icmp eq i32 %.283, 0
  %.323 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  br i1 %.285.not, label %end.1.endif.endif.endif, label %end.1.endif.endif.if

end.1.endif.if.if:                                ; preds = %end.1.endif.if
  %.183 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.184 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.183, i64 0, i32 16
  %.185 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.184, align 8
  %.186 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.187 = bitcast i8* %.186 to %string.560217*
  %.187.repack = bitcast i8* %.186 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.187.repack, align 8
  %.187.repack6 = getelementptr inbounds i8, i8* %.186, i64 8
  %12 = bitcast i8* %.187.repack6 to i8**
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @str.315, i64 0, i64 0), i8** %12, align 8
  %.187.repack7 = getelementptr inbounds i8, i8* %.186, i64 16
  %13 = bitcast i8* %.187.repack7 to i64*
  store i64 69, i64* %13, align 8
  %.187.repack8 = getelementptr inbounds i8, i8* %.186, i64 24
  %14 = bitcast i8* %.187.repack8 to i64*
  store i64 69, i64* %14, align 8
  %.190 = getelementptr inbounds %VarDeclarationStatement.560327, %VarDeclarationStatement.560327* %.2, i64 0, i32 1
  %.191 = load %FloRange.560223*, %FloRange.560223** %.190, align 8
  tail call void %.185(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.187, %FloRange.560223* %.191)
  ret %VarDeclaration.560461* null

end.1.endif.if.endif:                             ; preds = %end.1.endif.if
  %.196 = load i64, i64* %.98, align 8
  %.197 = icmp ne i64 %.196, 21
  %.200 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.201 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.200, i64 0, i32 9
  %.202 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.201, align 8
  %.207 = tail call i1 %.202(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.81, %Type.560381* %.175)
  %.208 = xor i1 %.207, true
  %.209 = and i1 %.197, %.208
  br i1 %.209, label %end.1.endif.if.endif.if, label %end.1.endif.if.endif.endif

end.1.endif.if.endif.if:                          ; preds = %end.1.endif.if.endif
  %.213 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.214 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.213, i64 0, i32 16
  %.215 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.214, align 8
  %.219 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.213, i64 0, i32 10
  %.220 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.219, align 8
  %.222 = tail call %string.560217* %.220(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.81)
  %.225 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.226 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.225, i64 0, i32 10
  %.227 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.226, align 8
  %.230 = load %Type.560381*, %Type.560381** %.174, align 8
  %.231 = tail call %string.560217* %.227(%TypeChecker.560555* nonnull %.1, %Type.560381* %.230)
  %.232 = getelementptr inbounds %string.560217, %string.560217* %.222, i64 0, i32 0
  %.233 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.232, align 8
  %.234 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.233, i64 0, i32 11
  %.235 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.234, align 8
  %.236 = tail call i8* %.235(%string.560217* %.222)
  %.237 = getelementptr inbounds %string.560217, %string.560217* %.231, i64 0, i32 0
  %.238 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.237, align 8
  %.239 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.238, i64 0, i32 11
  %.240 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.239, align 8
  %.241 = tail call i8* %.240(%string.560217* %.231)
  %.243 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.316, i64 0, i64 0), i8* %.236, i8* %.241)
  %.244 = add i64 %.243, 1
  %.246 = tail call i8* @malloc(i64 %.244)
  %.247 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.246, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.316, i64 0, i64 0), i8* %.236, i8* %.241)
  %.248 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.249 = bitcast i8* %.248 to %string.560217*
  %.250 = bitcast i8* %.248 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.250, align 8
  %.252 = getelementptr inbounds i8, i8* %.248, i64 8
  %15 = bitcast i8* %.252 to i8**
  store i8* %.246, i8** %15, align 8
  %.254 = getelementptr inbounds i8, i8* %.248, i64 16
  %16 = bitcast i8* %.254 to i64*
  store i64 %.243, i64* %16, align 8
  %.256 = getelementptr inbounds i8, i8* %.248, i64 24
  %17 = bitcast i8* %.256 to i64*
  store i64 %.243, i64* %17, align 8
  %.259 = getelementptr inbounds %VarDeclarationStatement.560327, %VarDeclarationStatement.560327* %.2, i64 0, i32 1
  %.260 = load %FloRange.560223*, %FloRange.560223** %.259, align 8
  tail call void %.215(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.249, %FloRange.560223* %.260)
  ret %VarDeclaration.560461* null

end.1.endif.if.endif.endif:                       ; preds = %end.1.endif.if.endif
  %.265 = load i64, i64* %.98, align 8
  %.266 = icmp eq i64 %.265, 21
  br i1 %.266, label %end.1.endif.if.endif.endif.if, label %end.1.endif.endif

end.1.endif.if.endif.endif.if:                    ; preds = %end.1.endif.if.endif.endif
  %.270510 = load %Type.560381*, %Type.560381** %.174, align 8
  br label %end.1.endif.endif

end.1.endif.endif.if:                             ; preds = %end.1.endif.endif
  %.290 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.323, i64 0, i32 16
  %.291 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.290, align 8
  %.293 = getelementptr inbounds %string.560217, %string.560217* %.11, i64 0, i32 0
  %.294 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.293, align 8
  %.295 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.294, i64 0, i32 11
  %.296 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.295, align 8
  %.297 = tail call i8* %.296(%string.560217* %.11)
  %.299 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.317, i64 0, i64 0), i8* %.297)
  %.300 = add i64 %.299, 1
  %.302 = tail call i8* @malloc(i64 %.300)
  %.303 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.302, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.317, i64 0, i64 0), i8* %.297)
  %.304 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.305 = bitcast i8* %.304 to %string.560217*
  %.306 = bitcast i8* %.304 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.306, align 8
  %.308 = getelementptr inbounds i8, i8* %.304, i64 8
  %18 = bitcast i8* %.308 to i8**
  store i8* %.302, i8** %18, align 8
  %.310 = getelementptr inbounds i8, i8* %.304, i64 16
  %19 = bitcast i8* %.310 to i64*
  store i64 %.299, i64* %19, align 8
  %.312 = getelementptr inbounds i8, i8* %.304, i64 24
  %20 = bitcast i8* %.312 to i64*
  store i64 %.299, i64* %20, align 8
  %.316 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.317 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.316, i64 0, i32 2
  %.318 = load %FloRange.560223*, %FloRange.560223** %.317, align 8
  tail call void %.291(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.305, %FloRange.560223* %.318)
  ret %VarDeclaration.560461* null

end.1.endif.endif.endif:                          ; preds = %end.1.endif.endif
  %.324 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.323, i64 0, i32 24
  %.325 = load %Var.560505* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)*, %Var.560505* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)** %.324, align 8
  %.329 = tail call %Var.560505* %.325(%TypeChecker.560555* nonnull %.1, %string.560217* %.11, %Expression.560401* %.156, %Type.560381* %.328)
  %.333 = getelementptr inbounds %Var.560505, %Var.560505* %.329, i64 0, i32 2
  %.334 = load %VarId.560441*, %VarId.560441** %.333, align 8
  %.335 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.336 = bitcast i8* %.335 to %VarDeclaration.560461*
  %.337 = bitcast i8* %.335 to %VarDeclaration_vtable_ty.560462**
  store %VarDeclaration_vtable_ty.560462* @VarDeclaration_vtable_data, %VarDeclaration_vtable_ty.560462** %.337, align 8
  tail call void @VarDeclaration_constructor(%VarDeclaration.560461* %.336, %string.560217* %.11, %VarId.560441* %.334)
  ret %VarDeclaration.560461* %.336
}

define noalias %ConstDeclaration.560463* @TypeChecker_check_const_declaration(%TypeChecker.560555* %.1, %ConstDeclarationStatement.560329* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ConstDeclarationStatement.560329, %ConstDeclarationStatement.560329* %.2, i64 0, i32 3
  %.9 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.9, i64 0, i32 3
  %.11 = load %string.560217*, %string.560217** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.15, i64 0, i32 2
  %.17 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.16, align 8
  %.18 = tail call %Scope.560473* %.17(%TypeChecker.560555* %.1)
  %.22 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.22, i64 0, i32 12
  %.24 = load i1 (%TypeChecker.560555*, %string.560217*)*, i1 (%TypeChecker.560555*, %string.560217*)** %.23, align 8
  %.26 = tail call i1 %.24(%TypeChecker.560555* %.1, %string.560217* %.11)
  %.28 = getelementptr inbounds %Scope.560473, %Scope.560473* %.18, i64 0, i32 2
  %.29 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.28, align 8
  %.30 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.29, i64 0, i32 0
  %.31 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.31, i64 0, i32 3
  %.33 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.32, align 8
  %.35 = tail call %VarId.560441* %.33(%"Map<string, VarId>.560475"* %.29, %string.560217* %.11)
  %0 = ptrtoint %VarId.560441* %.35 to i64
  %.36 = trunc i64 %0 to i32
  %.38 = icmp ne i32 %.36, 0
  %.39 = or i1 %.26, %.38
  br i1 %.39, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.43 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.43, i64 0, i32 16
  %.45 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.44, align 8
  %.47 = getelementptr inbounds %string.560217, %string.560217* %.11, i64 0, i32 0
  %.48 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.48, i64 0, i32 11
  %.50 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.49, align 8
  %.51 = tail call i8* %.50(%string.560217* %.11)
  %.53 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.238, i64 0, i64 0), i8* %.51)
  %.54 = add i64 %.53, 1
  %.56 = tail call i8* @malloc(i64 %.54)
  %.57 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.238, i64 0, i64 0), i8* %.51)
  %.58 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.560217*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.53, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.53, i64* %3, align 8
  %.70 = load %IdentifierToken.560263*, %IdentifierToken.560263** %.8, align 8
  %.71 = getelementptr inbounds %IdentifierToken.560263, %IdentifierToken.560263* %.70, i64 0, i32 2
  %.72 = load %FloRange.560223*, %FloRange.560223** %.71, align 8
  tail call void %.45(%TypeChecker.560555* nonnull %.1, i64 1, %string.560217* %.59, %FloRange.560223* %.72)
  ret %ConstDeclaration.560463* null

.4.endif:                                         ; preds = %.4
  %.76 = getelementptr inbounds %ConstDeclarationStatement.560329, %ConstDeclarationStatement.560329* %.2, i64 0, i32 4
  %4 = bitcast %TypeNode.560269** %.76 to i64*
  %.771 = load i64, i64* %4, align 8
  %.78 = trunc i64 %.771 to i32
  %.80.not = icmp eq i32 %.78, 0
  br i1 %.80.not, label %false_block, label %true_block

true_block:                                       ; preds = %.4.endif
  %5 = inttoptr i64 %.771 to %TypeNode.560269*
  %.84 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.85 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.84, i64 0, i32 46
  %.86 = load %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)*, %Type.560381* (%TypeChecker.560555*, %TypeNode.560269*)** %.85, align 8
  %.90 = tail call %Type.560381* %.86(%TypeChecker.560555* nonnull %.1, %TypeNode.560269* %5)
  br label %end

false_block:                                      ; preds = %.4.endif
  %.92 = tail call %Type.560381* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.94 = phi %Type.560381* [ %.90, %true_block ], [ %.92, %false_block ]
  %.98 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.99 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.98, i64 0, i32 17
  %.100 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.99, align 8
  %.101 = tail call i1 %.100(%TypeChecker.560555* nonnull %.1)
  br i1 %.101, label %end.if, label %end.endif

end.if:                                           ; preds = %end.endif, %end
  ret %ConstDeclaration.560463* null

end.endif:                                        ; preds = %end
  %.106 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.107 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.106, i64 0, i32 72
  %.108 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.107, align 8
  %.111 = getelementptr inbounds %ConstDeclarationStatement.560329, %ConstDeclarationStatement.560329* %.2, i64 0, i32 5
  %.112 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.111, align 8
  %.113 = tail call %Expression.560401* %.108(%TypeChecker.560555* nonnull %.1, %Type.560381* %.94, %ExpressionNode.560285* %.112)
  %.117 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.118 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.117, i64 0, i32 17
  %.119 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.118, align 8
  %.120 = tail call i1 %.119(%TypeChecker.560555* nonnull %.1)
  br i1 %.120, label %end.if, label %end.endif.endif

end.endif.endif:                                  ; preds = %end.endif
  %.124 = getelementptr inbounds %Expression.560401, %Expression.560401* %.113, i64 0, i32 2
  %.125 = load i1, i1* %.124, align 1
  br i1 %.125, label %end.endif.endif.endif, label %end.endif.endif.if

end.endif.endif.if:                               ; preds = %end.endif.endif
  %.130 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 16
  %.132 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.131, align 8
  %.133 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.134 = bitcast i8* %.133 to %string.560217*
  %.134.repack = bitcast i8* %.133 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.134.repack, align 8
  %.134.repack6 = getelementptr inbounds i8, i8* %.133, i64 8
  %6 = bitcast i8* %.134.repack6 to i8**
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.318, i64 0, i64 0), i8** %6, align 8
  %.134.repack7 = getelementptr inbounds i8, i8* %.133, i64 16
  %7 = bitcast i8* %.134.repack7 to i64*
  store i64 48, i64* %7, align 8
  %.134.repack8 = getelementptr inbounds i8, i8* %.133, i64 24
  %8 = bitcast i8* %.134.repack8 to i64*
  store i64 48, i64* %8, align 8
  %.138 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.111, align 8
  %.139 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.138, i64 0, i32 1
  %.140 = load %FloRange.560223*, %FloRange.560223** %.139, align 8
  tail call void %.132(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.134, %FloRange.560223* %.140)
  ret %ConstDeclaration.560463* null

end.endif.endif.endif:                            ; preds = %end.endif.endif
  %.144 = tail call i1 @is_null(%Expression.560401* nonnull %.113)
  %.146 = getelementptr inbounds %Type.560381, %Type.560381* %.94, i64 0, i32 1
  %.147 = load i64, i64* %.146, align 8
  %.148 = icmp eq i64 %.147, 21
  %.149 = and i1 %.144, %.148
  br i1 %.149, label %end.endif.endif.endif.if, label %end.endif.endif.endif.endif

end.endif.endif.endif.if:                         ; preds = %end.endif.endif.endif
  %.153 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.154 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.153, i64 0, i32 16
  %.155 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.154, align 8
  %.156 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.157 = bitcast i8* %.156 to %string.560217*
  %.157.repack = bitcast i8* %.156 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.157.repack, align 8
  %.157.repack3 = getelementptr inbounds i8, i8* %.156, i64 8
  %9 = bitcast i8* %.157.repack3 to i8**
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @str.315, i64 0, i64 0), i8** %9, align 8
  %.157.repack4 = getelementptr inbounds i8, i8* %.156, i64 16
  %10 = bitcast i8* %.157.repack4 to i64*
  store i64 69, i64* %10, align 8
  %.157.repack5 = getelementptr inbounds i8, i8* %.156, i64 24
  %11 = bitcast i8* %.157.repack5 to i64*
  store i64 69, i64* %11, align 8
  %.160 = getelementptr inbounds %ConstDeclarationStatement.560329, %ConstDeclarationStatement.560329* %.2, i64 0, i32 1
  %.161 = load %FloRange.560223*, %FloRange.560223** %.160, align 8
  tail call void %.155(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.157, %FloRange.560223* %.161)
  ret %ConstDeclaration.560463* null

end.endif.endif.endif.endif:                      ; preds = %end.endif.endif.endif
  %.167 = icmp ne i64 %.147, 21
  %.170 = getelementptr inbounds %Expression.560401, %Expression.560401* %.113, i64 0, i32 4
  %12 = bitcast %Type.560381** %.170 to i64*
  %.1712 = load i64, i64* %12, align 8
  %13 = ptrtoint %Type.560381* %.94 to i64
  %.172 = trunc i64 %13 to i32
  %.173 = trunc i64 %.1712 to i32
  %.174 = icmp ne i32 %.172, %.173
  %.175 = and i1 %.167, %.174
  %.179 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  br i1 %.175, label %end.endif.endif.endif.endif.if, label %end.endif.endif.endif.endif.endif

end.endif.endif.endif.endif.if:                   ; preds = %end.endif.endif.endif.endif
  %.180 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.179, i64 0, i32 16
  %.181 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.180, align 8
  %.185 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.179, i64 0, i32 10
  %.186 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.185, align 8
  %.188 = tail call %string.560217* %.186(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.94)
  %.191 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.14, align 8
  %.192 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.191, i64 0, i32 10
  %.193 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.192, align 8
  %.196 = load %Type.560381*, %Type.560381** %.170, align 8
  %.197 = tail call %string.560217* %.193(%TypeChecker.560555* nonnull %.1, %Type.560381* %.196)
  %.198 = getelementptr inbounds %string.560217, %string.560217* %.188, i64 0, i32 0
  %.199 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.198, align 8
  %.200 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.199, i64 0, i32 11
  %.201 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.200, align 8
  %.202 = tail call i8* %.201(%string.560217* %.188)
  %.203 = getelementptr inbounds %string.560217, %string.560217* %.197, i64 0, i32 0
  %.204 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.203, align 8
  %.205 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.204, i64 0, i32 11
  %.206 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.205, align 8
  %.207 = tail call i8* %.206(%string.560217* %.197)
  %.209 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.316, i64 0, i64 0), i8* %.202, i8* %.207)
  %.210 = add i64 %.209, 1
  %.212 = tail call i8* @malloc(i64 %.210)
  %.213 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.212, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.316, i64 0, i64 0), i8* %.202, i8* %.207)
  %.214 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.215 = bitcast i8* %.214 to %string.560217*
  %.216 = bitcast i8* %.214 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.216, align 8
  %.218 = getelementptr inbounds i8, i8* %.214, i64 8
  %14 = bitcast i8* %.218 to i8**
  store i8* %.212, i8** %14, align 8
  %.220 = getelementptr inbounds i8, i8* %.214, i64 16
  %15 = bitcast i8* %.220 to i64*
  store i64 %.209, i64* %15, align 8
  %.222 = getelementptr inbounds i8, i8* %.214, i64 24
  %16 = bitcast i8* %.222 to i64*
  store i64 %.209, i64* %16, align 8
  %.225 = getelementptr inbounds %ConstDeclarationStatement.560329, %ConstDeclarationStatement.560329* %.2, i64 0, i32 1
  %.226 = load %FloRange.560223*, %FloRange.560223** %.225, align 8
  tail call void %.181(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.215, %FloRange.560223* %.226)
  ret %ConstDeclaration.560463* null

end.endif.endif.endif.endif.endif:                ; preds = %end.endif.endif.endif.endif
  %17 = inttoptr i64 %.1712 to %Type.560381*
  %.232 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.179, i64 0, i32 25
  %.233 = load %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)*, %Const.560507* (%TypeChecker.560555*, %string.560217*, %Expression.560401*, %Type.560381*)** %.232, align 8
  %.239 = tail call %Const.560507* %.233(%TypeChecker.560555* nonnull %.1, %string.560217* %.11, %Expression.560401* nonnull %.113, %Type.560381* %17)
  %.243 = getelementptr inbounds %Const.560507, %Const.560507* %.239, i64 0, i32 2
  %.244 = load %ConstId.560447*, %ConstId.560447** %.243, align 8
  %.245 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.246 = bitcast i8* %.245 to %ConstDeclaration.560463*
  %.247 = bitcast i8* %.245 to %ConstDeclaration_vtable_ty.560464**
  store %ConstDeclaration_vtable_ty.560464* @ConstDeclaration_vtable_data, %ConstDeclaration_vtable_ty.560464** %.247, align 8
  tail call void @ConstDeclaration_constructor(%ConstDeclaration.560463* %.246, %string.560217* %.11, %ConstId.560447* %.244)
  ret %ConstDeclaration.560463* %.246
}

define noalias %ForStatement.560465* @TypeChecker_check_for_statement(%TypeChecker.560555* %.1, %ForStatementNode.560323* nocapture readonly %.2) {
.4:
  %.7 = tail call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.8 = bitcast i8* %.7 to %ForStatement.560465*
  %.9 = bitcast i8* %.7 to %ForStatement_vtable_ty.560466**
  store %ForStatement_vtable_ty.560466* @ForStatement_vtable_data, %ForStatement_vtable_ty.560466** %.9, align 8
  tail call void @ForStatement_constructor(%ForStatement.560465* %.8)
  %.14 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 8
  %.15 = load i1, i1* %.14, align 1
  %.18 = getelementptr inbounds %ForStatementNode.560323, %ForStatementNode.560323* %.2, i64 0, i32 7
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp eq i64 %.19, 0
  br i1 %.20, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %ForStatementNode.560323, %ForStatementNode.560323* %.2, i64 0, i32 3
  %0 = bitcast %StatementNode.560279** %.23 to i64*
  %.241 = load i64, i64* %0, align 8
  %.25 = trunc i64 %.241 to i32
  %.27.not = icmp eq i32 %.25, 0
  br i1 %.27.not, label %.4.if.endif, label %.4.if.if

.4.endif:                                         ; preds = %.4.if.endif.endif.if, %.4.if.endif.endif, %.4
  store i1 true, i1* %.14, align 1
  %.89 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.90 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.89, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.90, i64 0, i32 83
  %.92 = load %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)*, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)** %.91, align 8
  %.94 = getelementptr inbounds %ForStatementNode.560323, %ForStatementNode.560323* %.2, i64 0, i32 9
  %.95 = load %BlockNode.560281*, %BlockNode.560281** %.94, align 8
  %.96 = tail call %Block.560455* %.92(%TypeChecker.560555* nonnull %.1, %BlockNode.560281* %.95)
  %.97 = getelementptr inbounds i8, i8* %.7, i64 40
  %1 = bitcast i8* %.97 to %Block.560455**
  store %Block.560455* %.96, %Block.560455** %1, align 8
  store i1 %.15, i1* %.14, align 1
  ret %ForStatement.560465* %.8

.4.if.if:                                         ; preds = %.4.if
  %2 = inttoptr i64 %.241 to %StatementNode.560279*
  %.31 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.32 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.32, i64 0, i32 82
  %.34 = load %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)*, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)** %.33, align 8
  %.38 = tail call %Statement.560393* %.34(%TypeChecker.560555* nonnull %.1, %StatementNode.560279* %2)
  %.39 = getelementptr inbounds i8, i8* %.7, i64 16
  %3 = bitcast i8* %.39 to %Statement.560393**
  store %Statement.560393* %.38, %Statement.560393** %3, align 8
  br label %.4.if.endif

.4.if.endif:                                      ; preds = %.4.if, %.4.if.if
  %.43 = getelementptr inbounds %ForStatementNode.560323, %ForStatementNode.560323* %.2, i64 0, i32 4
  %4 = bitcast %ExpressionNode.560285** %.43 to i64*
  %.442 = load i64, i64* %4, align 8
  %.45 = trunc i64 %.442 to i32
  %.47.not = icmp eq i32 %.45, 0
  br i1 %.47.not, label %.4.if.endif.endif, label %.4.if.endif.if

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %5 = inttoptr i64 %.442 to %ExpressionNode.560285*
  %.51 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.52 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.51, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.52, i64 0, i32 73
  %.54 = load %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)** %.53, align 8
  %.58 = tail call %Expression.560401* %.54(%TypeChecker.560555* nonnull %.1, %ExpressionNode.560285* %5)
  %.59 = getelementptr inbounds i8, i8* %.7, i64 24
  %6 = bitcast i8* %.59 to %Expression.560401**
  store %Expression.560401* %.58, %Expression.560401** %6, align 8
  br label %.4.if.endif.endif

.4.if.endif.endif:                                ; preds = %.4.if.endif, %.4.if.endif.if
  %.63 = getelementptr inbounds %ForStatementNode.560323, %ForStatementNode.560323* %.2, i64 0, i32 5
  %7 = bitcast %ExpressionNode.560285** %.63 to i64*
  %.643 = load i64, i64* %7, align 8
  %.65 = trunc i64 %.643 to i32
  %.67.not = icmp eq i32 %.65, 0
  br i1 %.67.not, label %.4.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.71 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.72 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.71, align 8
  %.73 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.72, i64 0, i32 72
  %.74 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.73, align 8
  %.75 = tail call %Type.560381* @Type_unknown()
  %.78 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.63, align 8
  %.79 = tail call %Expression.560401* %.74(%TypeChecker.560555* nonnull %.1, %Type.560381* %.75, %ExpressionNode.560285* %.78)
  %.80 = getelementptr inbounds i8, i8* %.7, i64 32
  %8 = bitcast i8* %.80 to %Expression.560401**
  store %Expression.560401* %.79, %Expression.560401** %8, align 8
  br label %.4.endif
}

define noalias %WhileStatement.560467* @TypeChecker_check_while_statment(%TypeChecker.560555* %.1, %WhileStatementNode.560321* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 73
  %.11 = load %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %ExpressionNode.560285*)** %.10, align 8
  %.13 = getelementptr inbounds %WhileStatementNode.560321, %WhileStatementNode.560321* %.2, i64 0, i32 3
  %.14 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.13, align 8
  %.15 = tail call %Expression.560401* %.11(%TypeChecker.560555* %.1, %ExpressionNode.560285* %.14)
  %.18 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 8
  %.19 = load i1, i1* %.18, align 1
  store i1 true, i1* %.18, align 1
  %.26 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.26, i64 0, i32 83
  %.28 = load %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)*, %Block.560455* (%TypeChecker.560555*, %BlockNode.560281*)** %.27, align 8
  %.30 = getelementptr inbounds %WhileStatementNode.560321, %WhileStatementNode.560321* %.2, i64 0, i32 4
  %.31 = load %BlockNode.560281*, %BlockNode.560281** %.30, align 8
  %.32 = tail call %Block.560455* %.28(%TypeChecker.560555* %.1, %BlockNode.560281* %.31)
  store i1 %.19, i1* %.18, align 1
  %.40 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %WhileStatement.560467*
  %.42 = bitcast i8* %.40 to %WhileStatement_vtable_ty.560468**
  store %WhileStatement_vtable_ty.560468* @WhileStatement_vtable_data, %WhileStatement_vtable_ty.560468** %.42, align 8
  tail call void @WhileStatement_constructor(%WhileStatement.560467* %.41, %Expression.560401* %.15, %Block.560455* %.32)
  ret %WhileStatement.560467* %.41
}

define noalias %Statement.560393* @TypeChecker_check_can_break(%TypeChecker.560555* %.1, %StatementNode.560279* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 8
  %.9 = load i1, i1* %.8, align 1
  br i1 %.9, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.14, i64 0, i32 16
  %.16 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.15, align 8
  %.17 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.560217*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.18.repack, align 8
  %.18.repack1 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.18.repack1 to i8**
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.319, i64 0, i64 0), i8** %0, align 8
  %.18.repack2 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.18.repack2 to i64*
  store i64 29, i64* %1, align 8
  %.18.repack3 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.18.repack3 to i64*
  store i64 29, i64* %2, align 8
  %.21 = getelementptr inbounds %StatementNode.560279, %StatementNode.560279* %.2, i64 0, i32 1
  %.22 = load %FloRange.560223*, %FloRange.560223** %.21, align 8
  tail call void %.16(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.18, %FloRange.560223* %.22)
  ret %Statement.560393* null

.4.endif:                                         ; preds = %.4
  %.25 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.26 = bitcast i8* %.25 to %Statement.560393*
  %.27 = bitcast i8* %.25 to %Statement_vtable_ty.560394**
  store %Statement_vtable_ty.560394* @Statement_vtable_data, %Statement_vtable_ty.560394** %.27, align 8
  tail call void @Statement_constructor(%Statement.560393* %.26, i64 6)
  ret %Statement.560393* %.26
}

define noalias %Statement.560393* @TypeChecker_check_can_continue(%TypeChecker.560555* %.1, %StatementNode.560279* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 8
  %.9 = load i1, i1* %.8, align 1
  br i1 %.9, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.14, i64 0, i32 16
  %.16 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.15, align 8
  %.17 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.560217*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.18.repack, align 8
  %.18.repack1 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.18.repack1 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.320, i64 0, i64 0), i8** %0, align 8
  %.18.repack2 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.18.repack2 to i64*
  store i64 32, i64* %1, align 8
  %.18.repack3 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.18.repack3 to i64*
  store i64 32, i64* %2, align 8
  %.21 = getelementptr inbounds %StatementNode.560279, %StatementNode.560279* %.2, i64 0, i32 1
  %.22 = load %FloRange.560223*, %FloRange.560223** %.21, align 8
  tail call void %.16(%TypeChecker.560555* nonnull %.1, i64 4, %string.560217* %.18, %FloRange.560223* %.22)
  ret %Statement.560393* null

.4.endif:                                         ; preds = %.4
  %.25 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.26 = bitcast i8* %.25 to %Statement.560393*
  %.27 = bitcast i8* %.25 to %Statement_vtable_ty.560394**
  store %Statement_vtable_ty.560394* @Statement_vtable_data, %Statement_vtable_ty.560394** %.27, align 8
  tail call void @Statement_constructor(%Statement.560393* %.26, i64 5)
  ret %Statement.560393* %.26
}

define noalias %ReturnStatement.560469* @TypeChecker_check_can_return(%TypeChecker.560555* %.1, %ReturnStatementNode.560325* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ReturnStatementNode.560325, %ReturnStatementNode.560325* %.2, i64 0, i32 3
  %.9 = load %ExpressionNode.560285*, %ExpressionNode.560285** %.8, align 8
  %.12 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.13 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  %.14 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.13, i64 0, i32 5
  %.15 = load %FunctionType.560387* (%TypeChecker.560555*)*, %FunctionType.560387* (%TypeChecker.560555*)** %.14, align 8
  %.16 = tail call %FunctionType.560387* %.15(%TypeChecker.560555* %.1)
  %.17 = getelementptr inbounds %FunctionType.560387, %FunctionType.560387* %.16, i64 0, i32 3
  %.18 = load %Type.560381*, %Type.560381** %.17, align 8
  %.20 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.21 = bitcast i8* %.20 to %ReturnStatement.560469*
  %.22 = bitcast i8* %.20 to %ReturnStatement_vtable_ty.560470**
  store %ReturnStatement_vtable_ty.560470* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.560470** %.22, align 8
  tail call void @ReturnStatement_constructor(%ReturnStatement.560469* %.21)
  %0 = ptrtoint %ExpressionNode.560285* %.9 to i64
  %.27 = trunc i64 %0 to i32
  %.29.not = icmp eq i32 %.27, 0
  br i1 %.29.not, label %.4.else, label %.4.if

.4.if:                                            ; preds = %.4
  %.33 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  %.34 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.33, i64 0, i32 72
  %.35 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.34, align 8
  %.38 = tail call %Expression.560401* %.35(%TypeChecker.560555* nonnull %.1, %Type.560381* %.18, %ExpressionNode.560285* %.9)
  %.42 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  %.43 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.42, i64 0, i32 17
  %.44 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.43, align 8
  %.45 = tail call i1 %.44(%TypeChecker.560555* nonnull %.1)
  %1 = ptrtoint %Expression.560401* %.38 to i64
  br i1 %.45, label %.4.endif, label %.4.if.endif

.4.else:                                          ; preds = %.4
  %.136 = getelementptr inbounds %Type.560381, %Type.560381* %.18, i64 0, i32 1
  %.137 = load i64, i64* %.136, align 8
  %.138.not = icmp eq i64 %.137, 12
  br i1 %.138.not, label %.4.endif, label %.4.else.if

.4.endif:                                         ; preds = %.4.else, %.4.if, %.4.if.endif.endif.endif
  %merge = phi %ReturnStatement.560469* [ %.21, %.4.if.endif.endif.endif ], [ null, %.4.if ], [ %.21, %.4.else ]
  ret %ReturnStatement.560469* %merge

.4.if.endif:                                      ; preds = %.4.if
  %.49 = getelementptr inbounds %Type.560381, %Type.560381* %.18, i64 0, i32 1
  %.50 = load i64, i64* %.49, align 8
  %.51 = icmp eq i64 %.50, 12
  %.55 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  br i1 %.51, label %.4.if.endif.if, label %.4.if.endif.endif

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.56 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.55, i64 0, i32 16
  %.57 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.56, align 8
  %.58 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.560217*
  %.59.repack = bitcast i8* %.58 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.59.repack, align 8
  %.59.repack5 = getelementptr inbounds i8, i8* %.58, i64 8
  %2 = bitcast i8* %.59.repack5 to i8**
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.321, i64 0, i64 0), i8** %2, align 8
  %.59.repack6 = getelementptr inbounds i8, i8* %.58, i64 16
  %3 = bitcast i8* %.59.repack6 to i64*
  store i64 54, i64* %3, align 8
  %.59.repack7 = getelementptr inbounds i8, i8* %.58, i64 24
  %4 = bitcast i8* %.59.repack7 to i64*
  store i64 54, i64* %4, align 8
  %.62 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.9, i64 0, i32 1
  %.63 = load %FloRange.560223*, %FloRange.560223** %.62, align 8
  tail call void %.57(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.59, %FloRange.560223* %.63)
  ret %ReturnStatement.560469* null

.4.if.endif.endif:                                ; preds = %.4.if.endif
  %.69 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.55, i64 0, i32 9
  %.70 = load i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)*, i1 (%TypeChecker.560555*, %Type.560381*, %Type.560381*)** %.69, align 8
  %.73 = getelementptr inbounds %Expression.560401, %Expression.560401* %.38, i64 0, i32 4
  %.74 = load %Type.560381*, %Type.560381** %.73, align 8
  %.75 = tail call i1 %.70(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.18, %Type.560381* %.74)
  br i1 %.75, label %.4.if.endif.endif.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.80 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  %.81 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.80, i64 0, i32 16
  %.82 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.81, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.80, i64 0, i32 10
  %.87 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.86, align 8
  %.89 = tail call %string.560217* %.87(%TypeChecker.560555* nonnull %.1, %Type.560381* nonnull %.18)
  %.92 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  %.93 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.92, i64 0, i32 10
  %.94 = load %string.560217* (%TypeChecker.560555*, %Type.560381*)*, %string.560217* (%TypeChecker.560555*, %Type.560381*)** %.93, align 8
  %.97 = load %Type.560381*, %Type.560381** %.73, align 8
  %.98 = tail call %string.560217* %.94(%TypeChecker.560555* nonnull %.1, %Type.560381* %.97)
  %.99 = getelementptr inbounds %string.560217, %string.560217* %.89, i64 0, i32 0
  %.100 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.99, align 8
  %.101 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.100, i64 0, i32 11
  %.102 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.101, align 8
  %.103 = tail call i8* %.102(%string.560217* %.89)
  %.104 = getelementptr inbounds %string.560217, %string.560217* %.98, i64 0, i32 0
  %.105 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.104, align 8
  %.106 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.105, i64 0, i32 11
  %.107 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.106, align 8
  %.108 = tail call i8* %.107(%string.560217* %.98)
  %.110 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.322, i64 0, i64 0), i8* %.103, i8* %.108)
  %.111 = add i64 %.110, 1
  %.113 = tail call i8* @malloc(i64 %.111)
  %.114 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.113, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.322, i64 0, i64 0), i8* %.103, i8* %.108)
  %.115 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.116 = bitcast i8* %.115 to %string.560217*
  %.117 = bitcast i8* %.115 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.117, align 8
  %.119 = getelementptr inbounds i8, i8* %.115, i64 8
  %5 = bitcast i8* %.119 to i8**
  store i8* %.113, i8** %5, align 8
  %.121 = getelementptr inbounds i8, i8* %.115, i64 16
  %6 = bitcast i8* %.121 to i64*
  store i64 %.110, i64* %6, align 8
  %.123 = getelementptr inbounds i8, i8* %.115, i64 24
  %7 = bitcast i8* %.123 to i64*
  store i64 %.110, i64* %7, align 8
  %.126 = getelementptr inbounds %ExpressionNode.560285, %ExpressionNode.560285* %.9, i64 0, i32 1
  %.127 = load %FloRange.560223*, %FloRange.560223** %.126, align 8
  tail call void %.82(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.116, %FloRange.560223* %.127)
  ret %ReturnStatement.560469* null

.4.if.endif.endif.endif:                          ; preds = %.4.if.endif.endif
  %.132 = getelementptr inbounds i8, i8* %.20, i64 16
  %8 = bitcast i8* %.132 to i64*
  store i64 %1, i64* %8, align 8
  br label %.4.endif

.4.else.if:                                       ; preds = %.4.else
  %.142 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.12, align 8
  %.143 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.142, i64 0, i32 16
  %.144 = load void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)*, void (%TypeChecker.560555*, i64, %string.560217*, %FloRange.560223*)** %.143, align 8
  %.145 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.146 = bitcast i8* %.145 to %string.560217*
  %.146.repack = bitcast i8* %.145 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.146.repack, align 8
  %.146.repack1 = getelementptr inbounds i8, i8* %.145, i64 8
  %9 = bitcast i8* %.146.repack1 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.323, i64 0, i64 0), i8** %9, align 8
  %.146.repack2 = getelementptr inbounds i8, i8* %.145, i64 16
  %10 = bitcast i8* %.146.repack2 to i64*
  store i64 32, i64* %10, align 8
  %.146.repack3 = getelementptr inbounds i8, i8* %.145, i64 24
  %11 = bitcast i8* %.146.repack3 to i64*
  store i64 32, i64* %11, align 8
  %.149 = getelementptr inbounds %ReturnStatementNode.560325, %ReturnStatementNode.560325* %.2, i64 0, i32 1
  %.150 = load %FloRange.560223*, %FloRange.560223** %.149, align 8
  tail call void %.144(%TypeChecker.560555* nonnull %.1, i64 5, %string.560217* %.146, %FloRange.560223* %.150)
  ret %ReturnStatement.560469* null
}

define %Statement.560393* @TypeChecker_check_statement(%TypeChecker.560555* %.1, %StatementNode.560279* %.2) {
.4:
  %.8 = getelementptr inbounds %StatementNode.560279, %StatementNode.560279* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 2, label %.4.endif.endif.if
    i64 3, label %.4.endif.endif.endif.if
    i64 4, label %.4.endif.endif.endif.endif.if
    i64 5, label %.4.endif.endif.endif.endif.endif.if
    i64 6, label %.4.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.14, i64 0, i32 74
  %.16 = load %IfStatement.560459* (%TypeChecker.560555*, %IfStatementNode.560319*)*, %IfStatement.560459* (%TypeChecker.560555*, %IfStatementNode.560319*)** %.15, align 8
  %.18 = bitcast %StatementNode.560279* %.2 to %IfStatementNode.560319*
  %.19 = tail call %IfStatement.560459* %.16(%TypeChecker.560555* %.1, %IfStatementNode.560319* %.18)
  %.20 = bitcast %IfStatement.560459* %.19 to %Statement.560393*
  ret %Statement.560393* %.20

.4.endif.if:                                      ; preds = %.4
  %.28 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.29 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.28, align 8
  %.30 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.29, i64 0, i32 75
  %.31 = load %VarDeclaration.560461* (%TypeChecker.560555*, %VarDeclarationStatement.560327*)*, %VarDeclaration.560461* (%TypeChecker.560555*, %VarDeclarationStatement.560327*)** %.30, align 8
  %.33 = bitcast %StatementNode.560279* %.2 to %VarDeclarationStatement.560327*
  %.34 = tail call %VarDeclaration.560461* %.31(%TypeChecker.560555* %.1, %VarDeclarationStatement.560327* %.33)
  %.35 = bitcast %VarDeclaration.560461* %.34 to %Statement.560393*
  ret %Statement.560393* %.35

.4.endif.endif.if:                                ; preds = %.4
  %.43 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.44 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.43, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.44, i64 0, i32 76
  %.46 = load %ConstDeclaration.560463* (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)*, %ConstDeclaration.560463* (%TypeChecker.560555*, %ConstDeclarationStatement.560329*)** %.45, align 8
  %.48 = bitcast %StatementNode.560279* %.2 to %ConstDeclarationStatement.560329*
  %.49 = tail call %ConstDeclaration.560463* %.46(%TypeChecker.560555* %.1, %ConstDeclarationStatement.560329* %.48)
  %.50 = bitcast %ConstDeclaration.560463* %.49 to %Statement.560393*
  ret %Statement.560393* %.50

.4.endif.endif.endif.if:                          ; preds = %.4
  %.58 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.59 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.58, align 8
  %.60 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.59, i64 0, i32 77
  %.61 = load %ForStatement.560465* (%TypeChecker.560555*, %ForStatementNode.560323*)*, %ForStatement.560465* (%TypeChecker.560555*, %ForStatementNode.560323*)** %.60, align 8
  %.63 = bitcast %StatementNode.560279* %.2 to %ForStatementNode.560323*
  %.64 = tail call %ForStatement.560465* %.61(%TypeChecker.560555* %.1, %ForStatementNode.560323* %.63)
  %.65 = bitcast %ForStatement.560465* %.64 to %Statement.560393*
  ret %Statement.560393* %.65

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.73 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.74 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.73, align 8
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.74, i64 0, i32 78
  %.76 = load %WhileStatement.560467* (%TypeChecker.560555*, %WhileStatementNode.560321*)*, %WhileStatement.560467* (%TypeChecker.560555*, %WhileStatementNode.560321*)** %.75, align 8
  %.78 = bitcast %StatementNode.560279* %.2 to %WhileStatementNode.560321*
  %.79 = tail call %WhileStatement.560467* %.76(%TypeChecker.560555* %.1, %WhileStatementNode.560321* %.78)
  %.80 = bitcast %WhileStatement.560467* %.79 to %Statement.560393*
  ret %Statement.560393* %.80

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4
  %.88 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.89 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.88, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.89, i64 0, i32 80
  %.91 = load %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)*, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)** %.90, align 8
  %.93 = tail call %Statement.560393* %.91(%TypeChecker.560555* %.1, %StatementNode.560279* nonnull %.2)
  ret %Statement.560393* %.93

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4
  %.101 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.102 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.101, align 8
  %.103 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.102, i64 0, i32 79
  %.104 = load %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)*, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)** %.103, align 8
  %.106 = tail call %Statement.560393* %.104(%TypeChecker.560555* %.1, %StatementNode.560279* nonnull %.2)
  ret %Statement.560393* %.106

.4.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.4
  %.114 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.115 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.114, align 8
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.115, i64 0, i32 81
  %.117 = load %ReturnStatement.560469* (%TypeChecker.560555*, %ReturnStatementNode.560325*)*, %ReturnStatement.560469* (%TypeChecker.560555*, %ReturnStatementNode.560325*)** %.116, align 8
  %.119 = bitcast %StatementNode.560279* %.2 to %ReturnStatementNode.560325*
  %.120 = tail call %ReturnStatement.560469* %.117(%TypeChecker.560555* %.1, %ReturnStatementNode.560325* %.119)
  %.121 = bitcast %ReturnStatement.560469* %.120 to %Statement.560393*
  ret %Statement.560393* %.121

.4.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4
  %.129 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.130 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.129, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.130, i64 0, i32 72
  %.132 = load %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)*, %Expression.560401* (%TypeChecker.560555*, %Type.560381*, %ExpressionNode.560285*)** %.131, align 8
  %.133 = tail call %Type.560381* @Type_unknown()
  %.135 = bitcast %StatementNode.560279* %.2 to %ExpressionNode.560285*
  %.136 = tail call %Expression.560401* %.132(%TypeChecker.560555* %.1, %Type.560381* %.133, %ExpressionNode.560285* %.135)
  %.137 = bitcast %Expression.560401* %.136 to %Statement.560393*
  ret %Statement.560393* %.137

.4.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.4
  ret %Statement.560393* null
}

define %Block.560455* @TypeChecker_check_block(%TypeChecker.560555* %.1, %BlockNode.560281* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.9, i64 0, i32 17
  %.11 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.10, align 8
  %.12 = tail call i1 %.11(%TypeChecker.560555* %.1)
  br i1 %.12, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %for.body, %.4
  ret %Block.560455* null

.4.endif:                                         ; preds = %.4
  %.15 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.16 = bitcast i8* %.15 to %Block.560455*
  %.17 = bitcast i8* %.15 to %Block_vtable_ty.560456**
  store %Block_vtable_ty.560456* @Block_vtable_data, %Block_vtable_ty.560456** %.17, align 8
  tail call void @Block_constructor(%Block.560455* %.16)
  %.23 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.23, i64 0, i32 15
  %.25 = load %Scope.560473* (%TypeChecker.560555*)*, %Scope.560473* (%TypeChecker.560555*)** %.24, align 8
  %.26 = tail call %Scope.560473* %.25(%TypeChecker.560555* nonnull %.1)
  %.30 = getelementptr inbounds %Scope.560473, %Scope.560473* %.26, i64 0, i32 1
  %0 = bitcast %ScopeId.560471** %.30 to i64*
  %.311 = load i64, i64* %0, align 8
  %.32 = getelementptr inbounds %TypeChecker.560555, %TypeChecker.560555* %.1, i64 0, i32 6
  %1 = bitcast %ScopeId.560471** %.32 to i64*
  store i64 %.311, i64* %1, align 8
  %.39 = getelementptr inbounds %BlockNode.560281, %BlockNode.560281* %.2, i64 0, i32 2
  %.4011 = load %"Array<StatementNode>.560283"*, %"Array<StatementNode>.560283"** %.39, align 8
  %.4112 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.4011, i64 0, i32 2
  %.4213 = load i64, i64* %.4112, align 8
  %.4314 = icmp sgt i64 %.4213, 0
  br i1 %.4314, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.endif
  %.70 = getelementptr inbounds i8, i8* %.15, i64 8
  %2 = bitcast i8* %.70 to %"Array<Statement>.560457"**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif.endif.endif
  %.4016 = phi %"Array<StatementNode>.560283"* [ %.4011, %for.body.lr.ph ], [ %.40, %for.body.endif.endif.endif.endif.endif ]
  %storemerge15 = phi i64 [ 0, %for.body.lr.ph ], [ %.142, %for.body.endif.endif.endif.endif.endif ]
  %.47 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.48 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.47, i64 0, i32 82
  %.49 = load %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)*, %Statement.560393* (%TypeChecker.560555*, %StatementNode.560279*)** %.48, align 8
  %.54 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.4016, i64 0, i32 0
  %.55 = load %"Array<StatementNode>_vtable_ty.560284"*, %"Array<StatementNode>_vtable_ty.560284"** %.54, align 8
  %.56 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.560284", %"Array<StatementNode>_vtable_ty.560284"* %.55, i64 0, i32 5
  %.57 = load %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)*, %StatementNode.560279* (%"Array<StatementNode>.560283"*, i64)** %.56, align 8
  %.58 = tail call %StatementNode.560279* %.57(%"Array<StatementNode>.560283"* %.4016, i64 %storemerge15)
  %.59 = tail call %Statement.560393* %.49(%TypeChecker.560555* nonnull %.1, %StatementNode.560279* %.58)
  %.63 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.8, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.63, i64 0, i32 17
  %.65 = load i1 (%TypeChecker.560555*)*, i1 (%TypeChecker.560555*)** %.64, align 8
  %.66 = tail call i1 %.65(%TypeChecker.560555* nonnull %.1)
  br i1 %.66, label %.4.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif.endif.endif, %.4.endif, %for.body.endif.endif.endif.endif.if, %for.body.endif.endif.endif.if, %for.body.endif.endif.if.if.if, %for.body.endif.if
  %.147 = getelementptr inbounds %Scope.560473, %Scope.560473* %.26, i64 0, i32 6
  %3 = bitcast %ScopeId.560471** %.147 to i64*
  %.1482 = load i64, i64* %3, align 8
  store i64 %.1482, i64* %1, align 8
  ret %Block.560455* %.16

for.body.endif:                                   ; preds = %for.body
  %.71 = load %"Array<Statement>.560457"*, %"Array<Statement>.560457"** %2, align 8
  %.73 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.71, i64 0, i32 0
  %.74 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.73, align 8
  %.75 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.74, i64 0, i32 2
  %.76 = load void (%"Array<Statement>.560457"*, %Statement.560393*)*, void (%"Array<Statement>.560457"*, %Statement.560393*)** %.75, align 8
  tail call void %.76(%"Array<Statement>.560457"* %.71, %Statement.560393* %.59)
  %.79 = getelementptr inbounds %Statement.560393, %Statement.560393* %.59, i64 0, i32 1
  %.80 = load i64, i64* %.79, align 8
  switch i64 %.80, label %for.body.endif.endif.endif.endif.endif [
    i64 7, label %for.body.endif.if
    i64 0, label %for.body.endif.endif.if
    i64 5, label %for.body.endif.endif.endif.if
    i64 6, label %for.body.endif.endif.endif.endif.if
  ]

for.body.endif.if:                                ; preds = %for.body.endif
  %.84 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.84 to i1*
  store i1 true, i1* %4, align 1
  br label %for.end

for.body.endif.endif.if:                          ; preds = %for.body.endif
  %.96 = getelementptr inbounds %Statement.560393, %Statement.560393* %.59, i64 2
  %5 = bitcast %Statement.560393* %.96 to i64*
  %.975 = load i64, i64* %5, align 8
  %.98 = trunc i64 %.975 to i32
  %.100.not = icmp eq i32 %.98, 0
  br i1 %.100.not, label %for.body.endif.endif.endif.endif.endif, label %for.body.endif.endif.if.if

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %6 = inttoptr i64 %.975 to %Block.560455*
  %.103 = getelementptr inbounds %Statement.560393, %Statement.560393* %.59, i64 1, i32 1
  %7 = bitcast i64* %.103 to %Block.560455**
  %.104 = load %Block.560455*, %Block.560455** %7, align 8
  %.105 = getelementptr inbounds %Block.560455, %Block.560455* %.104, i64 0, i32 2
  %.106 = load i1, i1* %.105, align 1
  %.110 = getelementptr inbounds %Block.560455, %Block.560455* %6, i64 0, i32 2
  %.111 = load i1, i1* %.110, align 1
  %.112 = and i1 %.106, %.111
  br i1 %.112, label %for.body.endif.endif.if.if.if, label %for.body.endif.endif.endif.endif.endif

for.body.endif.endif.if.if.if:                    ; preds = %for.body.endif.endif.if.if
  %.115 = getelementptr inbounds i8, i8* %.15, i64 16
  %8 = bitcast i8* %.115 to i1*
  store i1 true, i1* %8, align 1
  br label %for.end

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif
  %.126 = getelementptr inbounds i8, i8* %.15, i64 17
  %9 = bitcast i8* %.126 to i1*
  store i1 true, i1* %9, align 1
  br label %for.end

for.body.endif.endif.endif.endif.if:              ; preds = %for.body.endif
  %.135 = getelementptr inbounds i8, i8* %.15, i64 18
  %10 = bitcast i8* %.135 to i1*
  store i1 true, i1* %10, align 1
  br label %for.end

for.body.endif.endif.endif.endif.endif:           ; preds = %for.body.endif, %for.body.endif.endif.if.if, %for.body.endif.endif.if
  %.142 = add nuw nsw i64 %storemerge15, 1
  %.40 = load %"Array<StatementNode>.560283"*, %"Array<StatementNode>.560283"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<StatementNode>.560283", %"Array<StatementNode>.560283"* %.40, i64 0, i32 2
  %.42 = load i64, i64* %.41, align 8
  %.43 = icmp slt i64 %.142, %.42
  br i1 %.43, label %for.body, label %for.end
}

declare void @LLVMShutdown() local_unnamed_addr

declare void @LLVMDisposeMessage(i8*) local_unnamed_addr

declare %LLVMContextRef.560564* @LLVMContextCreate() local_unnamed_addr

declare %LLVMModuleRef.560565* @LLVMModuleCreateWithNameInContext(i8*, %LLVMContextRef.560564*) local_unnamed_addr

declare void @LLVMSetDataLayout(%LLVMModuleRef.560565*, i8*) local_unnamed_addr

declare void @LLVMSetTarget(%LLVMModuleRef.560565*, i8*) local_unnamed_addr

declare i1 @LLVMPrintModuleToFile(%LLVMModuleRef.560565*, i8*, i8**) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMAddFunction(%LLVMModuleRef.560565*, i8*, %LLVMTypeRef.560566*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMGetNamedFunction(%LLVMModuleRef.560565*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMGetFirstFunction(%LLVMModuleRef.560565*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMGetNextFunction(%LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMInt1TypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMInt16TypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMInt32TypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMInt64TypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMInt128TypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564*, i64) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMInt32Type() local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMHalfTypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMFloatTypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMDoubleTypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMFunctionType(%LLVMTypeRef.560566*, %LLVMTypeRef.560566**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMStructTypeInContext(%LLVMContextRef.560564*, %LLVMTypeRef.560566**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMStructCreateNamed(%LLVMContextRef.560564*, i8*) local_unnamed_addr

declare void @LLVMStructSetBody(%LLVMTypeRef.560566*, %LLVMTypeRef.560566**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMArrayType(%LLVMTypeRef.560566*, i64) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566*, i64) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMVoidTypeInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVMTypeOf(%LLVMValueRef.560567*) local_unnamed_addr

declare i1 @LLVMIsConstant(%LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstNull(%LLVMTypeRef.560566*) local_unnamed_addr

declare i1 @LLVMIsNull(%LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstInt(%LLVMTypeRef.560566*, i64, i1) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstReal(%LLVMTypeRef.560566*, double) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstStructInContext(%LLVMContextRef.560564*, %LLVMValueRef.560567**, i64, i1) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstArray(%LLVMTypeRef.560566*, %LLVMValueRef.560567**, i64) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMSizeOf(%LLVMTypeRef.560566*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstNeg(%LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstNot(%LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstAdd(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstSub(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstMul(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstAnd(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstOr(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstXor(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstICmp(i64, %LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstFCmp(i64, %LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstShl(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstAShr(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstSIToFP(%LLVMValueRef.560567*, %LLVMTypeRef.560566*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstFPToSI(%LLVMValueRef.560567*, %LLVMTypeRef.560566*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstBitCast(%LLVMValueRef.560567*, %LLVMTypeRef.560566*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstIntCast(%LLVMValueRef.560567*, %LLVMTypeRef.560566*, i1) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMConstFPCast(%LLVMValueRef.560567*, %LLVMTypeRef.560566*) local_unnamed_addr

declare void @LLVMSetLinkage(%LLVMValueRef.560567*, i64) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMAddGlobal(%LLVMModuleRef.560565*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMGetInitializer(%LLVMValueRef.560567*) local_unnamed_addr

declare void @LLVMSetInitializer(%LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare i1 @LLVMIsGlobalConstant(%LLVMValueRef.560567*) local_unnamed_addr

declare void @LLVMSetGlobalConstant(%LLVMValueRef.560567*, i1) local_unnamed_addr

declare i64 @LLVMGetAlignment(%LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMGetParam(%LLVMValueRef.560567*, i64) local_unnamed_addr

declare %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(%LLVMBasicBlockRef.560568*) local_unnamed_addr

declare %LLVMTypeRef.560566* @LLVM_GetFunctionType(%LLVMValueRef.560567*) local_unnamed_addr

declare void @LLVMAddIncoming(%LLVMValueRef.560567*, %LLVMValueRef.560567**, %LLVMBasicBlockRef.560568**, i64) local_unnamed_addr

declare %LLVMBuilderRef.560572* @LLVMCreateBuilderInContext(%LLVMContextRef.560564*) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572*, %LLVMBasicBlockRef.560568*) local_unnamed_addr

declare void @LLVMDisposeBuilder(%LLVMBuilderRef.560572*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildRetVoid(%LLVMBuilderRef.560572*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildRet(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572*, %LLVMBasicBlockRef.560568*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildCondBr(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMBasicBlockRef.560568*, %LLVMBasicBlockRef.560568*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildAdd(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFAdd(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildSub(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFSub(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildMul(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFMul(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildSDiv(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFDiv(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildSRem(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFRem(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildShl(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildAShr(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildAnd(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildOr(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildXor(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildNeg(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFNeg(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildNot(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildMalloc(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildArrayMalloc(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildMemSet(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i64) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildMemCpy(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, i64, %LLVMValueRef.560567*, i64, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildMemMove(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, i64, %LLVMValueRef.560567*, i64, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildArrayAlloca(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFree(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, %LLVMValueRef.560567*, %LLVMValueRef.560567**, i64, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildGlobalString(%LLVMBuilderRef.560572*, i8*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFPToSI(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildSIToFP(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildBitCast(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildIntCast2(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMTypeRef.560566*, i1, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFPCast(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildICmp(%LLVMBuilderRef.560572*, i64, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildFCmp(%LLVMBuilderRef.560572*, i64, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildPhi(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572*, %LLVMTypeRef.560566*, %LLVMValueRef.560567*, %LLVMValueRef.560567**, i64, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildSelect(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildIsNull(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMValueRef.560567* @LLVMBuildIsNotNull(%LLVMBuilderRef.560572*, %LLVMValueRef.560567*, i8*) local_unnamed_addr

declare %LLVMPassManagerRef.560575* @LLVMCreateFunctionPassManagerForModule(%LLVMModuleRef.560565*) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(%LLVMPassManagerRef.560575*, %LLVMValueRef.560567*) local_unnamed_addr

declare void @LLVMDisposePassManager(%LLVMPassManagerRef.560575*) local_unnamed_addr

declare i1 @LLVMVerifyModule(%LLVMModuleRef.560565*, i64, i8**) local_unnamed_addr

declare i1 @LLVMRemoveModule(%LLVMExecutionEngineRef.560588*, %LLVMModuleRef.560565*, %LLVMModuleRef.560565**, i8**) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(%LLVMExecutionEngineRef.560588**, %LLVMModuleRef.560565*, i8**) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.560588*) local_unnamed_addr

declare i64 @LLVMRunFunctionAsMain(%LLVMExecutionEngineRef.560588*, %LLVMValueRef.560567*, i64, i8*, i8*) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(%LLVMPassManagerBuilderRef.560586*, %LLVMPassManagerRef.560575*) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(%LLVMPassManagerBuilderRef.560586*, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(%LLVMPassManagerBuilderRef.560586*) local_unnamed_addr

declare %LLVMPassManagerBuilderRef.560586* @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(%LLVMPassManagerBuilderRef.560586*, i64) local_unnamed_addr

declare void @LLVM_InitializeAllTargetInfos() local_unnamed_addr

declare void @LLVM_InitializeAllTargetMCs() local_unnamed_addr

declare void @LLVM_InitializeAllTargets() local_unnamed_addr

declare void @LLVM_InitializeAllAsmParsers() local_unnamed_addr

declare void @LLVM_InitializeAllAsmPrinters() local_unnamed_addr

declare void @LLVMDisposeTargetMachine(%LLVMTargetMachineRef.560585*) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(%LLVMTargetMachineRef.560585*, %LLVMModuleRef.560565*, i8*, i64, i8**) local_unnamed_addr

declare i8* @LLVMGetDefaultTargetTriple() local_unnamed_addr

declare i8* @LLVMGetTargetMachineTriple(%LLVMTargetMachineRef.560585*) local_unnamed_addr

declare i8* @LLVMCreateTargetDataLayout(%LLVMTargetMachineRef.560585*) local_unnamed_addr

declare %LLVMTargetMachineRef.560585* @LLVMCreateTargetMachine(%LLVMTargetRef.560584*, i8*, i8*, i8*, i64, i64, i64) local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(i8*, %LLVMTargetRef.560584**, i8**) local_unnamed_addr

declare i8* @LLVMGetHostCPUFeatures() local_unnamed_addr

define void @GeneratedModule_constructor(%GeneratedModule.560591* %.1, %LLVMModuleRef.560565* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 1
  store %LLVMModuleRef.560565* %.2, %LLVMModuleRef.560565** %.9, align 8
  %.12 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 2
  store i8* null, i8** %.12, align 8
  %.19 = tail call i1 @LLVMVerifyModule(%LLVMModuleRef.560565* %.2, i64 1, i8** nonnull %.12)
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 0
  %.23 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.22, align 8
  %.24 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.23, i64 0, i32 0
  %.25 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.24, align 8
  tail call void %.25(%GeneratedModule.560591* nonnull %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4.if, %.4
  tail call void @LLVM_InitializeAllTargetInfos()
  tail call void @LLVM_InitializeAllTargets()
  tail call void @LLVM_InitializeAllTargetMCs()
  tail call void @LLVM_InitializeAllAsmParsers()
  tail call void @LLVM_InitializeAllAsmPrinters()
  ret void
}

define void @GeneratedModule_print_errors(%GeneratedModule.560591* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 2
  %.7 = load i8*, i8** %.6, align 8
  %.8 = tail call %string.560217* @string_from_cstring(i8* %.7)
  %.12 = load i8*, i8** %.6, align 8
  tail call void @LLVMDisposeMessage(i8* %.12)
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.8, i64 0, i32 0
  %.16 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.15, align 8
  %.17 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.16, i64 0, i32 11
  %.18 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.17, align 8
  %.19 = tail call i8* %.18(%string.560217* %.8)
  %.21 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.324, i64 0, i64 0), i8* %.19)
  %.22 = add i64 %.21, 1
  %.24 = tail call i8* @malloc(i64 %.22)
  %.25 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.324, i64 0, i64 0), i8* %.19)
  %.26 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.560217*
  %.28 = bitcast i8* %.26 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.26, i64 8
  %0 = bitcast i8* %.30 to i8**
  store i8* %.24, i8** %0, align 8
  %.32 = getelementptr inbounds i8, i8* %.26, i64 16
  %1 = bitcast i8* %.32 to i64*
  store i64 %.21, i64* %1, align 8
  %.34 = getelementptr inbounds i8, i8* %.26, i64 24
  %2 = bitcast i8* %.34 to i64*
  store i64 %.21, i64* %2, align 8
  tail call void @panic(%string.560217* %.27)
  ret void
}

define void @GeneratedModule_run_passes(%GeneratedModule.560591* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 1
  %.9 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.8, align 8
  %.10 = tail call %LLVMPassManagerRef.560575* @LLVMCreateFunctionPassManagerForModule(%LLVMModuleRef.560565* %.9)
  %.12 = tail call %LLVMPassManagerBuilderRef.560586* @LLVMPassManagerBuilderCreate()
  tail call void @LLVMPassManagerBuilderSetOptLevel(%LLVMPassManagerBuilderRef.560586* %.12, i64 %.2)
  tail call void @LLVMPassManagerBuilderUseInlinerWithThreshold(%LLVMPassManagerBuilderRef.560586* %.12, i64 255)
  %.21 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.8, align 8
  %.22 = tail call %LLVMValueRef.560567* @LLVMGetFirstFunction(%LLVMModuleRef.560565* %.21)
  tail call void @LLVMPassManagerBuilderPopulateFunctionPassManager(%LLVMPassManagerBuilderRef.560586* %.12, %LLVMPassManagerRef.560575* %.10)
  %0 = ptrtoint %LLVMValueRef.560567* %.22 to i64
  %.28 = trunc i64 %0 to i32
  %.30.not = icmp eq i32 %.28, 0
  br i1 %.30.not, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry
  %func.0 = phi %LLVMValueRef.560567* [ %.36, %while.entry ], [ %.22, %.4 ]
  %.34 = tail call i1 @LLVMRunFunctionPassManager(%LLVMPassManagerRef.560575* %.10, %LLVMValueRef.560567* %func.0)
  %.36 = tail call %LLVMValueRef.560567* @LLVMGetNextFunction(%LLVMValueRef.560567* %func.0)
  %1 = ptrtoint %LLVMValueRef.560567* %.36 to i64
  %.39 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, 0
  br i1 %.41.not, label %while.exit, label %while.entry

while.exit:                                       ; preds = %while.entry, %.4
  tail call void @LLVMDisposePassManager(%LLVMPassManagerRef.560575* %.10)
  tail call void @LLVMPassManagerBuilderDispose(%LLVMPassManagerBuilderRef.560586* %.12)
  ret void
}

define i64 @GeneratedModule_exec(%GeneratedModule.560591* %.1) {
.3:
  tail call void @LLVMLinkInMCJIT()
  %engine = alloca %LLVMExecutionEngineRef.560588*, align 8
  store %LLVMExecutionEngineRef.560588* null, %LLVMExecutionEngineRef.560588** %engine, align 8
  %.8 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 1
  %.9 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.8, align 8
  %.11 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 2
  %.12 = call i1 @LLVMCreateExecutionEngineForModule(%LLVMExecutionEngineRef.560588** nonnull %engine, %LLVMModuleRef.560565* %.9, i8** nonnull %.11)
  br i1 %.12, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.15 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 0
  %.16 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.15, align 8
  %.17 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.16, i64 0, i32 0
  %.18 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.17, align 8
  call void %.18(%GeneratedModule.560591* nonnull %.1)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.23 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.8, align 8
  %.24 = call %LLVMValueRef.560567* @LLVMGetNamedFunction(%LLVMModuleRef.560565* %.23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.325, i64 0, i64 0))
  %0 = ptrtoint %LLVMValueRef.560567* %.24 to i64
  %.27 = trunc i64 %0 to i32
  %.29 = icmp eq i32 %.27, 0
  br i1 %.29, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %string.560217*
  %.32.repack = bitcast i8* %.31 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.32.repack, align 8
  %.32.repack1 = getelementptr inbounds i8, i8* %.31, i64 8
  %1 = bitcast i8* %.32.repack1 to i8**
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.326, i64 0, i64 0), i8** %1, align 8
  %.32.repack2 = getelementptr inbounds i8, i8* %.31, i64 16
  %2 = bitcast i8* %.32.repack2 to i64*
  store i64 48, i64* %2, align 8
  %.32.repack3 = getelementptr inbounds i8, i8* %.31, i64 24
  %3 = bitcast i8* %.32.repack3 to i64*
  store i64 48, i64* %3, align 8
  call void @println(%string.560217* %.32)
  %.35 = load %LLVMExecutionEngineRef.560588*, %LLVMExecutionEngineRef.560588** %engine, align 8
  call void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.560588* %.35)
  ret i64 1

.3.endif.endif:                                   ; preds = %.3.endif
  %.38 = load %LLVMExecutionEngineRef.560588*, %LLVMExecutionEngineRef.560588** %engine, align 8
  %.40 = call i64 @LLVMRunFunctionAsMain(%LLVMExecutionEngineRef.560588* %.38, %LLVMValueRef.560567* %.24, i64 0, i8* null, i8* null)
  %.42 = load %LLVMExecutionEngineRef.560588*, %LLVMExecutionEngineRef.560588** %engine, align 8
  %.45 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.8, align 8
  %.50 = call i1 @LLVMRemoveModule(%LLVMExecutionEngineRef.560588* %.42, %LLVMModuleRef.560565* %.45, %LLVMModuleRef.560565** nonnull %.8, i8** nonnull %.11)
  br i1 %.50, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.53 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 0
  %.54 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.53, align 8
  %.55 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.54, i64 0, i32 0
  %.56 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.55, align 8
  call void %.56(%GeneratedModule.560591* nonnull %.1)
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.if, %.3.endif.endif
  %.59 = load %LLVMExecutionEngineRef.560588*, %LLVMExecutionEngineRef.560588** %engine, align 8
  call void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.560588* %.59)
  ret i64 %.40
}

define %LLVMTargetMachineRef.560585* @GeneratedModule_create_target_machine(%GeneratedModule.560591* %.1, %string.560217* %.2) {
.4:
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.560217*
  %.10 = bitcast i8* %.8 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %.18 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.14, i8 0, i64 16, i1 false)
  %.19 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.18, align 8
  %.20 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.19, i64 0, i32 4
  %.21 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.20, align 8
  %.22 = tail call i1 %.21(%string.560217* %.2, %string.560217* %.9)
  br i1 %.22, label %true_block, label %false_block

true_block:                                       ; preds = %.4
  %.24 = tail call i8* @LLVMGetDefaultTargetTriple()
  br label %end

false_block:                                      ; preds = %.4
  %.28 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.18, align 8
  %.29 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.28, i64 0, i32 11
  %.30 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.29, align 8
  %.31 = tail call i8* %.30(%string.560217* nonnull %.2)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.33 = phi i8* [ %.24, %true_block ], [ %.31, %false_block ]
  %target = alloca %LLVMTargetRef.560584*, align 8
  store %LLVMTargetRef.560584* null, %LLVMTargetRef.560584** %target, align 8
  %.38 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 2
  %.39 = call i1 @LLVMGetTargetFromTriple(i8* %.33, %LLVMTargetRef.560584** nonnull %target, i8** nonnull %.38)
  br i1 %.39, label %end.if, label %end.endif

end.if:                                           ; preds = %end
  %.42 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 0
  %.43 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.42, align 8
  %.44 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.43, i64 0, i32 0
  %.45 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.44, align 8
  call void %.45(%GeneratedModule.560591* %.1)
  br label %end.endif

end.endif:                                        ; preds = %end.if, %end
  %.49 = load %LLVMTargetRef.560584*, %LLVMTargetRef.560584** %target, align 8
  %.52 = call i8* @LLVMGetHostCPUFeatures()
  %.53 = call %LLVMTargetMachineRef.560585* @LLVMCreateTargetMachine(%LLVMTargetRef.560584* %.49, i8* %.33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.327, i64 0, i64 0), i8* %.52, i64 3, i64 0, i64 0)
  ret %LLVMTargetMachineRef.560585* %.53
}

define void @GeneratedModule_write_object(%GeneratedModule.560591* %.1, %string.560217* %.2, %string.560217* %.3) {
.5:
  %.10 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 0
  %.11 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.10, align 8
  %.12 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.11, i64 0, i32 3
  %.13 = load %LLVMTargetMachineRef.560585* (%GeneratedModule.560591*, %string.560217*)*, %LLVMTargetMachineRef.560585* (%GeneratedModule.560591*, %string.560217*)** %.12, align 8
  %.15 = tail call %LLVMTargetMachineRef.560585* %.13(%GeneratedModule.560591* %.1, %string.560217* %.3)
  %.18 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 1
  %.19 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.18, align 8
  %.21 = tail call i8* @LLVMCreateTargetDataLayout(%LLVMTargetMachineRef.560585* %.15)
  tail call void @LLVMSetDataLayout(%LLVMModuleRef.560565* %.19, i8* %.21)
  %.25 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.18, align 8
  %.27 = tail call i8* @LLVMGetTargetMachineTriple(%LLVMTargetMachineRef.560585* %.15)
  tail call void @LLVMSetTarget(%LLVMModuleRef.560565* %.25, i8* %.27)
  %.32 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.18, align 8
  %.34 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.35 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.34, align 8
  %.36 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.35, i64 0, i32 11
  %.37 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.36, align 8
  %.38 = tail call i8* %.37(%string.560217* %.2)
  %.40 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 2
  %.41 = tail call i1 @LLVMTargetMachineEmitToFile(%LLVMTargetMachineRef.560585* %.15, %LLVMModuleRef.560565* %.32, i8* %.38, i64 1, i8** nonnull %.40)
  br i1 %.41, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.45 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.10, align 8
  %.46 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.45, i64 0, i32 0
  %.47 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.46, align 8
  tail call void %.47(%GeneratedModule.560591* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  tail call void @LLVMDisposeTargetMachine(%LLVMTargetMachineRef.560585* %.15)
  ret void
}

define void @GeneratedModule_print(%GeneratedModule.560591* %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 1
  %.7 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.6, align 8
  %.9 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 2
  %.10 = tail call i1 @LLVMPrintModuleToFile(%LLVMModuleRef.560565* %.7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.328, i64 0, i64 0), i8** nonnull %.9)
  br i1 %.10, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.13 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.1, i64 0, i32 0
  %.14 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.13, align 8
  %.15 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.14, i64 0, i32 0
  %.16 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.15, align 8
  tail call void %.16(%GeneratedModule.560591* nonnull %.1)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret void
}

define void @GeneratedModule_llvm_shutdown(%GeneratedModule.560591* nocapture readnone %.1) {
.3:
  tail call void @LLVMShutdown()
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IntrinsicResult_constructor(%IntrinsicResult.560593* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.1, i64 0, i32 1
  %0 = bitcast %LLVMValueRef.560567** %.6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.560600"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, int>_set"(%"Bucket<string, int>.560600"* nocapture %.1, %string.560217* %.2, i64 %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.1, i64 0, i32 2
  store i64 %.3, i64* %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, int>_constructor"(%"Map<string, int>.560597"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.560600"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, int>.560600"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, int>_vtable_ty.560601"**
  store %"Bucket<string, int>_vtable_ty.560601"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.560601"** %.266, align 8
  tail call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.560600"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, int>.560600"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, int>_vtable_ty.560601"**
  store %"Bucket<string, int>_vtable_ty.560601"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.560601"** %.26, align 8
  tail call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.560600"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, int>.560600"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, int>_hash_fnc"(%"Map<string, int>.560597"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, int>_resize"(%"Map<string, int>.560597"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, int>>.560602"* (%"Map<string, int>.560597"*)*, %"Array<Bucket<string, int>>.560602"* (%"Map<string, int>.560597"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, int>>.560602"* %.9(%"Map<string, int>.560597"* %.1)
  %.14 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.560600"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, int>.560600"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, int>_vtable_ty.560601"**
  store %"Bucket<string, int>_vtable_ty.560601"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.560601"** %.5016, align 8
  tail call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.560600"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, int>.560600"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, int>_vtable_ty.560601"**
  store %"Bucket<string, int>_vtable_ty.560601"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.560601"** %.50, align 8
  tail call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.560600"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, int>.560600"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, int>.560597"*, %string.560217*, i64)*, void (%"Map<string, int>.560597"*, %string.560217*, i64)** %.74, align 8
  %.79 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)*, %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, int>.560600"* %.81(%"Array<Bucket<string, int>>.560602"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)*, %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, int>.560600"* %.90(%"Array<Bucket<string, int>>.560602"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.91, i64 0, i32 2
  %.93 = load i64, i64* %.92, align 8
  tail call void %.75(%"Map<string, int>.560597"* nonnull %.1, %string.560217* %.84, i64 %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, int>_set"(%"Map<string, int>.560597"* %.1, %string.560217* %.2, i64 %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, int>.560597"*)*, void (%"Map<string, int>.560597"*)** %.25, align 8
  tail call void %.26(%"Map<string, int>.560597"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, int>.560597"*, %string.560217*)*, i64 (%"Map<string, int>.560597"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, int>.560597"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.44, i64 %.39
  %.46 = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, int>.560600"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, int>.560600"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.94, i64 %.91
  %.96 = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, int>_vtable_ty.560601"*, %"Bucket<string, int>_vtable_ty.560601"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, int>_vtable_ty.560601", %"Bucket<string, int>_vtable_ty.560601"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, int>.560600"*, %string.560217*, i64)*, void (%"Bucket<string, int>.560600"*, %string.560217*, i64)** %.99, align 8
  tail call void %.100(%"Bucket<string, int>.560600"* %.96, %string.560217* %.2, i64 %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.77, i64 %.72
  %.79 = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define i64 @"Map<string, int>_get"(%"Map<string, int>.560597"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, int>.560597"*, %string.560217*)*, i64 (%"Map<string, int>.560597"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, int>.560597"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.22, i64 %.17
  %.24 = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, int>.560600"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.56, i64 %.50
  %.58 = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.68.pre.pre, i64 0, i32 2
  %.80 = load i64, i64* %.79, align 8
  ret i64 %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret i64 0
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, int>>_constructor"(%"Array<Bucket<string, int>>.560602"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.560600"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, int>>_resize"(%"Array<Bucket<string, int>>.560602"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.560600"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, int>>_swap"(%"Array<Bucket<string, int>>.560602"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, int>.560600"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, int>.560600"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, int>.560600"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, int>>___sl__"(%"Array<Bucket<string, int>>.560602"* %.1, %"Bucket<string, int>.560600"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, int>>.560602"*)*, void (%"Array<Bucket<string, int>>.560602"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, int>>.560602"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.31, i64 %.24
  store %"Bucket<string, int>.560600"* %.2, %"Bucket<string, int>.560600"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, int>>___setitem__"(%"Array<Bucket<string, int>>.560602"* nocapture readonly %.1, i64 %.2, %"Bucket<string, int>.560600"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.30, i64 %.2
  store %"Bucket<string, int>.560600"* %.3, %"Bucket<string, int>.560600"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, int>>_append"(%"Array<Bucket<string, int>>.560602"* %.1, %"Bucket<string, int>.560600"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)*, void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, int>>.560602"* %.1, %"Bucket<string, int>.560600"* %.2)
  ret void
}

define %"Bucket<string, int>.560600"* @"Array<Bucket<string, int>>___getitem__"(%"Array<Bucket<string, int>>.560602"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.28, i64 %.2
  %.30 = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.29, align 8
  ret %"Bucket<string, int>.560600"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, int>.560600"* null
}

define i1 @"Array<Bucket<string, int>>___eq__"(%"Array<Bucket<string, int>>.560602"* %.1, %"Array<Bucket<string, int>>.560602"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)*, %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, int>.560600"* %.30(%"Array<Bucket<string, int>>.560602"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)*, %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, int>.560600"* %.37(%"Array<Bucket<string, int>>.560602"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, int>.560600"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, int>.560600"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, int>>___in__"(%"Array<Bucket<string, int>>.560602"* %.1, %"Bucket<string, int>.560600"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, int>.560600"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)*, %"Bucket<string, int>.560600"* (%"Array<Bucket<string, int>>.560602"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, int>.560600"* %.21(%"Array<Bucket<string, int>>.560602"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, int>.560600"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, int>>_find"(%"Array<Bucket<string, int>>.560602"* nocapture readonly %.1, %"Bucket<string, int>.560600"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>.560602", %"Array<Bucket<string, int>>.560602"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, int>.560600"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, int>.560600"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, int>>.560602"* @"Map<string, int>_get_buckets"(%"Map<string, int>.560597"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, int>>.560602"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, int>>_vtable_ty.560603"**
  store %"Array<Bucket<string, int>>_vtable_ty.560603"* @"Array<Bucket<string, int>>_vtable_data", %"Array<Bucket<string, int>>_vtable_ty.560603"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, int>.560600"**, %"Bucket<string, int>.560600"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, int>.560600"*, %"Bucket<string, int>.560600"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, int>.560600", %"Bucket<string, int>.560600"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, int>>.560602"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, int>>_vtable_ty.560603"*, %"Array<Bucket<string, int>>_vtable_ty.560603"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.560603", %"Array<Bucket<string, int>>_vtable_ty.560603"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)*, void (%"Array<Bucket<string, int>>.560602"*, %"Bucket<string, int>.560600"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, int>>.560602"* %.9, %"Bucket<string, int>.560600"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.560605"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, LLVMValueRef>_set"(%"Bucket<string, LLVMValueRef>.560605"* nocapture %.1, %string.560217* %.2, %LLVMValueRef.560567* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.1, i64 0, i32 2
  store %LLVMValueRef.560567* %.3, %LLVMValueRef.560567** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.560598"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.560605"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, LLVMValueRef>.560605"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, LLVMValueRef>_vtable_ty.560606"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.560606"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.560606"** %.266, align 8
  tail call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.560605"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, LLVMValueRef>.560605"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, LLVMValueRef>_vtable_ty.560606"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.560606"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.560606"** %.26, align 8
  tail call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.560605"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, LLVMValueRef>.560605"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, LLVMValueRef>_hash_fnc"(%"Map<string, LLVMValueRef>.560598"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, LLVMValueRef>_resize"(%"Map<string, LLVMValueRef>.560598"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, LLVMValueRef>>.560607"* (%"Map<string, LLVMValueRef>.560598"*)*, %"Array<Bucket<string, LLVMValueRef>>.560607"* (%"Map<string, LLVMValueRef>.560598"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, LLVMValueRef>>.560607"* %.9(%"Map<string, LLVMValueRef>.560598"* %.1)
  %.14 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.560605"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, LLVMValueRef>.560605"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, LLVMValueRef>_vtable_ty.560606"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.560606"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.560606"** %.5016, align 8
  tail call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.560605"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, LLVMValueRef>.560605"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, LLVMValueRef>_vtable_ty.560606"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.560606"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.560606"** %.50, align 8
  tail call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.560605"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, LLVMValueRef>.560605"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)*, %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, LLVMValueRef>.560605"* %.81(%"Array<Bucket<string, LLVMValueRef>>.560607"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)*, %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, LLVMValueRef>.560605"* %.90(%"Array<Bucket<string, LLVMValueRef>>.560607"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.91, i64 0, i32 2
  %.93 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.92, align 8
  tail call void %.75(%"Map<string, LLVMValueRef>.560598"* nonnull %.1, %string.560217* %.84, %LLVMValueRef.560567* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, LLVMValueRef>_set"(%"Map<string, LLVMValueRef>.560598"* %.1, %string.560217* %.2, %LLVMValueRef.560567* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, LLVMValueRef>.560598"*)*, void (%"Map<string, LLVMValueRef>.560598"*)** %.25, align 8
  tail call void %.26(%"Map<string, LLVMValueRef>.560598"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, i64 (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, LLVMValueRef>.560598"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.44, i64 %.39
  %.46 = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, LLVMValueRef>.560605"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, LLVMValueRef>.560605"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.94, i64 %.91
  %.96 = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, LLVMValueRef>_vtable_ty.560606"*, %"Bucket<string, LLVMValueRef>_vtable_ty.560606"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, LLVMValueRef>_vtable_ty.560606", %"Bucket<string, LLVMValueRef>_vtable_ty.560606"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, LLVMValueRef>.560605"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Bucket<string, LLVMValueRef>.560605"*, %string.560217*, %LLVMValueRef.560567*)** %.99, align 8
  tail call void %.100(%"Bucket<string, LLVMValueRef>.560605"* %.96, %string.560217* %.2, %LLVMValueRef.560567* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.77, i64 %.72
  %.79 = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %LLVMValueRef.560567* @"Map<string, LLVMValueRef>_get"(%"Map<string, LLVMValueRef>.560598"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, i64 (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, LLVMValueRef>.560598"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.22, i64 %.17
  %.24 = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, LLVMValueRef>.560605"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.56, i64 %.50
  %.58 = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.79, align 8
  ret %LLVMValueRef.560567* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %LLVMValueRef.560567* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, LLVMValueRef>>_constructor"(%"Array<Bucket<string, LLVMValueRef>>.560607"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.560605"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, LLVMValueRef>>_resize"(%"Array<Bucket<string, LLVMValueRef>>.560607"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.560605"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>_swap"(%"Array<Bucket<string, LLVMValueRef>>.560607"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, LLVMValueRef>.560605"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, LLVMValueRef>.560605"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, LLVMValueRef>.560605"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>___sl__"(%"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, %"Bucket<string, LLVMValueRef>.560605"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, LLVMValueRef>>.560607"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.560607"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, LLVMValueRef>>.560607"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.31, i64 %.24
  store %"Bucket<string, LLVMValueRef>.560605"* %.2, %"Bucket<string, LLVMValueRef>.560605"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>___setitem__"(%"Array<Bucket<string, LLVMValueRef>>.560607"* nocapture readonly %.1, i64 %.2, %"Bucket<string, LLVMValueRef>.560605"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.30, i64 %.2
  store %"Bucket<string, LLVMValueRef>.560605"* %.3, %"Bucket<string, LLVMValueRef>.560605"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>_append"(%"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, %"Bucket<string, LLVMValueRef>.560605"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, %"Bucket<string, LLVMValueRef>.560605"* %.2)
  ret void
}

define %"Bucket<string, LLVMValueRef>.560605"* @"Array<Bucket<string, LLVMValueRef>>___getitem__"(%"Array<Bucket<string, LLVMValueRef>>.560607"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.28, i64 %.2
  %.30 = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.29, align 8
  ret %"Bucket<string, LLVMValueRef>.560605"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, LLVMValueRef>.560605"* null
}

define i1 @"Array<Bucket<string, LLVMValueRef>>___eq__"(%"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, %"Array<Bucket<string, LLVMValueRef>>.560607"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)*, %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, LLVMValueRef>.560605"* %.30(%"Array<Bucket<string, LLVMValueRef>>.560607"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)*, %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, LLVMValueRef>.560605"* %.37(%"Array<Bucket<string, LLVMValueRef>>.560607"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.560605"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, LLVMValueRef>.560605"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, LLVMValueRef>>___in__"(%"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, %"Bucket<string, LLVMValueRef>.560605"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.560605"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)*, %"Bucket<string, LLVMValueRef>.560605"* (%"Array<Bucket<string, LLVMValueRef>>.560607"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, LLVMValueRef>.560605"* %.21(%"Array<Bucket<string, LLVMValueRef>>.560607"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, LLVMValueRef>.560605"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, LLVMValueRef>>_find"(%"Array<Bucket<string, LLVMValueRef>>.560607"* nocapture readonly %.1, %"Bucket<string, LLVMValueRef>.560605"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.560607", %"Array<Bucket<string, LLVMValueRef>>.560607"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.560605"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, LLVMValueRef>.560605"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, LLVMValueRef>>.560607"* @"Map<string, LLVMValueRef>_get_buckets"(%"Map<string, LLVMValueRef>.560598"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, LLVMValueRef>>.560607"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"**
  store %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* @"Array<Bucket<string, LLVMValueRef>>_vtable_data", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, LLVMValueRef>.560605"**, %"Bucket<string, LLVMValueRef>.560605"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, LLVMValueRef>.560605"*, %"Bucket<string, LLVMValueRef>.560605"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.560605", %"Bucket<string, LLVMValueRef>.560605"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, LLVMValueRef>>.560607"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.560608"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.560607"*, %"Bucket<string, LLVMValueRef>.560605"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, LLVMValueRef>>.560607"* %.9, %"Bucket<string, LLVMValueRef>.560605"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @CGClassType_constructor(%CGClassType.560595* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.6 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %"Map<string, int>.560597"*
  %.8 = bitcast i8* %.6 to %"Map<string, int>_vtable_ty.560599"**
  store %"Map<string, int>_vtable_ty.560599"* @"Map<string, int>_vtable_data", %"Map<string, int>_vtable_ty.560599"** %.8, align 8
  tail call void @"Map<string, int>_constructor"(%"Map<string, int>.560597"* %.7)
  %.11 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.1, i64 0, i32 2
  %0 = bitcast %"Map<string, int>.560597"** %.11 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Map<string, int>.560597"*
  %.16 = bitcast i8* %.14 to %"Map<string, int>_vtable_ty.560599"**
  store %"Map<string, int>_vtable_ty.560599"* @"Map<string, int>_vtable_data", %"Map<string, int>_vtable_ty.560599"** %.16, align 8
  tail call void @"Map<string, int>_constructor"(%"Map<string, int>.560597"* %.15)
  %.19 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.1, i64 0, i32 3
  %1 = bitcast %"Map<string, int>.560597"** %.19 to i8**
  store i8* %.14, i8** %1, align 8
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %"Map<string, LLVMValueRef>.560598"*
  %.24 = bitcast i8* %.22 to %"Map<string, LLVMValueRef>_vtable_ty.560604"**
  store %"Map<string, LLVMValueRef>_vtable_ty.560604"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.24, align 8
  tail call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.560598"* %.23)
  %.27 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.1, i64 0, i32 4
  %2 = bitcast %"Map<string, LLVMValueRef>.560598"** %.27 to i8**
  store i8* %.22, i8** %2, align 8
  %.30 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.1, i64 0, i32 5
  %3 = bitcast %LLVMValueRef.560567** %.30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree nounwind
define void @CGEnumType_constructor(%CGEnumType.560609* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.6 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %"Map<string, LLVMValueRef>.560598"*
  %.8 = bitcast i8* %.6 to %"Map<string, LLVMValueRef>_vtable_ty.560604"**
  store %"Map<string, LLVMValueRef>_vtable_ty.560604"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.8, align 8
  tail call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.560598"* %.7)
  %.11 = getelementptr inbounds %CGEnumType.560609, %CGEnumType.560609* %.1, i64 0, i32 2
  %0 = bitcast %"Map<string, LLVMValueRef>.560598"** %.11 to i8**
  store i8* %.6, i8** %0, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMTypeRef>_constructor"(%"Array<LLVMTypeRef>.560611"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMTypeRef.560566*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMTypeRef>_resize"(%"Array<LLVMTypeRef>.560611"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMTypeRef.560566*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<LLVMTypeRef>_swap"(%"Array<LLVMTypeRef>.560611"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 1
  %.48 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %.47, align 8
  %.49 = getelementptr inbounds %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.48, i64 %.2
  %4 = bitcast %LLVMTypeRef.560566** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.48, i64 %.3
  %5 = bitcast %LLVMTypeRef.560566** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %.47, align 8
  %.69 = getelementptr inbounds %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.67, i64 %.3
  %6 = bitcast %LLVMTypeRef.560566** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMTypeRef>___sl__"(%"Array<LLVMTypeRef>.560611"* %.1, %LLVMTypeRef.560566* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMTypeRef>.560611"*)*, void (%"Array<LLVMTypeRef>.560611"*)** %.18, align 8
  tail call void %.19(%"Array<LLVMTypeRef>.560611"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 1
  %.31 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.31, i64 %.24
  store %LLVMTypeRef.560566* %.2, %LLVMTypeRef.560566** %.33, align 8
  ret void
}

define void @"Array<LLVMTypeRef>___setitem__"(%"Array<LLVMTypeRef>.560611"* nocapture readonly %.1, i64 %.2, %LLVMTypeRef.560566* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 1
  %.30 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.30, i64 %.2
  store %LLVMTypeRef.560566* %.3, %LLVMTypeRef.560566** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMTypeRef>_append"(%"Array<LLVMTypeRef>.560611"* %.1, %LLVMTypeRef.560566* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.10, align 8
  tail call void %.11(%"Array<LLVMTypeRef>.560611"* %.1, %LLVMTypeRef.560566* %.2)
  ret void
}

define %LLVMTypeRef.560566* @"Array<LLVMTypeRef>___getitem__"(%"Array<LLVMTypeRef>.560611"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 1
  %.28 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.28, i64 %.2
  %.30 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.29, align 8
  ret %LLVMTypeRef.560566* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMTypeRef.560566* null
}

define i1 @"Array<LLVMTypeRef>___eq__"(%"Array<LLVMTypeRef>.560611"* %.1, %"Array<LLVMTypeRef>.560611"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.28, i64 0, i32 5
  %.30 = load %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)*, %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)** %.29, align 8
  %.31 = tail call %LLVMTypeRef.560566* %.30(%"Array<LLVMTypeRef>.560611"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.35, i64 0, i32 5
  %.37 = load %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)*, %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)** %.36, align 8
  %.38 = tail call %LLVMTypeRef.560566* %.37(%"Array<LLVMTypeRef>.560611"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMTypeRef.560566* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMTypeRef.560566* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMTypeRef>___in__"(%"Array<LLVMTypeRef>.560611"* %.1, %LLVMTypeRef.560566* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMTypeRef.560566* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.19, i64 0, i32 5
  %.21 = load %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)*, %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)** %.20, align 8
  %.22 = tail call %LLVMTypeRef.560566* %.21(%"Array<LLVMTypeRef>.560611"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMTypeRef.560566* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMTypeRef>_find"(%"Array<LLVMTypeRef>.560611"* nocapture readonly %.1, %LLVMTypeRef.560566* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 1
  %.19 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %.18, align 8
  %0 = ptrtoint %LLVMTypeRef.560566* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.19, i64 %storemerge5
  %1 = bitcast %LLVMTypeRef.560566** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define noalias %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.1, %string.560217* %.2, %"Array<LLVMTypeRef>.560611"* nocapture readonly %.3, %LLVMTypeRef.560566* %.4, i1 %.5) local_unnamed_addr {
.7:
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %IntrinsicResult.560593*
  %.15 = bitcast i8* %.13 to %IntrinsicResult_vtable_ty.560594**
  store %IntrinsicResult_vtable_ty.560594* @IntrinsicResult_vtable_data, %IntrinsicResult_vtable_ty.560594** %.15, align 8
  tail call void @IntrinsicResult_constructor(%IntrinsicResult.560593* %.14)
  %.22 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.3, i64 0, i32 1
  %.23 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %.22, align 8
  %.25 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.3, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.28 = tail call %LLVMTypeRef.560566* @LLVMFunctionType(%LLVMTypeRef.560566* %.4, %LLVMTypeRef.560566** %.23, i64 %.26, i1 %.5)
  %.29 = getelementptr inbounds i8, i8* %.13, i64 16
  %0 = bitcast i8* %.29 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.28, %LLVMTypeRef.560566** %0, align 8
  %.32 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.33 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.32, align 8
  %.34 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.33, i64 0, i32 11
  %.35 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.34, align 8
  %.36 = tail call i8* %.35(%string.560217* %.2)
  %.40 = tail call %LLVMValueRef.560567* @LLVMGetNamedFunction(%LLVMModuleRef.560565* %.1, i8* %.36)
  %1 = ptrtoint %LLVMValueRef.560567* %.40 to i64
  %.43 = trunc i64 %1 to i32
  %.45.not = icmp eq i32 %.43, 0
  br i1 %.45.not, label %.7.else, label %.7.endif

.7.else:                                          ; preds = %.7
  %.58 = tail call %LLVMValueRef.560567* @LLVMAddFunction(%LLVMModuleRef.560565* %.1, i8* %.36, %LLVMTypeRef.560566* %.28)
  br label %.7.endif

.7.endif:                                         ; preds = %.7, %.7.else
  %.58.sink = phi %LLVMValueRef.560567* [ %.58, %.7.else ], [ %.40, %.7 ]
  %.59 = getelementptr inbounds i8, i8* %.13, i64 8
  %2 = bitcast i8* %.59 to %LLVMValueRef.560567**
  store %LLVMValueRef.560567* %.58.sink, %LLVMValueRef.560567** %2, align 8
  ret %IntrinsicResult.560593* %.14
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_terminated(%Block.560455* nocapture readonly %.1) local_unnamed_addr #5 {
.3:
  %.6 = getelementptr inbounds %Block.560455, %Block.560455* %.1, i64 0, i32 2
  %.7 = load i1, i1* %.6, align 1
  %.9 = getelementptr inbounds %Block.560455, %Block.560455* %.1, i64 0, i32 3
  %.10 = load i1, i1* %.9, align 1
  %.11 = or i1 %.7, %.10
  %.13 = getelementptr inbounds %Block.560455, %Block.560455* %.1, i64 0, i32 4
  %.14 = load i1, i1* %.13, align 1
  %.15 = or i1 %.11, %.14
  ret i1 %.15
}

define noalias %string.560217* @create_var_key(%VarId.560441* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.12 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.15 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.329, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.16 = add i64 %.15, 1
  %.18 = tail call i8* @malloc(i64 %.16)
  %.19 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.329, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.20 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %string.560217*
  %.22 = bitcast i8* %.20 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds i8, i8* %.20, i64 8
  %0 = bitcast i8* %.24 to i8**
  store i8* %.18, i8** %0, align 8
  %.26 = getelementptr inbounds i8, i8* %.20, i64 16
  %1 = bitcast i8* %.26 to i64*
  store i64 %.15, i64* %1, align 8
  %.28 = getelementptr inbounds i8, i8* %.20, i64 24
  %2 = bitcast i8* %.28 to i64*
  store i64 %.15, i64* %2, align 8
  ret %string.560217* %.21
}

define noalias %string.560217* @create_type_id_key(%TypeId.560395* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.12 = getelementptr inbounds %TypeId.560395, %TypeId.560395* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.15 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.329, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.16 = add i64 %.15, 1
  %.18 = tail call i8* @malloc(i64 %.16)
  %.19 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.329, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.20 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %string.560217*
  %.22 = bitcast i8* %.20 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds i8, i8* %.20, i64 8
  %0 = bitcast i8* %.24 to i8**
  store i8* %.18, i8** %0, align 8
  %.26 = getelementptr inbounds i8, i8* %.20, i64 16
  %1 = bitcast i8* %.26 to i64*
  store i64 %.15, i64* %1, align 8
  %.28 = getelementptr inbounds i8, i8* %.20, i64 24
  %2 = bitcast i8* %.28 to i64*
  store i64 %.15, i64* %2, align 8
  ret %string.560217* %.21
}

define noalias %string.560217* @create_type_key_from_var(%VarId.560441* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = add i64 %.7, -3
  %.11 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.15 = getelementptr inbounds %VarId.560441, %VarId.560441* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.18 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.329, i64 0, i64 0), i64 %.12, i64 %.8, i64 %.16)
  %.19 = add i64 %.18, 1
  %.21 = tail call i8* @malloc(i64 %.19)
  %.22 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.329, i64 0, i64 0), i64 %.12, i64 %.8, i64 %.16)
  %.23 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.560217*
  %.25 = bitcast i8* %.23 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.25, align 8
  %.27 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.27 to i8**
  store i8* %.21, i8** %0, align 8
  %.29 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.29 to i64*
  store i64 %.18, i64* %1, align 8
  %.31 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.31 to i64*
  store i64 %.18, i64* %2, align 8
  ret %string.560217* %.24
}

define noalias %string.560217* @create_prop_key(%PropId.560449* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %PropId.560449, %PropId.560449* %.1, i64 0, i32 2
  %.7 = load %TypeId.560395*, %TypeId.560395** %.6, align 8
  %.8 = tail call %string.560217* @create_type_id_key(%TypeId.560395* %.7)
  %.10 = getelementptr inbounds %PropId.560449, %PropId.560449* %.1, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %PropId.560449, %PropId.560449* %.1, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.8, i64 0, i32 0
  %.16 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.15, align 8
  %.17 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.16, i64 0, i32 11
  %.18 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.17, align 8
  %.19 = tail call i8* %.18(%string.560217* %.8)
  %.21 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.330, i64 0, i64 0), i8* %.19, i64 %.11, i64 %.14)
  %.22 = add i64 %.21, 1
  %.24 = tail call i8* @malloc(i64 %.22)
  %.25 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.330, i64 0, i64 0), i8* %.19, i64 %.11, i64 %.14)
  %.26 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.560217*
  %.28 = bitcast i8* %.26 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.26, i64 8
  %0 = bitcast i8* %.30 to i8**
  store i8* %.24, i8** %0, align 8
  %.32 = getelementptr inbounds i8, i8* %.26, i64 16
  %1 = bitcast i8* %.32 to i64*
  store i64 %.21, i64* %1, align 8
  %.34 = getelementptr inbounds i8, i8* %.26, i64 24
  %2 = bitcast i8* %.34 to i64*
  store i64 %.21, i64* %2, align 8
  ret %string.560217* %.27
}

define void @resize_type_array(%"Array<LLVMTypeRef>.560611"* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.15.not1 = icmp sgt i64 %.10, %.2
  br i1 %.15.not1, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge2 = phi i64 [ %.10, %for.body.lr.ph ], [ %.27, %for.body ]
  %.19 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.19, i64 0, i32 2
  %.21 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.20, align 8
  tail call void %.21(%"Array<LLVMTypeRef>.560611"* nonnull %.1, %LLVMTypeRef.560566* null)
  %.27 = add i64 %storemerge2, 1
  %.15.not = icmp sgt i64 %.27, %.2
  br i1 %.15.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMValueRef>_constructor"(%"Array<LLVMValueRef>.560613"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMValueRef.560567*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMValueRef>_resize"(%"Array<LLVMValueRef>.560613"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMValueRef.560567*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<LLVMValueRef>_swap"(%"Array<LLVMValueRef>.560613"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 1
  %.48 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.47, align 8
  %.49 = getelementptr inbounds %LLVMValueRef.560567*, %LLVMValueRef.560567** %.48, i64 %.2
  %4 = bitcast %LLVMValueRef.560567** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %LLVMValueRef.560567*, %LLVMValueRef.560567** %.48, i64 %.3
  %5 = bitcast %LLVMValueRef.560567** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.47, align 8
  %.69 = getelementptr inbounds %LLVMValueRef.560567*, %LLVMValueRef.560567** %.67, i64 %.3
  %6 = bitcast %LLVMValueRef.560567** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMValueRef>___sl__"(%"Array<LLVMValueRef>.560613"* %.1, %LLVMValueRef.560567* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMValueRef>.560613"*)*, void (%"Array<LLVMValueRef>.560613"*)** %.18, align 8
  tail call void %.19(%"Array<LLVMValueRef>.560613"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 1
  %.31 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMValueRef.560567*, %LLVMValueRef.560567** %.31, i64 %.24
  store %LLVMValueRef.560567* %.2, %LLVMValueRef.560567** %.33, align 8
  ret void
}

define void @"Array<LLVMValueRef>___setitem__"(%"Array<LLVMValueRef>.560613"* nocapture readonly %.1, i64 %.2, %LLVMValueRef.560567* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 1
  %.30 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMValueRef.560567*, %LLVMValueRef.560567** %.30, i64 %.2
  store %LLVMValueRef.560567* %.3, %LLVMValueRef.560567** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMValueRef>_append"(%"Array<LLVMValueRef>.560613"* %.1, %LLVMValueRef.560567* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.10, align 8
  tail call void %.11(%"Array<LLVMValueRef>.560613"* %.1, %LLVMValueRef.560567* %.2)
  ret void
}

define %LLVMValueRef.560567* @"Array<LLVMValueRef>___getitem__"(%"Array<LLVMValueRef>.560613"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 1
  %.28 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMValueRef.560567*, %LLVMValueRef.560567** %.28, i64 %.2
  %.30 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.29, align 8
  ret %LLVMValueRef.560567* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMValueRef.560567* null
}

define i1 @"Array<LLVMValueRef>___eq__"(%"Array<LLVMValueRef>.560613"* %.1, %"Array<LLVMValueRef>.560613"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.28, i64 0, i32 5
  %.30 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.29, align 8
  %.31 = tail call %LLVMValueRef.560567* %.30(%"Array<LLVMValueRef>.560613"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.35, i64 0, i32 5
  %.37 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.36, align 8
  %.38 = tail call %LLVMValueRef.560567* %.37(%"Array<LLVMValueRef>.560613"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMValueRef.560567* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMValueRef.560567* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMValueRef>___in__"(%"Array<LLVMValueRef>.560613"* %.1, %LLVMValueRef.560567* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMValueRef.560567* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.19, i64 0, i32 5
  %.21 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.20, align 8
  %.22 = tail call %LLVMValueRef.560567* %.21(%"Array<LLVMValueRef>.560613"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMValueRef.560567* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMValueRef>_find"(%"Array<LLVMValueRef>.560613"* nocapture readonly %.1, %LLVMValueRef.560567* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 1
  %.19 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.18, align 8
  %0 = ptrtoint %LLVMValueRef.560567* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMValueRef.560567*, %LLVMValueRef.560567** %.19, i64 %storemerge5
  %1 = bitcast %LLVMValueRef.560567** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define void @resize_value_array(%"Array<LLVMValueRef>.560613"* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.15.not1 = icmp sgt i64 %.10, %.2
  br i1 %.15.not1, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge2 = phi i64 [ %.10, %for.body.lr.ph ], [ %.27, %for.body ]
  %.19 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.19, i64 0, i32 2
  %.21 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.20, align 8
  tail call void %.21(%"Array<LLVMValueRef>.560613"* nonnull %.1, %LLVMValueRef.560567* null)
  %.27 = add i64 %storemerge2, 1
  %.15.not = icmp sgt i64 %.27, %.2
  br i1 %.15.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret void
}

; Function Attrs: nofree nounwind
define noalias %string.560217* @get_format_from_type(%Type.560381* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = tail call i1 @is_int(%Type.560381* %.1)
  %.9 = getelementptr inbounds %Type.560381, %Type.560381* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  br i1 %.6, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.11 = icmp eq i64 %.10, 6
  br i1 %.11, label %.3.if.if, label %.3.if.endif

.3.endif:                                         ; preds = %.3
  %0 = and i64 %.10, -2
  switch i64 %0, label %.3.endif.endif.endif [
    i64 8, label %.3.endif.if
    i64 10, label %.3.endif.endif.if
  ]

.3.if.if:                                         ; preds = %.3.if
  %.13 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %string.560217*
  %.14.repack = bitcast i8* %.13 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.14.repack, align 8
  %.14.repack19 = getelementptr inbounds i8, i8* %.13, i64 8
  %1 = bitcast i8* %.14.repack19 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.331, i64 0, i64 0), i8** %1, align 8
  %.14.repack20 = getelementptr inbounds i8, i8* %.13, i64 16
  %2 = bitcast i8* %.14.repack20 to i64*
  store i64 3, i64* %2, align 8
  %.14.repack21 = getelementptr inbounds i8, i8* %.13, i64 24
  %3 = bitcast i8* %.14.repack21 to i64*
  store i64 3, i64* %3, align 8
  ret %string.560217* %.14

.3.if.endif:                                      ; preds = %.3.if
  %.20 = icmp eq i64 %.10, 5
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.560217*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.23.repack, align 8
  %.23.repack16 = getelementptr inbounds i8, i8* %.22, i64 8
  %4 = bitcast i8* %.23.repack16 to i8**
  br i1 %.20, label %.3.if.endif.if, label %.3.if.endif.endif

.3.if.endif.if:                                   ; preds = %.3.if.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.332, i64 0, i64 0), i8** %4, align 8
  %.23.repack17 = getelementptr inbounds i8, i8* %.22, i64 16
  %5 = bitcast i8* %.23.repack17 to i64*
  store i64 2, i64* %5, align 8
  %.23.repack18 = getelementptr inbounds i8, i8* %.22, i64 24
  %6 = bitcast i8* %.23.repack18 to i64*
  store i64 2, i64* %6, align 8
  ret %string.560217* %.23

.3.if.endif.endif:                                ; preds = %.3.if.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.333, i64 0, i64 0), i8** %4, align 8
  %.27.repack14 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.27.repack14 to i64*
  store i64 2, i64* %7, align 8
  %.27.repack15 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.27.repack15 to i64*
  store i64 2, i64* %8, align 8
  ret %string.560217* %.23

.3.endif.if:                                      ; preds = %.3.endif
  %.40 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %string.560217*
  %.41.repack = bitcast i8* %.40 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.41.repack, align 8
  %.41.repack10 = getelementptr inbounds i8, i8* %.40, i64 8
  %9 = bitcast i8* %.41.repack10 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.334, i64 0, i64 0), i8** %9, align 8
  %.41.repack11 = getelementptr inbounds i8, i8* %.40, i64 16
  %10 = bitcast i8* %.41.repack11 to i64*
  store i64 2, i64* %10, align 8
  %.41.repack12 = getelementptr inbounds i8, i8* %.40, i64 24
  %11 = bitcast i8* %.41.repack12 to i64*
  store i64 2, i64* %11, align 8
  ret %string.560217* %.41

.3.endif.endif.if:                                ; preds = %.3.endif
  %.54 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.55 = bitcast i8* %.54 to %string.560217*
  %.55.repack = bitcast i8* %.54 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.55.repack, align 8
  %.55.repack7 = getelementptr inbounds i8, i8* %.54, i64 8
  %12 = bitcast i8* %.55.repack7 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.335, i64 0, i64 0), i8** %12, align 8
  %.55.repack8 = getelementptr inbounds i8, i8* %.54, i64 16
  %13 = bitcast i8* %.55.repack8 to i64*
  store i64 3, i64* %13, align 8
  %.55.repack9 = getelementptr inbounds i8, i8* %.54, i64 24
  %14 = bitcast i8* %.55.repack9 to i64*
  store i64 3, i64* %14, align 8
  ret %string.560217* %.55

.3.endif.endif.endif:                             ; preds = %.3.endif
  %.59 = tail call i1 @is_pointer(%Type.560381* nonnull %.1)
  %.61 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.560217*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.62.repack, align 8
  %.62.repack4 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack4 to i8**
  br i1 %.59, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.336, i64 0, i64 0), i8** %15, align 8
  %.62.repack5 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack5 to i64*
  store i64 4, i64* %16, align 8
  %.62.repack6 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack6 to i64*
  store i64 4, i64* %17, align 8
  ret %string.560217* %.62

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.337, i64 0, i64 0), i8** %15, align 8
  %.66.repack2 = getelementptr inbounds i8, i8* %.61, i64 16
  %18 = bitcast i8* %.66.repack2 to i64*
  store i64 2, i64* %18, align 8
  %.66.repack3 = getelementptr inbounds i8, i8* %.61, i64 24
  %19 = bitcast i8* %.66.repack3 to i64*
  store i64 2, i64* %19, align 8
  ret %string.560217* %.62
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.560620"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGClassType>_set"(%"Bucket<string, CGClassType>.560620"* nocapture %.1, %string.560217* %.2, %CGClassType.560595* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.1, i64 0, i32 2
  store %CGClassType.560595* %.3, %CGClassType.560595** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, CGClassType>_constructor"(%"Map<string, CGClassType>.560617"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.560620"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, CGClassType>.560620"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, CGClassType>_vtable_ty.560621"**
  store %"Bucket<string, CGClassType>_vtable_ty.560621"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.560621"** %.266, align 8
  tail call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.560620"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, CGClassType>.560620"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, CGClassType>_vtable_ty.560621"**
  store %"Bucket<string, CGClassType>_vtable_ty.560621"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.560621"** %.26, align 8
  tail call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.560620"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, CGClassType>.560620"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, CGClassType>_hash_fnc"(%"Map<string, CGClassType>.560617"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, CGClassType>_resize"(%"Map<string, CGClassType>.560617"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, CGClassType>_vtable_ty.560619"*, %"Map<string, CGClassType>_vtable_ty.560619"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.560619", %"Map<string, CGClassType>_vtable_ty.560619"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, CGClassType>>.560622"* (%"Map<string, CGClassType>.560617"*)*, %"Array<Bucket<string, CGClassType>>.560622"* (%"Map<string, CGClassType>.560617"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, CGClassType>>.560622"* %.9(%"Map<string, CGClassType>.560617"* %.1)
  %.14 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.560620"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, CGClassType>.560620"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, CGClassType>_vtable_ty.560621"**
  store %"Bucket<string, CGClassType>_vtable_ty.560621"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.560621"** %.5016, align 8
  tail call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.560620"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, CGClassType>.560620"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, CGClassType>_vtable_ty.560621"**
  store %"Bucket<string, CGClassType>_vtable_ty.560621"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.560621"** %.50, align 8
  tail call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.560620"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, CGClassType>.560620"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, CGClassType>_vtable_ty.560619"*, %"Map<string, CGClassType>_vtable_ty.560619"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.560619", %"Map<string, CGClassType>_vtable_ty.560619"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, CGClassType>.560617"*, %string.560217*, %CGClassType.560595*)*, void (%"Map<string, CGClassType>.560617"*, %string.560217*, %CGClassType.560595*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)*, %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, CGClassType>.560620"* %.81(%"Array<Bucket<string, CGClassType>>.560622"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)*, %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, CGClassType>.560620"* %.90(%"Array<Bucket<string, CGClassType>>.560622"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.91, i64 0, i32 2
  %.93 = load %CGClassType.560595*, %CGClassType.560595** %.92, align 8
  tail call void %.75(%"Map<string, CGClassType>.560617"* nonnull %.1, %string.560217* %.84, %CGClassType.560595* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, CGClassType>_set"(%"Map<string, CGClassType>.560617"* %.1, %string.560217* %.2, %CGClassType.560595* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, CGClassType>_vtable_ty.560619"*, %"Map<string, CGClassType>_vtable_ty.560619"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.560619", %"Map<string, CGClassType>_vtable_ty.560619"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, CGClassType>.560617"*)*, void (%"Map<string, CGClassType>.560617"*)** %.25, align 8
  tail call void %.26(%"Map<string, CGClassType>.560617"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, CGClassType>_vtable_ty.560619"*, %"Map<string, CGClassType>_vtable_ty.560619"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.560619", %"Map<string, CGClassType>_vtable_ty.560619"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, CGClassType>.560617"*, %string.560217*)*, i64 (%"Map<string, CGClassType>.560617"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, CGClassType>.560617"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.44, i64 %.39
  %.46 = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, CGClassType>.560620"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, CGClassType>.560620"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.94, i64 %.91
  %.96 = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, CGClassType>_vtable_ty.560621"*, %"Bucket<string, CGClassType>_vtable_ty.560621"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, CGClassType>_vtable_ty.560621", %"Bucket<string, CGClassType>_vtable_ty.560621"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, CGClassType>.560620"*, %string.560217*, %CGClassType.560595*)*, void (%"Bucket<string, CGClassType>.560620"*, %string.560217*, %CGClassType.560595*)** %.99, align 8
  tail call void %.100(%"Bucket<string, CGClassType>.560620"* %.96, %string.560217* %.2, %CGClassType.560595* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.77, i64 %.72
  %.79 = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %CGClassType.560595* @"Map<string, CGClassType>_get"(%"Map<string, CGClassType>.560617"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, CGClassType>_vtable_ty.560619"*, %"Map<string, CGClassType>_vtable_ty.560619"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.560619", %"Map<string, CGClassType>_vtable_ty.560619"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, CGClassType>.560617"*, %string.560217*)*, i64 (%"Map<string, CGClassType>.560617"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, CGClassType>.560617"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.22, i64 %.17
  %.24 = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, CGClassType>.560620"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.56, i64 %.50
  %.58 = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %CGClassType.560595*, %CGClassType.560595** %.79, align 8
  ret %CGClassType.560595* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %CGClassType.560595* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, CGClassType>>_constructor"(%"Array<Bucket<string, CGClassType>>.560622"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.560620"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, CGClassType>>_resize"(%"Array<Bucket<string, CGClassType>>.560622"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.560620"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, CGClassType>>_swap"(%"Array<Bucket<string, CGClassType>>.560622"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, CGClassType>.560620"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, CGClassType>.560620"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, CGClassType>.560620"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGClassType>>___sl__"(%"Array<Bucket<string, CGClassType>>.560622"* %.1, %"Bucket<string, CGClassType>.560620"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, CGClassType>>.560622"*)*, void (%"Array<Bucket<string, CGClassType>>.560622"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, CGClassType>>.560622"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.31, i64 %.24
  store %"Bucket<string, CGClassType>.560620"* %.2, %"Bucket<string, CGClassType>.560620"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, CGClassType>>___setitem__"(%"Array<Bucket<string, CGClassType>>.560622"* nocapture readonly %.1, i64 %.2, %"Bucket<string, CGClassType>.560620"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.30, i64 %.2
  store %"Bucket<string, CGClassType>.560620"* %.3, %"Bucket<string, CGClassType>.560620"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGClassType>>_append"(%"Array<Bucket<string, CGClassType>>.560622"* %.1, %"Bucket<string, CGClassType>.560620"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)*, void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, CGClassType>>.560622"* %.1, %"Bucket<string, CGClassType>.560620"* %.2)
  ret void
}

define %"Bucket<string, CGClassType>.560620"* @"Array<Bucket<string, CGClassType>>___getitem__"(%"Array<Bucket<string, CGClassType>>.560622"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.28, i64 %.2
  %.30 = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.29, align 8
  ret %"Bucket<string, CGClassType>.560620"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, CGClassType>.560620"* null
}

define i1 @"Array<Bucket<string, CGClassType>>___eq__"(%"Array<Bucket<string, CGClassType>>.560622"* %.1, %"Array<Bucket<string, CGClassType>>.560622"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)*, %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, CGClassType>.560620"* %.30(%"Array<Bucket<string, CGClassType>>.560622"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)*, %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, CGClassType>.560620"* %.37(%"Array<Bucket<string, CGClassType>>.560622"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, CGClassType>.560620"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, CGClassType>.560620"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, CGClassType>>___in__"(%"Array<Bucket<string, CGClassType>>.560622"* %.1, %"Bucket<string, CGClassType>.560620"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, CGClassType>.560620"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)*, %"Bucket<string, CGClassType>.560620"* (%"Array<Bucket<string, CGClassType>>.560622"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, CGClassType>.560620"* %.21(%"Array<Bucket<string, CGClassType>>.560622"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, CGClassType>.560620"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, CGClassType>>_find"(%"Array<Bucket<string, CGClassType>>.560622"* nocapture readonly %.1, %"Bucket<string, CGClassType>.560620"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.560622", %"Array<Bucket<string, CGClassType>>.560622"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, CGClassType>.560620"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGClassType>.560620"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, CGClassType>>.560622"* @"Map<string, CGClassType>_get_buckets"(%"Map<string, CGClassType>.560617"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, CGClassType>>.560622"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"**
  store %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* @"Array<Bucket<string, CGClassType>>_vtable_data", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, CGClassType>.560620"**, %"Bucket<string, CGClassType>.560620"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, CGClassType>.560620"*, %"Bucket<string, CGClassType>.560620"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, CGClassType>.560620", %"Bucket<string, CGClassType>.560620"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, CGClassType>>.560622"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.560623", %"Array<Bucket<string, CGClassType>>_vtable_ty.560623"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)*, void (%"Array<Bucket<string, CGClassType>>.560622"*, %"Bucket<string, CGClassType>.560620"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, CGClassType>>.560622"* %.9, %"Bucket<string, CGClassType>.560620"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.560625"* nocapture %.1) local_unnamed_addr #2 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGEnumType>_set"(%"Bucket<string, CGEnumType>.560625"* nocapture %.1, %string.560217* %.2, %CGEnumType.560609* %.3) #2 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.1, i64 0, i32 1
  store %string.560217* %.2, %string.560217** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.1, i64 0, i32 2
  store %CGEnumType.560609* %.3, %CGEnumType.560609** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, CGEnumType>_constructor"(%"Map<string, CGEnumType>.560618"* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.9 = tail call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.560625"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  %.244 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.255 = bitcast i8* %.244 to %"Bucket<string, CGEnumType>.560625"*
  %.266 = bitcast i8* %.244 to %"Bucket<string, CGEnumType>_vtable_ty.560626"**
  store %"Bucket<string, CGEnumType>_vtable_ty.560626"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.560626"** %.266, align 8
  tail call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.560625"* %.255)
  %1 = bitcast i8* %.9 to i8**
  store i8* %.244, i8** %1, align 8
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %.3, %for.body.for.body_crit_edge
  %.357 = phi i64 [ 1, %.3 ], [ %.35, %for.body.for.body_crit_edge ]
  %.23.pre = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.11, align 8
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, CGEnumType>.560625"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, CGEnumType>_vtable_ty.560626"**
  store %"Bucket<string, CGEnumType>_vtable_ty.560626"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.560626"** %.26, align 8
  tail call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.560625"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.23.pre, i64 %.357
  %2 = bitcast %"Bucket<string, CGEnumType>.560625"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.35 = add nuw nsw i64 %.357, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.end:                                          ; preds = %for.body.for.body_crit_edge
  %.40 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

define i64 @"Map<string, CGEnumType>_hash_fnc"(%"Map<string, CGEnumType>.560618"* nocapture readnone %.1, %string.560217* %.2) {
.4:
  %.15 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 2
  %.162 = load i64, i64* %.15, align 8
  %.173 = icmp sgt i64 %.162, 0
  br i1 %.173, label %for.body.lr.ph, label %for.end.thread

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %hash.05 = phi i64 [ 0, %for.body.lr.ph ], [ %.29, %for.body ]
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body ]
  %.23 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.23, i64 0, i32 8
  %.25 = load i8 (%string.560217*, i64)*, i8 (%string.560217*, i64)** %.24, align 8
  %.27 = tail call i8 %.25(%string.560217* nonnull %.2, i64 %storemerge4)
  %.20 = shl i64 %hash.05, 1
  %.28 = zext i8 %.27 to i64
  %.29 = add i64 %.20, %.28
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.35, %.16
  br i1 %.17, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %.39 = icmp slt i64 %.29, 0
  %.42 = sub i64 0, %.29
  %spec.select = select i1 %.39, i64 %.42, i64 %.29
  ret i64 %spec.select

for.end.thread:                                   ; preds = %.4
  ret i64 0
}

define void @"Map<string, CGEnumType>_resize"(%"Map<string, CGEnumType>.560618"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 0
  %.7 = load %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Map<string, CGEnumType>_vtable_ty.560624"** %.6, align 8
  %.8 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.560624", %"Map<string, CGEnumType>_vtable_ty.560624"* %.7, i64 0, i32 4
  %.9 = load %"Array<Bucket<string, CGEnumType>>.560627"* (%"Map<string, CGEnumType>.560618"*)*, %"Array<Bucket<string, CGEnumType>>.560627"* (%"Map<string, CGEnumType>.560618"*)** %.8, align 8
  %.10 = tail call %"Array<Bucket<string, CGEnumType>>.560627"* %.9(%"Map<string, CGEnumType>.560618"* %.1)
  %.14 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = shl i64 %.15, 1
  store i64 %.16, i64* %.14, align 8
  %.20 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 2
  store i64 0, i64* %.20, align 8
  %.24 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.560625"*** %.24 to i8**
  %.251 = load i8*, i8** %0, align 8
  %.29 = shl i64 %.15, 4
  %.31 = tail call i8* @realloc(i8* %.251, i64 %.29)
  store i8* %.31, i8** %0, align 8
  %.4110 = load i64, i64* %.14, align 8
  %.4211 = icmp sgt i64 %.4110, 0
  br i1 %.4211, label %for.body.preheader, label %for.cond.1.preheader

for.body.preheader:                               ; preds = %.3
  %.4814 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.4915 = bitcast i8* %.4814 to %"Bucket<string, CGEnumType>.560625"*
  %.5016 = bitcast i8* %.4814 to %"Bucket<string, CGEnumType>_vtable_ty.560626"**
  store %"Bucket<string, CGEnumType>_vtable_ty.560626"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.560626"** %.5016, align 8
  tail call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.560625"* %.4915)
  %1 = bitcast i8* %.31 to i8**
  store i8* %.4814, i8** %1, align 8
  %.4117 = load i64, i64* %.14, align 8
  %.4218 = icmp sgt i64 %.4117, 1
  br i1 %.4218, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %.3
  %.67 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.10, i64 0, i32 2
  %.687 = load i64, i64* %.67, align 8
  %.698 = icmp sgt i64 %.687, 0
  br i1 %.698, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.10, i64 0, i32 0
  br label %for.body.1

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %.5919 = phi i64 [ %.59, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.47.pre = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.24, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Bucket<string, CGEnumType>.560625"*
  %.50 = bitcast i8* %.48 to %"Bucket<string, CGEnumType>_vtable_ty.560626"**
  store %"Bucket<string, CGEnumType>_vtable_ty.560626"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.560626"** %.50, align 8
  tail call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.560625"* %.49)
  %.53 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.47.pre, i64 %.5919
  %2 = bitcast %"Bucket<string, CGEnumType>.560625"** %.53 to i8**
  store i8* %.48, i8** %2, align 8
  %.59 = add nuw nsw i64 %.5919, 1
  %.41 = load i64, i64* %.14, align 8
  %.42 = icmp slt i64 %.59, %.41
  br i1 %.42, label %for.body.for.body_crit_edge, label %for.cond.1.preheader

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge29 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.99, %for.body.1 ]
  %.73 = load %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Map<string, CGEnumType>_vtable_ty.560624"** %.6, align 8
  %.74 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.560624", %"Map<string, CGEnumType>_vtable_ty.560624"* %.73, i64 0, i32 2
  %.75 = load void (%"Map<string, CGEnumType>.560618"*, %string.560217*, %CGEnumType.560609*)*, void (%"Map<string, CGEnumType>.560618"*, %string.560217*, %CGEnumType.560609*)** %.74, align 8
  %.79 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.79, i64 0, i32 5
  %.81 = load %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)*, %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)** %.80, align 8
  %.82 = tail call %"Bucket<string, CGEnumType>.560625"* %.81(%"Array<Bucket<string, CGEnumType>>.560627"* nonnull %.10, i64 %storemerge29)
  %.83 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.82, i64 0, i32 1
  %.84 = load %string.560217*, %string.560217** %.83, align 8
  %.88 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.78, align 8
  %.89 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.88, i64 0, i32 5
  %.90 = load %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)*, %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)** %.89, align 8
  %.91 = tail call %"Bucket<string, CGEnumType>.560625"* %.90(%"Array<Bucket<string, CGEnumType>>.560627"* nonnull %.10, i64 %storemerge29)
  %.92 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.91, i64 0, i32 2
  %.93 = load %CGEnumType.560609*, %CGEnumType.560609** %.92, align 8
  tail call void %.75(%"Map<string, CGEnumType>.560618"* nonnull %.1, %string.560217* %.84, %CGEnumType.560609* %.93)
  %.99 = add nuw nsw i64 %storemerge29, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.99, %.68
  br i1 %.69, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  ret void
}

define void @"Map<string, CGEnumType>_set"(%"Map<string, CGEnumType>.560618"* %.1, %string.560217* %.2, %CGEnumType.560609* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = sitofp i64 %.11 to double
  %.14 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.16 = sitofp i64 %.15 to double
  %.17 = fdiv double %.12, %.16
  %.20 = fcmp ogt double %.17, 7.500000e-01
  br i1 %.20, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.23 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 0
  %.24 = load %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Map<string, CGEnumType>_vtable_ty.560624"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.560624", %"Map<string, CGEnumType>_vtable_ty.560624"* %.24, i64 0, i32 1
  %.26 = load void (%"Map<string, CGEnumType>.560618"*)*, void (%"Map<string, CGEnumType>.560618"*)** %.25, align 8
  tail call void %.26(%"Map<string, CGEnumType>.560618"* nonnull %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.30 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 0
  %.31 = load %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Map<string, CGEnumType>_vtable_ty.560624"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.560624", %"Map<string, CGEnumType>_vtable_ty.560624"* %.31, i64 0, i32 0
  %.33 = load i64 (%"Map<string, CGEnumType>.560618"*, %string.560217*)*, i64 (%"Map<string, CGEnumType>.560618"*, %string.560217*)** %.32, align 8
  %.35 = tail call i64 %.33(%"Map<string, CGEnumType>.560618"* nonnull %.1, %string.560217* %.2)
  %.38 = load i64, i64* %.14, align 8
  %.39 = srem i64 %.35, %.38
  %.43 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 1
  %.44 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.43, align 8
  %.45 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.44, i64 %.39
  %.46 = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.45, align 8
  %.47 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.46, i64 0, i32 3
  %.48 = load i1, i1* %.47, align 1
  br i1 %.48, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %.56 = phi %"Bucket<string, CGEnumType>.560625"* [ %.79, %while.entry.endif ], [ %.46, %.5.endif ]
  %.721 = phi i64 [ %.72, %while.entry.endif ], [ %.39, %.5.endif ]
  %.57 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.56, i64 0, i32 1
  %.58 = load %string.560217*, %string.560217** %.57, align 8
  %.60 = getelementptr inbounds %string.560217, %string.560217* %.58, i64 0, i32 0
  %.61 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.60, align 8
  %.62 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.61, i64 0, i32 4
  %.63 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.62, align 8
  %.64 = tail call i1 %.63(%string.560217* %.58, %string.560217* %.2)
  br i1 %.64, label %while.entry.while.exit.loopexit_crit_edge, label %while.entry.endif

while.entry.while.exit.loopexit_crit_edge:        ; preds = %while.entry
  %.94.pre.pre = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.43, align 8
  br label %while.exit

while.exit:                                       ; preds = %while.entry.endif, %while.entry.while.exit.loopexit_crit_edge, %.5.endif
  %.94 = phi %"Bucket<string, CGEnumType>.560625"** [ %.44, %.5.endif ], [ %.94.pre.pre, %while.entry.while.exit.loopexit_crit_edge ], [ %.77, %while.entry.endif ]
  %.91 = phi i64 [ %.39, %.5.endif ], [ %.721, %while.entry.while.exit.loopexit_crit_edge ], [ %.72, %while.entry.endif ]
  %.86 = load i64, i64* %.10, align 8
  %.87 = add i64 %.86, 1
  store i64 %.87, i64* %.10, align 8
  %.95 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.94, i64 %.91
  %.96 = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.95, align 8
  %.97 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.96, i64 0, i32 0
  %.98 = load %"Bucket<string, CGEnumType>_vtable_ty.560626"*, %"Bucket<string, CGEnumType>_vtable_ty.560626"** %.97, align 8
  %.99 = getelementptr inbounds %"Bucket<string, CGEnumType>_vtable_ty.560626", %"Bucket<string, CGEnumType>_vtable_ty.560626"* %.98, i64 0, i32 0
  %.100 = load void (%"Bucket<string, CGEnumType>.560625"*, %string.560217*, %CGEnumType.560609*)*, void (%"Bucket<string, CGEnumType>.560625"*, %string.560217*, %CGEnumType.560609*)** %.99, align 8
  tail call void %.100(%"Bucket<string, CGEnumType>.560625"* %.96, %string.560217* %.2, %CGEnumType.560609* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.68 = add i64 %.721, 1
  %.71 = load i64, i64* %.14, align 8
  %.72 = srem i64 %.68, %.71
  %.77 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.43, align 8
  %.78 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.77, i64 %.72
  %.79 = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.78, align 8
  %.80 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.79, i64 0, i32 3
  %.81 = load i1, i1* %.80, align 1
  br i1 %.81, label %while.exit, label %while.entry
}

define %CGEnumType.560609* @"Map<string, CGEnumType>_get"(%"Map<string, CGEnumType>.560618"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Map<string, CGEnumType>_vtable_ty.560624"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.560624", %"Map<string, CGEnumType>_vtable_ty.560624"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, CGEnumType>.560618"*, %string.560217*)*, i64 (%"Map<string, CGEnumType>.560618"*, %string.560217*)** %.10, align 8
  %.13 = tail call i64 %.11(%"Map<string, CGEnumType>.560618"* %.1, %string.560217* %.2)
  %.15 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.22, i64 %.17
  %.24 = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit.endif, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %.34 = phi %"Bucket<string, CGEnumType>.560625"* [ %.58, %while.entry.else ], [ %.24, %.4 ]
  %hash.0 = phi i64 [ %.50, %while.entry.else ], [ %.17, %.4 ]
  %.35 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.34, i64 0, i32 1
  %.36 = load %string.560217*, %string.560217** %.35, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 4
  %.41 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.40, align 8
  %.42 = tail call i1 %.41(%string.560217* %.36, %string.560217* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry
  %.66.pre.pre = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.21, align 8
  %.67.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.66.pre.pre, i64 %hash.0
  %.68.pre.pre = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.67.phi.trans.insert.phi.trans.insert, align 8
  %.69.phi.trans.insert.phi.trans.insert = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.68.pre.pre, i64 0, i32 3
  %.70.pre.pre = load i1, i1* %.69.phi.trans.insert.phi.trans.insert, align 1
  br i1 %.70.pre.pre, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.46 = add i64 %hash.0, 1
  %.49 = load i64, i64* %.15, align 8
  %.50 = srem i64 %.46, %.49
  %.56 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.21, align 8
  %.57 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.56, i64 %.50
  %.58 = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.57, align 8
  %.59 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.58, i64 0, i32 3
  %.60 = load i1, i1* %.59, align 1
  br i1 %.60, label %while.exit.endif, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.79 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.68.pre.pre, i64 0, i32 2
  %.80 = load %CGEnumType.560609*, %CGEnumType.560609** %.79, align 8
  ret %CGEnumType.560609* %.80

while.exit.endif:                                 ; preds = %while.entry.else, %.4, %while.exit
  ret %CGEnumType.560609* null
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, CGEnumType>>_constructor"(%"Array<Bucket<string, CGEnumType>>.560627"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.560625"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, CGEnumType>>_resize"(%"Array<Bucket<string, CGEnumType>>.560627"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.560625"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>_swap"(%"Array<Bucket<string, CGEnumType>>.560627"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, CGEnumType>.560625"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, CGEnumType>.560625"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, CGEnumType>.560625"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>___sl__"(%"Array<Bucket<string, CGEnumType>>.560627"* %.1, %"Bucket<string, CGEnumType>.560625"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, CGEnumType>>.560627"*)*, void (%"Array<Bucket<string, CGEnumType>>.560627"*)** %.18, align 8
  tail call void %.19(%"Array<Bucket<string, CGEnumType>>.560627"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.31, i64 %.24
  store %"Bucket<string, CGEnumType>.560625"* %.2, %"Bucket<string, CGEnumType>.560625"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>___setitem__"(%"Array<Bucket<string, CGEnumType>>.560627"* nocapture readonly %.1, i64 %.2, %"Bucket<string, CGEnumType>.560625"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.30, i64 %.2
  store %"Bucket<string, CGEnumType>.560625"* %.3, %"Bucket<string, CGEnumType>.560625"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>_append"(%"Array<Bucket<string, CGEnumType>>.560627"* %.1, %"Bucket<string, CGEnumType>.560625"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)*, void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)** %.10, align 8
  tail call void %.11(%"Array<Bucket<string, CGEnumType>>.560627"* %.1, %"Bucket<string, CGEnumType>.560625"* %.2)
  ret void
}

define %"Bucket<string, CGEnumType>.560625"* @"Array<Bucket<string, CGEnumType>>___getitem__"(%"Array<Bucket<string, CGEnumType>>.560627"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.28, i64 %.2
  %.30 = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.29, align 8
  ret %"Bucket<string, CGEnumType>.560625"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, CGEnumType>.560625"* null
}

define i1 @"Array<Bucket<string, CGEnumType>>___eq__"(%"Array<Bucket<string, CGEnumType>>.560627"* %.1, %"Array<Bucket<string, CGEnumType>>.560627"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 0
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)*, %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)** %.29, align 8
  %.31 = tail call %"Bucket<string, CGEnumType>.560625"* %.30(%"Array<Bucket<string, CGEnumType>>.560627"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)*, %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)** %.36, align 8
  %.38 = tail call %"Bucket<string, CGEnumType>.560625"* %.37(%"Array<Bucket<string, CGEnumType>>.560627"* nonnull %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, CGEnumType>.560625"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, CGEnumType>.560625"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, CGEnumType>>___in__"(%"Array<Bucket<string, CGEnumType>>.560627"* %.1, %"Bucket<string, CGEnumType>.560625"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, CGEnumType>.560625"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)*, %"Bucket<string, CGEnumType>.560625"* (%"Array<Bucket<string, CGEnumType>>.560627"*, i64)** %.20, align 8
  %.22 = tail call %"Bucket<string, CGEnumType>.560625"* %.21(%"Array<Bucket<string, CGEnumType>>.560627"* nonnull %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, CGEnumType>.560625"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, CGEnumType>>_find"(%"Array<Bucket<string, CGEnumType>>.560627"* nocapture readonly %.1, %"Bucket<string, CGEnumType>.560625"* %.2) #5 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.560627", %"Array<Bucket<string, CGEnumType>>.560627"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, CGEnumType>.560625"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGEnumType>.560625"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge5, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.14 = icmp slt i64 %.33, %.133
  br i1 %.14, label %for.body, label %for.end
}

define %"Array<Bucket<string, CGEnumType>>.560627"* @"Map<string, CGEnumType>_get_buckets"(%"Map<string, CGEnumType>.560618"* nocapture readonly %.1) {
.3:
  %.6 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, CGEnumType>>.560627"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"**
  store %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* @"Array<Bucket<string, CGEnumType>>_vtable_data", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.256 = phi i64 [ %.253, %for.body.lr.ph ], [ %.25, %for.body.endif ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, CGEnumType>.560625"**, %"Bucket<string, CGEnumType>.560625"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.31, i64 %storemerge5
  %.3318 = load %"Bucket<string, CGEnumType>.560625"*, %"Bucket<string, CGEnumType>.560625"** %.32, align 8
  %.36 = getelementptr inbounds %"Bucket<string, CGEnumType>.560625", %"Bucket<string, CGEnumType>.560625"* %.3318, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, CGEnumType>>.560627"* %.9

for.body.if:                                      ; preds = %for.body
  %.43 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628", %"Array<Bucket<string, CGEnumType>>_vtable_ty.560628"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)*, void (%"Array<Bucket<string, CGEnumType>>.560627"*, %"Bucket<string, CGEnumType>.560625"*)** %.44, align 8
  tail call void %.45(%"Array<Bucket<string, CGEnumType>>.560627"* %.9, %"Bucket<string, CGEnumType>.560625"* %.3318)
  %.25.pre = load i64, i64* %.24, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.25 = phi i64 [ %.256, %for.body ], [ %.25.pre, %for.body.if ]
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @CodeGen_constructor(%CodeGen.560615* nocapture %.1) local_unnamed_addr #4 {
.3:
  %.6 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %"Map<string, LLVMValueRef>.560598"*
  %.8 = bitcast i8* %.6 to %"Map<string, LLVMValueRef>_vtable_ty.560604"**
  store %"Map<string, LLVMValueRef>_vtable_ty.560604"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.8, align 8
  tail call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.560598"* %.7)
  %.11 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 3
  %0 = bitcast %"Map<string, LLVMValueRef>.560598"** %.11 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Map<string, LLVMValueRef>.560598"*
  %.16 = bitcast i8* %.14 to %"Map<string, LLVMValueRef>_vtable_ty.560604"**
  store %"Map<string, LLVMValueRef>_vtable_ty.560604"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.16, align 8
  tail call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.560598"* %.15)
  %.19 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 4
  %1 = bitcast %"Map<string, LLVMValueRef>.560598"** %.19 to i8**
  store i8* %.14, i8** %1, align 8
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %"Map<string, CGClassType>.560617"*
  %.24 = bitcast i8* %.22 to %"Map<string, CGClassType>_vtable_ty.560619"**
  store %"Map<string, CGClassType>_vtable_ty.560619"* @"Map<string, CGClassType>_vtable_data", %"Map<string, CGClassType>_vtable_ty.560619"** %.24, align 8
  tail call void @"Map<string, CGClassType>_constructor"(%"Map<string, CGClassType>.560617"* %.23)
  %.27 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 5
  %2 = bitcast %"Map<string, CGClassType>.560617"** %.27 to i8**
  store i8* %.22, i8** %2, align 8
  %.30 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.31 = bitcast i8* %.30 to %"Map<string, CGEnumType>.560618"*
  %.32 = bitcast i8* %.30 to %"Map<string, CGEnumType>_vtable_ty.560624"**
  store %"Map<string, CGEnumType>_vtable_ty.560624"* @"Map<string, CGEnumType>_vtable_data", %"Map<string, CGEnumType>_vtable_ty.560624"** %.32, align 8
  tail call void @"Map<string, CGEnumType>_constructor"(%"Map<string, CGEnumType>.560618"* %.31)
  %.35 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 6
  %3 = bitcast %"Map<string, CGEnumType>.560618"** %.35 to i8**
  store i8* %.30, i8** %3, align 8
  %.38 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %"Map<string, LLVMValueRef>.560598"*
  %.40 = bitcast i8* %.38 to %"Map<string, LLVMValueRef>_vtable_ty.560604"**
  store %"Map<string, LLVMValueRef>_vtable_ty.560604"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.40, align 8
  tail call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.560598"* %.39)
  %.43 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 11
  %4 = bitcast %"Map<string, LLVMValueRef>.560598"** %.43 to i8**
  store i8* %.38, i8** %4, align 8
  %.46 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 10
  store i1 true, i1* %.46, align 1
  ret void
}

define %GeneratedModule.560591* @CodeGen_codegen(%CodeGen.560615* %.1, %Program.560549* %.2) {
.4:
  %.8 = getelementptr inbounds %Program.560549, %Program.560549* %.2, i64 0, i32 2
  %.9 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.9, i64 0, i32 0
  %.11 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.11, i64 0, i32 5
  %.13 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.12, align 8
  %.14 = tail call %Module.560531* %.13(%"Array<Module>.560551"* %.9, i64 2)
  %.18 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  store %Program.560549* %.2, %Program.560549** %.18, align 8
  %.24 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 7
  %0 = bitcast %LLVMBasicBlockRef.560568** %.24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  %.27 = tail call %LLVMContextRef.560564* @LLVMContextCreate()
  %.28 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  store %LLVMContextRef.560564* %.27, %LLVMContextRef.560564** %.28, align 8
  %.32 = getelementptr inbounds %Module.560531, %Module.560531* %.14, i64 0, i32 2
  %.33 = load %string.560217*, %string.560217** %.32, align 8
  %.34 = getelementptr inbounds %string.560217, %string.560217* %.33, i64 0, i32 0
  %.35 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.34, align 8
  %.36 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.35, i64 0, i32 11
  %.37 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.36, align 8
  %.38 = tail call i8* %.37(%string.560217* %.33)
  %.41 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.28, align 8
  %.42 = tail call %LLVMModuleRef.560565* @LLVMModuleCreateWithNameInContext(i8* %.38, %LLVMContextRef.560564* %.41)
  %.43 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  store %LLVMModuleRef.560565* %.42, %LLVMModuleRef.560565** %.43, align 8
  %.50 = getelementptr inbounds %Module.560531, %Module.560531* %.14, i64 0, i32 7
  %.5147 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.50, align 8
  %.5248 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.5147, i64 0, i32 2
  %.5349 = load i64, i64* %.5248, align 8
  %.5450 = icmp sgt i64 %.5349, 0
  br i1 %.5450, label %for.body.lr.ph, label %for.cond.1.preheader

for.body.lr.ph:                                   ; preds = %.4
  %.57 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body

for.cond.1.preheader:                             ; preds = %for.body, %.4
  %.83 = getelementptr inbounds %Module.560531, %Module.560531* %.14, i64 0, i32 5
  %.8441 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.83, align 8
  %.8542 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.8441, i64 0, i32 2
  %.8643 = load i64, i64* %.8542, align 8
  %.8744 = icmp sgt i64 %.8643, 0
  br i1 %.8744, label %for.body.1.lr.ph, label %for.cond.2.preheader

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.90 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body.1

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.5152 = phi %"Array<Enum>.560537"* [ %.5147, %for.body.lr.ph ], [ %.51, %for.body ]
  %storemerge51 = phi i64 [ 0, %for.body.lr.ph ], [ %.75, %for.body ]
  %.58 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.57, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.58, i64 0, i32 68
  %.60 = load void (%CodeGen.560615*, %Enum.560527*)*, void (%CodeGen.560615*, %Enum.560527*)** %.59, align 8
  %.65 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.5152, i64 0, i32 0
  %.66 = load %"Array<Enum>_vtable_ty.560545"*, %"Array<Enum>_vtable_ty.560545"** %.65, align 8
  %.67 = getelementptr inbounds %"Array<Enum>_vtable_ty.560545", %"Array<Enum>_vtable_ty.560545"* %.66, i64 0, i32 5
  %.68 = load %Enum.560527* (%"Array<Enum>.560537"*, i64)*, %Enum.560527* (%"Array<Enum>.560537"*, i64)** %.67, align 8
  %.69 = tail call %Enum.560527* %.68(%"Array<Enum>.560537"* %.5152, i64 %storemerge51)
  tail call void %.60(%CodeGen.560615* nonnull %.1, %Enum.560527* %.69)
  %.75 = add nuw nsw i64 %storemerge51, 1
  %.51 = load %"Array<Enum>.560537"*, %"Array<Enum>.560537"** %.50, align 8
  %.52 = getelementptr inbounds %"Array<Enum>.560537", %"Array<Enum>.560537"* %.51, i64 0, i32 2
  %.53 = load i64, i64* %.52, align 8
  %.54 = icmp slt i64 %.75, %.53
  br i1 %.54, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.116 = getelementptr inbounds %Module.560531, %Module.560531* %.14, i64 0, i32 9
  %.11735 = load %"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"** %.116, align 8
  %.11836 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.11735, i64 0, i32 2
  %.11937 = load i64, i64* %.11836, align 8
  %.12038 = icmp sgt i64 %.11937, 0
  br i1 %.12038, label %for.body.2.lr.ph, label %for.cond.3.preheader

for.body.2.lr.ph:                                 ; preds = %for.cond.2.preheader
  %.123 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body.2

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.8446 = phi %"Array<Class>.560535"* [ %.8441, %for.body.1.lr.ph ], [ %.84, %for.body.1 ]
  %storemerge145 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.108, %for.body.1 ]
  %.91 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.90, align 8
  %.92 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.91, i64 0, i32 67
  %.93 = load void (%CodeGen.560615*, %Class.560513*)*, void (%CodeGen.560615*, %Class.560513*)** %.92, align 8
  %.98 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.8446, i64 0, i32 0
  %.99 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.98, align 8
  %.100 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.99, i64 0, i32 5
  %.101 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.100, align 8
  %.102 = tail call %Class.560513* %.101(%"Array<Class>.560535"* %.8446, i64 %storemerge145)
  tail call void %.93(%CodeGen.560615* nonnull %.1, %Class.560513* %.102)
  %.108 = add nuw nsw i64 %storemerge145, 1
  %.84 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.83, align 8
  %.85 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.84, i64 0, i32 2
  %.86 = load i64, i64* %.85, align 8
  %.87 = icmp slt i64 %.108, %.86
  br i1 %.87, label %for.body.1, label %for.cond.2.preheader

for.cond.3.preheader:                             ; preds = %for.body.2, %for.cond.2.preheader
  %.149 = getelementptr inbounds %Module.560531, %Module.560531* %.14, i64 0, i32 10
  %.15029 = load %"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"** %.149, align 8
  %.15130 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.15029, i64 0, i32 2
  %.15231 = load i64, i64* %.15130, align 8
  %.15332 = icmp sgt i64 %.15231, 0
  br i1 %.15332, label %for.body.3.lr.ph, label %for.cond.4.preheader

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.156 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body.3

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %.11740 = phi %"Array<ConstDeclaration>.560539"* [ %.11735, %for.body.2.lr.ph ], [ %.117, %for.body.2 ]
  %storemerge239 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.141, %for.body.2 ]
  %.124 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.123, align 8
  %.125 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.124, i64 0, i32 59
  %.126 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)** %.125, align 8
  %.131 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.11740, i64 0, i32 0
  %.132 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.131, align 8
  %.133 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.132, i64 0, i32 5
  %.134 = load %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)*, %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)** %.133, align 8
  %.135 = tail call %ConstDeclaration.560463* %.134(%"Array<ConstDeclaration>.560539"* %.11740, i64 %storemerge239)
  tail call void %.126(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* null, %ConstDeclaration.560463* %.135)
  %.141 = add nuw nsw i64 %storemerge239, 1
  %.117 = load %"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"** %.116, align 8
  %.118 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.117, i64 0, i32 2
  %.119 = load i64, i64* %.118, align 8
  %.120 = icmp slt i64 %.141, %.119
  br i1 %.120, label %for.body.2, label %for.cond.3.preheader

for.cond.4.preheader:                             ; preds = %for.body.3, %for.cond.3.preheader
  %.18323 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.83, align 8
  %.18424 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.18323, i64 0, i32 2
  %.18525 = load i64, i64* %.18424, align 8
  %.18626 = icmp sgt i64 %.18525, 0
  br i1 %.18626, label %for.body.4.lr.ph, label %for.cond.5.preheader

for.body.4.lr.ph:                                 ; preds = %for.cond.4.preheader
  %.189 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body.4

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3
  %.15034 = phi %"Array<VarDeclaration>.560540"* [ %.15029, %for.body.3.lr.ph ], [ %.150, %for.body.3 ]
  %storemerge333 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.174, %for.body.3 ]
  %.157 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.156, align 8
  %.158 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.157, i64 0, i32 58
  %.159 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)** %.158, align 8
  %.164 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.15034, i64 0, i32 0
  %.165 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.164, align 8
  %.166 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.165, i64 0, i32 5
  %.167 = load %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)*, %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)** %.166, align 8
  %.168 = tail call %VarDeclaration.560461* %.167(%"Array<VarDeclaration>.560540"* %.15034, i64 %storemerge333)
  tail call void %.159(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* null, %VarDeclaration.560461* %.168)
  %.174 = add nuw nsw i64 %storemerge333, 1
  %.150 = load %"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"** %.149, align 8
  %.151 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.150, i64 0, i32 2
  %.152 = load i64, i64* %.151, align 8
  %.153 = icmp slt i64 %.174, %.152
  br i1 %.153, label %for.body.3, label %for.cond.4.preheader

for.cond.5.preheader:                             ; preds = %for.body.4, %for.cond.4.preheader
  %.215 = getelementptr inbounds %Module.560531, %Module.560531* %.14, i64 0, i32 6
  %.21617 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.215, align 8
  %.21718 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.21617, i64 0, i32 2
  %.21819 = load i64, i64* %.21718, align 8
  %.21920 = icmp sgt i64 %.21819, 0
  br i1 %.21920, label %for.body.5.lr.ph, label %for.end.5

for.body.5.lr.ph:                                 ; preds = %for.cond.5.preheader
  %.222 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body.5

for.body.4:                                       ; preds = %for.body.4.lr.ph, %for.body.4
  %.18328 = phi %"Array<Class>.560535"* [ %.18323, %for.body.4.lr.ph ], [ %.183, %for.body.4 ]
  %storemerge427 = phi i64 [ 0, %for.body.4.lr.ph ], [ %.207, %for.body.4 ]
  %.190 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.189, align 8
  %.191 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.190, i64 0, i32 63
  %.192 = load void (%CodeGen.560615*, %Class.560513*)*, void (%CodeGen.560615*, %Class.560513*)** %.191, align 8
  %.197 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.18328, i64 0, i32 0
  %.198 = load %"Array<Class>_vtable_ty.560543"*, %"Array<Class>_vtable_ty.560543"** %.197, align 8
  %.199 = getelementptr inbounds %"Array<Class>_vtable_ty.560543", %"Array<Class>_vtable_ty.560543"* %.198, i64 0, i32 5
  %.200 = load %Class.560513* (%"Array<Class>.560535"*, i64)*, %Class.560513* (%"Array<Class>.560535"*, i64)** %.199, align 8
  %.201 = tail call %Class.560513* %.200(%"Array<Class>.560535"* %.18328, i64 %storemerge427)
  tail call void %.192(%CodeGen.560615* nonnull %.1, %Class.560513* %.201)
  %.207 = add nuw nsw i64 %storemerge427, 1
  %.183 = load %"Array<Class>.560535"*, %"Array<Class>.560535"** %.83, align 8
  %.184 = getelementptr inbounds %"Array<Class>.560535", %"Array<Class>.560535"* %.183, i64 0, i32 2
  %.185 = load i64, i64* %.184, align 8
  %.186 = icmp slt i64 %.207, %.185
  br i1 %.186, label %for.body.4, label %for.cond.5.preheader

for.body.5:                                       ; preds = %for.body.5.lr.ph, %for.body.5
  %.21622 = phi %"Array<Function>.560536"* [ %.21617, %for.body.5.lr.ph ], [ %.216, %for.body.5 ]
  %storemerge521 = phi i64 [ 0, %for.body.5.lr.ph ], [ %.240, %for.body.5 ]
  %.223 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.222, align 8
  %.224 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.223, i64 0, i32 62
  %.225 = load void (%CodeGen.560615*, %Function.560501*)*, void (%CodeGen.560615*, %Function.560501*)** %.224, align 8
  %.230 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.21622, i64 0, i32 0
  %.231 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.230, align 8
  %.232 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.231, i64 0, i32 5
  %.233 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.232, align 8
  %.234 = tail call %Function.560501* %.233(%"Array<Function>.560536"* %.21622, i64 %storemerge521)
  tail call void %.225(%CodeGen.560615* nonnull %.1, %Function.560501* %.234)
  %.240 = add nuw nsw i64 %storemerge521, 1
  %.216 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.215, align 8
  %.217 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.216, i64 0, i32 2
  %.218 = load i64, i64* %.217, align 8
  %.219 = icmp slt i64 %.240, %.218
  br i1 %.219, label %for.body.5, label %for.end.5

for.end.5:                                        ; preds = %for.body.5, %for.cond.5.preheader
  %.245 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.43, align 8
  %.246 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.247 = bitcast i8* %.246 to %GeneratedModule.560591*
  %.248 = bitcast i8* %.246 to %GeneratedModule_vtable_ty.560592**
  store %GeneratedModule_vtable_ty.560592* @GeneratedModule_vtable_data, %GeneratedModule_vtable_ty.560592** %.248, align 8
  tail call void @GeneratedModule_constructor(%GeneratedModule.560591* %.247, %LLVMModuleRef.560565* %.245)
  ret %GeneratedModule.560591* %.247
}

define %LLVMValueRef.560567* @CodeGen_get_var_from_varid(%CodeGen.560615* nocapture readonly %.1, %VarId.560441* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 3
  %.9 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.11, i64 0, i32 3
  %.13 = load %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.12, align 8
  %.15 = tail call %string.560217* @create_var_key(%VarId.560441* %.2)
  %.16 = tail call %LLVMValueRef.560567* %.13(%"Map<string, LLVMValueRef>.560598"* %.9, %string.560217* %.15)
  ret %LLVMValueRef.560567* %.16
}

define %CGClassType.560595* @CodeGen_get_class_from_typeid(%CodeGen.560615* nocapture readonly %.1, %TypeId.560395* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 5
  %.9 = load %"Map<string, CGClassType>.560617"*, %"Map<string, CGClassType>.560617"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGClassType>_vtable_ty.560619"*, %"Map<string, CGClassType>_vtable_ty.560619"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.560619", %"Map<string, CGClassType>_vtable_ty.560619"* %.11, i64 0, i32 3
  %.13 = load %CGClassType.560595* (%"Map<string, CGClassType>.560617"*, %string.560217*)*, %CGClassType.560595* (%"Map<string, CGClassType>.560617"*, %string.560217*)** %.12, align 8
  %.15 = tail call %string.560217* @create_type_id_key(%TypeId.560395* %.2)
  %.16 = tail call %CGClassType.560595* %.13(%"Map<string, CGClassType>.560617"* %.9, %string.560217* %.15)
  ret %CGClassType.560595* %.16
}

define %CGEnumType.560609* @CodeGen_get_enum_from_typeid(%CodeGen.560615* nocapture readonly %.1, %TypeId.560395* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 6
  %.9 = load %"Map<string, CGEnumType>.560618"*, %"Map<string, CGEnumType>.560618"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Map<string, CGEnumType>_vtable_ty.560624"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.560624", %"Map<string, CGEnumType>_vtable_ty.560624"* %.11, i64 0, i32 3
  %.13 = load %CGEnumType.560609* (%"Map<string, CGEnumType>.560618"*, %string.560217*)*, %CGEnumType.560609* (%"Map<string, CGEnumType>.560618"*, %string.560217*)** %.12, align 8
  %.15 = tail call %string.560217* @create_type_id_key(%TypeId.560395* %.2)
  %.16 = tail call %CGEnumType.560609* %.13(%"Map<string, CGEnumType>.560618"* %.9, %string.560217* %.15)
  ret %CGEnumType.560609* %.16
}

define void @CodeGen_add_class(%CodeGen.560615* nocapture readonly %.1, %TypeId.560395* nocapture readonly %.2, %CGClassType.560595* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 5
  %.11 = load %"Map<string, CGClassType>.560617"*, %"Map<string, CGClassType>.560617"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>.560617", %"Map<string, CGClassType>.560617"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, CGClassType>_vtable_ty.560619"*, %"Map<string, CGClassType>_vtable_ty.560619"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.560619", %"Map<string, CGClassType>_vtable_ty.560619"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, CGClassType>.560617"*, %string.560217*, %CGClassType.560595*)*, void (%"Map<string, CGClassType>.560617"*, %string.560217*, %CGClassType.560595*)** %.14, align 8
  %.17 = tail call %string.560217* @create_type_id_key(%TypeId.560395* %.2)
  tail call void %.15(%"Map<string, CGClassType>.560617"* %.11, %string.560217* %.17, %CGClassType.560595* %.3)
  ret void
}

define void @CodeGen_add_enum(%CodeGen.560615* nocapture readonly %.1, %TypeId.560395* nocapture readonly %.2, %CGEnumType.560609* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 6
  %.11 = load %"Map<string, CGEnumType>.560618"*, %"Map<string, CGEnumType>.560618"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>.560618", %"Map<string, CGEnumType>.560618"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, CGEnumType>_vtable_ty.560624"*, %"Map<string, CGEnumType>_vtable_ty.560624"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.560624", %"Map<string, CGEnumType>_vtable_ty.560624"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, CGEnumType>.560618"*, %string.560217*, %CGEnumType.560609*)*, void (%"Map<string, CGEnumType>.560618"*, %string.560217*, %CGEnumType.560609*)** %.14, align 8
  %.17 = tail call %string.560217* @create_type_id_key(%TypeId.560395* %.2)
  tail call void %.15(%"Map<string, CGEnumType>.560618"* %.11, %string.560217* %.17, %CGEnumType.560609* %.3)
  ret void
}

define void @CodeGen_add_var(%CodeGen.560615* nocapture readonly %.1, %VarId.560441* nocapture readonly %.2, %LLVMValueRef.560567* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 3
  %.11 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)** %.14, align 8
  %.17 = tail call %string.560217* @create_var_key(%VarId.560441* %.2)
  tail call void %.15(%"Map<string, LLVMValueRef>.560598"* %.11, %string.560217* %.17, %LLVMValueRef.560567* %.3)
  ret void
}

define %LLVMValueRef.560567* @CodeGen_neg_int(%LLVMBuilderRef.560572* %.1, %LLVMValueRef.560567* %.2) local_unnamed_addr {
.4:
  %.8 = tail call i1 @LLVMIsConstant(%LLVMValueRef.560567* %.2)
  br i1 %.8, label %true_block, label %false_block

true_block:                                       ; preds = %.4
  %.11 = tail call %LLVMValueRef.560567* @LLVMConstNeg(%LLVMValueRef.560567* %.2)
  br label %end

false_block:                                      ; preds = %.4
  %.15 = tail call %LLVMValueRef.560567* @LLVMBuildNeg(%LLVMBuilderRef.560572* %.1, %LLVMValueRef.560567* %.2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.17 = phi %LLVMValueRef.560567* [ %.11, %true_block ], [ %.15, %false_block ]
  ret %LLVMValueRef.560567* %.17
}

define %LLVMValueRef.560567* @CodeGen_createLLVMBool(%CodeGen.560615* nocapture readonly %.1, i1 %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.9 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.8, align 8
  %.10 = tail call %LLVMTypeRef.560566* @LLVMInt1TypeInContext(%LLVMContextRef.560564* %.9)
  %. = zext i1 %.2 to i64
  %.16 = tail call %LLVMValueRef.560567* @LLVMConstInt(%LLVMTypeRef.560566* %.10, i64 %., i1 false)
  ret %LLVMValueRef.560567* %.16
}

define %LLVMValueRef.560567* @CodeGen_createLLVMInt(%CodeGen.560615* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.9 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.8, align 8
  %.10 = tail call %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564* %.9, i64 64)
  %.12 = tail call %LLVMValueRef.560567* @LLVMConstInt(%LLVMTypeRef.560566* %.10, i64 %.2, i1 false)
  ret %LLVMValueRef.560567* %.12
}

define %LLVMTypeRef.560566* @CodeGen_codegen_type(%CodeGen.560615* %.1, %Type.560381* %.2, i1 %.3) {
.5:
  %.10 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.endif [
    i64 12, label %.5.if
    i64 0, label %.5.endif.if
    i64 1, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.endif.if
    i64 3, label %.5.endif.endif.endif.endif.if
    i64 4, label %.5.endif.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 5, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 6, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endi...if
    i64 9, label %.5.endif.endif.endif.endi...endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.16 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.15, align 8
  %.17 = tail call %LLVMTypeRef.560566* @LLVMVoidTypeInContext(%LLVMContextRef.560564* %.16)
  ret %LLVMTypeRef.560566* %.17

.5.endif.if:                                      ; preds = %.5
  %.25 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.26 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.25, align 8
  %.27 = tail call %LLVMTypeRef.560566* @LLVMInt1TypeInContext(%LLVMContextRef.560564* %.26)
  ret %LLVMTypeRef.560566* %.27

.5.endif.endif.if:                                ; preds = %.5
  %.35 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.36 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.35, align 8
  %.37 = tail call %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564* %.36, i64 4)
  ret %LLVMTypeRef.560566* %.37

.5.endif.endif.endif.if:                          ; preds = %.5
  %.45 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.46 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.45, align 8
  %.47 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.46)
  ret %LLVMTypeRef.560566* %.47

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.55 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.56 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.55, align 8
  %.57 = tail call %LLVMTypeRef.560566* @LLVMInt16TypeInContext(%LLVMContextRef.560564* %.56)
  ret %LLVMTypeRef.560566* %.57

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.65 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.66 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.65, align 8
  %.67 = tail call %LLVMTypeRef.560566* @LLVMInt32TypeInContext(%LLVMContextRef.560564* %.66)
  ret %LLVMTypeRef.560566* %.67

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.75 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.76 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.75, align 8
  %.77 = tail call %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564* %.76, i64 64)
  ret %LLVMTypeRef.560566* %.77

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.85 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.86 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.85, align 8
  %.87 = tail call %LLVMTypeRef.560566* @LLVMInt64TypeInContext(%LLVMContextRef.560564* %.86)
  ret %LLVMTypeRef.560566* %.87

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.95 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.96 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.95, align 8
  %.97 = tail call %LLVMTypeRef.560566* @LLVMInt128TypeInContext(%LLVMContextRef.560564* %.96)
  ret %LLVMTypeRef.560566* %.97

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.105 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.106 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.105, align 8
  %.107 = tail call %LLVMTypeRef.560566* @LLVMHalfTypeInContext(%LLVMContextRef.560564* %.106)
  ret %LLVMTypeRef.560566* %.107

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.115 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.116 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.115, align 8
  %.117 = tail call %LLVMTypeRef.560566* @LLVMFloatTypeInContext(%LLVMContextRef.560564* %.116)
  ret %LLVMTypeRef.560566* %.117

.5.endif.endif.endif.endi...endif.endif:          ; preds = %.5
  %0 = and i64 %.11, -2
  %1 = icmp eq i64 %0, 10
  br i1 %1, label %.5.endif.endif.endif.endi...endif.endif.if, label %.5.endif.endif.endif.endi...endif.endif.endif

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5.endif.endif.endif.endi...endif.endif
  %.130 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.131 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.130, align 8
  %.132 = tail call %LLVMTypeRef.560566* @LLVMDoubleTypeInContext(%LLVMContextRef.560564* %.131)
  ret %LLVMTypeRef.560566* %.132

.5.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.5.endif.endif.endif.endi...endif.endif
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1.endif [
    i64 15, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 16, label %.5.endif.endif.endif.endi...if.1
    i64 20, label %.5.endif.endif.endif.endi...endif.1.if
  ]

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.140 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.141 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.140, align 8
  %.142 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.141, i64 0, i32 9
  %.143 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.142, align 8
  %.146 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %2 = bitcast %Type.560381* %.146 to %Type.560381**
  %.147 = load %Type.560381*, %Type.560381** %2, align 8
  %.148 = tail call %LLVMTypeRef.560566* %.143(%CodeGen.560615* %.1, %Type.560381* %.147, i1 true)
  %.149 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.148, i64 0)
  ret %LLVMTypeRef.560566* %.149

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.160 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.161 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.160, align 8
  %.162 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.161, i64 0, i32 9
  %.163 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.162, align 8
  %.165 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1
  %3 = bitcast %Type.560381* %.165 to %Type.560381**
  %.166 = load %Type.560381*, %Type.560381** %3, align 8
  %.167 = tail call %LLVMTypeRef.560566* %.163(%CodeGen.560615* %.1, %Type.560381* %.166, i1 true)
  %4 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 1, i32 1
  %.172 = load i64, i64* %4, align 8
  %.173 = tail call %LLVMTypeRef.560566* @LLVMArrayType(%LLVMTypeRef.560566* %.167, i64 %.172)
  ret %LLVMTypeRef.560566* %.173

.5.endif.endif.endif.endi...endif.1.if:           ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.182 = getelementptr inbounds %Type.560381, %Type.560381* %.2, i64 2
  %5 = bitcast %Type.560381* %.182 to %Type.560381**
  %.183 = load %Type.560381*, %Type.560381** %5, align 8
  %.187.phi.trans.insert = getelementptr inbounds %Type.560381, %Type.560381* %.183, i64 0, i32 1
  %.188.pre = load i64, i64* %.187.phi.trans.insert, align 8
  br label %.5.endif.endif.endif.endi...endif.1.endif

.5.endif.endif.endif.endi...endif.1.endif:        ; preds = %.5.endif.endif.endif.endi...endif.endif.endif, %.5.endif.endif.endif.endi...endif.1.if
  %.188 = phi i64 [ %.188.pre, %.5.endif.endif.endif.endi...endif.1.if ], [ %.11, %.5.endif.endif.endif.endi...endif.endif.endif ]
  %tt.0 = phi %Type.560381* [ %.183, %.5.endif.endif.endif.endi...endif.1.if ], [ %.2, %.5.endif.endif.endif.endi...endif.endif.endif ]
  %.187 = getelementptr inbounds %Type.560381, %Type.560381* %tt.0, i64 0, i32 1
  switch i64 %.188, label %.5.endif.endif.endif.endi...endif.1.endif.endif.endif [
    i64 17, label %.5.endif.endif.endif.endi...endif.1.endif.if
    i64 13, label %.5.endif.endif.endif.endi...endif.1.endif.endif.if
  ]

.5.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.5.endif.endif.endif.endi...endif.1.endif
  %.192 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.194 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.196 = bitcast i8* %.194 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.196, align 8
  %.198 = getelementptr inbounds i8, i8* %.194, i64 8
  %6 = bitcast i8* %.198 to i8**
  store i8* %.192, i8** %6, align 8
  %.200 = getelementptr inbounds i8, i8* %.194, i64 16
  %7 = bitcast i8* %.200 to i64*
  store i64 0, i64* %7, align 8
  %.202 = getelementptr inbounds i8, i8* %.194, i64 24
  %8 = bitcast i8* %.202 to i64*
  store i64 8, i64* %8, align 8
  %.2137 = getelementptr inbounds %Type.560381, %Type.560381* %tt.0, i64 1
  %9 = bitcast %Type.560381* %.2137 to %"Array<Type>.560389"**
  %.2148 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %9, align 8
  %.2159 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.2148, i64 0, i32 2
  %.21610 = load i64, i64* %.2159, align 8
  %.21711 = icmp sgt i64 %.21610, 0
  %10 = bitcast i8* %.194 to %"Array<LLVMTypeRef>.560611"*
  br i1 %.21711, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif.endif.endif.endi...endif.1.endif.if
  %.221 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.235 = bitcast i8* %.194 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  %.213 = getelementptr inbounds %Type.560381, %Type.560381* %tt.0, i64 1
  %11 = bitcast %Type.560381* %.213 to %"Array<Type>.560389"**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.21413 = phi %"Array<Type>.560389"* [ %.2148, %for.body.lr.ph ], [ %.214, %for.body ]
  %storemerge12 = phi i64 [ 0, %for.body.lr.ph ], [ %.244, %for.body ]
  %.222 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.221, align 8
  %.223 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.222, i64 0, i32 9
  %.224 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.223, align 8
  %.229 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.21413, i64 0, i32 0
  %.230 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.229, align 8
  %.231 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.230, i64 0, i32 5
  %.232 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.231, align 8
  %.233 = tail call %Type.560381* %.232(%"Array<Type>.560389"* %.21413, i64 %storemerge12)
  %.234 = tail call %LLVMTypeRef.560566* %.224(%CodeGen.560615* %.1, %Type.560381* %.233, i1 true)
  %.236 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.235, align 8
  %.237 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.236, i64 0, i32 2
  %.238 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.237, align 8
  tail call void %.238(%"Array<LLVMTypeRef>.560611"* %10, %LLVMTypeRef.560566* %.234)
  %.244 = add nuw nsw i64 %storemerge12, 1
  %.214 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %11, align 8
  %.215 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.214, i64 0, i32 2
  %.216 = load i64, i64* %.215, align 8
  %.217 = icmp slt i64 %.244, %.216
  br i1 %.217, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5.endif.endif.endif.endi...endif.1.endif.if
  %.248 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.249 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.248, align 8
  %.250 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.249, i64 0, i32 9
  %.251 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.250, align 8
  %.253 = getelementptr inbounds %Type.560381, %Type.560381* %tt.0, i64 1, i32 1
  %12 = bitcast i64* %.253 to %Type.560381**
  %.254 = load %Type.560381*, %Type.560381** %12, align 8
  %.255 = tail call %LLVMTypeRef.560566* %.251(%CodeGen.560615* %.1, %Type.560381* %.254, i1 true)
  %.259 = getelementptr inbounds i8, i8* %.194, i64 8
  %13 = bitcast i8* %.259 to %LLVMTypeRef.560566***
  %.260 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %13, align 8
  %.262 = getelementptr inbounds i8, i8* %.194, i64 16
  %14 = bitcast i8* %.262 to i64*
  %.263 = load i64, i64* %14, align 8
  %.264 = tail call %LLVMTypeRef.560566* @LLVMFunctionType(%LLVMTypeRef.560566* %.255, %LLVMTypeRef.560566** %.260, i64 %.263, i1 false)
  br i1 %.3, label %true_block, label %end

true_block:                                       ; preds = %for.end
  %.269 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.264, i64 0)
  br label %end

end:                                              ; preds = %true_block.1, %.5.endif.endif.endif.endi...endif.1.endif.endif.if.if, %for.end, %true_block
  %.273 = phi %LLVMTypeRef.560566* [ %.269, %true_block ], [ %.264, %for.end ], [ %.302, %true_block.1 ], [ %.301, %.5.endif.endif.endif.endi...endif.1.endif.endif.if.if ]
  ret %LLVMTypeRef.560566* %.273

.5.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.1.endif
  %.281 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.282 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.281, align 8
  %.283 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.282, i64 0, i32 28
  %.284 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.283, align 8
  %.287 = getelementptr inbounds %Type.560381, %Type.560381* %tt.0, i64 1
  %15 = bitcast %Type.560381* %.287 to %TypeId.560395**
  %.2885 = load %TypeId.560395*, %TypeId.560395** %15, align 8
  %.290 = tail call %CGClassType.560595* %.284(%CodeGen.560615* %.1, %TypeId.560395* %.2885)
  %16 = ptrtoint %CGClassType.560595* %.290 to i64
  %.293 = trunc i64 %16 to i32
  %.295.not = icmp eq i32 %.293, 0
  br i1 %.295.not, label %.5.endif.endif.endif.endi...endif.1.endif.endif.endifthread-pre-split, label %.5.endif.endif.endif.endi...endif.1.endif.endif.if.if

.5.endif.endif.endif.endi...endif.1.endif.endif.endifthread-pre-split: ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.if
  %.313.pr = load i64, i64* %.187, align 8
  br label %.5.endif.endif.endif.endi...endif.1.endif.endif.endif

.5.endif.endif.endif.endi...endif.1.endif.endif.endif: ; preds = %.5.endif.endif.endif.endi...endif.1.endif, %.5.endif.endif.endif.endi...endif.1.endif.endif.endifthread-pre-split
  %.313 = phi i64 [ %.313.pr, %.5.endif.endif.endif.endi...endif.1.endif.endif.endifthread-pre-split ], [ %.188, %.5.endif.endif.endif.endi...endif.1.endif ]
  %.314 = icmp eq i64 %.313, 14
  br i1 %.314, label %.5.endif.endif.endif.endi...if.2, label %.5.endif.endif.endif.endi...endif.2

.5.endif.endif.endif.endi...endif.1.endif.endif.if.if: ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.if
  %.300 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.290, i64 0, i32 1
  %.301 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.300, align 8
  br i1 %.3, label %true_block.1, label %end

true_block.1:                                     ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.if.if
  %.302 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.301, i64 0)
  br label %end

.5.endif.endif.endif.endi...if.2:                 ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.317 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.318 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.317, align 8
  %.319 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.318, i64 0, i32 29
  %.320 = load %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)*, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)** %.319, align 8
  %.323 = getelementptr inbounds %Type.560381, %Type.560381* %tt.0, i64 1
  %17 = bitcast %Type.560381* %.323 to %TypeId.560395**
  %.3244 = load %TypeId.560395*, %TypeId.560395** %17, align 8
  %.326 = tail call %CGEnumType.560609* %.320(%CodeGen.560615* %.1, %TypeId.560395* %.3244)
  %18 = ptrtoint %CGEnumType.560609* %.326 to i64
  %.329 = trunc i64 %18 to i32
  %.331.not = icmp eq i32 %.329, 0
  br i1 %.331.not, label %.5.endif.endif.endif.endi...endif.2, label %.5.endif.endif.endif.endi...if.2.if

.5.endif.endif.endif.endi...endif.2:              ; preds = %.5.endif.endif.endif.endi...if.2, %.5.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.338 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.339 = bitcast i8* %.338 to %string.560217*
  %.339.repack = bitcast i8* %.338 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.339.repack, align 8
  %.339.repack1 = getelementptr inbounds i8, i8* %.338, i64 8
  %19 = bitcast i8* %.339.repack1 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.338, i64 0, i64 0), i8** %19, align 8
  %.339.repack2 = getelementptr inbounds i8, i8* %.338, i64 16
  %20 = bitcast i8* %.339.repack2 to i64*
  store i64 32, i64* %20, align 8
  %.339.repack3 = getelementptr inbounds i8, i8* %.338, i64 24
  %21 = bitcast i8* %.339.repack3 to i64*
  store i64 32, i64* %21, align 8
  tail call void @panic(%string.560217* %.339)
  ret %LLVMTypeRef.560566* null

.5.endif.endif.endif.endi...if.2.if:              ; preds = %.5.endif.endif.endif.endi...if.2
  %.334 = getelementptr inbounds %CGEnumType.560609, %CGEnumType.560609* %.326, i64 0, i32 1
  %.335 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.334, align 8
  ret %LLVMTypeRef.560566* %.335
}

define void @CodeGen_codegen_return_stmt(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ReturnStatement.560469* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %ReturnStatement.560469, %ReturnStatement.560469* %.3, i64 0, i32 2
  %0 = bitcast %Expression.560401** %.10 to i64*
  %.111 = load i64, i64* %0, align 8
  %.12 = trunc i64 %.111 to i32
  %.14.not = icmp eq i32 %.12, 0
  br i1 %.14.not, label %.5.else, label %.5.if

.5.if:                                            ; preds = %.5
  %1 = inttoptr i64 %.111 to %Expression.560401*
  %.18 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.19, i64 0, i32 52
  %.21 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.20, align 8
  %.26 = tail call %LLVMValueRef.560567* %.21(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %1)
  %.27 = tail call %LLVMValueRef.560567* @LLVMBuildRet(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.26)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.30 = tail call %LLVMValueRef.560567* @LLVMBuildRetVoid(%LLVMBuilderRef.560572* %.2)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.if
  ret void
}

define %LLVMValueRef.560567* @CodeGen_codegen_int(%CodeGen.560615* %.1, %IntExpression.560411* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 9
  %.11 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %IntExpression.560411, %IntExpression.560411* %.2, i64 0, i32 4
  %.14 = load %Type.560381*, %Type.560381** %.13, align 8
  %.15 = tail call %LLVMTypeRef.560566* %.11(%CodeGen.560615* %.1, %Type.560381* %.14, i1 true)
  %.17 = getelementptr inbounds %IntExpression.560411, %IntExpression.560411* %.2, i64 0, i32 5
  %.18 = load i64, i64* %.17, align 8
  %.19 = tail call %LLVMValueRef.560567* @LLVMConstInt(%LLVMTypeRef.560566* %.15, i64 %.18, i1 true)
  ret %LLVMValueRef.560567* %.19
}

define %LLVMValueRef.560567* @CodeGen_codegen_float(%CodeGen.560615* %.1, %FloatExpression.560415* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 9
  %.11 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %FloatExpression.560415, %FloatExpression.560415* %.2, i64 0, i32 4
  %.14 = load %Type.560381*, %Type.560381** %.13, align 8
  %.15 = tail call %LLVMTypeRef.560566* %.11(%CodeGen.560615* %.1, %Type.560381* %.14, i1 true)
  %.17 = getelementptr inbounds %FloatExpression.560415, %FloatExpression.560415* %.2, i64 0, i32 5
  %.18 = load double, double* %.17, align 8
  %.19 = tail call %LLVMValueRef.560567* @LLVMConstReal(%LLVMTypeRef.560566* %.15, double %.18)
  ret %LLVMValueRef.560567* %.19
}

define %LLVMValueRef.560567* @CodeGen_codegen_bool(%CodeGen.560615* %.1, %BooleanExpression.560413* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %BooleanExpression.560413, %BooleanExpression.560413* %.2, i64 0, i32 5
  %.9 = load i1, i1* %.8, align 1
  %.12 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.13 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.14 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.13, i64 0, i32 7
  %.15 = load %LLVMValueRef.560567* (%CodeGen.560615*, i1)*, %LLVMValueRef.560567* (%CodeGen.560615*, i1)** %.14, align 8
  %.17 = tail call %LLVMValueRef.560567* %.15(%CodeGen.560615* %.1, i1 %.9)
  ret %LLVMValueRef.560567* %.17
}

define %LLVMValueRef.560567* @CodeGen_codegen_atof_call(%CodeGen.560615* nocapture readonly %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.12 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.11)
  %.13 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.12, i64 0)
  %.17 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.18 = tail call %LLVMTypeRef.560566* @LLVMDoubleTypeInContext(%LLVMContextRef.560564* %.17)
  %.21 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.22 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.21, align 8
  %.23 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.560217*
  %.24.repack = bitcast i8* %.23 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.24.repack, align 8
  %.24.repack1 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.24.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.339, i64 0, i64 0), i8** %0, align 8
  %.24.repack2 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.24.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.24.repack3 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.24.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.28 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.29 = bitcast i8* %.28 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.13, %LLVMTypeRef.560566** %.29, align 8
  %.32 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %"Array<LLVMTypeRef>.560611"*
  %.34 = bitcast i8* %.32 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.34, align 8
  %.36 = getelementptr inbounds i8, i8* %.32, i64 8
  %3 = bitcast i8* %.36 to i8**
  store i8* %.28, i8** %3, align 8
  %.38 = getelementptr inbounds i8, i8* %.32, i64 16
  %4 = bitcast i8* %.38 to i64*
  store i64 1, i64* %4, align 8
  %.40 = getelementptr inbounds i8, i8* %.32, i64 24
  %5 = bitcast i8* %.40 to i64*
  store i64 8, i64* %5, align 8
  %.43 = tail call %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.22, %string.560217* %.24, %"Array<LLVMTypeRef>.560611"* %.33, %LLVMTypeRef.560566* %.18, i1 false)
  %.47 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.43, i64 0, i32 2
  %.48 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.47, align 8
  %.50 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.43, i64 0, i32 1
  %.51 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.50, align 8
  %.53 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 1
  %.54 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.53, align 8
  %.56 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 2
  %.57 = load i64, i64* %.56, align 8
  %.58 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.48, %LLVMValueRef.560567* %.51, %LLVMValueRef.560567** %.54, i64 %.57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.58
}

define %LLVMValueRef.560567* @CodeGen_codegen_atoi_call(%CodeGen.560615* nocapture readonly %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.12 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.11)
  %.13 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.12, i64 0)
  %.17 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.18 = tail call %LLVMTypeRef.560566* @LLVMInt32TypeInContext(%LLVMContextRef.560564* %.17)
  %.21 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.22 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.21, align 8
  %.23 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.560217*
  %.24.repack = bitcast i8* %.23 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.24.repack, align 8
  %.24.repack1 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.24.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.340, i64 0, i64 0), i8** %0, align 8
  %.24.repack2 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.24.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.24.repack3 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.24.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.28 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.29 = bitcast i8* %.28 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.13, %LLVMTypeRef.560566** %.29, align 8
  %.32 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %"Array<LLVMTypeRef>.560611"*
  %.34 = bitcast i8* %.32 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.34, align 8
  %.36 = getelementptr inbounds i8, i8* %.32, i64 8
  %3 = bitcast i8* %.36 to i8**
  store i8* %.28, i8** %3, align 8
  %.38 = getelementptr inbounds i8, i8* %.32, i64 16
  %4 = bitcast i8* %.38 to i64*
  store i64 1, i64* %4, align 8
  %.40 = getelementptr inbounds i8, i8* %.32, i64 24
  %5 = bitcast i8* %.40 to i64*
  store i64 8, i64* %5, align 8
  %.43 = tail call %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.22, %string.560217* %.24, %"Array<LLVMTypeRef>.560611"* %.33, %LLVMTypeRef.560566* %.18, i1 false)
  %.47 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.43, i64 0, i32 2
  %.48 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.47, align 8
  %.50 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.43, i64 0, i32 1
  %.51 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.50, align 8
  %.53 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 1
  %.54 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.53, align 8
  %.56 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 2
  %.57 = load i64, i64* %.56, align 8
  %.58 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.48, %LLVMValueRef.560567* %.51, %LLVMValueRef.560567** %.54, i64 %.57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.58
}

define %LLVMValueRef.560567* @CodeGen_codegen_atol_call(%CodeGen.560615* nocapture readonly %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.12 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.11)
  %.13 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.12, i64 0)
  %.17 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.18 = tail call %LLVMTypeRef.560566* @LLVMInt64TypeInContext(%LLVMContextRef.560564* %.17)
  %.21 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.22 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.21, align 8
  %.23 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.560217*
  %.24.repack = bitcast i8* %.23 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.24.repack, align 8
  %.24.repack1 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.24.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.341, i64 0, i64 0), i8** %0, align 8
  %.24.repack2 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.24.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.24.repack3 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.24.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.28 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.29 = bitcast i8* %.28 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.13, %LLVMTypeRef.560566** %.29, align 8
  %.32 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %"Array<LLVMTypeRef>.560611"*
  %.34 = bitcast i8* %.32 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.34, align 8
  %.36 = getelementptr inbounds i8, i8* %.32, i64 8
  %3 = bitcast i8* %.36 to i8**
  store i8* %.28, i8** %3, align 8
  %.38 = getelementptr inbounds i8, i8* %.32, i64 16
  %4 = bitcast i8* %.38 to i64*
  store i64 1, i64* %4, align 8
  %.40 = getelementptr inbounds i8, i8* %.32, i64 24
  %5 = bitcast i8* %.40 to i64*
  store i64 8, i64* %5, align 8
  %.43 = tail call %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.22, %string.560217* %.24, %"Array<LLVMTypeRef>.560611"* %.33, %LLVMTypeRef.560566* %.18, i1 false)
  %.47 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.43, i64 0, i32 2
  %.48 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.47, align 8
  %.50 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.43, i64 0, i32 1
  %.51 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.50, align 8
  %.53 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 1
  %.54 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.53, align 8
  %.56 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 2
  %.57 = load i64, i64* %.56, align 8
  %.58 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.48, %LLVMValueRef.560567* %.51, %LLVMValueRef.560567** %.54, i64 %.57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.58
}

define %LLVMValueRef.560567* @CodeGen_codegen_realloc_call(%CodeGen.560615* nocapture readonly %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.12 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.11)
  %.13 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.12, i64 0)
  %.17 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.18 = tail call %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564* %.17, i64 64)
  %.21 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.22 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.21, align 8
  %.23 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.560217*
  %.24.repack = bitcast i8* %.23 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.24.repack, align 8
  %.24.repack1 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.24.repack1 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.342, i64 0, i64 0), i8** %0, align 8
  %.24.repack2 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.24.repack2 to i64*
  store i64 7, i64* %1, align 8
  %.24.repack3 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.24.repack3 to i64*
  store i64 7, i64* %2, align 8
  %.29 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.30 = bitcast i8* %.29 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.13, %LLVMTypeRef.560566** %.30, align 8
  %.33 = getelementptr inbounds i8, i8* %.29, i64 8
  %3 = bitcast i8* %.33 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.18, %LLVMTypeRef.560566** %3, align 8
  %.35 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.36 = bitcast i8* %.35 to %"Array<LLVMTypeRef>.560611"*
  %.37 = bitcast i8* %.35 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.37, align 8
  %.39 = getelementptr inbounds i8, i8* %.35, i64 8
  %4 = bitcast i8* %.39 to i8**
  store i8* %.29, i8** %4, align 8
  %.41 = getelementptr inbounds i8, i8* %.35, i64 16
  %5 = bitcast i8* %.41 to i64*
  store i64 2, i64* %5, align 8
  %.43 = getelementptr inbounds i8, i8* %.35, i64 24
  %6 = bitcast i8* %.43 to i64*
  store i64 16, i64* %6, align 8
  %.46 = tail call %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.22, %string.560217* %.24, %"Array<LLVMTypeRef>.560611"* %.36, %LLVMTypeRef.560566* %.13, i1 false)
  %.50 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.46, i64 0, i32 2
  %.51 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.50, align 8
  %.53 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.46, i64 0, i32 1
  %.54 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.53, align 8
  %.56 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 1
  %.57 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.56, align 8
  %.59 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 2
  %.60 = load i64, i64* %.59, align 8
  %.61 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.51, %LLVMValueRef.560567* %.54, %LLVMValueRef.560567** %.57, i64 %.60, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.61
}

define %LLVMValueRef.560567* @CodeGen_codegen_memcmp_call(%CodeGen.560615* nocapture readonly %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.12 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.11)
  %.13 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.12, i64 0)
  %.17 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.18 = tail call %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564* %.17, i64 64)
  %.21 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.22 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.21, align 8
  %.23 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.560217*
  %.24.repack = bitcast i8* %.23 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.24.repack, align 8
  %.24.repack1 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.24.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.343, i64 0, i64 0), i8** %0, align 8
  %.24.repack2 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.24.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.24.repack3 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.24.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.13, %LLVMTypeRef.560566** %.31, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %3 = bitcast i8* %.34 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.13, %LLVMTypeRef.560566** %3, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %4 = bitcast i8* %.36 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.18, %LLVMTypeRef.560566** %4, align 8
  %.38 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %"Array<LLVMTypeRef>.560611"*
  %.40 = bitcast i8* %.38 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.40, align 8
  %.42 = getelementptr inbounds i8, i8* %.38, i64 8
  %5 = bitcast i8* %.42 to i8**
  store i8* %.30, i8** %5, align 8
  %.44 = getelementptr inbounds i8, i8* %.38, i64 16
  %6 = bitcast i8* %.44 to i64*
  store i64 3, i64* %6, align 8
  %.46 = getelementptr inbounds i8, i8* %.38, i64 24
  %7 = bitcast i8* %.46 to i64*
  store i64 24, i64* %7, align 8
  %.49 = tail call %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.22, %string.560217* %.24, %"Array<LLVMTypeRef>.560611"* %.39, %LLVMTypeRef.560566* %.18, i1 false)
  %.53 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.49, i64 0, i32 2
  %.54 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.53, align 8
  %.56 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.49, i64 0, i32 1
  %.57 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.56, align 8
  %.59 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 1
  %.60 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.59, align 8
  %.62 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 2
  %.63 = load i64, i64* %.62, align 8
  %.64 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.54, %LLVMValueRef.560567* %.57, %LLVMValueRef.560567** %.60, i64 %.63, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.64
}

define %LLVMValueRef.560567* @CodeGen_createGlobalLLVMString(%CodeGen.560615* nocapture readonly %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 4
  %.11 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.13, i64 0, i32 3
  %.15 = load %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.14, align 8
  %.17 = tail call %LLVMValueRef.560567* %.15(%"Map<string, LLVMValueRef>.560598"* %.11, %string.560217* %.3)
  %0 = ptrtoint %LLVMValueRef.560567* %.17 to i64
  %.20 = trunc i64 %0 to i32
  %.22 = icmp eq i32 %.20, 0
  br i1 %.22, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.26 = getelementptr inbounds %string.560217, %string.560217* %.3, i64 0, i32 0
  %.27 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.26, align 8
  %.28 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.27, i64 0, i32 11
  %.29 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.28, align 8
  %.30 = tail call i8* %.29(%string.560217* %.3)
  %.31 = tail call %LLVMValueRef.560567* @LLVMBuildGlobalString(%LLVMBuilderRef.560572* %.2, i8* %.30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.35 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.10, align 8
  %.36 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.35, i64 0, i32 0
  %.37 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.36, align 8
  %.38 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.37, i64 0, i32 2
  %.39 = load void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)** %.38, align 8
  tail call void %.39(%"Map<string, LLVMValueRef>.560598"* %.35, %string.560217* %.3, %LLVMValueRef.560567* %.31)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %str.0 = phi %LLVMValueRef.560567* [ %.31, %.5.if ], [ %.17, %.5 ]
  ret %LLVMValueRef.560567* %str.0
}

define %LLVMValueRef.560567* @CodeGen_codegen_safe_fmt_string(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.3, %"Array<LLVMValueRef>.560613"* %.4, %LLVMValueRef.560567** %.5) {
.7:
  %.14 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.15 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.14, align 8
  %.16 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.15)
  %.19 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.16, i64 0)
  %.23 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.14, align 8
  %.24 = tail call %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564* %.23, i64 64)
  %.28 = tail call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.31 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.32 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.31, align 8
  %.33 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.32, i64 0, i32 19
  %.34 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)** %.33, align 8
  %.37 = tail call %LLVMValueRef.560567* %.34(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.3)
  %.42 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.43 = bitcast i8* %.42 to %LLVMValueRef.560567**
  store %LLVMValueRef.560567* %.28, %LLVMValueRef.560567** %.43, align 8
  %.46 = getelementptr inbounds i8, i8* %.42, i64 8
  %0 = bitcast i8* %.46 to %LLVMValueRef.560567**
  store %LLVMValueRef.560567* %.37, %LLVMValueRef.560567** %0, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Array<LLVMValueRef>.560613"*
  %.50 = bitcast i8* %.48 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.50, align 8
  %.52 = getelementptr inbounds i8, i8* %.48, i64 8
  %1 = bitcast i8* %.52 to i8**
  store i8* %.42, i8** %1, align 8
  %.54 = getelementptr inbounds i8, i8* %.48, i64 16
  %2 = bitcast i8* %.54 to i64*
  store i64 2, i64* %2, align 8
  %.56 = getelementptr inbounds i8, i8* %.48, i64 24
  %3 = bitcast i8* %.56 to i64*
  store i64 16, i64* %3, align 8
  %.64 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.4, i64 0, i32 2
  %.656 = load i64, i64* %.64, align 8
  %.667 = icmp sgt i64 %.656, 0
  br i1 %.667, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.7
  %.71 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.4, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge8 = phi i64 [ 0, %for.body.lr.ph ], [ %.85, %for.body ]
  %.72 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.71, align 8
  %.73 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.72, i64 0, i32 5
  %.74 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.73, align 8
  %.75 = tail call %LLVMValueRef.560567* %.74(%"Array<LLVMValueRef>.560613"* nonnull %.4, i64 %storemerge8)
  %.77 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.50, align 8
  %.78 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.77, i64 0, i32 2
  %.79 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.78, align 8
  tail call void %.79(%"Array<LLVMValueRef>.560613"* %.49, %LLVMValueRef.560567* %.75)
  %.85 = add nuw nsw i64 %storemerge8, 1
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp slt i64 %.85, %.65
  br i1 %.66, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.7
  %.89 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.90 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.89, align 8
  %.91 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.92 = bitcast i8* %.91 to %string.560217*
  %.92.repack = bitcast i8* %.91 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.92.repack, align 8
  %.92.repack1 = getelementptr inbounds i8, i8* %.91, i64 8
  %4 = bitcast i8* %.92.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.344, i64 0, i64 0), i8** %4, align 8
  %.92.repack2 = getelementptr inbounds i8, i8* %.91, i64 16
  %5 = bitcast i8* %.92.repack2 to i64*
  store i64 8, i64* %5, align 8
  %.92.repack3 = getelementptr inbounds i8, i8* %.91, i64 24
  %6 = bitcast i8* %.92.repack3 to i64*
  store i64 8, i64* %6, align 8
  %.97 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.98 = bitcast i8* %.97 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.19, %LLVMTypeRef.560566** %.98, align 8
  %.101 = getelementptr inbounds i8, i8* %.97, i64 8
  %7 = bitcast i8* %.101 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.19, %LLVMTypeRef.560566** %7, align 8
  %.103 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.104 = bitcast i8* %.103 to %"Array<LLVMTypeRef>.560611"*
  %.105 = bitcast i8* %.103 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.105, align 8
  %.107 = getelementptr inbounds i8, i8* %.103, i64 8
  %8 = bitcast i8* %.107 to i8**
  store i8* %.97, i8** %8, align 8
  %.109 = getelementptr inbounds i8, i8* %.103, i64 16
  %9 = bitcast i8* %.109 to i64*
  store i64 2, i64* %9, align 8
  %.111 = getelementptr inbounds i8, i8* %.103, i64 24
  %10 = bitcast i8* %.111 to i64*
  store i64 16, i64* %10, align 8
  %.114 = tail call %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.90, %string.560217* %.92, %"Array<LLVMTypeRef>.560611"* %.104, %LLVMTypeRef.560566* %.24, i1 true)
  %.118 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.114, i64 0, i32 2
  %.119 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.118, align 8
  %.121 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.114, i64 0, i32 1
  %.122 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.121, align 8
  %11 = bitcast i8* %.52 to %LLVMValueRef.560567***
  %.125 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %11, align 8
  %.128 = load i64, i64* %2, align 8
  %.129 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.119, %LLVMValueRef.560567* %.122, %LLVMValueRef.560567** %.125, i64 %.128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %12 = ptrtoint %LLVMValueRef.560567** %.5 to i64
  %.132 = trunc i64 %12 to i32
  %.134.not = icmp eq i32 %.132, 0
  br i1 %.134.not, label %for.end.endif, label %for.end.if

for.end.if:                                       ; preds = %for.end
  %13 = ptrtoint %LLVMValueRef.560567* %.129 to i64
  %14 = bitcast %LLVMValueRef.560567** %.5 to i64*
  store i64 %13, i64* %14, align 8
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end, %for.end.if
  %.144 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.19, %LLVMValueRef.560567* %.28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.144
}

define %LLVMValueRef.560567* @CodeGen_get_string_val(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %Type.560381* %.4, i64 %.5) {
.7:
  %.14 = tail call i1 @is_bool(%Type.560381* %.4)
  br i1 %.14, label %.7.if, label %.7.endif

.7.if:                                            ; preds = %.7
  %.17 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.18 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.19 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.18, i64 0, i32 19
  %.20 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)** %.19, align 8
  %.22 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.560217*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.23.repack, align 8
  %.23.repack13 = getelementptr inbounds i8, i8* %.22, i64 8
  %0 = bitcast i8* %.23.repack13 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.225, i64 0, i64 0), i8** %0, align 8
  %.23.repack14 = getelementptr inbounds i8, i8* %.22, i64 16
  %1 = bitcast i8* %.23.repack14 to i64*
  store i64 4, i64* %1, align 8
  %.23.repack15 = getelementptr inbounds i8, i8* %.22, i64 24
  %2 = bitcast i8* %.23.repack15 to i64*
  store i64 4, i64* %2, align 8
  %.25 = tail call %LLVMValueRef.560567* %.20(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.23)
  %.29 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.30 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.29, i64 0, i32 19
  %.31 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)** %.30, align 8
  %.33 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.560217*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.34.repack, align 8
  %.34.repack16 = getelementptr inbounds i8, i8* %.33, i64 8
  %3 = bitcast i8* %.34.repack16 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.226, i64 0, i64 0), i8** %3, align 8
  %.34.repack17 = getelementptr inbounds i8, i8* %.33, i64 16
  %4 = bitcast i8* %.34.repack17 to i64*
  store i64 5, i64* %4, align 8
  %.34.repack18 = getelementptr inbounds i8, i8* %.33, i64 24
  %5 = bitcast i8* %.34.repack18 to i64*
  store i64 5, i64* %5, align 8
  %.36 = tail call %LLVMValueRef.560567* %.31(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.34)
  %.42 = tail call %LLVMValueRef.560567* @LLVMBuildSelect(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %LLVMValueRef.560567* %.25, %LLVMValueRef.560567* %.36, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.42

.7.endif:                                         ; preds = %.7
  %.45 = tail call i1 @is_object(%Type.560381* %.4)
  br i1 %.45, label %.7.endif.if, label %.7.endif.endif

.7.endif.if:                                      ; preds = %.7.endif
  %.48 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.49 = load %Program.560549*, %Program.560549** %.48, align 8
  %.51 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %string.560217*
  %.52.repack = bitcast i8* %.51 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.52.repack, align 8
  %.52.repack4 = getelementptr inbounds i8, i8* %.51, i64 8
  %6 = bitcast i8* %.52.repack4 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.282, i64 0, i64 0), i8** %6, align 8
  %.52.repack5 = getelementptr inbounds i8, i8* %.51, i64 16
  %7 = bitcast i8* %.52.repack5 to i64*
  store i64 6, i64* %7, align 8
  %.52.repack6 = getelementptr inbounds i8, i8* %.51, i64 24
  %8 = bitcast i8* %.52.repack6 to i64*
  store i64 6, i64* %8, align 8
  %.54 = tail call i1 @is_buitin(%Program.560549* %.49, %Type.560381* %.4, %string.560217* %.52)
  br i1 %.54, label %.7.endif.if.if, label %.7.endif.if.endif

.7.endif.endif:                                   ; preds = %.7.endif
  %.261 = getelementptr inbounds %Type.560381, %Type.560381* %.4, i64 0, i32 1
  %.262 = load i64, i64* %.261, align 8
  %.263 = icmp eq i64 %.262, 17
  br i1 %.263, label %.7.endif.endif.if, label %.7.endif.endif.endif

.7.endif.if.if:                                   ; preds = %.7.endif.if
  %.57 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.58 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.57, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.58, i64 0, i32 50
  %.60 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*)** %.59, align 8
  %.63 = tail call %LLVMValueRef.560567* %.60(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3)
  ret %LLVMValueRef.560567* %.63

.7.endif.if.endif:                                ; preds = %.7.endif.if
  %.67 = load %Program.560549*, %Program.560549** %.48, align 8
  %.69 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.67, %Type.560381* %.4)
  %.72 = getelementptr inbounds %Class.560513, %Class.560513* %.69, i64 0, i32 2
  %.73 = load %string.560217*, %string.560217** %.72, align 8
  %.74 = getelementptr inbounds %string.560217, %string.560217* %.73, i64 0, i32 0
  %.75 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.74, align 8
  %.76 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.75, i64 0, i32 11
  %.77 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.76, align 8
  %.78 = tail call i8* %.77(%string.560217* %.73)
  %.80 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.345, i64 0, i64 0), i8* %.78)
  %.81 = add i64 %.80, 1
  %.83 = tail call i8* @malloc(i64 %.81)
  %.84 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.345, i64 0, i64 0), i8* %.78)
  %.85 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.87 = bitcast i8* %.85 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.87, align 8
  %.89 = getelementptr inbounds i8, i8* %.85, i64 8
  %9 = bitcast i8* %.89 to i8**
  store i8* %.83, i8** %9, align 8
  %.91 = getelementptr inbounds i8, i8* %.85, i64 16
  %10 = bitcast i8* %.91 to i64*
  store i64 %.80, i64* %10, align 8
  %.93 = getelementptr inbounds i8, i8* %.85, i64 24
  %11 = bitcast i8* %.93 to i64*
  store i64 %.80, i64* %11, align 8
  %.97 = icmp eq i64 %.5, 3
  %12 = bitcast i8* %.85 to %string.560217*
  br i1 %.97, label %.7.endif.if.endif.if, label %.7.endif.if.endif.endif

.7.endif.if.endif.if:                             ; preds = %.7.endif.if.endif
  %.100 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.101 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.100, align 8
  %.102 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.101, i64 0, i32 19
  %.103 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)** %.102, align 8
  %.106 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.560217*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.107.repack, align 8
  %.107.repack10 = getelementptr inbounds i8, i8* %.106, i64 8
  %13 = bitcast i8* %.107.repack10 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.346, i64 0, i64 0), i8** %13, align 8
  %.107.repack11 = getelementptr inbounds i8, i8* %.106, i64 16
  %14 = bitcast i8* %.107.repack11 to i64*
  store i64 6, i64* %14, align 8
  %.107.repack12 = getelementptr inbounds i8, i8* %.106, i64 24
  %15 = bitcast i8* %.107.repack12 to i64*
  store i64 6, i64* %15, align 8
  %.112 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** getelementptr inbounds (%string_vtable_ty.560218, %string_vtable_ty.560218* @string_vtable_data, i64 0, i32 0), align 16
  %.113 = tail call %string.560217* %.112(%string.560217* %12, %string.560217* %.107)
  %.114 = tail call %LLVMValueRef.560567* %.103(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.113)
  ret %LLVMValueRef.560567* %.114

.7.endif.if.endif.endif:                          ; preds = %.7.endif.if.endif
  %.117 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.119 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.119 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.121, align 8
  %.123 = getelementptr inbounds i8, i8* %.119, i64 8
  %16 = bitcast i8* %.123 to i8**
  store i8* %.117, i8** %16, align 8
  %.125 = getelementptr inbounds i8, i8* %.119, i64 16
  %17 = bitcast i8* %.125 to i64*
  store i64 0, i64* %17, align 8
  %.127 = getelementptr inbounds i8, i8* %.119, i64 24
  %18 = bitcast i8* %.127 to i64*
  store i64 8, i64* %18, align 8
  %.131 = getelementptr inbounds %Class.560513, %Class.560513* %.69, i64 0, i32 7
  %.132 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.131, align 8
  %.133 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.132, i64 0, i32 0
  %.134 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.133, align 8
  %.135 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.134, i64 0, i32 4
  %.136 = load %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)*, %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)** %.135, align 8
  %.137 = tail call %"Array<Bucket<string, PropId>>.560523"* %.136(%"Map<string, PropId>.560517"* %.132)
  %.144 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.137, i64 0, i32 2
  %.14519 = load i64, i64* %.144, align 8
  %.14620 = icmp sgt i64 %.14519, 0
  %19 = bitcast i8* %.119 to %"Array<LLVMValueRef>.560613"*
  br i1 %.14620, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.7.endif.if.endif.endif
  %.150 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.137, i64 0, i32 0
  %.165 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.172 = bitcast %Type.560381* %.4 to %ObjectType.560407*
  %.188 = add i64 %.5, 1
  %.190 = bitcast i8* %.119 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.23122 = phi %string.560217* [ %12, %for.body.lr.ph ], [ %.231, %for.body ]
  %storemerge21 = phi i64 [ 0, %for.body.lr.ph ], [ %.237, %for.body ]
  %.151 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.150, align 8
  %.152 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.151, i64 0, i32 5
  %.153 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.152, align 8
  %.154 = tail call %"Bucket<string, PropId>.560521"* %.153(%"Array<Bucket<string, PropId>>.560523"* nonnull %.137, i64 %storemerge21)
  %.158 = load %Program.560549*, %Program.560549** %.48, align 8
  %.160 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.154, i64 0, i32 2
  %.161 = load %PropId.560449*, %PropId.560449** %.160, align 8
  %.162 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.158, %PropId.560449* %.161)
  %.166 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.165, align 8
  %.167 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.166, i64 0, i32 35
  %.168 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)** %.167, align 8
  %.174 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.154, i64 0, i32 1
  %.175 = load %string.560217*, %string.560217** %.174, align 8
  %.176 = tail call %LLVMValueRef.560567* %.168(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %ObjectType.560407* %.172, %string.560217* %.175)
  %.181 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.165, align 8
  %.182 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.181, i64 0, i32 21
  %.183 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Type.560381*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Type.560381*, i64)** %.182, align 8
  %.189 = tail call %LLVMValueRef.560567* %.183(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.176, %Type.560381* %.162, i64 %.188)
  %.191 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.190, align 8
  %.192 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.191, i64 0, i32 2
  %.193 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.192, align 8
  tail call void %.193(%"Array<LLVMValueRef>.560613"* %19, %LLVMValueRef.560567* %.189)
  %.198 = load %string.560217*, %string.560217** %.174, align 8
  %.200 = tail call %string.560217* @get_format_from_type(%Type.560381* %.162)
  %.201 = getelementptr inbounds %string.560217, %string.560217* %.198, i64 0, i32 0
  %.202 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.201, align 8
  %.203 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.202, i64 0, i32 11
  %.204 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.203, align 8
  %.205 = tail call i8* %.204(%string.560217* %.198)
  %.206 = getelementptr inbounds %string.560217, %string.560217* %.200, i64 0, i32 0
  %.207 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.206, align 8
  %.208 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.207, i64 0, i32 11
  %.209 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.208, align 8
  %.210 = tail call i8* %.209(%string.560217* %.200)
  %.212 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.347, i64 0, i64 0), i8* %.205, i8* %.210)
  %.213 = add i64 %.212, 1
  %.215 = tail call i8* @malloc(i64 %.213)
  %.216 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.215, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.347, i64 0, i64 0), i8* %.205, i8* %.210)
  %.217 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.218 = bitcast i8* %.217 to %string.560217*
  %.219 = bitcast i8* %.217 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.219, align 8
  %.221 = getelementptr inbounds i8, i8* %.217, i64 8
  %20 = bitcast i8* %.221 to i8**
  store i8* %.215, i8** %20, align 8
  %.223 = getelementptr inbounds i8, i8* %.217, i64 16
  %21 = bitcast i8* %.223 to i64*
  store i64 %.212, i64* %21, align 8
  %.225 = getelementptr inbounds i8, i8* %.217, i64 24
  %22 = bitcast i8* %.225 to i64*
  store i64 %.212, i64* %22, align 8
  %.227 = getelementptr inbounds %string.560217, %string.560217* %.23122, i64 0, i32 0
  %.228 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.227, align 8
  %.229 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.228, i64 0, i32 0
  %.230 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.229, align 8
  %.231 = tail call %string.560217* %.230(%string.560217* %.23122, %string.560217* %.218)
  %.237 = add nuw nsw i64 %storemerge21, 1
  %.145 = load i64, i64* %.144, align 8
  %.146 = icmp slt i64 %.237, %.145
  br i1 %.146, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.7.endif.if.endif.endif
  %.240 = phi %string.560217* [ %12, %.7.endif.if.endif.endif ], [ %.231, %for.body ]
  %.241 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.242 = bitcast i8* %.241 to %string.560217*
  %.242.repack = bitcast i8* %.241 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.242.repack, align 8
  %.242.repack7 = getelementptr inbounds i8, i8* %.241, i64 8
  %23 = bitcast i8* %.242.repack7 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.348, i64 0, i64 0), i8** %23, align 8
  %.242.repack8 = getelementptr inbounds i8, i8* %.241, i64 16
  %24 = bitcast i8* %.242.repack8 to i64*
  store i64 1, i64* %24, align 8
  %.242.repack9 = getelementptr inbounds i8, i8* %.241, i64 24
  %25 = bitcast i8* %.242.repack9 to i64*
  store i64 1, i64* %25, align 8
  %.244 = getelementptr inbounds %string.560217, %string.560217* %.240, i64 0, i32 0
  %.245 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.244, align 8
  %.246 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.245, i64 0, i32 0
  %.247 = load %string.560217* (%string.560217*, %string.560217*)*, %string.560217* (%string.560217*, %string.560217*)** %.246, align 8
  %.248 = tail call %string.560217* %.247(%string.560217* %.240, %string.560217* %.242)
  %.251 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.252 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.251, align 8
  %.253 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.252, i64 0, i32 20
  %.254 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*, %"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567**)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*, %"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567**)** %.253, align 8
  %.258 = tail call %LLVMValueRef.560567* %.254(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.248, %"Array<LLVMValueRef>.560613"* %19, %LLVMValueRef.560567** null)
  ret %LLVMValueRef.560567* %.258

.7.endif.endif.if:                                ; preds = %.7.endif.endif
  %.266 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.267 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.266, align 8
  %.268 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.267, i64 0, i32 19
  %.269 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)** %.268, align 8
  %.271 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.272 = bitcast i8* %.271 to %string.560217*
  %.272.repack = bitcast i8* %.271 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.272.repack, align 8
  %.272.repack1 = getelementptr inbounds i8, i8* %.271, i64 8
  %26 = bitcast i8* %.272.repack1 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.349, i64 0, i64 0), i8** %26, align 8
  %.272.repack2 = getelementptr inbounds i8, i8* %.271, i64 16
  %27 = bitcast i8* %.272.repack2 to i64*
  store i64 10, i64* %27, align 8
  %.272.repack3 = getelementptr inbounds i8, i8* %.271, i64 24
  %28 = bitcast i8* %.272.repack3 to i64*
  store i64 10, i64* %28, align 8
  %.274 = tail call %LLVMValueRef.560567* %.269(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.272)
  ret %LLVMValueRef.560567* %.274

.7.endif.endif.endif:                             ; preds = %.7.endif.endif
  ret %LLVMValueRef.560567* %.3
}

define %LLVMValueRef.560567* @CodeGen_codegen_string(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %StringExpression.560417* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.3, i64 0, i32 5
  %.11 = load %string.560217*, %string.560217** %.10, align 8
  %.14 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.16 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %"Array<LLVMValueRef>.560613"*
  %.18 = bitcast i8* %.16 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.20 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.20 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.22 to i64*
  store i64 0, i64* %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.24 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %string.560217, %string.560217* %.11, i64 0, i32 2
  %.29 = load i64, i64* %.28, align 8
  %.31 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.3, i64 0, i32 6
  %.32 = load %"Array<int>.560257"*, %"Array<int>.560257"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.32, i64 0, i32 2
  %.34 = load i64, i64* %.33, align 8
  %.35 = shl i64 %.34, 1
  %.36 = add i64 %.35, %.29
  %.37 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.38 = bitcast i8* %.37 to %StringBuilder.560219*
  %.39 = bitcast i8* %.37 to %StringBuilder_vtable_ty.560220**
  store %StringBuilder_vtable_ty.560220* @StringBuilder_vtable_data, %StringBuilder_vtable_ty.560220** %.39, align 8
  tail call void @StringBuilder_constructor(%StringBuilder.560219* %.38, i64 %.36)
  %.44 = getelementptr inbounds %string.560217, %string.560217* %.11, i64 0, i32 0
  %.45 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.44, align 8
  %.46 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.45, i64 0, i32 9
  %.47 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.46, align 8
  %.48 = tail call i8* %.47(%string.560217* %.11)
  %.57 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.3, i64 0, i32 7
  %.5813 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.57, align 8
  %.5914 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.5813, i64 0, i32 2
  %.6015 = load i64, i64* %.5914, align 8
  %.6116 = icmp sgt i64 %.6015, 0
  br i1 %.6116, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.116 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.5820 = phi %"Array<Expression>.560419"* [ %.5813, %for.body.lr.ph ], [ %.58, %for.body ]
  %curr_ind.019 = phi i64 [ 0, %for.body.lr.ph ], [ %.90, %for.body ]
  %chars.018 = phi i8* [ %.48, %for.body.lr.ph ], [ %.113, %for.body ]
  %storemerge17 = phi i64 [ 0, %for.body.lr.ph ], [ %.143, %for.body ]
  %.67 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.5820, i64 0, i32 0
  %.68 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.67, align 8
  %.69 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.68, i64 0, i32 5
  %.70 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.69, align 8
  %.71 = tail call %Expression.560401* %.70(%"Array<Expression>.560419"* %.5820, i64 %storemerge17)
  %.74 = getelementptr inbounds %Expression.560401, %Expression.560401* %.71, i64 0, i32 4
  %.751022 = load %Type.560381*, %Type.560381** %.74, align 8
  %.78 = tail call %string.560217* @get_format_from_type(%Type.560381* %.751022)
  %.85 = load %"Array<int>.560257"*, %"Array<int>.560257"** %.31, align 8
  %.86 = getelementptr inbounds %"Array<int>.560257", %"Array<int>.560257"* %.85, i64 0, i32 0
  %.87 = load %"Array<int>_vtable_ty.560262"*, %"Array<int>_vtable_ty.560262"** %.86, align 8
  %.88 = getelementptr inbounds %"Array<int>_vtable_ty.560262", %"Array<int>_vtable_ty.560262"* %.87, i64 0, i32 5
  %.89 = load i64 (%"Array<int>.560257"*, i64)*, i64 (%"Array<int>.560257"*, i64)** %.88, align 8
  %.90 = tail call i64 %.89(%"Array<int>.560257"* %.85, i64 %storemerge17)
  %.94 = sub i64 %.90, %curr_ind.019
  %.98 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.39, align 8
  %.99 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.98, i64 0, i32 1
  %.100 = load void (%StringBuilder.560219*, i8*, i64)*, void (%StringBuilder.560219*, i8*, i64)** %.99, align 8
  tail call void %.100(%StringBuilder.560219* %.38, i8* %chars.018, i64 %.94)
  %.106 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.39, align 8
  %.107 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.106, i64 0, i32 2
  %.108 = load void (%StringBuilder.560219*, %string.560217*)*, void (%StringBuilder.560219*, %string.560217*)** %.107, align 8
  tail call void %.108(%StringBuilder.560219* %.38, %string.560217* %.78)
  %.117 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.116, align 8
  %.118 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.117, i64 0, i32 52
  %.119 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.118, align 8
  %.122 = tail call %LLVMValueRef.560567* %.119(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.71)
  %.127 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.116, align 8
  %.128 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.127, i64 0, i32 21
  %.129 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Type.560381*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Type.560381*, i64)** %.128, align 8
  %.133 = tail call %LLVMValueRef.560567* %.129(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.122, %Type.560381* %.751022, i64 0)
  %.135 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.136 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.135, i64 0, i32 2
  %.137 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.136, align 8
  tail call void %.137(%"Array<LLVMValueRef>.560613"* %.17, %LLVMValueRef.560567* %.133)
  %.113 = getelementptr inbounds i8, i8* %chars.018, i64 %.94
  %.143 = add nuw nsw i64 %storemerge17, 1
  %.58 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.57, align 8
  %.59 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.58, i64 0, i32 2
  %.60 = load i64, i64* %.59, align 8
  %.61 = icmp slt i64 %.143, %.60
  br i1 %.61, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %chars.0.lcssa = phi i8* [ %.48, %.5 ], [ %.113, %for.body ]
  %curr_ind.0.lcssa = phi i64 [ 0, %.5 ], [ %.90, %for.body ]
  %.148 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.39, align 8
  %.149 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.148, i64 0, i32 1
  %.150 = load void (%StringBuilder.560219*, i8*, i64)*, void (%StringBuilder.560219*, i8*, i64)** %.149, align 8
  %.154 = load i64, i64* %.28, align 8
  %.156 = sub i64 %.154, %curr_ind.0.lcssa
  tail call void %.150(%StringBuilder.560219* %.38, i8* %chars.0.lcssa, i64 %.156)
  %.160 = load %StringBuilder_vtable_ty.560220*, %StringBuilder_vtable_ty.560220** %.39, align 8
  %.161 = getelementptr inbounds %StringBuilder_vtable_ty.560220, %StringBuilder_vtable_ty.560220* %.160, i64 0, i32 4
  %.162 = load %string.560217* (%StringBuilder.560219*)*, %string.560217* (%StringBuilder.560219*)** %.161, align 8
  %.163 = tail call %string.560217* %.162(%StringBuilder.560219* %.38)
  %.166 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.167 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.166, align 8
  %.168 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.167, i64 0, i32 8
  %.169 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.168, align 8
  %.171 = getelementptr inbounds %string.560217, %string.560217* %.163, i64 0, i32 2
  %.172 = load i64, i64* %.171, align 8
  %.173 = tail call %LLVMValueRef.560567* %.169(%CodeGen.560615* %.1, i64 %.172)
  %str_len = alloca %LLVMValueRef.560567*, align 8
  store %LLVMValueRef.560567* %.173, %LLVMValueRef.560567** %str_len, align 8
  %.177 = load i64, i64* %1, align 8
  %.178 = icmp sgt i64 %.177, 0
  %.182 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.166, align 8
  br i1 %.178, label %true_block, label %false_block

true_block:                                       ; preds = %for.end
  %.183 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.182, i64 0, i32 20
  %.184 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*, %"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567**)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*, %"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567**)** %.183, align 8
  %.188 = call %LLVMValueRef.560567* %.184(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.163, %"Array<LLVMValueRef>.560613"* nonnull %.17, %LLVMValueRef.560567** nonnull %str_len)
  br label %end

false_block:                                      ; preds = %for.end
  %.193 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.182, i64 0, i32 19
  %.194 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %string.560217*)** %.193, align 8
  %.197 = tail call %LLVMValueRef.560567* %.194(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %string.560217* %.163)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.199 = phi %LLVMValueRef.560567* [ %.188, %true_block ], [ %.197, %false_block ]
  %.203 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.166, align 8
  %.204 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.203, i64 0, i32 9
  %.205 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.204, align 8
  %.207 = getelementptr inbounds %StringExpression.560417, %StringExpression.560417* %.3, i64 0, i32 4
  %.208 = load %Type.560381*, %Type.560381** %.207, align 8
  %.209 = call %LLVMTypeRef.560566* %.205(%CodeGen.560615* nonnull %.1, %Type.560381* %.208, i1 false)
  %.213 = load %Type.560381*, %Type.560381** %.207, align 8
  %.214 = call i1 @is_object(%Type.560381* %.213)
  %3 = ptrtoint %LLVMValueRef.560567* %.199 to i64
  br i1 %.214, label %end.if, label %end.endif

end.if:                                           ; preds = %end
  %.217 = call i1 @LLVMIsGlobalConstant(%LLVMValueRef.560567* %.199)
  br i1 %.217, label %end.if.if, label %end.if.endif

end.endif:                                        ; preds = %end
  ret %LLVMValueRef.560567* %.199

end.if.if:                                        ; preds = %end.if
  %.220 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.221 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.220, align 8
  %.222 = call %LLVMValueRef.560567* @LLVMGetNamedFunction(%LLVMModuleRef.560565* %.221, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.350, i64 0, i64 0))
  %4 = ptrtoint %LLVMValueRef.560567* %.222 to i64
  %.225 = trunc i64 %4 to i32
  %.227 = icmp eq i32 %.225, 0
  br i1 %.227, label %end.if.if.if, label %end.if.if.endif

end.if.endif:                                     ; preds = %end.if
  %.263 = call %LLVMValueRef.560567* @LLVMBuildMalloc(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.209, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.267 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.166, align 8
  %.268 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.267, i64 0, i32 57
  %.269 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)** %.268, align 8
  %5 = bitcast %Type.560381** %.207 to %ObjectType.560407**
  %.2731 = load %ObjectType.560407*, %ObjectType.560407** %5, align 8
  %6 = ptrtoint %LLVMValueRef.560567* %.263 to i64
  %7 = bitcast %LLVMValueRef.560567** %str_len to i64*
  %.2774 = load i64, i64* %7, align 8
  %.279 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %8 = bitcast i8* %.279 to i64*
  store i64 %6, i64* %8, align 8
  %.283 = getelementptr inbounds i8, i8* %.279, i64 8
  %9 = bitcast i8* %.283 to i64*
  store i64 %3, i64* %9, align 8
  %.285 = getelementptr inbounds i8, i8* %.279, i64 16
  %10 = bitcast i8* %.285 to i64*
  store i64 %.2774, i64* %10, align 8
  %.287 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.288 = bitcast i8* %.287 to %"Array<LLVMValueRef>.560613"*
  %.289 = bitcast i8* %.287 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.289, align 8
  %.291 = getelementptr inbounds i8, i8* %.287, i64 8
  %11 = bitcast i8* %.291 to i8**
  store i8* %.279, i8** %11, align 8
  %.293 = getelementptr inbounds i8, i8* %.287, i64 16
  %12 = bitcast i8* %.293 to i64*
  store i64 3, i64* %12, align 8
  %.295 = getelementptr inbounds i8, i8* %.287, i64 24
  %13 = bitcast i8* %.295 to i64*
  store i64 24, i64* %13, align 8
  call void %.269(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %ObjectType.560407* %.2731, %"Array<LLVMValueRef>.560613"* %.288)
  ret %LLVMValueRef.560567* %.263

end.if.if.if:                                     ; preds = %end.if.if
  %.229 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.230 = bitcast i8* %.229 to %string.560217*
  %.230.repack = bitcast i8* %.229 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.230.repack, align 8
  %.230.repack7 = getelementptr inbounds i8, i8* %.229, i64 8
  %14 = bitcast i8* %.230.repack7 to i8**
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.351, i64 0, i64 0), i8** %14, align 8
  %.230.repack8 = getelementptr inbounds i8, i8* %.229, i64 16
  %15 = bitcast i8* %.230.repack8 to i64*
  store i64 54, i64* %15, align 8
  %.230.repack9 = getelementptr inbounds i8, i8* %.229, i64 24
  %16 = bitcast i8* %.230.repack9 to i64*
  store i64 54, i64* %16, align 8
  call void @panic(%string.560217* %.230)
  br label %end.if.if.endif

end.if.if.endif:                                  ; preds = %end.if.if.if, %end.if.if
  %17 = bitcast %LLVMValueRef.560567** %str_len to i64*
  %.2356 = load i64, i64* %17, align 8
  %args = alloca [2 x %LLVMValueRef.560567*], align 8
  %18 = bitcast [2 x %LLVMValueRef.560567*]* %args to i64*
  store i64 %3, i64* %18, align 8
  %.238 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %args, i64 0, i64 1
  %19 = bitcast %LLVMValueRef.560567** %.238 to i64*
  store i64 %.2356, i64* %19, align 8
  %.241 = call %LLVMTypeRef.560566* @LLVMTypeOf(%LLVMValueRef.560567* %.199)
  %.242 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %str_len, align 8
  %.243 = call %LLVMTypeRef.560566* @LLVMTypeOf(%LLVMValueRef.560567* %.242)
  %arg_types = alloca [2 x %LLVMTypeRef.560566*], align 8
  %.244 = getelementptr inbounds [2 x %LLVMTypeRef.560566*], [2 x %LLVMTypeRef.560566*]* %arg_types, i64 0, i64 0
  store %LLVMTypeRef.560566* %.241, %LLVMTypeRef.560566** %.244, align 8
  %.246 = getelementptr inbounds [2 x %LLVMTypeRef.560566*], [2 x %LLVMTypeRef.560566*]* %arg_types, i64 0, i64 1
  store %LLVMTypeRef.560566* %.243, %LLVMTypeRef.560566** %.246, align 8
  %.249 = call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.209, i64 0)
  %.252 = call %LLVMTypeRef.560566* @LLVMFunctionType(%LLVMTypeRef.560566* %.249, %LLVMTypeRef.560566** nonnull %.244, i64 2, i1 false)
  %.257 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %args, i64 0, i64 0
  %.259 = call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.252, %LLVMValueRef.560567* %.222, %LLVMValueRef.560567** nonnull %.257, i64 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.259
}

define %LLVMValueRef.560567* @CodeGen_store_array_elements(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %ArrayExpression.560423* nocapture readonly %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.13 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.14 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.13, i64 0, i32 8
  %.15 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.14, align 8
  %.16 = tail call %LLVMValueRef.560567* %.15(%CodeGen.560615* %.1, i64 1)
  %next_args = alloca [1 x %LLVMValueRef.560567*], align 8
  %.17 = getelementptr inbounds [1 x %LLVMValueRef.560567*], [1 x %LLVMValueRef.560567*]* %next_args, i64 0, i64 0
  store %LLVMValueRef.560567* %.16, %LLVMValueRef.560567** %.17, align 8
  %.20 = tail call %LLVMTypeRef.560566* @LLVMTypeOf(%LLVMValueRef.560567* %.3)
  %.29 = getelementptr inbounds %ArrayExpression.560423, %ArrayExpression.560423* %.4, i64 0, i32 5
  %.302 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.29, align 8
  %.313 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.302, i64 0, i32 2
  %.324 = load i64, i64* %.313, align 8
  %.335 = icmp sgt i64 %.324, 0
  br i1 %.335, label %for.body, label %for.end

for.body:                                         ; preds = %.6, %for.body
  %.308 = phi %"Array<Expression>.560419"* [ %.30, %for.body ], [ %.302, %.6 ]
  %addr.07 = phi %LLVMValueRef.560567* [ %.59, %for.body ], [ %.3, %.6 ]
  %storemerge6 = phi i64 [ %.65, %for.body ], [ 0, %.6 ]
  %.38 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.39 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.38, i64 0, i32 52
  %.40 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.39, align 8
  %.46 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.308, i64 0, i32 0
  %.47 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.47, i64 0, i32 5
  %.49 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.48, align 8
  %.50 = call %Expression.560401* %.49(%"Array<Expression>.560419"* %.308, i64 %storemerge6)
  %.51 = call %LLVMValueRef.560567* %.40(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.50)
  %.53 = call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.51, %LLVMValueRef.560567* %addr.07)
  %.59 = call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.20, %LLVMValueRef.560567* %addr.07, %LLVMValueRef.560567** nonnull %.17, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.65 = add nuw nsw i64 %storemerge6, 1
  %.30 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.29, align 8
  %.31 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.30, i64 0, i32 2
  %.32 = load i64, i64* %.31, align 8
  %.33 = icmp slt i64 %.65, %.32
  br i1 %.33, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.6
  %addr.0.lcssa = phi %LLVMValueRef.560567* [ %.3, %.6 ], [ %.59, %for.body ]
  ret %LLVMValueRef.560567* %addr.0.lcssa
}

define %LLVMValueRef.560567* @CodeGen_codegen_array_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ArrayExpression.560423* %.3) {
.5:
  %.10 = getelementptr inbounds %ArrayExpression.560423, %ArrayExpression.560423* %.3, i64 0, i32 4
  %.11 = load %Type.560381*, %Type.560381** %.10, align 8
  %.12 = getelementptr inbounds %Type.560381, %Type.560381* %.11, i64 0, i32 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp eq i64 %.13, 20
  %.17 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.18 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  br i1 %.14, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %0 = bitcast %Type.560381* %.11 to %GenericType.560405*
  %.19 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.18, i64 0, i32 36
  %.20 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %GenericType.560405*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %GenericType.560405*, %ArrayExpression.560423*)** %.19, align 8
  %.27 = tail call %LLVMValueRef.560567* %.20(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %GenericType.560405* %0, %ArrayExpression.560423* nonnull %.3)
  ret %LLVMValueRef.560567* %.27

.5.endif:                                         ; preds = %.5
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.18, i64 0, i32 9
  %.33 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.32, align 8
  %.38 = getelementptr inbounds %Type.560381, %Type.560381* %.11, i64 1
  %1 = bitcast %Type.560381* %.38 to %Type.560381**
  %.39 = load %Type.560381*, %Type.560381** %1, align 8
  %.40 = tail call %LLVMTypeRef.560566* %.33(%CodeGen.560615* nonnull %.1, %Type.560381* %.39, i1 true)
  %.43 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.45 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.47 = bitcast i8* %.45 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.47, align 8
  %.49 = getelementptr inbounds i8, i8* %.45, i64 8
  %2 = bitcast i8* %.49 to i8**
  store i8* %.43, i8** %2, align 8
  %.51 = getelementptr inbounds i8, i8* %.45, i64 16
  %3 = bitcast i8* %.51 to i64*
  store i64 0, i64* %3, align 8
  %.53 = getelementptr inbounds i8, i8* %.45, i64 24
  %4 = bitcast i8* %.53 to i64*
  store i64 8, i64* %4, align 8
  %.61 = getelementptr inbounds %ArrayExpression.560423, %ArrayExpression.560423* %.3, i64 0, i32 5
  %.623 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.61, align 8
  %.634 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.623, i64 0, i32 2
  %.645 = load i64, i64* %.634, align 8
  %.656 = icmp sgt i64 %.645, 0
  %.677.cast = bitcast i8* %.45 to %"Array<LLVMValueRef>.560613"*
  %5 = bitcast i8* %.43 to %LLVMValueRef.560567**
  br i1 %.656, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif
  %.84 = bitcast i8* %.45 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.629 = phi %"Array<Expression>.560419"* [ %.623, %for.body.lr.ph ], [ %.62, %for.body ]
  %storemerge8 = phi i64 [ 0, %for.body.lr.ph ], [ %.93, %for.body ]
  %.70 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.71 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.70, i64 0, i32 52
  %.72 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.71, align 8
  %.78 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.629, i64 0, i32 0
  %.79 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.78, align 8
  %.80 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.79, i64 0, i32 5
  %.81 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.80, align 8
  %.82 = tail call %Expression.560401* %.81(%"Array<Expression>.560419"* %.629, i64 %storemerge8)
  %.83 = tail call %LLVMValueRef.560567* %.72(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.82)
  %.85 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.85, i64 0, i32 2
  %.87 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.86, align 8
  tail call void %.87(%"Array<LLVMValueRef>.560613"* %.677.cast, %LLVMValueRef.560567* %.83)
  %.93 = add nuw nsw i64 %storemerge8, 1
  %.62 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.61, align 8
  %.63 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.62, i64 0, i32 2
  %.64 = load i64, i64* %.63, align 8
  %.65 = icmp slt i64 %.93, %.64
  br i1 %.65, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.body
  %.98.phi.trans.insert = getelementptr inbounds i8, i8* %.45, i64 8
  %6 = bitcast i8* %.98.phi.trans.insert to %LLVMValueRef.560567***
  %.99.pre = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %6, align 8
  %.101.phi.trans.insert = getelementptr inbounds i8, i8* %.45, i64 16
  %7 = bitcast i8* %.101.phi.trans.insert to i64*
  %.102.pre = load i64, i64* %7, align 8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %.5.endif
  %.102 = phi i64 [ %.102.pre, %for.end.loopexit ], [ 0, %.5.endif ]
  %.99 = phi %LLVMValueRef.560567** [ %.99.pre, %for.end.loopexit ], [ %5, %.5.endif ]
  %.103 = tail call %LLVMValueRef.560567* @LLVMConstArray(%LLVMTypeRef.560566* %.40, %LLVMValueRef.560567** %.99, i64 %.102)
  ret %LLVMValueRef.560567* %.103
}

define %LLVMValueRef.560567* @CodeGen_get_or_codegen_var(%CodeGen.560615* %.1, %VarId.560441* %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 1
  %.11 = load %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)** %.10, align 8
  %.13 = tail call %LLVMValueRef.560567* %.11(%CodeGen.560615* %.1, %VarId.560441* %.2)
  %0 = ptrtoint %LLVMValueRef.560567* %.13 to i64
  %.16 = trunc i64 %0 to i32
  %.18.not = icmp eq i32 %.16, 0
  br i1 %.18.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %for.cond.2, %for.cond.preheader, %for.cond.1.preheader, %for.cond.2.preheader, %.4.endif.endif.endif, %.4
  %merge = phi %LLVMValueRef.560567* [ %.13, %.4 ], [ null, %.4.endif.endif.endif ], [ null, %for.cond.2.preheader ], [ null, %for.cond.1.preheader ], [ null, %for.cond.preheader ], [ null, %for.cond.2 ]
  ret %LLVMValueRef.560567* %merge

.4.endif:                                         ; preds = %.4
  %.23 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 2
  %.24 = load i64, i64* %.23, align 8
  %.26 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.27 = load %Program.560549*, %Program.560549** %.26, align 8
  %.28 = getelementptr inbounds %Program.560549, %Program.560549* %.27, i64 0, i32 2
  %.29 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.29, i64 0, i32 0
  %.31 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.30, align 8
  %.32 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.31, i64 0, i32 5
  %.33 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.32, align 8
  %.34 = tail call %Module.560531* %.33(%"Array<Module>.560551"* %.29, i64 %.24)
  %.38 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 1
  %.39 = load i64, i64* %.38, align 8
  %.40 = icmp eq i64 %.39, 2
  br i1 %.40, label %for.cond.preheader, label %.4.endif.endif

for.cond.preheader:                               ; preds = %.4.endif
  %.47 = getelementptr inbounds %Module.560531, %Module.560531* %.34, i64 0, i32 9
  %.4821 = load %"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"** %.47, align 8
  %.4922 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.4821, i64 0, i32 2
  %.5023 = load i64, i64* %.4922, align 8
  %.5124 = icmp sgt i64 %.5023, 0
  br i1 %.5124, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.71 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 3
  br label %for.body

.4.endif.endifthread-pre-split.loopexit:          ; preds = %for.cond
  %.100.pr.pre = load i64, i64* %.38, align 8
  br label %.4.endif.endif

.4.endif.endif:                                   ; preds = %.4.endif.endifthread-pre-split.loopexit, %.4.endif
  %.100 = phi i64 [ %.39, %.4.endif ], [ %.100.pr.pre, %.4.endif.endifthread-pre-split.loopexit ]
  %.101 = icmp eq i64 %.100, 1
  br i1 %.101, label %for.cond.1.preheader, label %.4.endif.endif.endif

for.cond.1.preheader:                             ; preds = %.4.endif.endif
  %.108 = getelementptr inbounds %Module.560531, %Module.560531* %.34, i64 0, i32 10
  %.10915 = load %"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"** %.108, align 8
  %.11016 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.10915, i64 0, i32 2
  %.11117 = load i64, i64* %.11016, align 8
  %.11218 = icmp sgt i64 %.11117, 0
  br i1 %.11218, label %for.body.1.lr.ph, label %.4.if

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.132 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 3
  br label %for.body.1

for.cond:                                         ; preds = %for.body
  %.48 = load %"Array<ConstDeclaration>.560539"*, %"Array<ConstDeclaration>.560539"** %.47, align 8
  %.49 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.48, i64 0, i32 2
  %.50 = load i64, i64* %.49, align 8
  %.51 = icmp slt i64 %.94, %.50
  br i1 %.51, label %for.body, label %.4.endif.endifthread-pre-split.loopexit

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %.4826 = phi %"Array<ConstDeclaration>.560539"* [ %.4821, %for.body.lr.ph ], [ %.48, %for.cond ]
  %storemerge625 = phi i64 [ 0, %for.body.lr.ph ], [ %.94, %for.cond ]
  %.57 = getelementptr inbounds %"Array<ConstDeclaration>.560539", %"Array<ConstDeclaration>.560539"* %.4826, i64 0, i32 0
  %.58 = load %"Array<ConstDeclaration>_vtable_ty.560547"*, %"Array<ConstDeclaration>_vtable_ty.560547"** %.57, align 8
  %.59 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.560547", %"Array<ConstDeclaration>_vtable_ty.560547"* %.58, i64 0, i32 5
  %.60 = load %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)*, %ConstDeclaration.560463* (%"Array<ConstDeclaration>.560539"*, i64)** %.59, align 8
  %.61 = tail call %ConstDeclaration.560463* %.60(%"Array<ConstDeclaration>.560539"* %.4826, i64 %storemerge625)
  %.64 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.61, i64 0, i32 3
  %.6578 = load %ConstId.560447*, %ConstId.560447** %.64, align 8
  %.68 = getelementptr inbounds %ConstId.560447, %ConstId.560447* %.6578, i64 0, i32 3
  %.69 = load i64, i64* %.68, align 8
  %.72 = load i64, i64* %.71, align 8
  %.73 = icmp eq i64 %.69, %.72
  %.94 = add nuw nsw i64 %storemerge625, 1
  br i1 %.73, label %for.body.if, label %for.cond

for.body.if:                                      ; preds = %for.body
  %.77 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.78 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.77, i64 0, i32 59
  %.79 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)** %.78, align 8
  tail call void %.79(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* null, %ConstDeclaration.560463* %.61)
  %.84 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.85 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.84, i64 0, i32 1
  %.86 = load %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)** %.85, align 8
  %.88 = tail call %LLVMValueRef.560567* %.86(%CodeGen.560615* %.1, %VarId.560441* nonnull %.2)
  ret %LLVMValueRef.560567* %.88

.4.endif.endif.endif.loopexit:                    ; preds = %for.cond.1
  %.161.pre = load i64, i64* %.38, align 8
  br label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif.endif.loopexit, %.4.endif.endif
  %.161 = phi i64 [ %.161.pre, %.4.endif.endif.endif.loopexit ], [ %.100, %.4.endif.endif ]
  %.162 = icmp eq i64 %.161, 0
  br i1 %.162, label %for.cond.2.preheader, label %.4.if

for.cond.2.preheader:                             ; preds = %.4.endif.endif.endif
  %.169 = getelementptr inbounds %Module.560531, %Module.560531* %.34, i64 0, i32 6
  %.1709 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.169, align 8
  %.17110 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.1709, i64 0, i32 2
  %.17211 = load i64, i64* %.17110, align 8
  %.17312 = icmp sgt i64 %.17211, 0
  br i1 %.17312, label %for.body.2.lr.ph, label %.4.if

for.body.2.lr.ph:                                 ; preds = %for.cond.2.preheader
  %.193 = getelementptr inbounds %VarId.560441, %VarId.560441* %.2, i64 0, i32 3
  br label %for.body.2

for.cond.1:                                       ; preds = %for.body.1
  %.109 = load %"Array<VarDeclaration>.560540"*, %"Array<VarDeclaration>.560540"** %.108, align 8
  %.110 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.109, i64 0, i32 2
  %.111 = load i64, i64* %.110, align 8
  %.112 = icmp slt i64 %.155, %.111
  br i1 %.112, label %for.body.1, label %.4.endif.endif.endif.loopexit

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.cond.1
  %.10920 = phi %"Array<VarDeclaration>.560540"* [ %.10915, %for.body.1.lr.ph ], [ %.109, %for.cond.1 ]
  %storemerge319 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.155, %for.cond.1 ]
  %.118 = getelementptr inbounds %"Array<VarDeclaration>.560540", %"Array<VarDeclaration>.560540"* %.10920, i64 0, i32 0
  %.119 = load %"Array<VarDeclaration>_vtable_ty.560548"*, %"Array<VarDeclaration>_vtable_ty.560548"** %.118, align 8
  %.120 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.560548", %"Array<VarDeclaration>_vtable_ty.560548"* %.119, i64 0, i32 5
  %.121 = load %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)*, %VarDeclaration.560461* (%"Array<VarDeclaration>.560540"*, i64)** %.120, align 8
  %.122 = tail call %VarDeclaration.560461* %.121(%"Array<VarDeclaration>.560540"* %.10920, i64 %storemerge319)
  %.125 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.122, i64 0, i32 3
  %.12645 = load %VarId.560441*, %VarId.560441** %.125, align 8
  %.129 = getelementptr inbounds %VarId.560441, %VarId.560441* %.12645, i64 0, i32 3
  %.130 = load i64, i64* %.129, align 8
  %.133 = load i64, i64* %.132, align 8
  %.134 = icmp eq i64 %.130, %.133
  %.155 = add nuw nsw i64 %storemerge319, 1
  br i1 %.134, label %for.body.1.if, label %for.cond.1

for.body.1.if:                                    ; preds = %for.body.1
  %.138 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.139 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.138, i64 0, i32 58
  %.140 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)** %.139, align 8
  tail call void %.140(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* null, %VarDeclaration.560461* %.122)
  %.145 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.146 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.145, i64 0, i32 1
  %.147 = load %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)** %.146, align 8
  %.149 = tail call %LLVMValueRef.560567* %.147(%CodeGen.560615* %.1, %VarId.560441* nonnull %.2)
  ret %LLVMValueRef.560567* %.149

for.cond.2:                                       ; preds = %for.body.2
  %.170 = load %"Array<Function>.560536"*, %"Array<Function>.560536"** %.169, align 8
  %.171 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.170, i64 0, i32 2
  %.172 = load i64, i64* %.171, align 8
  %.173 = icmp slt i64 %.216, %.172
  br i1 %.173, label %for.body.2, label %.4.if

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.cond.2
  %.17014 = phi %"Array<Function>.560536"* [ %.1709, %for.body.2.lr.ph ], [ %.170, %for.cond.2 ]
  %storemerge13 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.216, %for.cond.2 ]
  %.179 = getelementptr inbounds %"Array<Function>.560536", %"Array<Function>.560536"* %.17014, i64 0, i32 0
  %.180 = load %"Array<Function>_vtable_ty.560544"*, %"Array<Function>_vtable_ty.560544"** %.179, align 8
  %.181 = getelementptr inbounds %"Array<Function>_vtable_ty.560544", %"Array<Function>_vtable_ty.560544"* %.180, i64 0, i32 5
  %.182 = load %Function.560501* (%"Array<Function>.560536"*, i64)*, %Function.560501* (%"Array<Function>.560536"*, i64)** %.181, align 8
  %.183 = tail call %Function.560501* %.182(%"Array<Function>.560536"* %.17014, i64 %storemerge13)
  %.186 = getelementptr inbounds %Function.560501, %Function.560501* %.183, i64 0, i32 1
  %.18712 = load %VarId.560441*, %VarId.560441** %.186, align 8
  %.190 = getelementptr inbounds %VarId.560441, %VarId.560441* %.18712, i64 0, i32 3
  %.191 = load i64, i64* %.190, align 8
  %.194 = load i64, i64* %.193, align 8
  %.195 = icmp eq i64 %.191, %.194
  %.216 = add nuw nsw i64 %storemerge13, 1
  br i1 %.195, label %for.body.2.if, label %for.cond.2

for.body.2.if:                                    ; preds = %for.body.2
  %.199 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.200 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.199, i64 0, i32 62
  %.201 = load void (%CodeGen.560615*, %Function.560501*)*, void (%CodeGen.560615*, %Function.560501*)** %.200, align 8
  tail call void %.201(%CodeGen.560615* %.1, %Function.560501* %.183)
  %.206 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.207 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.206, i64 0, i32 1
  %.208 = load %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)** %.207, align 8
  %.210 = tail call %LLVMValueRef.560567* %.208(%CodeGen.560615* %.1, %VarId.560441* nonnull %.2)
  ret %LLVMValueRef.560567* %.210
}

define %CGClassType.560595* @CodeGen_construct_class(%CodeGen.560615* %.1, %Class.560513* %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 67
  %.11 = load void (%CodeGen.560615*, %Class.560513*)*, void (%CodeGen.560615*, %Class.560513*)** %.10, align 8
  tail call void %.11(%CodeGen.560615* %.1, %Class.560513* %.2)
  %.16 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.16, i64 0, i32 63
  %.18 = load void (%CodeGen.560615*, %Class.560513*)*, void (%CodeGen.560615*, %Class.560513*)** %.17, align 8
  tail call void %.18(%CodeGen.560615* %.1, %Class.560513* %.2)
  %.23 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.23, i64 0, i32 2
  %.25 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.24, align 8
  %.27 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 1
  %0 = bitcast %ClassId.560397** %.27 to %TypeId.560395**
  %.281 = load %TypeId.560395*, %TypeId.560395** %0, align 8
  %.30 = tail call %CGClassType.560595* %.25(%CodeGen.560615* %.1, %TypeId.560395* %.281)
  ret %CGClassType.560595* %.30
}

define %CGEnumType.560609* @CodeGen_construct_enum(%CodeGen.560615* %.1, %Enum.560527* %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 68
  %.11 = load void (%CodeGen.560615*, %Enum.560527*)*, void (%CodeGen.560615*, %Enum.560527*)** %.10, align 8
  tail call void %.11(%CodeGen.560615* %.1, %Enum.560527* %.2)
  %.16 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.16, i64 0, i32 3
  %.18 = load %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)*, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)** %.17, align 8
  %.20 = getelementptr inbounds %Enum.560527, %Enum.560527* %.2, i64 0, i32 1
  %0 = bitcast %EnumId.560399** %.20 to %TypeId.560395**
  %.211 = load %TypeId.560395*, %TypeId.560395** %0, align 8
  %.23 = tail call %CGEnumType.560609* %.18(%CodeGen.560615* %.1, %TypeId.560395* %.211)
  ret %CGEnumType.560609* %.23
}

define %CGClassType.560595* @CodeGen_get_or_codegen_class_from_typeid(%CodeGen.560615* %.1, %TypeId.560395* %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 2
  %.11 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.10, align 8
  %.13 = tail call %CGClassType.560595* %.11(%CodeGen.560615* %.1, %TypeId.560395* %.2)
  %0 = ptrtoint %CGClassType.560595* %.13 to i64
  %.16 = trunc i64 %0 to i32
  %.18.not = icmp eq i32 %.16, 0
  br i1 %.18.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret %CGClassType.560595* %.13

.4.endif:                                         ; preds = %.4
  %.23 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.24 = load %Program.560549*, %Program.560549** %.23, align 8
  %.26 = bitcast %TypeId.560395* %.2 to %ClassId.560397*
  %.27 = tail call %Class.560513* @get_class(%Program.560549* %.24, %ClassId.560397* %.26)
  %.31 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.31, i64 0, i32 26
  %.33 = load %CGClassType.560595* (%CodeGen.560615*, %Class.560513*)*, %CGClassType.560595* (%CodeGen.560615*, %Class.560513*)** %.32, align 8
  %.35 = tail call %CGClassType.560595* %.33(%CodeGen.560615* nonnull %.1, %Class.560513* %.27)
  ret %CGClassType.560595* %.35
}

define %CGEnumType.560609* @CodeGen_get_or_codegen_enum_from_typeid(%CodeGen.560615* %.1, %TypeId.560395* %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 3
  %.11 = load %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)*, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)** %.10, align 8
  %.13 = tail call %CGEnumType.560609* %.11(%CodeGen.560615* %.1, %TypeId.560395* %.2)
  %0 = ptrtoint %CGEnumType.560609* %.13 to i64
  %.16 = trunc i64 %0 to i32
  %.18.not = icmp eq i32 %.16, 0
  br i1 %.18.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret %CGEnumType.560609* %.13

.4.endif:                                         ; preds = %.4
  %.23 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.24 = load %Program.560549*, %Program.560549** %.23, align 8
  %.26 = bitcast %TypeId.560395* %.2 to %EnumId.560399*
  %.27 = tail call %Enum.560527* @get_enum(%Program.560549* %.24, %EnumId.560399* %.26)
  %.31 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.31, i64 0, i32 27
  %.33 = load %CGEnumType.560609* (%CodeGen.560615*, %Enum.560527*)*, %CGEnumType.560609* (%CodeGen.560615*, %Enum.560527*)** %.32, align 8
  %.35 = tail call %CGEnumType.560609* %.33(%CodeGen.560615* nonnull %.1, %Enum.560527* %.27)
  ret %CGEnumType.560609* %.35
}

define %LLVMValueRef.560567* @CodeGen_get_var_expr_mem(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* nocapture readnone %.2, %VarAccessExpression.560453* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.11, i64 0, i32 25
  %.13 = load %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)** %.12, align 8
  %.15 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.3, i64 0, i32 5
  %.16 = load %VarId.560441*, %VarId.560441** %.15, align 8
  %.17 = tail call %LLVMValueRef.560567* %.13(%CodeGen.560615* %.1, %VarId.560441* %.16)
  %0 = ptrtoint %LLVMValueRef.560567* %.17 to i64
  %.20 = trunc i64 %0 to i32
  %.22 = icmp eq i32 %.20, 0
  br i1 %.22, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.24 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.560217*
  %.25.repack = bitcast i8* %.24 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.25.repack, align 8
  %.25.repack1 = getelementptr inbounds i8, i8* %.24, i64 8
  %1 = bitcast i8* %.25.repack1 to i8**
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.352, i64 0, i64 0), i8** %1, align 8
  %.25.repack2 = getelementptr inbounds i8, i8* %.24, i64 16
  %2 = bitcast i8* %.25.repack2 to i64*
  store i64 45, i64* %2, align 8
  %.25.repack3 = getelementptr inbounds i8, i8* %.24, i64 24
  %3 = bitcast i8* %.25.repack3 to i64*
  store i64 45, i64* %3, align 8
  tail call void @panic(%string.560217* %.25)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %LLVMValueRef.560567* %.17
}

define %LLVMValueRef.560567* @CodeGen_get_index_expr_mem(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IndexExpression.560435* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.11, i64 0, i32 52
  %.13 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.12, align 8
  %.16 = getelementptr inbounds %IndexExpression.560435, %IndexExpression.560435* %.3, i64 0, i32 6
  %.17 = load %Expression.560401*, %Expression.560401** %.16, align 8
  %.18 = tail call %LLVMValueRef.560567* %.13(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.17)
  %.21 = getelementptr inbounds %IndexExpression.560435, %IndexExpression.560435* %.3, i64 0, i32 5
  %.22 = load %Expression.560401*, %Expression.560401** %.21, align 8
  %.23 = getelementptr inbounds %Expression.560401, %Expression.560401* %.22, i64 0, i32 4
  %.24 = load %Type.560381*, %Type.560381** %.23, align 8
  %.27 = tail call i1 @is_pointer(%Type.560381* %.24)
  %.31 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.31, i64 0, i32 9
  %.33 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.32, align 8
  br i1 %.27, label %true_block, label %end

true_block:                                       ; preds = %.5
  %.36 = getelementptr inbounds %Type.560381, %Type.560381* %.24, i64 1
  %0 = bitcast %Type.560381* %.36 to %Type.560381**
  %.37 = load %Type.560381*, %Type.560381** %0, align 8
  br label %end

end:                                              ; preds = %.5, %true_block
  %.24.sink = phi %Type.560381* [ %.37, %true_block ], [ %.24, %.5 ]
  %.46 = tail call %LLVMTypeRef.560566* %.33(%CodeGen.560615* nonnull %.1, %Type.560381* %.24.sink, i1 true)
  %.52 = getelementptr inbounds %Type.560381, %Type.560381* %.24, i64 0, i32 1
  %.53 = load i64, i64* %.52, align 8
  %.54 = icmp eq i64 %.53, 16
  br i1 %.54, label %end.if, label %end.endif

end.if:                                           ; preds = %end
  %.58 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.58, i64 0, i32 8
  %.60 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.59, align 8
  %.61 = tail call %LLVMValueRef.560567* %.60(%CodeGen.560615* nonnull %.1, i64 0)
  %indices = alloca [2 x %LLVMValueRef.560567*], align 8
  %.63 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %indices, i64 0, i64 0
  store %LLVMValueRef.560567* %.61, %LLVMValueRef.560567** %.63, align 8
  %.65 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %indices, i64 0, i64 1
  store %LLVMValueRef.560567* %.18, %LLVMValueRef.560567** %.65, align 8
  %.69 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.70 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.69, i64 0, i32 33
  %.71 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.70, align 8
  %.75 = load %Expression.560401*, %Expression.560401** %.21, align 8
  %.76 = tail call %LLVMValueRef.560567* %.71(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.75)
  %.83 = call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.46, %LLVMValueRef.560567* %.76, %LLVMValueRef.560567** nonnull %.63, i64 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.353, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.83

end.endif:                                        ; preds = %end
  %indices_1 = alloca [1 x %LLVMValueRef.560567*], align 8
  %.86 = getelementptr inbounds [1 x %LLVMValueRef.560567*], [1 x %LLVMValueRef.560567*]* %indices_1, i64 0, i64 0
  store %LLVMValueRef.560567* %.18, %LLVMValueRef.560567** %.86, align 8
  %.90 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.91 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.90, i64 0, i32 52
  %.92 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.91, align 8
  %.96 = load %Expression.560401*, %Expression.560401** %.21, align 8
  %.97 = tail call %LLVMValueRef.560567* %.92(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.96)
  %.104 = call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.46, %LLVMValueRef.560567* %.97, %LLVMValueRef.560567** nonnull %.86, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.354, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.104
}

define %LLVMValueRef.560567* @CodeGen_get_member_expr_mem(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %MemberExpression.560451* nocapture readonly %.3, %LLVMValueRef.560567* %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.13 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.14 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.13, i64 0, i32 28
  %.15 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.14, align 8
  %.17 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 6
  %.18 = load %PropId.560449*, %PropId.560449** %.17, align 8
  %.19 = getelementptr inbounds %PropId.560449, %PropId.560449* %.18, i64 0, i32 2
  %.20 = load %TypeId.560395*, %TypeId.560395** %.19, align 8
  %.21 = tail call %CGClassType.560595* %.15(%CodeGen.560615* %.1, %TypeId.560395* %.20)
  %.24 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 4
  %.25 = load %Type.560381*, %Type.560381** %.24, align 8
  %.26 = getelementptr inbounds %Type.560381, %Type.560381* %.25, i64 0, i32 1
  %.27 = load i64, i64* %.26, align 8
  %.28.not = icmp eq i64 %.27, 17
  %.32 = load %PropId.560449*, %PropId.560449** %.17, align 8
  %.33 = tail call %string.560217* @create_prop_key(%PropId.560449* %.32)
  %.36 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.21, i64 0, i32 1
  %.37 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.36, align 8
  %.38 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.37, i64 0)
  %.41 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.21, i64 0, i32 4
  %.42 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.41, align 8
  %.43 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.42, i64 0, i32 0
  %.44 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.43, align 8
  %.45 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.44, i64 0, i32 3
  %.46 = load %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.45, align 8
  %.48 = tail call %LLVMValueRef.560567* %.46(%"Map<string, LLVMValueRef>.560598"* %.42, %string.560217* %.33)
  %0 = ptrtoint %LLVMValueRef.560567* %.48 to i64
  %.51 = trunc i64 %0 to i32
  %.53.not = icmp eq i32 %.51, 0
  br i1 %.53.not, label %.6.endif, label %.6.if

.6.if:                                            ; preds = %.6
  ret %LLVMValueRef.560567* %.48

.6.endif:                                         ; preds = %.6
  %1 = ptrtoint %LLVMValueRef.560567* %.4 to i64
  %.58 = trunc i64 %1 to i32
  %.60 = icmp eq i32 %.58, 0
  br i1 %.60, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  %.64 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.65 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.64, i64 0, i32 52
  %.66 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.65, align 8
  %.69 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 5
  %.70 = load %Expression.560401*, %Expression.560401** %.69, align 8
  %.71 = tail call %LLVMValueRef.560567* %.66(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.70)
  br label %.6.endif.endif

.6.endif.endif:                                   ; preds = %.6.endif.if, %.6.endif
  %ptr.0 = phi %LLVMValueRef.560567* [ %.71, %.6.endif.if ], [ %.4, %.6.endif ]
  %.75 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.77 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.77 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.79, align 8
  %.81 = getelementptr inbounds i8, i8* %.77, i64 8
  %2 = bitcast i8* %.81 to i8**
  store i8* %.75, i8** %2, align 8
  %.83 = getelementptr inbounds i8, i8* %.77, i64 16
  %3 = bitcast i8* %.83 to i64*
  store i64 0, i64* %3, align 8
  %.85 = getelementptr inbounds i8, i8* %.77, i64 24
  %4 = bitcast i8* %.85 to i64*
  store i64 8, i64* %4, align 8
  %5 = bitcast i8* %.77 to %"Array<LLVMValueRef>.560613"*
  br i1 %.28.not, label %.6.endif.endif.else, label %.6.endif.endif.if

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.92 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.21, i64 0, i32 6
  %6 = bitcast %LLVMTypeRef.560566** %.92 to i64*
  %.931 = load i64, i64* %6, align 8
  %.94 = trunc i64 %.931 to i32
  %.96 = icmp ne i32 %.94, 0
  %. = zext i1 %.96 to i64
  %.105 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.106 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.105, i64 0, i32 8
  %.107 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.106, align 8
  %.109 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.21, i64 0, i32 3
  %.110 = load %"Map<string, int>.560597"*, %"Map<string, int>.560597"** %.109, align 8
  %.111 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.110, i64 0, i32 0
  %.112 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.111, align 8
  %.113 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.112, i64 0, i32 3
  %.114 = load i64 (%"Map<string, int>.560597"*, %string.560217*)*, i64 (%"Map<string, int>.560597"*, %string.560217*)** %.113, align 8
  %.116 = tail call i64 %.114(%"Map<string, int>.560597"* %.110, %string.560217* %.33)
  %.118 = add i64 %.116, %.
  %.119 = tail call %LLVMValueRef.560567* %.107(%CodeGen.560615* nonnull %.1, i64 %.118)
  %.120 = bitcast i8* %.77 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  %.121 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.120, align 8
  %.122 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.121, i64 0, i32 2
  %.123 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.122, align 8
  tail call void %.123(%"Array<LLVMValueRef>.560613"* %5, %LLVMValueRef.560567* %.119)
  br label %.6.endif.endif.endif

.6.endif.endif.else:                              ; preds = %.6.endif.endif
  %.129 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.130 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.129, i64 0, i32 8
  %.131 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.130, align 8
  %.132 = tail call %LLVMValueRef.560567* %.131(%CodeGen.560615* nonnull %.1, i64 0)
  %.133 = bitcast i8* %.77 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  %.134 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.133, align 8
  %.135 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.134, i64 0, i32 2
  %.136 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.135, align 8
  tail call void %.136(%"Array<LLVMValueRef>.560613"* %5, %LLVMValueRef.560567* %.132)
  %.142 = getelementptr inbounds i8, i8* %.77, i64 8
  %7 = bitcast i8* %.142 to %LLVMValueRef.560567***
  %.143 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %7, align 8
  %.145 = getelementptr inbounds i8, i8* %.77, i64 16
  %8 = bitcast i8* %.145 to i64*
  %.146 = load i64, i64* %8, align 8
  %.147 = tail call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.38, %LLVMValueRef.560567* %ptr.0, %LLVMValueRef.560567** %.143, i64 %.146, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.151 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.21, i64 0, i32 6
  %.152 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.151, align 8
  %.153 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.152, i64 0)
  %.155 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.153, %LLVMValueRef.560567* %.147, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.160 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.12, align 8
  %.161 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.160, i64 0, i32 8
  %.162 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.161, align 8
  %.164 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.21, i64 0, i32 2
  %.165 = load %"Map<string, int>.560597"*, %"Map<string, int>.560597"** %.164, align 8
  %.166 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.165, i64 0, i32 0
  %.167 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.166, align 8
  %.168 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.167, i64 0, i32 3
  %.169 = load i64 (%"Map<string, int>.560597"*, %string.560217*)*, i64 (%"Map<string, int>.560597"*, %string.560217*)** %.168, align 8
  %.171 = tail call i64 %.169(%"Map<string, int>.560597"* %.165, %string.560217* %.33)
  %.172 = tail call %LLVMValueRef.560567* %.162(%CodeGen.560615* nonnull %.1, i64 %.171)
  %.174 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.133, align 8
  %.175 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.174, i64 0, i32 3
  %.176 = load void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)** %.175, align 8
  tail call void %.176(%"Array<LLVMValueRef>.560613"* %5, i64 0, %LLVMValueRef.560567* %.172)
  br label %.6.endif.endif.endif

.6.endif.endif.endif:                             ; preds = %.6.endif.endif.if, %.6.endif.endif.else
  %ptr.1 = phi %LLVMValueRef.560567* [ %ptr.0, %.6.endif.endif.if ], [ %.155, %.6.endif.endif.else ]
  %.183 = getelementptr inbounds i8, i8* %.77, i64 8
  %9 = bitcast i8* %.183 to %LLVMValueRef.560567***
  %.184 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %9, align 8
  %.186 = getelementptr inbounds i8, i8* %.77, i64 16
  %10 = bitcast i8* %.186 to i64*
  %.187 = load i64, i64* %10, align 8
  %.188 = tail call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.38, %LLVMValueRef.560567* %ptr.1, %LLVMValueRef.560567** %.184, i64 %.187, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.355, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.188
}

define %LLVMValueRef.560567* @CodeGen_get_expr_mem(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.560401, %Expression.560401* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif [
    i64 7, label %.5.if
    i64 13, label %.5.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.16, i64 0, i32 30
  %.18 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)** %.17, align 8
  %.21 = bitcast %Expression.560401* %.3 to %VarAccessExpression.560453*
  %.22 = tail call %LLVMValueRef.560567* %.18(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %VarAccessExpression.560453* %.21)
  ret %LLVMValueRef.560567* %.22

.5.endif.if:                                      ; preds = %.5
  %.30 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.31, i64 0, i32 31
  %.33 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)** %.32, align 8
  %.36 = bitcast %Expression.560401* %.3 to %IndexExpression.560435*
  %.37 = tail call %LLVMValueRef.560567* %.33(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IndexExpression.560435* %.36)
  ret %LLVMValueRef.560567* %.37

.5.endif.endif:                                   ; preds = %.5
  %.42 = icmp eq i64 %.11, 12
  %.45 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.45, align 8
  br i1 %.42, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.46, i64 0, i32 32
  %.48 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)** %.47, align 8
  %.51 = bitcast %Expression.560401* %.3 to %MemberExpression.560451*
  %.52 = tail call %LLVMValueRef.560567* %.48(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %MemberExpression.560451* %.51, %LLVMValueRef.560567* null)
  ret %LLVMValueRef.560567* %.52

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.57 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.46, i64 0, i32 52
  %.58 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.57, align 8
  %.61 = tail call %LLVMValueRef.560567* %.58(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* nonnull %.3)
  ret %LLVMValueRef.560567* %.61
}

define %LLVMValueRef.560567* @CodeGen_get_member_mem_with_name(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %ObjectType.560407* nocapture readonly %.4, %string.560217* %.5) {
.7:
  %.14 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.15 = load %Program.560549*, %Program.560549** %.14, align 8
  %.17 = bitcast %ObjectType.560407* %.4 to %Type.560381*
  %.18 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.15, %Type.560381* %.17)
  %.21 = getelementptr inbounds %Class.560513, %Class.560513* %.18, i64 0, i32 7
  %.22 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.21, align 8
  %.23 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.22, i64 0, i32 0
  %.24 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.24, i64 0, i32 3
  %.26 = load %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)*, %PropId.560449* (%"Map<string, PropId>.560517"*, %string.560217*)** %.25, align 8
  %.28 = tail call %PropId.560449* %.26(%"Map<string, PropId>.560517"* %.22, %string.560217* %.5)
  %.32 = load %Program.560549*, %Program.560549** %.14, align 8
  %.34 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.32, %PropId.560449* %.28)
  %.38 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.39 = bitcast i8* %.38 to %MemberExpression.560451*
  %.40 = bitcast i8* %.38 to %MemberExpression_vtable_ty.560452**
  store %MemberExpression_vtable_ty.560452* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.560452** %.40, align 8
  tail call void @MemberExpression_constructor(%MemberExpression.560451* %.39, %Expression.560401* null, %PropId.560449* %.28, %Type.560381* %.34)
  %.45 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.45, align 8
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.46, i64 0, i32 32
  %.48 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)** %.47, align 8
  %.52 = tail call %LLVMValueRef.560567* %.48(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %MemberExpression.560451* %.39, %LLVMValueRef.560567* %.3)
  ret %LLVMValueRef.560567* %.52
}

define %LLVMValueRef.560567* @CodeGen_get_member_with_name(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %ObjectType.560407* %.4, %string.560217* %.5) {
.7:
  %.14 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.15 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.14, align 8
  %.16 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.15, i64 0, i32 34
  %.17 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)** %.16, align 8
  %.22 = tail call %LLVMValueRef.560567* %.17(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %ObjectType.560407* %.4, %string.560217* %.5)
  %.25 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.26 = load %Program.560549*, %Program.560549** %.25, align 8
  %.29 = tail call %Type.560381* @get_class_prop_type_with_name(%Program.560549* %.26, %ObjectType.560407* %.4, %string.560217* %.5)
  %.34 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.14, align 8
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.34, i64 0, i32 9
  %.36 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.35, align 8
  %.38 = tail call %LLVMTypeRef.560566* %.36(%CodeGen.560615* %.1, %Type.560381* %.29, i1 true)
  %.40 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.38, %LLVMValueRef.560567* %.22, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.40
}

define %LLVMValueRef.560567* @CodeGen_codegen_builtin_array(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %GenericType.560405* nocapture readonly %.3, %ArrayExpression.560423* %.4) {
.6:
  %.12 = getelementptr inbounds %GenericType.560405, %GenericType.560405* %.3, i64 0, i32 4
  %0 = bitcast %Type.560381** %.12 to %ObjectType.560407**
  %.135 = load %ObjectType.560407*, %ObjectType.560407** %0, align 8
  %.17 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.18 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.19 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.18, i64 0, i32 9
  %.20 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.19, align 8
  %.22 = bitcast %ObjectType.560407* %.135 to %Type.560381*
  %.23 = tail call %LLVMTypeRef.560566* %.20(%CodeGen.560615* %.1, %Type.560381* %.22, i1 false)
  %.27 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.28 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.27, i64 0, i32 9
  %.29 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.28, align 8
  %.31 = getelementptr inbounds %GenericType.560405, %GenericType.560405* %.3, i64 0, i32 3
  %.32 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.32, i64 0, i32 0
  %.34 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.34, i64 0, i32 5
  %.36 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.35, align 8
  %.37 = tail call %Type.560381* %.36(%"Array<Type>.560389"* %.32, i64 0)
  %.38 = tail call %LLVMTypeRef.560566* %.29(%CodeGen.560615* %.1, %Type.560381* %.37, i1 true)
  %.42 = tail call %LLVMValueRef.560567* @LLVMBuildMalloc(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.45 = getelementptr inbounds %ArrayExpression.560423, %ArrayExpression.560423* %.4, i64 0, i32 5
  %.46 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.45, align 8
  %.47 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.46, i64 0, i32 2
  %.48 = load i64, i64* %.47, align 8
  %.52 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.53 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.52, i64 0, i32 8
  %.54 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.53, align 8
  %1 = icmp sgt i64 %.48, 1
  %.48. = select i1 %1, i64 %.48, i64 1
  %.62 = tail call %LLVMValueRef.560567* %.54(%CodeGen.560615* %.1, i64 %.48.)
  %.66 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.67 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.66, i64 0, i32 8
  %.68 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.67, align 8
  %.70 = tail call %LLVMValueRef.560567* %.68(%CodeGen.560615* %.1, i64 %.48)
  %.74 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.75 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.74, i64 0, i32 57
  %.76 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)** %.75, align 8
  %.82 = tail call %LLVMValueRef.560567* @LLVMSizeOf(%LLVMTypeRef.560566* %.38)
  %.83 = tail call %LLVMValueRef.560567* @LLVMConstMul(%LLVMValueRef.560567* %.62, %LLVMValueRef.560567* %.82)
  %.85 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.86 = bitcast i8* %.85 to %LLVMValueRef.560567**
  store %LLVMValueRef.560567* %.42, %LLVMValueRef.560567** %.86, align 8
  %.89 = getelementptr inbounds i8, i8* %.85, i64 8
  %2 = bitcast i8* %.89 to %LLVMValueRef.560567**
  store %LLVMValueRef.560567* %.83, %LLVMValueRef.560567** %2, align 8
  %.91 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.92 = bitcast i8* %.91 to %"Array<LLVMValueRef>.560613"*
  %.93 = bitcast i8* %.91 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.93, align 8
  %.95 = getelementptr inbounds i8, i8* %.91, i64 8
  %3 = bitcast i8* %.95 to i8**
  store i8* %.85, i8** %3, align 8
  %.97 = getelementptr inbounds i8, i8* %.91, i64 16
  %4 = bitcast i8* %.97 to i64*
  store i64 2, i64* %4, align 8
  %.99 = getelementptr inbounds i8, i8* %.91, i64 24
  %5 = bitcast i8* %.99 to i64*
  store i64 16, i64* %5, align 8
  tail call void %.76(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ObjectType.560407* %.135, %"Array<LLVMValueRef>.560613"* %.92)
  %.104 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.105 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.104, i64 0, i32 34
  %.106 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)** %.105, align 8
  %.110 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.111 = bitcast i8* %.110 to %string.560217*
  %.111.repack = bitcast i8* %.110 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.111.repack, align 8
  %.111.repack6 = getelementptr inbounds i8, i8* %.110, i64 8
  %6 = bitcast i8* %.111.repack6 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.356, i64 0, i64 0), i8** %6, align 8
  %.111.repack7 = getelementptr inbounds i8, i8* %.110, i64 16
  %7 = bitcast i8* %.111.repack7 to i64*
  store i64 6, i64* %7, align 8
  %.111.repack8 = getelementptr inbounds i8, i8* %.110, i64 24
  %8 = bitcast i8* %.111.repack8 to i64*
  store i64 6, i64* %8, align 8
  %.113 = tail call %LLVMValueRef.560567* %.106(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.42, %ObjectType.560407* %.135, %string.560217* %.111)
  %.117 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.38, i64 0)
  %.119 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.117, %LLVMValueRef.560567* %.113, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.123 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.124 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.123, i64 0, i32 23
  %.125 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ArrayExpression.560423*)** %.124, align 8
  %.129 = tail call %LLVMValueRef.560567* %.125(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.119, %ArrayExpression.560423* %.4)
  %.132 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.17, align 8
  %.133 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.132, i64 0, i32 34
  %.134 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)** %.133, align 8
  %.138 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.560217*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.139.repack, align 8
  %.139.repack9 = getelementptr inbounds i8, i8* %.138, i64 8
  %9 = bitcast i8* %.139.repack9 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.357, i64 0, i64 0), i8** %9, align 8
  %.139.repack10 = getelementptr inbounds i8, i8* %.138, i64 16
  %10 = bitcast i8* %.139.repack10 to i64*
  store i64 6, i64* %10, align 8
  %.139.repack11 = getelementptr inbounds i8, i8* %.138, i64 24
  %11 = bitcast i8* %.139.repack11 to i64*
  store i64 6, i64* %11, align 8
  %.141 = tail call %LLVMValueRef.560567* %.134(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.42, %ObjectType.560407* %.135, %string.560217* %.139)
  %.146 = tail call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.70, %LLVMValueRef.560567* %.141)
  ret %LLVMValueRef.560567* %.42
}

define %LLVMValueRef.560567* @CodeGen_store_expr_to_mem(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %Expression.560401* %.4) {
.6:
  %.13 = getelementptr inbounds %Expression.560401, %Expression.560401* %.4, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  %.15 = icmp eq i64 %.14, 6
  %.17 = getelementptr inbounds %Expression.560401, %Expression.560401* %.4, i64 0, i32 2
  %.18 = load i1, i1* %.17, align 1
  %.19 = xor i1 %.18, true
  %.20 = and i1 %.15, %.19
  br i1 %.20, label %.6.if, label %.6.else

.6.if:                                            ; preds = %.6
  %.26 = getelementptr inbounds %Expression.560401, %Expression.560401* %.4, i64 0, i32 4
  %0 = bitcast %Type.560381** %.26 to i64*
  %.271 = load i64, i64* %0, align 8
  %.29.cast = inttoptr i64 %.271 to %Type.560381*
  %.30 = getelementptr inbounds %Type.560381, %Type.560381* %.29.cast, i64 0, i32 1
  %.31 = load i64, i64* %.30, align 8
  %.32.not = icmp eq i64 %.31, 20
  %.73 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.74 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.73, align 8
  %1 = bitcast %Expression.560401* %.4 to %ArrayExpression.560423*
  br i1 %.32.not, label %.6.if.endif, label %.6.if.if

.6.else:                                          ; preds = %.6
  %.85 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.86 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.85, align 8
  %.87 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.86, i64 0, i32 52
  %.88 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.87, align 8
  %.91 = tail call %LLVMValueRef.560567* %.88(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* nonnull %.4)
  br label %.6.endif

.6.endif:                                         ; preds = %.6.if.endif, %.6.else
  %value.0 = phi %LLVMValueRef.560567* [ %.81, %.6.if.endif ], [ %.91, %.6.else ]
  %.97 = tail call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %value.0, %LLVMValueRef.560567* %.3)
  ret %LLVMValueRef.560567* %value.0

.6.if.if:                                         ; preds = %.6.if
  %.37 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.74, i64 0, i32 8
  %.38 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.37, align 8
  %.39 = tail call %LLVMValueRef.560567* %.38(%CodeGen.560615* nonnull %.1, i64 0)
  %.413.cast = ptrtoint %LLVMValueRef.560567* %.39 to i64
  %args = alloca [2 x %LLVMValueRef.560567*], align 8
  %2 = bitcast [2 x %LLVMValueRef.560567*]* %args to i64*
  store i64 %.413.cast, i64* %2, align 8
  %.45 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %args, i64 0, i64 1
  %3 = bitcast %LLVMValueRef.560567** %.45 to i64*
  store i64 %.413.cast, i64* %3, align 8
  %.49 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.73, align 8
  %.50 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.49, i64 0, i32 9
  %.51 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.50, align 8
  %.53 = tail call %LLVMTypeRef.560566* %.51(%CodeGen.560615* nonnull %.1, %Type.560381* %.29.cast, i1 true)
  %.58 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %args, i64 0, i64 0
  %.60 = call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.53, %LLVMValueRef.560567* %.3, %LLVMValueRef.560567** nonnull %.58, i64 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.64 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.73, align 8
  %.65 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.64, i64 0, i32 23
  %.66 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ArrayExpression.560423*)** %.65, align 8
  %.70 = call %LLVMValueRef.560567* %.66(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.60, %ArrayExpression.560423* %1)
  ret %LLVMValueRef.560567* %.70

.6.if.endif:                                      ; preds = %.6.if
  %4 = inttoptr i64 %.271 to %GenericType.560405*
  %.75 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.74, i64 0, i32 36
  %.76 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %GenericType.560405*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %GenericType.560405*, %ArrayExpression.560423*)** %.75, align 8
  %.81 = tail call %LLVMValueRef.560567* %.76(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %GenericType.560405* %4, %ArrayExpression.560423* %1)
  br label %.6.endif
}

define %LLVMValueRef.560567* @CodeGen_codegen_assignment(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %BinaryExpression.560425* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.11, i64 0, i32 33
  %.13 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.12, align 8
  %.16 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.3, i64 0, i32 5
  %.17 = load %Expression.560401*, %Expression.560401** %.16, align 8
  %.18 = tail call %LLVMValueRef.560567* %.13(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.17)
  %.22 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.22, i64 0, i32 37
  %.24 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)** %.23, align 8
  %.28 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.3, i64 0, i32 7
  %.29 = load %Expression.560401*, %Expression.560401** %.28, align 8
  %.30 = tail call %LLVMValueRef.560567* %.24(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.18, %Expression.560401* %.29)
  ret %LLVMValueRef.560567* %.30
}

define %LLVMValueRef.560567* @CodeGen_codegen_pow_expr(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Type.560381* %.3, %LLVMValueRef.560567* %.4, %LLVMValueRef.560567* %.5) {
.7:
  %args = alloca [2 x %LLVMValueRef.560567*], align 8
  %.15 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %args, i64 0, i64 0
  store %LLVMValueRef.560567* %.4, %LLVMValueRef.560567** %.15, align 8
  %.17 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %args, i64 0, i64 1
  store %LLVMValueRef.560567* %.5, %LLVMValueRef.560567** %.17, align 8
  %.20 = tail call %string.560217* @dump_type(%Type.560381* %.3, i1 true)
  %.21 = getelementptr inbounds %string.560217, %string.560217* %.20, i64 0, i32 0
  %.22 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.21, align 8
  %.23 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.22, i64 0, i32 11
  %.24 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.23, align 8
  %.25 = tail call i8* %.24(%string.560217* %.20)
  %.27 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.358, i64 0, i64 0), i8* %.25)
  %.28 = add i64 %.27, 1
  %.30 = tail call i8* @malloc(i64 %.28)
  %.31 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.358, i64 0, i64 0), i8* %.25)
  %.32 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %string.560217*
  %.34 = bitcast i8* %.32 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.34, align 8
  %.36 = getelementptr inbounds i8, i8* %.32, i64 8
  %0 = bitcast i8* %.36 to i8**
  store i8* %.30, i8** %0, align 8
  %.38 = getelementptr inbounds i8, i8* %.32, i64 16
  %1 = bitcast i8* %.38 to i64*
  store i64 %.27, i64* %1, align 8
  %.40 = getelementptr inbounds i8, i8* %.32, i64 24
  %2 = bitcast i8* %.40 to i64*
  store i64 %.27, i64* %2, align 8
  %.44 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.45 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.44, align 8
  %.46 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.45, i64 0, i32 9
  %.47 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.46, align 8
  %.49 = tail call %LLVMTypeRef.560566* %.47(%CodeGen.560615* %.1, %Type.560381* %.3, i1 true)
  %.52 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.53 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.52, align 8
  %.58 = tail call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.59 = bitcast i8* %.58 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.49, %LLVMTypeRef.560566** %.59, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %3 = bitcast i8* %.62 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.49, %LLVMTypeRef.560566** %3, align 8
  %.64 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %"Array<LLVMTypeRef>.560611"*
  %.66 = bitcast i8* %.64 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.66, align 8
  %.68 = getelementptr inbounds i8, i8* %.64, i64 8
  %4 = bitcast i8* %.68 to i8**
  store i8* %.58, i8** %4, align 8
  %.70 = getelementptr inbounds i8, i8* %.64, i64 16
  %5 = bitcast i8* %.70 to i64*
  store i64 2, i64* %5, align 8
  %.72 = getelementptr inbounds i8, i8* %.64, i64 24
  %6 = bitcast i8* %.72 to i64*
  store i64 16, i64* %6, align 8
  %.75 = tail call %IntrinsicResult.560593* @get_intrinsic(%LLVMModuleRef.560565* %.53, %string.560217* %.33, %"Array<LLVMTypeRef>.560611"* %.65, %LLVMTypeRef.560566* %.49, i1 false)
  %.79 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.75, i64 0, i32 2
  %.80 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.79, align 8
  %.82 = getelementptr inbounds %IntrinsicResult.560593, %IntrinsicResult.560593* %.75, i64 0, i32 1
  %.83 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.82, align 8
  %.86 = call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.80, %LLVMValueRef.560567* %.83, %LLVMValueRef.560567** nonnull %.15, i64 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.86
}

define %LLVMValueRef.560567* @CodeGen_codegen_bin_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %BinaryExpression.560425* %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.3, i64 0, i32 6
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.3, i64 0, i32 5
  %.15 = load %Expression.560401*, %Expression.560401** %.14, align 8
  %.16 = getelementptr inbounds %Expression.560401, %Expression.560401* %.15, i64 0, i32 4
  %.17 = load %Type.560381*, %Type.560381** %.16, align 8
  %.18 = getelementptr inbounds %Type.560381, %Type.560381* %.17, i64 0, i32 1
  %.19 = load i64, i64* %.18, align 8
  %.21 = getelementptr inbounds %BinaryExpression.560425, %BinaryExpression.560425* %.3, i64 0, i32 7
  %.22 = load %Expression.560401*, %Expression.560401** %.21, align 8
  %.23 = getelementptr inbounds %Expression.560401, %Expression.560401* %.22, i64 0, i32 4
  %.24 = load %Type.560381*, %Type.560381** %.23, align 8
  %.25 = getelementptr inbounds %Type.560381, %Type.560381* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp eq i64 %.19, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  switch i64 %.11, label %.5.endif [
    i64 11, label %.5.if.if
    i64 12, label %.5.if.else.if
  ]

.5.endif:                                         ; preds = %.5.if, %.5
  %.52 = icmp eq i64 %.11, 19
  %.55 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.56 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.55, align 8
  br i1 %.52, label %.5.endif.if, label %.5.endif.endif

.5.if.if:                                         ; preds = %.5.if
  %.33 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.34 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.33, align 8
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.34, i64 0, i32 7
  %.36 = load %LLVMValueRef.560567* (%CodeGen.560615*, i1)*, %LLVMValueRef.560567* (%CodeGen.560615*, i1)** %.35, align 8
  %.37 = tail call %LLVMValueRef.560567* %.36(%CodeGen.560615* %.1, i1 false)
  ret %LLVMValueRef.560567* %.37

.5.if.else.if:                                    ; preds = %.5.if
  %.43 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.44 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.43, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.44, i64 0, i32 7
  %.46 = load %LLVMValueRef.560567* (%CodeGen.560615*, i1)*, %LLVMValueRef.560567* (%CodeGen.560615*, i1)** %.45, align 8
  %.47 = tail call %LLVMValueRef.560567* %.46(%CodeGen.560615* %.1, i1 true)
  ret %LLVMValueRef.560567* %.47

.5.endif.if:                                      ; preds = %.5.endif
  %.57 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.56, i64 0, i32 38
  %.58 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)** %.57, align 8
  %.61 = tail call %LLVMValueRef.560567* %.58(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %BinaryExpression.560425* nonnull %.3)
  ret %LLVMValueRef.560567* %.61

.5.endif.endif:                                   ; preds = %.5.endif
  %.66 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.56, i64 0, i32 52
  %.67 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.66, align 8
  %.72 = tail call %LLVMValueRef.560567* %.67(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.15)
  %.76 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.55, align 8
  %.77 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.76, i64 0, i32 52
  %.78 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.77, align 8
  %.82 = load %Expression.560401*, %Expression.560401** %.21, align 8
  %.83 = tail call %LLVMValueRef.560567* %.78(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.82)
  %.87 = load %Expression.560401*, %Expression.560401** %.21, align 8
  %.88 = tail call i1 @is_null(%Expression.560401* %.87)
  %0 = add i64 %.11, -11
  %1 = icmp ult i64 %0, 2
  %.94 = and i1 %1, %.88
  br i1 %.94, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.97 = tail call i1 @LLVMIsConstant(%LLVMValueRef.560567* %.72)
  br i1 %.97, label %.5.endif.endif.if.if, label %.5.endif.endif.if.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.131 = load %Expression.560401*, %Expression.560401** %.14, align 8
  %.132 = getelementptr inbounds %Expression.560401, %Expression.560401* %.131, i64 0, i32 4
  %2 = bitcast %Type.560381** %.132 to i64*
  %.1331 = load i64, i64* %2, align 8
  %.138 = getelementptr inbounds %Expression.560401, %Expression.560401* %.87, i64 0, i32 4
  %.13927 = load %Type.560381*, %Type.560381** %.138, align 8
  %.142 = tail call i1 @is_numeric(%Type.560381* %.13927)
  %.144 = icmp eq i64 %.11, 6
  %.145 = and i1 %.144, %.142
  %3 = inttoptr i64 %.1331 to %Type.560381*
  br i1 %.145, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.101 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.55, align 8
  %.102 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.101, i64 0, i32 7
  %.103 = load %LLVMValueRef.560567* (%CodeGen.560615*, i1)*, %LLVMValueRef.560567* (%CodeGen.560615*, i1)** %.102, align 8
  %.108 = tail call i1 @LLVMIsNull(%LLVMValueRef.560567* %.72)
  %.114 = tail call %LLVMValueRef.560567* %.103(%CodeGen.560615* nonnull %.1, i1 %.108)
  ret %LLVMValueRef.560567* %.114

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.117 = icmp eq i64 %.11, 11
  br i1 %.117, label %true_block.1, label %false_block.1

true_block.1:                                     ; preds = %.5.endif.endif.if.endif
  %.121 = tail call %LLVMValueRef.560567* @LLVMBuildIsNull(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

false_block.1:                                    ; preds = %.5.endif.endif.if.endif
  %.125 = tail call %LLVMValueRef.560567* @LLVMBuildIsNotNull(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

end.1:                                            ; preds = %true_block.18, %false_block.18, %true_block.17, %false_block.17, %true_block.16, %false_block.16, %true_block.15, %false_block.15, %true_block.13, %false_block.13, %true_block.12, %false_block.12, %true_block.11, %false_block.11, %true_block.10, %false_block.10, %true_block.9, %false_block.9, %true_block.8, %false_block.8, %true_block.7, %false_block.7, %true_block.6, %false_block.6, %true_block.5, %false_block.5, %true_block.4, %false_block.4, %true_block.3, %false_block.3, %false_block.1, %true_block.1
  %.127 = phi %LLVMValueRef.560567* [ %.121, %true_block.1 ], [ %.125, %false_block.1 ], [ %.226, %true_block.3 ], [ %.231, %false_block.3 ], [ %.242, %true_block.4 ], [ %.247, %false_block.4 ], [ %.258, %true_block.5 ], [ %.263, %false_block.5 ], [ %.298, %true_block.6 ], [ %.304, %false_block.6 ], [ %.323, %true_block.7 ], [ %.329, %false_block.7 ], [ %.340, %true_block.8 ], [ %.345, %false_block.8 ], [ %.356, %true_block.9 ], [ %.361, %false_block.9 ], [ %.372, %true_block.10 ], [ %.377, %false_block.10 ], [ %.388, %true_block.11 ], [ %.393, %false_block.11 ], [ %.404, %true_block.12 ], [ %.409, %false_block.12 ], [ %.483, %true_block.13 ], [ %.489, %false_block.13 ], [ %.511, %true_block.15 ], [ %.517, %false_block.15 ], [ %.541, %true_block.16 ], [ %.546, %false_block.16 ], [ %.557, %true_block.17 ], [ %.562, %false_block.17 ], [ %.573, %true_block.18 ], [ %.578, %false_block.18 ]
  ret %LLVMValueRef.560567* %.127

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.149 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.55, align 8
  %.150 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.149, i64 0, i32 39
  %.151 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Type.560381*, %LLVMValueRef.560567*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Type.560381*, %LLVMValueRef.560567*, %LLVMValueRef.560567*)** %.150, align 8
  %.156 = tail call %LLVMValueRef.560567* %.151(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Type.560381* %.13927, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  ret %LLVMValueRef.560567* %.156

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.159 = tail call i1 @is_pointer(%Type.560381* %3)
  br i1 %.159, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.162 = icmp eq i64 %.11, 1
  br i1 %.162, label %end.2, label %false_block.2

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.194 = tail call i1 @LLVMIsConstant(%LLVMValueRef.560567* %.72)
  %.196 = tail call i1 @LLVMIsConstant(%LLVMValueRef.560567* %.83)
  %.197 = and i1 %.194, %.196
  %.200 = tail call i1 @is_int(%Type.560381* %.13927)
  %.202 = tail call i1 @is_object(%Type.560381* %3)
  %.204 = tail call i1 @is_object(%Type.560381* %.13927)
  %.205 = and i1 %.202, %.204
  %.211 = and i1 %1, %.205
  %.212 = or i1 %.200, %.211
  %.214 = getelementptr inbounds %Type.560381, %Type.560381* %.13927, i64 0, i32 1
  %.215 = load i64, i64* %.214, align 8
  %.216 = icmp eq i64 %.215, 14
  %.217 = or i1 %.216, %.212
  br i1 %.217, label %.5.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.else

false_block.2:                                    ; preds = %.5.endif.endif.endif.endif.if
  %.168 = tail call %LLVMValueRef.560567* @CodeGen_neg_int(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.83)
  br label %end.2

end.2:                                            ; preds = %.5.endif.endif.endif.endif.if, %false_block.2
  %.170 = phi %LLVMValueRef.560567* [ %.168, %false_block.2 ], [ %.83, %.5.endif.endif.endif.endif.if ]
  %4 = inttoptr i64 %.1331 to %PointerType.560385*
  %indices = alloca [1 x %LLVMValueRef.560567*], align 8
  %.171 = getelementptr inbounds [1 x %LLVMValueRef.560567*], [1 x %LLVMValueRef.560567*]* %indices, i64 0, i64 0
  store %LLVMValueRef.560567* %.170, %LLVMValueRef.560567** %.171, align 8
  %.175 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.55, align 8
  %.176 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.175, i64 0, i32 9
  %.177 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.176, align 8
  %.180 = getelementptr inbounds %PointerType.560385, %PointerType.560385* %4, i64 0, i32 2
  %.181 = load %Type.560381*, %Type.560381** %.180, align 8
  %.182 = tail call %LLVMTypeRef.560566* %.177(%CodeGen.560615* nonnull %.1, %Type.560381* %.181, i1 true)
  %.189 = call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.182, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567** nonnull %.171, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.189

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  switch i64 %.11, label %.5.endif.endif.endif.endi...else [
    i64 1, label %.5.endif.endif.endif.endif.endif.if.if
    i64 2, label %.5.endif.endif.endif.endif.endif.if.else.if
    i64 3, label %.5.endif.endif.endif.endif.endif.if.else.else.if
    i64 4, label %.5.endif.endif.endif.endif.endif.if.else.else.else.if
    i64 5, label %.5.endif.endif.endif.endi...if
  ]

.5.endif.endif.endif.endif.endif.else:            ; preds = %.5.endif.endif.endif.endif.endif
  %.426 = tail call i1 @is_float(%Type.560381* nonnull %.13927)
  br i1 %.426, label %.5.endif.endif.endif.endif.endif.else.if, label %.5.endif.endif.endif.endif.endif.else.else

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif.else.else.if, %.5.endif.endif.endif.endif.endif.else.else, %.5.endif.endif.endif.endi...else.2.else.else, %.5.endif.endif.endif.endi...else.else.else
  %.588 = getelementptr inbounds %Type.560381, %Type.560381* %3, i64 0, i32 1
  %.589 = load i64, i64* %.588, align 8
  %.591 = tail call %string.560217* @dump_bin_op(i64 %.11)
  %.594 = load i64, i64* %.214, align 8
  %.595 = getelementptr inbounds %string.560217, %string.560217* %.591, i64 0, i32 0
  %.596 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.595, align 8
  %.597 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.596, i64 0, i32 11
  %.598 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.597, align 8
  %.599 = tail call i8* %.598(%string.560217* %.591)
  %.601 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.359, i64 0, i64 0), i64 %.589, i8* %.599, i64 %.594)
  %.602 = add i64 %.601, 1
  %.604 = tail call i8* @malloc(i64 %.602)
  %.605 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.604, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.359, i64 0, i64 0), i64 %.589, i8* %.599, i64 %.594)
  %.606 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.607 = bitcast i8* %.606 to %string.560217*
  %.608 = bitcast i8* %.606 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.608, align 8
  %.610 = getelementptr inbounds i8, i8* %.606, i64 8
  %5 = bitcast i8* %.610 to i8**
  store i8* %.604, i8** %5, align 8
  %.612 = getelementptr inbounds i8, i8* %.606, i64 16
  %6 = bitcast i8* %.612 to i64*
  store i64 %.601, i64* %6, align 8
  %.614 = getelementptr inbounds i8, i8* %.606, i64 24
  %7 = bitcast i8* %.614 to i64*
  store i64 %.601, i64* %7, align 8
  tail call void @panic(%string.560217* %.607)
  ret %LLVMValueRef.560567* null

.5.endif.endif.endif.endif.endif.if.if:           ; preds = %.5.endif.endif.endif.endif.endif.if
  br i1 %.197, label %true_block.3, label %false_block.3

true_block.3:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.if
  %.226 = tail call %LLVMValueRef.560567* @LLVMConstAdd(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.3:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.if
  %.231 = tail call %LLVMValueRef.560567* @LLVMBuildAdd(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.if:      ; preds = %.5.endif.endif.endif.endif.endif.if
  br i1 %.197, label %true_block.4, label %false_block.4

true_block.4:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.else.if
  %.242 = tail call %LLVMValueRef.560567* @LLVMConstSub(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.4:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.else.if
  %.247 = tail call %LLVMValueRef.560567* @LLVMBuildSub(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.if
  br i1 %.197, label %true_block.5, label %false_block.5

true_block.5:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.else.else.if
  %.258 = tail call %LLVMValueRef.560567* @LLVMConstMul(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.5:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.else.else.if
  %.263 = tail call %LLVMValueRef.560567* @LLVMBuildMul(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.if
  %.273 = tail call %LLVMValueRef.560567* @LLVMBuildSDiv(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.273

.5.endif.endif.endif.endi...if:                   ; preds = %.5.endif.endif.endif.endif.endif.if
  %.281 = tail call %LLVMValueRef.560567* @LLVMBuildSRem(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.281

.5.endif.endif.endif.endi...else:                 ; preds = %.5.endif.endif.endif.endif.endif.if
  %.11.off4 = add i64 %.11, -7
  %8 = icmp ult i64 %.11.off4, 4
  br i1 %8, label %.5.endif.endif.endif.endi...else.if, label %.5.endif.endif.endif.endi...else.else

.5.endif.endif.endif.endi...else.if:              ; preds = %.5.endif.endif.endif.endi...else
  %.291 = add nuw nsw i64 %.11, 31
  br i1 %.197, label %true_block.6, label %false_block.6

.5.endif.endif.endif.endi...else.else:            ; preds = %.5.endif.endif.endif.endi...else
  br i1 %1, label %.5.endif.endif.endif.endi...else.else.if, label %.5.endif.endif.endif.endi...else.else.else

true_block.6:                                     ; preds = %.5.endif.endif.endif.endi...else.if
  %.298 = tail call %LLVMValueRef.560567* @LLVMConstICmp(i64 %.291, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.6:                                    ; preds = %.5.endif.endif.endif.endi...else.if
  %.304 = tail call %LLVMValueRef.560567* @LLVMBuildICmp(%LLVMBuilderRef.560572* %.2, i64 %.291, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.if:         ; preds = %.5.endif.endif.endif.endi...else.else
  %.316 = add nuw nsw i64 %.11, 21
  br i1 %.197, label %true_block.7, label %false_block.7

.5.endif.endif.endif.endi...else.else.else:       ; preds = %.5.endif.endif.endif.endi...else.else
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif.endif [
    i64 13, label %.5.endif.endif.endif.endi...else.else.else.if
    i64 14, label %.5.endif.endif.endif.endi...else.else.else.else.if
    i64 15, label %.5.endif.endif.endif.endi...if.1
    i64 16, label %.5.endif.endif.endif.endi...else.1.if
    i64 17, label %.5.endif.endif.endif.endi...else.1.else.if
  ]

true_block.7:                                     ; preds = %.5.endif.endif.endif.endi...else.else.if
  %.323 = tail call %LLVMValueRef.560567* @LLVMConstICmp(i64 %.316, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.7:                                    ; preds = %.5.endif.endif.endif.endi...else.else.if
  %.329 = tail call %LLVMValueRef.560567* @LLVMBuildICmp(%LLVMBuilderRef.560572* %.2, i64 %.316, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.else.if:    ; preds = %.5.endif.endif.endif.endi...else.else.else
  br i1 %.197, label %true_block.8, label %false_block.8

true_block.8:                                     ; preds = %.5.endif.endif.endif.endi...else.else.else.if
  %.340 = tail call %LLVMValueRef.560567* @LLVMConstShl(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.8:                                    ; preds = %.5.endif.endif.endif.endi...else.else.else.if
  %.345 = tail call %LLVMValueRef.560567* @LLVMBuildShl(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.else.else.if: ; preds = %.5.endif.endif.endif.endi...else.else.else
  br i1 %.197, label %true_block.9, label %false_block.9

true_block.9:                                     ; preds = %.5.endif.endif.endif.endi...else.else.else.else.if
  %.356 = tail call %LLVMValueRef.560567* @LLVMConstAShr(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.9:                                    ; preds = %.5.endif.endif.endif.endi...else.else.else.else.if
  %.361 = tail call %LLVMValueRef.560567* @LLVMBuildAShr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5.endif.endif.endif.endi...else.else.else
  br i1 %.197, label %true_block.10, label %false_block.10

true_block.10:                                    ; preds = %.5.endif.endif.endif.endi...if.1
  %.372 = tail call %LLVMValueRef.560567* @LLVMConstOr(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.10:                                   ; preds = %.5.endif.endif.endif.endi...if.1
  %.377 = tail call %LLVMValueRef.560567* @LLVMBuildOr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.1.if:            ; preds = %.5.endif.endif.endif.endi...else.else.else
  br i1 %.197, label %true_block.11, label %false_block.11

true_block.11:                                    ; preds = %.5.endif.endif.endif.endi...else.1.if
  %.388 = tail call %LLVMValueRef.560567* @LLVMConstAnd(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.11:                                   ; preds = %.5.endif.endif.endif.endi...else.1.if
  %.393 = tail call %LLVMValueRef.560567* @LLVMBuildAnd(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.1.else.if:       ; preds = %.5.endif.endif.endif.endi...else.else.else
  br i1 %.197, label %true_block.12, label %false_block.12

true_block.12:                                    ; preds = %.5.endif.endif.endif.endi...else.1.else.if
  %.404 = tail call %LLVMValueRef.560567* @LLVMConstXor(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.12:                                   ; preds = %.5.endif.endif.endif.endi...else.1.else.if
  %.409 = tail call %LLVMValueRef.560567* @LLVMBuildXor(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.if:         ; preds = %.5.endif.endif.endif.endif.endif.else
  switch i64 %.11, label %.5.endif.endif.endif.endi...else.2.else [
    i64 1, label %.5.endif.endif.endif.endif.endif.else.if.if
    i64 2, label %.5.endif.endif.endif.endif.endif.else.if.else.if
    i64 3, label %.5.endif.endif.endif.endif.endif.else.if.else.else.if
    i64 4, label %.5.endif.endif.endif.endi...if.2
    i64 5, label %.5.endif.endif.endif.endi...else.2.if
  ]

.5.endif.endif.endif.endif.endif.else.else:       ; preds = %.5.endif.endif.endif.endif.endif.else
  %.529 = tail call i1 @is_bool(%Type.560381* nonnull %.13927)
  br i1 %.529, label %.5.endif.endif.endif.endif.endif.else.else.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.else.if.if:      ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.434 = tail call %LLVMValueRef.560567* @LLVMBuildFAdd(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.434

.5.endif.endif.endif.endif.endif.else.if.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.442 = tail call %LLVMValueRef.560567* @LLVMBuildFSub(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.442

.5.endif.endif.endif.endif.endif.else.if.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.450 = tail call %LLVMValueRef.560567* @LLVMBuildFMul(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.450

.5.endif.endif.endif.endi...if.2:                 ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.458 = tail call %LLVMValueRef.560567* @LLVMBuildFDiv(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.458

.5.endif.endif.endif.endi...else.2.if:            ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.466 = tail call %LLVMValueRef.560567* @LLVMBuildFRem(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.466

.5.endif.endif.endif.endi...else.2.else:          ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.11.off = add i64 %.11, -7
  %9 = icmp ult i64 %.11.off, 4
  br i1 %9, label %.5.endif.endif.endif.endi...else.2.else.if, label %.5.endif.endif.endif.endi...else.2.else.else

.5.endif.endif.endif.endi...else.2.else.if:       ; preds = %.5.endif.endif.endif.endi...else.2.else
  %.476 = add nsw i64 %.11, -5
  br i1 %.197, label %true_block.13, label %false_block.13

.5.endif.endif.endif.endi...else.2.else.else:     ; preds = %.5.endif.endif.endif.endi...else.2.else
  br i1 %1, label %.5.endif.endif.endif.endi...else.2.else.else.if, label %.5.endif.endif.endif.endif.endif.endif

true_block.13:                                    ; preds = %.5.endif.endif.endif.endi...else.2.else.if
  %.483 = tail call %LLVMValueRef.560567* @LLVMConstFCmp(i64 %.476, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.13:                                   ; preds = %.5.endif.endif.endif.endi...else.2.else.if
  %.489 = tail call %LLVMValueRef.560567* @LLVMBuildFCmp(%LLVMBuilderRef.560572* %.2, i64 %.476, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.2.else.else.if:  ; preds = %.5.endif.endif.endif.endi...else.2.else.else
  %.500 = icmp eq i64 %.11, 12
  %. = select i1 %.500, i64 6, i64 1
  br i1 %.197, label %true_block.15, label %false_block.15

true_block.15:                                    ; preds = %.5.endif.endif.endif.endi...else.2.else.else.if
  %.511 = tail call %LLVMValueRef.560567* @LLVMConstFCmp(i64 %., %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.15:                                   ; preds = %.5.endif.endif.endif.endi...else.2.else.else.if
  %.517 = tail call %LLVMValueRef.560567* @LLVMBuildFCmp(%LLVMBuilderRef.560572* %.2, i64 %., %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.else.if:    ; preds = %.5.endif.endif.endif.endif.endif.else.else
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif.endif [
    i64 16, label %.5.endif.endif.endif.endif.endif.else.else.if.if
    i64 11, label %.5.endif.endif.endif.endif.endif.else.else.if.if
    i64 15, label %.5.endif.endif.endif.endif.endif.else.else.if.else.if
    i64 12, label %.5.endif.endif.endif.endi...if.3
  ]

.5.endif.endif.endif.endif.endif.else.else.if.if: ; preds = %.5.endif.endif.endif.endif.endif.else.else.if, %.5.endif.endif.endif.endif.endif.else.else.if
  br i1 %.197, label %true_block.16, label %false_block.16

true_block.16:                                    ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.if
  %.541 = tail call %LLVMValueRef.560567* @LLVMConstAnd(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.16:                                   ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.if
  %.546 = tail call %LLVMValueRef.560567* @LLVMBuildAnd(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.else.if.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.else.if
  br i1 %.197, label %true_block.17, label %false_block.17

true_block.17:                                    ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  %.557 = tail call %LLVMValueRef.560567* @LLVMConstOr(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.17:                                   ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  %.562 = tail call %LLVMValueRef.560567* @LLVMBuildOr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...if.3:                 ; preds = %.5.endif.endif.endif.endif.endif.else.else.if
  br i1 %.197, label %true_block.18, label %false_block.18

true_block.18:                                    ; preds = %.5.endif.endif.endif.endi...if.3
  %.573 = tail call %LLVMValueRef.560567* @LLVMConstXor(%LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83)
  br label %end.1

false_block.18:                                   ; preds = %.5.endif.endif.endif.endi...if.3
  %.578 = tail call %LLVMValueRef.560567* @LLVMBuildXor(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %LLVMValueRef.560567* %.83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1
}

define %LLVMValueRef.560567* @CodeGen_codegen_typecast_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %TypeCastExpression.560431* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeCastExpression.560431, %TypeCastExpression.560431* %.3, i64 0, i32 5
  %.11 = load %Expression.560401*, %Expression.560401** %.10, align 8
  %.14 = getelementptr inbounds %TypeCastExpression.560431, %TypeCastExpression.560431* %.3, i64 0, i32 4
  %.15 = load %Type.560381*, %Type.560381** %.14, align 8
  %.18 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.19, i64 0, i32 52
  %.21 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.20, align 8
  %.24 = tail call %LLVMValueRef.560567* %.21(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.11)
  %.28 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.29 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.28, i64 0, i32 9
  %.30 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.29, align 8
  %.32 = tail call %LLVMTypeRef.560566* %.30(%CodeGen.560615* %.1, %Type.560381* %.15, i1 true)
  %.35 = tail call i1 @LLVMIsConstant(%LLVMValueRef.560567* %.24)
  %.38 = tail call i1 @is_bool(%Type.560381* %.15)
  br i1 %.38, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  br i1 %.35, label %true_block, label %false_block

.5.endif:                                         ; preds = %.5
  %.59 = getelementptr inbounds %Expression.560401, %Expression.560401* %.11, i64 0, i32 4
  %.60 = load %Type.560381*, %Type.560381** %.59, align 8
  %.61 = tail call i1 @is_int(%Type.560381* %.60)
  %.63 = tail call i1 @is_float(%Type.560381* %.15)
  %.64 = and i1 %.61, %.63
  br i1 %.64, label %.5.endif.if, label %.5.endif.else

true_block:                                       ; preds = %.5.if
  %.44 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.44, i64 0, i32 7
  %.46 = load %LLVMValueRef.560567* (%CodeGen.560615*, i1)*, %LLVMValueRef.560567* (%CodeGen.560615*, i1)** %.45, align 8
  %.48 = tail call i1 @LLVMIsNull(%LLVMValueRef.560567* %.24)
  %.49 = xor i1 %.48, true
  %.50 = tail call %LLVMValueRef.560567* %.46(%CodeGen.560615* nonnull %.1, i1 %.49)
  br label %end

false_block:                                      ; preds = %.5.if
  %.54 = tail call %LLVMValueRef.560567* @LLVMBuildIsNotNull(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end

end:                                              ; preds = %true_block.5, %false_block.5, %true_block.4, %false_block.4, %true_block.3, %false_block.3, %true_block.2, %false_block.2, %true_block.1, %false_block.1, %false_block, %true_block
  %.56 = phi %LLVMValueRef.560567* [ %.50, %true_block ], [ %.54, %false_block ], [ %.70, %true_block.1 ], [ %.75, %false_block.1 ], [ %.91, %true_block.2 ], [ %.96, %false_block.2 ], [ %.112, %true_block.3 ], [ %.117, %false_block.3 ], [ %.133, %true_block.4 ], [ %.138, %false_block.4 ], [ %.149, %true_block.5 ], [ %.154, %false_block.5 ]
  ret %LLVMValueRef.560567* %.56

.5.endif.if:                                      ; preds = %.5.endif
  br i1 %.35, label %true_block.1, label %false_block.1

.5.endif.else:                                    ; preds = %.5.endif
  %.82 = tail call i1 @is_float(%Type.560381* %.60)
  %.84 = tail call i1 @is_int(%Type.560381* %.15)
  %.85 = and i1 %.82, %.84
  br i1 %.85, label %.5.endif.else.if, label %.5.endif.else.else

true_block.1:                                     ; preds = %.5.endif.if
  %.70 = tail call %LLVMValueRef.560567* @LLVMConstSIToFP(%LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32)
  br label %end

false_block.1:                                    ; preds = %.5.endif.if
  %.75 = tail call %LLVMValueRef.560567* @LLVMBuildSIToFP(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end

.5.endif.else.if:                                 ; preds = %.5.endif.else
  br i1 %.35, label %true_block.2, label %false_block.2

.5.endif.else.else:                               ; preds = %.5.endif.else
  %.106 = and i1 %.61, %.84
  br i1 %.106, label %.5.endif.else.else.if, label %.5.endif.else.else.else

true_block.2:                                     ; preds = %.5.endif.else.if
  %.91 = tail call %LLVMValueRef.560567* @LLVMConstFPToSI(%LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32)
  br label %end

false_block.2:                                    ; preds = %.5.endif.else.if
  %.96 = tail call %LLVMValueRef.560567* @LLVMBuildFPToSI(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end

.5.endif.else.else.if:                            ; preds = %.5.endif.else.else
  br i1 %.35, label %true_block.3, label %false_block.3

.5.endif.else.else.else:                          ; preds = %.5.endif.else.else
  %.127 = and i1 %.63, %.82
  br i1 %.127, label %.5.endif.else.else.else.if, label %.5.endif.else.else.else.endif

true_block.3:                                     ; preds = %.5.endif.else.else.if
  %.112 = tail call %LLVMValueRef.560567* @LLVMConstIntCast(%LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32, i1 true)
  br label %end

false_block.3:                                    ; preds = %.5.endif.else.else.if
  %.117 = tail call %LLVMValueRef.560567* @LLVMBuildIntCast2(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32, i1 true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end

.5.endif.else.else.else.if:                       ; preds = %.5.endif.else.else.else
  br i1 %.35, label %true_block.4, label %false_block.4

.5.endif.else.else.else.endif:                    ; preds = %.5.endif.else.else.else
  br i1 %.35, label %true_block.5, label %false_block.5

true_block.4:                                     ; preds = %.5.endif.else.else.else.if
  %.133 = tail call %LLVMValueRef.560567* @LLVMConstFPCast(%LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32)
  br label %end

false_block.4:                                    ; preds = %.5.endif.else.else.else.if
  %.138 = tail call %LLVMValueRef.560567* @LLVMBuildFPCast(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end

true_block.5:                                     ; preds = %.5.endif.else.else.else.endif
  %.149 = tail call %LLVMValueRef.560567* @LLVMConstBitCast(%LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32)
  br label %end

false_block.5:                                    ; preds = %.5.endif.else.else.else.endif
  %.154 = tail call %LLVMValueRef.560567* @LLVMBuildBitCast(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, %LLVMTypeRef.560566* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end
}

define %LLVMValueRef.560567* @CodeGen_codegen_unary_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %UnaryExpression.560427* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %UnaryExpression.560427, %UnaryExpression.560427* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %UnaryExpression.560427, %UnaryExpression.560427* %.3, i64 0, i32 6
  %.15 = load %Expression.560401*, %Expression.560401** %.14, align 8
  %.18 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.19, i64 0, i32 52
  %.21 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.20, align 8
  %.24 = tail call %LLVMValueRef.560567* %.21(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.15)
  switch i64 %.11, label %end [
    i64 5, label %.5.if
    i64 6, label %.5.endif.if
    i64 7, label %.5.endif.endif.if
    i64 4, label %.5.endif.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.if
    i64 1, label %.5.endif.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.30 = getelementptr inbounds %Expression.560401, %Expression.560401* %.15, i64 0, i32 4
  %.31 = load %Type.560381*, %Type.560381** %.30, align 8
  %.32 = tail call i1 @is_int(%Type.560381* %.31)
  br i1 %.32, label %.5.if.if, label %.5.if.else

.5.if.if:                                         ; preds = %.5.if
  %.36 = tail call %LLVMValueRef.560567* @CodeGen_neg_int(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24)
  ret %LLVMValueRef.560567* %.36

.5.if.else:                                       ; preds = %.5.if
  %.41 = tail call i1 @is_float(%Type.560381* %.31)
  br i1 %.41, label %.5.if.else.if, label %end

.5.if.else.if:                                    ; preds = %.5.if.else
  %.45 = tail call %LLVMValueRef.560567* @LLVMBuildFNeg(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.45

.5.endif.if:                                      ; preds = %.5
  %.53 = tail call i1 @LLVMIsConstant(%LLVMValueRef.560567* %.24)
  br i1 %.53, label %true_block, label %false_block

true_block:                                       ; preds = %.5.endif.if
  %.56 = tail call %LLVMValueRef.560567* @LLVMConstNot(%LLVMValueRef.560567* %.24)
  br label %end

false_block:                                      ; preds = %.5.endif.if
  %.60 = tail call %LLVMValueRef.560567* @LLVMBuildNot(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end

end:                                              ; preds = %.5.endif.endif.if, %.5.if.else, %.5, %end.1.endif, %false_block, %true_block
  %.62 = phi %LLVMValueRef.560567* [ %.56, %true_block ], [ %.60, %false_block ], [ %.184, %end.1.endif ], [ %.24, %.5 ], [ %.24, %.5.if.else ], [ %.80, %.5.endif.endif.if ]
  ret %LLVMValueRef.560567* %.62

.5.endif.endif.if:                                ; preds = %.5, %.5, %.5, %.5, %.5
  %.75 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.76 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.75, i64 0, i32 33
  %.77 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.76, align 8
  %.80 = tail call %LLVMValueRef.560567* %.77(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.15)
  %.83 = icmp eq i64 %.11, 7
  br i1 %.83, label %end, label %.5.endif.endif.if.endif

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.89 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.89, i64 0, i32 9
  %.91 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.90, align 8
  %.93 = getelementptr inbounds %Expression.560401, %Expression.560401* %.15, i64 0, i32 4
  %.94 = load %Type.560381*, %Type.560381** %.93, align 8
  %.95 = tail call %LLVMTypeRef.560566* %.91(%CodeGen.560615* nonnull %.1, %Type.560381* %.94, i1 true)
  %0 = and i64 %.11, -3
  %1 = icmp eq i64 %0, 1
  %. = select i1 %1, i64 1, i64 -1
  %.111 = load %Type.560381*, %Type.560381** %.93, align 8
  %.112 = tail call i1 @is_pointer(%Type.560381* %.111)
  br i1 %.112, label %end.1.if, label %end.1.else

end.1.if:                                         ; preds = %.5.endif.endif.if.endif
  %.116 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.117 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.116, i64 0, i32 9
  %.118 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.117, align 8
  %.123 = getelementptr inbounds %Type.560381, %Type.560381* %.111, i64 1
  %2 = bitcast %Type.560381* %.123 to %Type.560381**
  %.124 = load %Type.560381*, %Type.560381** %2, align 8
  %.125 = tail call %LLVMTypeRef.560566* %.118(%CodeGen.560615* nonnull %.1, %Type.560381* %.124, i1 true)
  %.129 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.18, align 8
  %.130 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.129, i64 0, i32 8
  %.131 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.130, align 8
  %.133 = tail call %LLVMValueRef.560567* %.131(%CodeGen.560615* nonnull %.1, i64 %.)
  %indices = alloca [1 x %LLVMValueRef.560567*], align 8
  %.134 = getelementptr inbounds [1 x %LLVMValueRef.560567*], [1 x %LLVMValueRef.560567*]* %indices, i64 0, i64 0
  store %LLVMValueRef.560567* %.133, %LLVMValueRef.560567** %.134, align 8
  %.141 = call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.125, %LLVMValueRef.560567* %.24, %LLVMValueRef.560567** nonnull %.134, i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.360, i64 0, i64 0))
  br label %end.1.endif

end.1.else:                                       ; preds = %.5.endif.endif.if.endif
  %.147 = tail call i1 @is_numeric(%Type.560381* %.111)
  br i1 %.147, label %end.1.else.if, label %end.1.endif

end.1.endif:                                      ; preds = %end.1.else, %end.2, %end.1.if
  %.174 = phi %LLVMValueRef.560567* [ null, %end.1.else ], [ %.169, %end.2 ], [ %.141, %end.1.if ]
  %.176 = call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.174, %LLVMValueRef.560567* %.80)
  %.178 = icmp sgt i64 %.11, 1
  %.184 = select i1 %.178, %LLVMValueRef.560567* %.24, %LLVMValueRef.560567* %.174
  br label %end

end.1.else.if:                                    ; preds = %end.1.else
  %.152 = tail call i1 @is_int(%Type.560381* %.111)
  br i1 %.152, label %true_block.2, label %false_block.2

true_block.2:                                     ; preds = %end.1.else.if
  %.156 = tail call %LLVMValueRef.560567* @LLVMConstInt(%LLVMTypeRef.560566* %.95, i64 %., i1 false)
  br label %end.2

false_block.2:                                    ; preds = %end.1.else.if
  %.160 = sitofp i64 %. to double
  %.162 = tail call %LLVMValueRef.560567* @LLVMConstReal(%LLVMTypeRef.560566* %.95, double %.160)
  br label %end.2

end.2:                                            ; preds = %false_block.2, %true_block.2
  %.164 = phi %LLVMValueRef.560567* [ %.156, %true_block.2 ], [ %.162, %false_block.2 ]
  %.169 = tail call %LLVMValueRef.560567* @LLVMBuildAdd(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.24, %LLVMValueRef.560567* %.164, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %end.1.endif
}

define %LLVMValueRef.560567* @CodeGen_codegen_var_access_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %VarAccessExpression.560453* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.11, i64 0, i32 25
  %.13 = load %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %VarId.560441*)** %.12, align 8
  %.15 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.3, i64 0, i32 5
  %.16 = load %VarId.560441*, %VarId.560441** %.15, align 8
  %.17 = tail call %LLVMValueRef.560567* %.13(%CodeGen.560615* %.1, %VarId.560441* %.16)
  %.21 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.22 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.21, i64 0, i32 9
  %.23 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.22, align 8
  %.25 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.3, i64 0, i32 4
  %.26 = load %Type.560381*, %Type.560381** %.25, align 8
  %.27 = tail call %LLVMTypeRef.560566* %.23(%CodeGen.560615* %.1, %Type.560381* %.26, i1 true)
  %0 = ptrtoint %LLVMValueRef.560567* %.17 to i64
  %.30 = trunc i64 %0 to i32
  %.32 = icmp eq i32 %.30, 0
  br i1 %.32, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.34 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.34 to %string.560217*
  %.35.repack = bitcast i8* %.34 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.35.repack, align 8
  %.35.repack1 = getelementptr inbounds i8, i8* %.34, i64 8
  %1 = bitcast i8* %.35.repack1 to i8**
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @str.361, i64 0, i64 0), i8** %1, align 8
  %.35.repack2 = getelementptr inbounds i8, i8* %.34, i64 16
  %2 = bitcast i8* %.35.repack2 to i64*
  store i64 50, i64* %2, align 8
  %.35.repack3 = getelementptr inbounds i8, i8* %.34, i64 24
  %3 = bitcast i8* %.35.repack3 to i64*
  store i64 50, i64* %3, align 8
  tail call void @panic(%string.560217* %.35)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.41 = load %VarId.560441*, %VarId.560441** %.15, align 8
  %.42 = getelementptr inbounds %VarId.560441, %VarId.560441* %.41, i64 0, i32 1
  %.43 = load i64, i64* %.42, align 8
  %.44 = icmp eq i64 %.43, 0
  br i1 %.44, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  ret %LLVMValueRef.560567* %.17

.5.endif.endif:                                   ; preds = %.5.endif
  %.49 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 10
  %.50 = load i1, i1* %.49, align 1
  br i1 %.50, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.53 = tail call %LLVMValueRef.560567* @LLVMGetInitializer(%LLVMValueRef.560567* %.17)
  ret %LLVMValueRef.560567* %.53

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.58 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.27, %LLVMValueRef.560567* %.17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.58
}

define %LLVMValueRef.560567* @CodeGen_codegen_null(%CodeGen.560615* %.1, %NullExpression.560421* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.9, i64 0, i32 9
  %.11 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %NullExpression.560421, %NullExpression.560421* %.2, i64 0, i32 4
  %.14 = load %Type.560381*, %Type.560381** %.13, align 8
  %.15 = tail call %LLVMTypeRef.560566* %.11(%CodeGen.560615* %.1, %Type.560381* %.14, i1 true)
  %.16 = tail call %LLVMValueRef.560567* @LLVMConstNull(%LLVMTypeRef.560566* %.15)
  ret %LLVMValueRef.560567* %.16
}

define %LLVMValueRef.560567* @CodeGen_codegen_ternary_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %TernaryExpression.560429* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 2
  %.14 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.15 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.11, %LLVMValueRef.560567* %.14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.362, i64 0, i64 0))
  %.19 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.22 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.23 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.19, %LLVMValueRef.560567* %.22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.363, i64 0, i64 0))
  %.27 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.30 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.31 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.27, %LLVMValueRef.560567* %.30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.364, i64 0, i64 0))
  %.34 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.35 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.34, align 8
  %.36 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.35, i64 0, i32 52
  %.37 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.36, align 8
  %.40 = getelementptr inbounds %TernaryExpression.560429, %TernaryExpression.560429* %.3, i64 0, i32 5
  %.41 = load %Expression.560401*, %Expression.560401** %.40, align 8
  %.42 = tail call %LLVMValueRef.560567* %.37(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.41)
  %.48 = tail call %LLVMValueRef.560567* @LLVMBuildCondBr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.42, %LLVMBasicBlockRef.560568* %.15, %LLVMBasicBlockRef.560568* %.23)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.15)
  %.54 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.34, align 8
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.54, i64 0, i32 52
  %.56 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.55, align 8
  %.59 = getelementptr inbounds %TernaryExpression.560429, %TernaryExpression.560429* %.3, i64 0, i32 6
  %.60 = load %Expression.560401*, %Expression.560401** %.59, align 8
  %.61 = tail call %LLVMValueRef.560567* %.56(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.60)
  %.65 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.31)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.23)
  %.71 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.34, align 8
  %.72 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.71, i64 0, i32 52
  %.73 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.72, align 8
  %.76 = getelementptr inbounds %TernaryExpression.560429, %TernaryExpression.560429* %.3, i64 0, i32 7
  %.77 = load %Expression.560401*, %Expression.560401** %.76, align 8
  %.78 = tail call %LLVMValueRef.560567* %.73(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.77)
  %.82 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.31)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.31)
  %.89 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.34, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.89, i64 0, i32 9
  %.91 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.90, align 8
  %.94 = load %Expression.560401*, %Expression.560401** %.59, align 8
  %.95 = getelementptr inbounds %Expression.560401, %Expression.560401* %.94, i64 0, i32 4
  %.96 = load %Type.560381*, %Type.560381** %.95, align 8
  %.97 = tail call %LLVMTypeRef.560566* %.91(%CodeGen.560615* %.1, %Type.560381* %.96, i1 true)
  %.98 = tail call %LLVMValueRef.560567* @LLVMBuildPhi(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.97, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.365, i64 0, i64 0))
  %incomming_vals = alloca [2 x %LLVMValueRef.560567*], align 8
  %.102 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %incomming_vals, i64 0, i64 0
  store %LLVMValueRef.560567* %.61, %LLVMValueRef.560567** %.102, align 8
  %.104 = getelementptr inbounds [2 x %LLVMValueRef.560567*], [2 x %LLVMValueRef.560567*]* %incomming_vals, i64 0, i64 1
  store %LLVMValueRef.560567* %.78, %LLVMValueRef.560567** %.104, align 8
  %blocks = alloca [2 x %LLVMBasicBlockRef.560568*], align 8
  %.108 = getelementptr inbounds [2 x %LLVMBasicBlockRef.560568*], [2 x %LLVMBasicBlockRef.560568*]* %blocks, i64 0, i64 0
  store %LLVMBasicBlockRef.560568* %.15, %LLVMBasicBlockRef.560568** %.108, align 8
  %.110 = getelementptr inbounds [2 x %LLVMBasicBlockRef.560568*], [2 x %LLVMBasicBlockRef.560568*]* %blocks, i64 0, i64 1
  store %LLVMBasicBlockRef.560568* %.23, %LLVMBasicBlockRef.560568** %.110, align 8
  call void @LLVMAddIncoming(%LLVMValueRef.560567* %.98, %LLVMValueRef.560567** nonnull %.102, %LLVMBasicBlockRef.560568** nonnull %.108, i64 2)
  ret %LLVMValueRef.560567* %.98
}

define %LLVMValueRef.560567* @CodeGen_codegen_call_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %CallExpression.560437* nocapture readonly %.3) {
.5:
  %.11 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.13 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %"Array<LLVMValueRef>.560613"*
  %.15 = bitcast i8* %.13 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i8**
  store i8* %.11, i8** %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 0, i64* %1, align 8
  %.21 = getelementptr inbounds i8, i8* %.13, i64 24
  %2 = bitcast i8* %.21 to i64*
  store i64 8, i64* %2, align 8
  %.25 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.27 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.28 = bitcast i8* %.27 to %"Array<LLVMTypeRef>.560611"*
  %.29 = bitcast i8* %.27 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.29, align 8
  %.31 = getelementptr inbounds i8, i8* %.27, i64 8
  %3 = bitcast i8* %.31 to i8**
  store i8* %.25, i8** %3, align 8
  %.33 = getelementptr inbounds i8, i8* %.27, i64 16
  %4 = bitcast i8* %.33 to i64*
  store i64 0, i64* %4, align 8
  %.35 = getelementptr inbounds i8, i8* %.27, i64 24
  %5 = bitcast i8* %.35 to i64*
  store i64 8, i64* %5, align 8
  %.39 = getelementptr inbounds %CallExpression.560437, %CallExpression.560437* %.3, i64 0, i32 5
  %.40 = load %Expression.560401*, %Expression.560401** %.39, align 8
  %.41 = getelementptr inbounds %Expression.560401, %Expression.560401* %.40, i64 0, i32 3
  %.42 = load i64, i64* %.41, align 8
  %.43 = icmp eq i64 %.42, 12
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.51 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.52 = load %Program.560549*, %Program.560549** %.51, align 8
  %.54 = getelementptr inbounds %Expression.560401, %Expression.560401* %.40, i64 1, i32 1
  %6 = bitcast i64* %.54 to %PropId.560449**
  %.55 = load %PropId.560449*, %PropId.560449** %6, align 8
  %.56 = tail call %ClassMethod.560511* @get_method(%Program.560549* %.52, %PropId.560449* %.55)
  %.57 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.56, i64 0, i32 2
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %.5.endif, label %.5.if.if

.5.endif:                                         ; preds = %.5.if.if, %.5.if, %.5
  %func.0 = phi %LLVMValueRef.560567* [ null, %.5 ], [ %.92, %.5.if.if ], [ null, %.5.if ]
  %7 = ptrtoint %LLVMValueRef.560567* %func.0 to i64
  %.114 = trunc i64 %7 to i32
  %.116 = icmp eq i32 %.114, 0
  br i1 %.116, label %.5.endif.if, label %for.entry

.5.if.if:                                         ; preds = %.5.if
  %.53.cast = bitcast %Expression.560401* %.40 to %MemberExpression.560451*
  %.62 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.63 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.62, align 8
  %.64 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.63, i64 0, i32 28
  %.65 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.64, align 8
  %.68 = load %PropId.560449*, %PropId.560449** %6, align 8
  %.69 = getelementptr inbounds %PropId.560449, %PropId.560449* %.68, i64 0, i32 2
  %.70 = load %TypeId.560395*, %TypeId.560395** %.69, align 8
  %.71 = tail call %CGClassType.560595* %.65(%CodeGen.560615* nonnull %.1, %TypeId.560395* %.70)
  %.75 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.62, align 8
  %.76 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.75, i64 0, i32 52
  %.77 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.76, align 8
  %.80 = getelementptr inbounds %Expression.560401, %Expression.560401* %.40, i64 1
  %8 = bitcast %Expression.560401* %.80 to %Expression.560401**
  %.81 = load %Expression.560401*, %Expression.560401** %8, align 8
  %.82 = tail call %LLVMValueRef.560567* %.77(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.81)
  %.86 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.62, align 8
  %.87 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.86, i64 0, i32 49
  %.88 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)** %.87, align 8
  %.92 = tail call %LLVMValueRef.560567* %.88(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %MemberExpression.560451* %.53.cast, %LLVMValueRef.560567* %.82)
  %.97 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.15, align 8
  %.98 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.97, i64 0, i32 2
  %.99 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.98, align 8
  tail call void %.99(%"Array<LLVMValueRef>.560613"* %.14, %LLVMValueRef.560567* %.82)
  %.103 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.71, i64 0, i32 1
  %.104 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.103, align 8
  %.105 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.104, i64 0)
  %.107 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.29, align 8
  %.108 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.107, i64 0, i32 2
  %.109 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.108, align 8
  tail call void %.109(%"Array<LLVMTypeRef>.560611"* %.28, %LLVMTypeRef.560566* %.105)
  br label %.5.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.120 = load %Expression.560401*, %Expression.560401** %.39, align 8
  %.121 = getelementptr inbounds %Expression.560401, %Expression.560401* %.120, i64 0, i32 3
  %.122 = load i64, i64* %.121, align 8
  %.123 = icmp eq i64 %.122, 7
  br i1 %.123, label %.5.endif.if.if, label %.5.endif.if.endif

.5.endif.if.if:                                   ; preds = %.5.endif.if
  %.129 = getelementptr inbounds %Expression.560401, %Expression.560401* %.120, i64 1
  %9 = bitcast %Expression.560401* %.129 to %VarId.560441**
  %.130214 = load %VarId.560441*, %VarId.560441** %9, align 8
  %.133 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 11
  %.134 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.133, align 8
  %.135 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.134, i64 0, i32 0
  %.136 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.135, align 8
  %.137 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.136, i64 0, i32 3
  %.138 = load %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.137, align 8
  %.140 = tail call %string.560217* @create_var_key(%VarId.560441* %.130214)
  %.141 = tail call %LLVMValueRef.560567* %.138(%"Map<string, LLVMValueRef>.560598"* %.134, %string.560217* %.140)
  %10 = ptrtoint %LLVMValueRef.560567* %.141 to i64
  %.144 = trunc i64 %10 to i32
  %.146.not = icmp eq i32 %.144, 0
  br i1 %.146.not, label %.5.endif.if.endif, label %.5.endif.if.if.if

.5.endif.if.endif:                                ; preds = %.5.endif.if.if.if, %.5.endif.if.if, %.5.endif.if
  %.169 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.170 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.169, align 8
  %.171 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.170, i64 0, i32 52
  %.172 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.171, align 8
  %.176 = load %Expression.560401*, %Expression.560401** %.39, align 8
  %.177 = tail call %LLVMValueRef.560567* %.172(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.176)
  br label %for.entry

.5.endif.if.if.if:                                ; preds = %.5.endif.if.if
  %.151 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.15, align 8
  %.152 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.151, i64 0, i32 2
  %.153 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.152, align 8
  tail call void %.153(%"Array<LLVMValueRef>.560613"* %.14, %LLVMValueRef.560567* %.141)
  %.157 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.158 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.157, align 8
  %.159 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.158)
  %.160 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.159, i64 0)
  %.162 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.29, align 8
  %.163 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.162, i64 0, i32 2
  %.164 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.163, align 8
  tail call void %.164(%"Array<LLVMTypeRef>.560611"* %.28, %LLVMTypeRef.560566* %.160)
  br label %.5.endif.if.endif

for.entry:                                        ; preds = %.5.endif, %.5.endif.if.endif
  %func.2 = phi %LLVMValueRef.560567* [ %.177, %.5.endif.if.endif ], [ %func.0, %.5.endif ]
  %.185 = getelementptr inbounds %CallExpression.560437, %CallExpression.560437* %.3, i64 0, i32 6
  %.1865 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.185, align 8
  %.1876 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.1865, i64 0, i32 2
  %.1887 = load i64, i64* %.1876, align 8
  %.1898 = icmp sgt i64 %.1887, 0
  %.192 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.1939 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.192, align 8
  br i1 %.1898, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %.19312 = phi %CodeGen_vtable_ty.560616* [ %.193, %for.body ], [ %.1939, %for.entry ]
  %.18611 = phi %"Array<Expression>.560419"* [ %.186, %for.body ], [ %.1865, %for.entry ]
  %storemerge10 = phi i64 [ %.227, %for.body ], [ 0, %for.entry ]
  %.194 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.19312, i64 0, i32 52
  %.195 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.194, align 8
  %.201 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.18611, i64 0, i32 0
  %.202 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.201, align 8
  %.203 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.202, i64 0, i32 5
  %.204 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.203, align 8
  %.205 = tail call %Expression.560401* %.204(%"Array<Expression>.560419"* %.18611, i64 %storemerge10)
  %.206 = tail call %LLVMValueRef.560567* %.195(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.205)
  %.211 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.15, align 8
  %.212 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.211, i64 0, i32 2
  %.213 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.212, align 8
  tail call void %.213(%"Array<LLVMValueRef>.560613"* %.14, %LLVMValueRef.560567* %.206)
  %.217 = tail call %LLVMTypeRef.560566* @LLVMTypeOf(%LLVMValueRef.560567* %.206)
  %.219 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.29, align 8
  %.220 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.219, i64 0, i32 2
  %.221 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.220, align 8
  tail call void %.221(%"Array<LLVMTypeRef>.560611"* %.28, %LLVMTypeRef.560566* %.217)
  %.227 = add nuw nsw i64 %storemerge10, 1
  %.186 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.185, align 8
  %.187 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.186, i64 0, i32 2
  %.188 = load i64, i64* %.187, align 8
  %.189 = icmp slt i64 %.227, %.188
  %.193 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.192, align 8
  br i1 %.189, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %.193.lcssa = phi %CodeGen_vtable_ty.560616* [ %.1939, %for.entry ], [ %.193, %for.body ]
  %.233 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.193.lcssa, i64 0, i32 9
  %.234 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.233, align 8
  %.236 = getelementptr inbounds %CallExpression.560437, %CallExpression.560437* %.3, i64 0, i32 4
  %.237 = load %Type.560381*, %Type.560381** %.236, align 8
  %.238 = tail call %LLVMTypeRef.560566* %.234(%CodeGen.560615* nonnull %.1, %Type.560381* %.237, i1 true)
  %11 = bitcast i8* %.31 to %LLVMTypeRef.560566***
  %.241 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %11, align 8
  %.244 = load i64, i64* %4, align 8
  %.245 = tail call %LLVMTypeRef.560566* @LLVMFunctionType(%LLVMTypeRef.560566* %.238, %LLVMTypeRef.560566** %.241, i64 %.244, i1 false)
  %12 = bitcast i8* %.17 to %LLVMValueRef.560567***
  %.252 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %12, align 8
  %.255 = load i64, i64* %1, align 8
  %.256 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.245, %LLVMValueRef.560567* %func.2, %LLVMValueRef.560567** %.252, i64 %.255, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.256
}

define %LLVMValueRef.560567* @CodeGen_codegen_index_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IndexExpression.560435* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.11, i64 0, i32 33
  %.13 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.12, align 8
  %.16 = bitcast %IndexExpression.560435* %.3 to %Expression.560401*
  %.17 = tail call %LLVMValueRef.560567* %.13(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.16)
  %.22 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.22, i64 0, i32 9
  %.24 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.23, align 8
  %.26 = getelementptr inbounds %IndexExpression.560435, %IndexExpression.560435* %.3, i64 0, i32 4
  %.27 = load %Type.560381*, %Type.560381** %.26, align 8
  %.28 = tail call %LLVMTypeRef.560566* %.24(%CodeGen.560615* %.1, %Type.560381* %.27, i1 true)
  %.30 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.28, %LLVMValueRef.560567* %.17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.30
}

define %LLVMValueRef.560567* @CodeGen_codegen_new_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %NewExpression.560433* nocapture readonly %.3) {
.5:
  %.11 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.3, i64 0, i32 7
  %.12 = load %Type.560381*, %Type.560381** %.11, align 8
  %.15 = tail call i1 @is_pointer(%Type.560381* %.12)
  %.19 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %"Array<LLVMValueRef>.560613"*
  %.23 = bitcast i8* %.21 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  br i1 %.15, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.35 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.36 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.35, align 8
  %.37 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.36, i64 0, i32 9
  %.38 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.37, align 8
  %.41 = getelementptr inbounds %Type.560381, %Type.560381* %.12, i64 1
  %3 = bitcast %Type.560381* %.41 to %Type.560381**
  %.42 = load %Type.560381*, %Type.560381** %3, align 8
  %.43 = tail call %LLVMTypeRef.560566* %.38(%CodeGen.560615* %.1, %Type.560381* %.42, i1 false)
  %.47 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.35, align 8
  %.48 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.47, i64 0, i32 56
  %.49 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)** %.48, align 8
  %.53 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.3, i64 0, i32 5
  %.54 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.53, align 8
  tail call void %.49(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* %.22, %"Array<Expression>.560419"* %.54)
  %.57 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.3, i64 0, i32 6
  %.58 = load i1, i1* %.57, align 1
  %.64 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.23, align 8
  %.65 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.64, i64 0, i32 5
  %.66 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.65, align 8
  %.67 = tail call %LLVMValueRef.560567* %.66(%"Array<LLVMValueRef>.560613"* %.22, i64 0)
  br i1 %.58, label %.5.if.if, label %.5.if.else

.5.else:                                          ; preds = %.5
  %.84 = tail call i1 @is_object(%Type.560381* %.12)
  br i1 %.84, label %.5.else.if, label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.else.if.endif, %.5.if.if, %.5.if.else
  %ptr.0 = phi %LLVMValueRef.560567* [ %.68, %.5.if.if ], [ %.79, %.5.if.else ], [ %ptr.3, %.5.else.if.endif ], [ null, %.5.else ]
  ret %LLVMValueRef.560567* %ptr.0

.5.if.if:                                         ; preds = %.5.if
  %.68 = tail call %LLVMValueRef.560567* @LLVMBuildArrayMalloc(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.43, %LLVMValueRef.560567* %.67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %.5.endif

.5.if.else:                                       ; preds = %.5.if
  %.79 = tail call %LLVMValueRef.560567* @LLVMBuildArrayAlloca(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.43, %LLVMValueRef.560567* %.67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %.5.endif

.5.else.if:                                       ; preds = %.5.else
  %.87 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.88 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.87, align 8
  %.89 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.88, i64 0, i32 9
  %.90 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.89, align 8
  %.92 = tail call %LLVMTypeRef.560566* %.90(%CodeGen.560615* %.1, %Type.560381* %.12, i1 false)
  %.95 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.3, i64 0, i32 6
  %.96 = load i1, i1* %.95, align 1
  br i1 %.96, label %.5.else.if.if, label %.5.else.if.else

.5.else.if.if:                                    ; preds = %.5.else.if
  %.100 = tail call %LLVMValueRef.560567* @LLVMBuildMalloc(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.92, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %.5.else.if.endif

.5.else.if.else:                                  ; preds = %.5.else.if
  %.105 = tail call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.92, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %.5.else.if.endif

.5.else.if.endif:                                 ; preds = %.5.else.if.else, %.5.else.if.if
  %ptr.3 = phi %LLVMValueRef.560567* [ %.100, %.5.else.if.if ], [ %.105, %.5.else.if.else ]
  %.111 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.23, align 8
  %.112 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.111, i64 0, i32 2
  %.113 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.112, align 8
  tail call void %.113(%"Array<LLVMValueRef>.560613"* %.22, %LLVMValueRef.560567* %ptr.3)
  %.117 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.87, align 8
  %.118 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.117, i64 0, i32 56
  %.119 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)** %.118, align 8
  %.123 = getelementptr inbounds %NewExpression.560433, %NewExpression.560433* %.3, i64 0, i32 5
  %.124 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.123, align 8
  tail call void %.119(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* %.22, %"Array<Expression>.560419"* %.124)
  %.128 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.87, align 8
  %.129 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.128, i64 0, i32 57
  %.130 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ObjectType.560407*, %"Array<LLVMValueRef>.560613"*)** %.129, align 8
  %.133 = bitcast %Type.560381* %.12 to %ObjectType.560407*
  tail call void %.130(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %ObjectType.560407* %.133, %"Array<LLVMValueRef>.560613"* %.22)
  br label %.5.endif
}

define %LLVMValueRef.560567* @CodeGen_codegen_member_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %MemberExpression.560451* %.3, %LLVMValueRef.560567* %.4) {
.6:
  %.12 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 5
  %0 = bitcast %Expression.560401** %.12 to %VarAccessExpression.560453**
  %.131 = load %VarAccessExpression.560453*, %VarAccessExpression.560453** %0, align 8
  %.15 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.131, i64 0, i32 5
  %.16 = load %VarId.560441*, %VarId.560441** %.15, align 8
  %1 = getelementptr inbounds %VarAccessExpression.560453, %VarAccessExpression.560453* %.131, i64 0, i32 4
  %.22 = load %Type.560381*, %Type.560381** %1, align 8
  %.23 = tail call i1 @is_object(%Type.560381* %.22)
  br i1 %.23, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.26 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.27 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.26, align 8
  %.28 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.27, i64 0, i32 32
  %.29 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)** %.28, align 8
  %.33 = tail call %LLVMValueRef.560567* %.29(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %MemberExpression.560451* nonnull %.3, %LLVMValueRef.560567* %.4)
  %.36 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.37 = load %Program.560549*, %Program.560549** %.36, align 8
  %.39 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 6
  %.40 = load %PropId.560449*, %PropId.560449** %.39, align 8
  %.41 = tail call i64 @get_class_prop_visibility(%Program.560549* %.37, %PropId.560449* %.40)
  %.42 = icmp eq i64 %.41, 1
  %.44 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 4
  %.45 = load %Type.560381*, %Type.560381** %.44, align 8
  %.46 = getelementptr inbounds %Type.560381, %Type.560381* %.45, i64 0, i32 1
  %.47 = load i64, i64* %.46, align 8
  %.48 = icmp eq i64 %.47, 17
  %.49 = and i1 %.42, %.48
  br i1 %.49, label %.6.if.if, label %.6.if.endif

.6.endif:                                         ; preds = %.6
  %.67 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 6
  %.68 = load %PropId.560449*, %PropId.560449** %.67, align 8
  %.69 = tail call %string.560217* @create_prop_key(%PropId.560449* %.68)
  %.72 = getelementptr inbounds %VarId.560441, %VarId.560441* %.16, i64 0, i32 1
  %.73 = load i64, i64* %.72, align 8
  switch i64 %.73, label %.6.if.if [
    i64 3, label %.6.endif.if
    i64 4, label %.6.endif.endif.if
  ]

.6.if.if:                                         ; preds = %.6.endif, %.6.endif.if.endif.endif, %.6.if
  %merge = phi %LLVMValueRef.560567* [ %.33, %.6.if ], [ %.109, %.6.endif.if.endif.endif ], [ null, %.6.endif ]
  ret %LLVMValueRef.560567* %merge

.6.if.endif:                                      ; preds = %.6.if
  %.56 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.26, align 8
  %.57 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.56, i64 0, i32 9
  %.58 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.57, align 8
  %.62 = tail call %LLVMTypeRef.560566* %.58(%CodeGen.560615* nonnull %.1, %Type.560381* %.45, i1 true)
  %.64 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.62, %LLVMValueRef.560567* %.33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.64

.6.endif.if:                                      ; preds = %.6.endif
  %.77 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.78 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.77, align 8
  %.79 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.78, i64 0, i32 28
  %.80 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.79, align 8
  %.82 = bitcast %VarId.560441* %.16 to %ClassVarId.560443*
  %.83 = bitcast %VarId.560441* %.16 to %ClassVarId_vtable_ty.560444**
  %.84 = load %ClassVarId_vtable_ty.560444*, %ClassVarId_vtable_ty.560444** %.83, align 8
  %.85 = getelementptr inbounds %ClassVarId_vtable_ty.560444, %ClassVarId_vtable_ty.560444* %.84, i64 0, i32 0
  %.86 = load %ClassId.560397* (%ClassVarId.560443*)*, %ClassId.560397* (%ClassVarId.560443*)** %.85, align 8
  %.87 = tail call %ClassId.560397* %.86(%ClassVarId.560443* %.82)
  %.88 = bitcast %ClassId.560397* %.87 to %TypeId.560395*
  %.89 = tail call %CGClassType.560595* %.80(%CodeGen.560615* %.1, %TypeId.560395* %.88)
  %2 = ptrtoint %CGClassType.560595* %.89 to i64
  %.92 = trunc i64 %2 to i32
  %.94 = icmp eq i32 %.92, 0
  br i1 %.94, label %.6.endif.if.if, label %.6.endif.if.endif

.6.endif.if.if:                                   ; preds = %.6.endif.if
  %.96 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.560217*
  %.97.repack = bitcast i8* %.96 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.97.repack, align 8
  %.97.repack8 = getelementptr inbounds i8, i8* %.96, i64 8
  %3 = bitcast i8* %.97.repack8 to i8**
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.366, i64 0, i64 0), i8** %3, align 8
  %.97.repack9 = getelementptr inbounds i8, i8* %.96, i64 16
  %4 = bitcast i8* %.97.repack9 to i64*
  store i64 51, i64* %4, align 8
  %.97.repack10 = getelementptr inbounds i8, i8* %.96, i64 24
  %5 = bitcast i8* %.97.repack10 to i64*
  store i64 51, i64* %5, align 8
  tail call void @panic(%string.560217* %.97)
  br label %.6.endif.if.endif

.6.endif.if.endif:                                ; preds = %.6.endif.if.if, %.6.endif.if
  %.102 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.89, i64 0, i32 4
  %.103 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.102, align 8
  %.104 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.103, i64 0, i32 0
  %.105 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.104, align 8
  %.106 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.105, i64 0, i32 3
  %.107 = load %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.106, align 8
  %.109 = tail call %LLVMValueRef.560567* %.107(%"Map<string, LLVMValueRef>.560598"* %.103, %string.560217* %.69)
  %6 = ptrtoint %LLVMValueRef.560567* %.109 to i64
  %.112 = trunc i64 %6 to i32
  %.114 = icmp eq i32 %.112, 0
  br i1 %.114, label %.6.endif.if.endif.if, label %.6.endif.if.endif.endif

.6.endif.if.endif.if:                             ; preds = %.6.endif.if.endif
  %.116 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.560217*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.117.repack, align 8
  %.117.repack5 = getelementptr inbounds i8, i8* %.116, i64 8
  %7 = bitcast i8* %.117.repack5 to i8**
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @str.367, i64 0, i64 0), i8** %7, align 8
  %.117.repack6 = getelementptr inbounds i8, i8* %.116, i64 16
  %8 = bitcast i8* %.117.repack6 to i64*
  store i64 59, i64* %8, align 8
  %.117.repack7 = getelementptr inbounds i8, i8* %.116, i64 24
  %9 = bitcast i8* %.117.repack7 to i64*
  store i64 59, i64* %9, align 8
  tail call void @panic(%string.560217* %.117)
  br label %.6.endif.if.endif.endif

.6.endif.if.endif.endif:                          ; preds = %.6.endif.if.endif.if, %.6.endif.if.endif
  %.122 = getelementptr inbounds %MemberExpression.560451, %MemberExpression.560451* %.3, i64 0, i32 4
  %.123 = load %Type.560381*, %Type.560381** %.122, align 8
  %.124 = getelementptr inbounds %Type.560381, %Type.560381* %.123, i64 0, i32 1
  %.125 = load i64, i64* %.124, align 8
  %.126 = icmp eq i64 %.125, 17
  br i1 %.126, label %.6.if.if, label %.6.endif.if.endif.endif.endif

.6.endif.if.endif.endif.endif:                    ; preds = %.6.endif.if.endif.endif
  %.133 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.77, align 8
  %.134 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.133, i64 0, i32 9
  %.135 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.134, align 8
  %.139 = tail call %LLVMTypeRef.560566* %.135(%CodeGen.560615* nonnull %.1, %Type.560381* %.123, i1 true)
  %.141 = tail call %LLVMValueRef.560567* @LLVMBuildLoad2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.139, %LLVMValueRef.560567* %.109, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.141

.6.endif.endif.if:                                ; preds = %.6.endif
  %.149 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.150 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.149, align 8
  %.151 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.150, i64 0, i32 29
  %.152 = load %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)*, %CGEnumType.560609* (%CodeGen.560615*, %TypeId.560395*)** %.151, align 8
  %.154 = bitcast %VarId.560441* %.16 to %EnumVarId.560445*
  %.155 = bitcast %VarId.560441* %.16 to %EnumVarId_vtable_ty.560446**
  %.156 = load %EnumVarId_vtable_ty.560446*, %EnumVarId_vtable_ty.560446** %.155, align 8
  %.157 = getelementptr inbounds %EnumVarId_vtable_ty.560446, %EnumVarId_vtable_ty.560446* %.156, i64 0, i32 0
  %.158 = load %EnumId.560399* (%EnumVarId.560445*)*, %EnumId.560399* (%EnumVarId.560445*)** %.157, align 8
  %.159 = tail call %EnumId.560399* %.158(%EnumVarId.560445* %.154)
  %.160 = bitcast %EnumId.560399* %.159 to %TypeId.560395*
  %.161 = tail call %CGEnumType.560609* %.152(%CodeGen.560615* %.1, %TypeId.560395* %.160)
  %10 = ptrtoint %CGEnumType.560609* %.161 to i64
  %.164 = trunc i64 %10 to i32
  %.166 = icmp eq i32 %.164, 0
  br i1 %.166, label %.6.endif.endif.if.if, label %.6.endif.endif.if.endif

.6.endif.endif.if.if:                             ; preds = %.6.endif.endif.if
  %.168 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.169 = bitcast i8* %.168 to %string.560217*
  %.169.repack = bitcast i8* %.168 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.169.repack, align 8
  %.169.repack2 = getelementptr inbounds i8, i8* %.168, i64 8
  %11 = bitcast i8* %.169.repack2 to i8**
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @str.368, i64 0, i64 0), i8** %11, align 8
  %.169.repack3 = getelementptr inbounds i8, i8* %.168, i64 16
  %12 = bitcast i8* %.169.repack3 to i64*
  store i64 50, i64* %12, align 8
  %.169.repack4 = getelementptr inbounds i8, i8* %.168, i64 24
  %13 = bitcast i8* %.169.repack4 to i64*
  store i64 50, i64* %13, align 8
  tail call void @panic(%string.560217* %.169)
  br label %.6.endif.endif.if.endif

.6.endif.endif.if.endif:                          ; preds = %.6.endif.endif.if.if, %.6.endif.endif.if
  %.174 = getelementptr inbounds %CGEnumType.560609, %CGEnumType.560609* %.161, i64 0, i32 2
  %.175 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.174, align 8
  %.176 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.175, i64 0, i32 0
  %.177 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.176, align 8
  %.178 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.177, i64 0, i32 3
  %.179 = load %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.178, align 8
  %.181 = tail call %LLVMValueRef.560567* %.179(%"Map<string, LLVMValueRef>.560598"* %.175, %string.560217* %.69)
  ret %LLVMValueRef.560567* %.181
}

define %LLVMValueRef.560567* @CodeGen_codegen_string_to_cstring(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.11 = load %Program.560549*, %Program.560549** %.10, align 8
  %.12 = getelementptr inbounds %Program.560549, %Program.560549* %.11, i64 0, i32 2
  %.13 = load %"Array<Module>.560551"*, %"Array<Module>.560551"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<Module>.560551", %"Array<Module>.560551"* %.13, i64 0, i32 0
  %.15 = load %"Array<Module>_vtable_ty.560552"*, %"Array<Module>_vtable_ty.560552"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>_vtable_ty.560552", %"Array<Module>_vtable_ty.560552"* %.15, i64 0, i32 5
  %.17 = load %Module.560531* (%"Array<Module>.560551"*, i64)*, %Module.560531* (%"Array<Module>.560551"*, i64)** %.16, align 8
  %.18 = tail call %Module.560531* %.17(%"Array<Module>.560551"* %.13, i64 0)
  %.19 = getelementptr inbounds %Module.560531, %Module.560531* %.18, i64 0, i32 8
  %.20 = load %"Array<Scope>.560538"*, %"Array<Scope>.560538"** %.19, align 8
  %.21 = getelementptr inbounds %"Array<Scope>.560538", %"Array<Scope>.560538"* %.20, i64 0, i32 0
  %.22 = load %"Array<Scope>_vtable_ty.560546"*, %"Array<Scope>_vtable_ty.560546"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Scope>_vtable_ty.560546", %"Array<Scope>_vtable_ty.560546"* %.22, i64 0, i32 5
  %.24 = load %Scope.560473* (%"Array<Scope>.560538"*, i64)*, %Scope.560473* (%"Array<Scope>.560538"*, i64)** %.23, align 8
  %.25 = tail call %Scope.560473* %.24(%"Array<Scope>.560538"* %.20, i64 0)
  %.26 = getelementptr inbounds %Scope.560473, %Scope.560473* %.25, i64 0, i32 3
  %.27 = load %"Map<string, ClassId>.560476"*, %"Map<string, ClassId>.560476"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, ClassId>.560476", %"Map<string, ClassId>.560476"* %.27, i64 0, i32 0
  %.29 = load %"Map<string, ClassId>_vtable_ty.560484"*, %"Map<string, ClassId>_vtable_ty.560484"** %.28, align 8
  %.30 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.560484", %"Map<string, ClassId>_vtable_ty.560484"* %.29, i64 0, i32 3
  %.31 = load %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)*, %ClassId.560397* (%"Map<string, ClassId>.560476"*, %string.560217*)** %.30, align 8
  %.32 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %string.560217*
  %.33.repack = bitcast i8* %.32 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.33.repack, align 8
  %.33.repack1 = getelementptr inbounds i8, i8* %.32, i64 8
  %0 = bitcast i8* %.33.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.282, i64 0, i64 0), i8** %0, align 8
  %.33.repack2 = getelementptr inbounds i8, i8* %.32, i64 16
  %1 = bitcast i8* %.33.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.33.repack3 = getelementptr inbounds i8, i8* %.32, i64 24
  %2 = bitcast i8* %.33.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.35 = tail call %ClassId.560397* %.31(%"Map<string, ClassId>.560476"* %.27, %string.560217* %.33)
  %.38 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.39 = bitcast i8* %.38 to %ObjectType.560407*
  %.40 = bitcast i8* %.38 to %ObjectType_vtable_ty.560408**
  store %ObjectType_vtable_ty.560408* @ObjectType_vtable_data, %ObjectType_vtable_ty.560408** %.40, align 8
  tail call void @ObjectType_constructor(%ObjectType.560407* %.39, %ClassId.560397* %.35)
  %.46 = load %Program.560549*, %Program.560549** %.10, align 8
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %string.560217*
  %.49.repack = bitcast i8* %.48 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.49.repack, align 8
  %.49.repack4 = getelementptr inbounds i8, i8* %.48, i64 8
  %3 = bitcast i8* %.49.repack4 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.369, i64 0, i64 0), i8** %3, align 8
  %.49.repack5 = getelementptr inbounds i8, i8* %.48, i64 16
  %4 = bitcast i8* %.49.repack5 to i64*
  store i64 10, i64* %4, align 8
  %.49.repack6 = getelementptr inbounds i8, i8* %.48, i64 24
  %5 = bitcast i8* %.49.repack6 to i64*
  store i64 10, i64* %5, align 8
  %.51 = tail call %Type.560381* @get_class_prop_type_with_name(%Program.560549* %.46, %ObjectType.560407* %.39, %string.560217* %.49)
  %.54 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.55 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.54, align 8
  %.56 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.55, i64 0, i32 35
  %.57 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %ObjectType.560407*, %string.560217*)** %.56, align 8
  %.61 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.560217*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.62.repack, align 8
  %.62.repack7 = getelementptr inbounds i8, i8* %.61, i64 8
  %6 = bitcast i8* %.62.repack7 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.369, i64 0, i64 0), i8** %6, align 8
  %.62.repack8 = getelementptr inbounds i8, i8* %.61, i64 16
  %7 = bitcast i8* %.62.repack8 to i64*
  store i64 10, i64* %7, align 8
  %.62.repack9 = getelementptr inbounds i8, i8* %.61, i64 24
  %8 = bitcast i8* %.62.repack9 to i64*
  store i64 10, i64* %8, align 8
  %.64 = tail call %LLVMValueRef.560567* %.57(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.3, %ObjectType.560407* %.39, %string.560217* %.62)
  %args = alloca [1 x %LLVMValueRef.560567*], align 8
  %.67 = getelementptr inbounds [1 x %LLVMValueRef.560567*], [1 x %LLVMValueRef.560567*]* %args, i64 0, i64 0
  store %LLVMValueRef.560567* %.3, %LLVMValueRef.560567** %.67, align 8
  %.72 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.54, align 8
  %.73 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.72, i64 0, i32 9
  %.74 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.73, align 8
  %.76 = tail call %LLVMTypeRef.560566* %.74(%CodeGen.560615* %.1, %Type.560381* %.51, i1 false)
  %.80 = call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.76, %LLVMValueRef.560567* %.64, %LLVMValueRef.560567** nonnull %.67, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  ret %LLVMValueRef.560567* %.80
}

define %LLVMValueRef.560567* @CodeGen_codegen_intrinsic_exp(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IntrinsicCall.560439* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.14 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.16 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %"Array<LLVMValueRef>.560613"*
  %.18 = bitcast i8* %.16 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.20 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.20 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.22 to i64*
  store i64 0, i64* %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.24 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.29 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.30 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.29, i64 0, i32 56
  %.31 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*, %"Array<Expression>.560419"*)** %.30, align 8
  %.35 = getelementptr inbounds %IntrinsicCall.560439, %IntrinsicCall.560439* %.3, i64 0, i32 6
  %.36 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.35, align 8
  tail call void %.31(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* %.17, %"Array<Expression>.560419"* %.36)
  %.39 = icmp slt i64 %.11, 3
  %.43 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  br i1 %.39, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.44 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.43, i64 0, i32 50
  %.45 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*)** %.44, align 8
  %.49 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.50 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.49, i64 0, i32 5
  %.51 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.50, align 8
  %.52 = tail call %LLVMValueRef.560567* %.51(%"Array<LLVMValueRef>.560613"* %.17, i64 0)
  %.53 = tail call %LLVMValueRef.560567* %.45(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.52)
  %3 = ptrtoint %LLVMValueRef.560567* %.53 to i64
  switch i64 %.11, label %.5.if.endif.endif.endif [
    i64 0, label %.5.if.if
    i64 1, label %.5.if.endif.if
    i64 2, label %.5.if.endif.endif.if
  ]

.5.endif:                                         ; preds = %.5
  %.148 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.43, i64 0, i32 9
  %.149 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.148, align 8
  %.152 = load %"Array<Expression>.560419"*, %"Array<Expression>.560419"** %.35, align 8
  %.153 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.152, i64 0, i32 0
  %.154 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.153, align 8
  %.155 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.154, i64 0, i32 5
  %.156 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.155, align 8
  %.157 = tail call %Expression.560401* %.156(%"Array<Expression>.560419"* %.152, i64 0)
  %.158 = getelementptr inbounds %Expression.560401, %Expression.560401* %.157, i64 0, i32 4
  %4 = bitcast %Type.560381** %.158 to %PointerType.560385**
  %.1591 = load %PointerType.560385*, %PointerType.560385** %4, align 8
  %.161 = getelementptr inbounds %PointerType.560385, %PointerType.560385* %.1591, i64 0, i32 2
  %.162 = load %Type.560381*, %Type.560381** %.161, align 8
  %.163 = tail call %LLVMTypeRef.560566* %.149(%CodeGen.560615* nonnull %.1, %Type.560381* %.162, i1 true)
  %.164 = tail call %LLVMValueRef.560567* @LLVMSizeOf(%LLVMTypeRef.560566* %.163)
  %.167 = icmp eq i64 %.11, 6
  %.173 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.174 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.173, i64 0, i32 5
  %.175 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.174, align 8
  br i1 %.167, label %.5.endif.if, label %.5.endif.endif

.5.if.if:                                         ; preds = %.5.if
  %.61 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.62 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.61, i64 0, i32 14
  %.63 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)** %.62, align 8
  %.67 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %5 = bitcast i8* %.67 to i64*
  store i64 %3, i64* %5, align 8
  %.71 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %"Array<LLVMValueRef>.560613"*
  %.73 = bitcast i8* %.71 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.73, align 8
  %.75 = getelementptr inbounds i8, i8* %.71, i64 8
  %6 = bitcast i8* %.75 to i8**
  store i8* %.67, i8** %6, align 8
  %.77 = getelementptr inbounds i8, i8* %.71, i64 16
  %7 = bitcast i8* %.77 to i64*
  store i64 1, i64* %7, align 8
  %.79 = getelementptr inbounds i8, i8* %.71, i64 24
  %8 = bitcast i8* %.79 to i64*
  store i64 8, i64* %8, align 8
  %.81 = tail call %LLVMValueRef.560567* %.63(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* %.72)
  br label %.5.if.endif.endif.endif

.5.if.endif.if:                                   ; preds = %.5.if
  %.89 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.89, i64 0, i32 15
  %.91 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)** %.90, align 8
  %.95 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %9 = bitcast i8* %.95 to i64*
  store i64 %3, i64* %9, align 8
  %.99 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %"Array<LLVMValueRef>.560613"*
  %.101 = bitcast i8* %.99 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.101, align 8
  %.103 = getelementptr inbounds i8, i8* %.99, i64 8
  %10 = bitcast i8* %.103 to i8**
  store i8* %.95, i8** %10, align 8
  %.105 = getelementptr inbounds i8, i8* %.99, i64 16
  %11 = bitcast i8* %.105 to i64*
  store i64 1, i64* %11, align 8
  %.107 = getelementptr inbounds i8, i8* %.99, i64 24
  %12 = bitcast i8* %.107 to i64*
  store i64 8, i64* %12, align 8
  %.109 = tail call %LLVMValueRef.560567* %.91(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* %.100)
  br label %.5.if.endif.endif.endif

.5.if.endif.endif.if:                             ; preds = %.5.if
  %.117 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.118 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.117, i64 0, i32 16
  %.119 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)** %.118, align 8
  %.123 = tail call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %13 = bitcast i8* %.123 to i64*
  store i64 %3, i64* %13, align 8
  %.127 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %"Array<LLVMValueRef>.560613"*
  %.129 = bitcast i8* %.127 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.129, align 8
  %.131 = getelementptr inbounds i8, i8* %.127, i64 8
  %14 = bitcast i8* %.131 to i8**
  store i8* %.123, i8** %14, align 8
  %.133 = getelementptr inbounds i8, i8* %.127, i64 16
  %15 = bitcast i8* %.133 to i64*
  store i64 1, i64* %15, align 8
  %.135 = getelementptr inbounds i8, i8* %.127, i64 24
  %16 = bitcast i8* %.135 to i64*
  store i64 8, i64* %16, align 8
  %.137 = tail call %LLVMValueRef.560567* %.119(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* %.128)
  br label %.5.if.endif.endif.endif

.5.if.endif.endif.endif:                          ; preds = %.5.if.endif.if, %.5.if.if, %.5.if, %.5.if.endif.endif.if
  %.143 = phi %LLVMValueRef.560567* [ %.109, %.5.if.endif.if ], [ %.81, %.5.if.if ], [ null, %.5.if ], [ %.137, %.5.if.endif.endif.if ]
  %.142 = tail call %LLVMValueRef.560567* @LLVMBuildFree(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.53)
  ret %LLVMValueRef.560567* %.143

.5.endif.if:                                      ; preds = %.5.endif
  %.176 = tail call %LLVMValueRef.560567* %.175(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 1)
  %.178 = tail call %LLVMValueRef.560567* @LLVMBuildMul(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.176, %LLVMValueRef.560567* %.164, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.180 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.181 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.180, i64 0, i32 3
  %.182 = load void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)** %.181, align 8
  tail call void %.182(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 1, %LLVMValueRef.560567* %.178)
  %.186 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.187 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.186, i64 0, i32 17
  %.188 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)** %.187, align 8
  %.191 = tail call %LLVMValueRef.560567* %.188(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* nonnull %.17)
  ret %LLVMValueRef.560567* %.191

.5.endif.endif:                                   ; preds = %.5.endif
  %.200 = tail call %LLVMValueRef.560567* %.175(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 2)
  %.202 = tail call %LLVMValueRef.560567* @LLVMBuildMul(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.200, %LLVMValueRef.560567* %.164, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.204 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.205 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.204, i64 0, i32 3
  %.206 = load void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)** %.205, align 8
  tail call void %.206(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 2, %LLVMValueRef.560567* %.202)
  %.209 = icmp eq i64 %.11, 7
  br i1 %.209, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.213 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.214 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.213, i64 0, i32 18
  %.215 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %"Array<LLVMValueRef>.560613"*)** %.214, align 8
  %.218 = tail call %LLVMValueRef.560567* %.215(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* nonnull %.17)
  ret %LLVMValueRef.560567* %.218

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.222 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.223 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.222, i64 0, i32 5
  %.224 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.223, align 8
  %.225 = tail call %LLVMValueRef.560567* %.224(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 0)
  %.226 = tail call i64 @LLVMGetAlignment(%LLVMValueRef.560567* %.225)
  %.229 = icmp eq i64 %.11, 5
  %.234 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.235 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.234, i64 0, i32 5
  %.236 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.235, align 8
  br i1 %.229, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.237 = tail call %LLVMValueRef.560567* %.236(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 0)
  %.241 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.242 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.241, i64 0, i32 5
  %.243 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.242, align 8
  %.244 = tail call %LLVMValueRef.560567* %.243(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 1)
  %.246 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.247 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.246, align 8
  %.248 = tail call %LLVMTypeRef.560566* @LLVMInt8TypeInContext(%LLVMContextRef.560564* %.247)
  %.249 = tail call %LLVMValueRef.560567* @LLVMBuildIntCast2(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.244, %LLVMTypeRef.560566* %.248, i1 false, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.252 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.253 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.252, i64 0, i32 5
  %.254 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.253, align 8
  %.255 = tail call %LLVMValueRef.560567* %.254(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 2)
  %.257 = tail call %LLVMValueRef.560567* @LLVMBuildMemSet(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.237, %LLVMValueRef.560567* %.249, %LLVMValueRef.560567* %.255, i64 %.226)
  ret %LLVMValueRef.560567* %.257

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.264 = tail call %LLVMValueRef.560567* %.236(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 1)
  %.265 = tail call i64 @LLVMGetAlignment(%LLVMValueRef.560567* %.264)
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif.endif [
    i64 3, label %.5.endif.endif.endif.endif.if
    i64 4, label %.5.endif.endif.endif.endif.endif.if
  ]

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.273 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.274 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.273, i64 0, i32 5
  %.275 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.274, align 8
  %.276 = tail call %LLVMValueRef.560567* %.275(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 0)
  %.280 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.281 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.280, i64 0, i32 5
  %.282 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.281, align 8
  %.283 = tail call %LLVMValueRef.560567* %.282(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 1)
  %.287 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.288 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.287, i64 0, i32 5
  %.289 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.288, align 8
  %.290 = tail call %LLVMValueRef.560567* %.289(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 2)
  %.291 = tail call %LLVMValueRef.560567* @LLVMBuildMemCpy(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.276, i64 %.265, %LLVMValueRef.560567* %.283, i64 %.265, %LLVMValueRef.560567* %.290)
  ret %LLVMValueRef.560567* %.291

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif
  %.299 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.300 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.299, i64 0, i32 5
  %.301 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.300, align 8
  %.302 = tail call %LLVMValueRef.560567* %.301(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 0)
  %.306 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.307 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.306, i64 0, i32 5
  %.308 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.307, align 8
  %.309 = tail call %LLVMValueRef.560567* %.308(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 1)
  %.313 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.18, align 8
  %.314 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.313, i64 0, i32 5
  %.315 = load %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)*, %LLVMValueRef.560567* (%"Array<LLVMValueRef>.560613"*, i64)** %.314, align 8
  %.316 = tail call %LLVMValueRef.560567* %.315(%"Array<LLVMValueRef>.560613"* nonnull %.17, i64 2)
  %.317 = tail call %LLVMValueRef.560567* @LLVMBuildMemMove(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.302, i64 %.265, %LLVMValueRef.560567* %.309, i64 %.265, %LLVMValueRef.560567* %.316)
  ret %LLVMValueRef.560567* %.317

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif
  %.319 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.320 = bitcast i8* %.319 to %string.560217*
  %.320.repack = bitcast i8* %.319 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.320.repack, align 8
  %.320.repack2 = getelementptr inbounds i8, i8* %.319, i64 8
  %17 = bitcast i8* %.320.repack2 to i8**
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.370, i64 0, i64 0), i8** %17, align 8
  %.320.repack3 = getelementptr inbounds i8, i8* %.319, i64 16
  %18 = bitcast i8* %.320.repack3 to i64*
  store i64 21, i64* %18, align 8
  %.320.repack4 = getelementptr inbounds i8, i8* %.319, i64 24
  %19 = bitcast i8* %.320.repack4 to i64*
  store i64 21, i64* %19, align 8
  tail call void @panic(%string.560217* %.320)
  ret %LLVMValueRef.560567* null
}

define %LLVMValueRef.560567* @CodeGen_codegen_expression(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.560401, %Expression.560401* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1.endif.endif [
    i64 4, label %.5.if
    i64 0, label %.5.endif.if
    i64 1, label %.5.endif.endif.if
    i64 5, label %.5.endif.endif.endif.if
    i64 2, label %.5.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 13, label %.5.endif.endif.endif.endi...if
    i64 12, label %.5.endif.endif.endif.endi...endif.if
    i64 11, label %.5.endif.endif.endif.endi...endif.endif.if
    i64 15, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 10, label %.5.endif.endif.endif.endi...if.1
    i64 6, label %.5.endif.endif.endif.endi...endif.1.if
    i64 16, label %.5.endif.endif.endif.endi...endif.1.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.16, i64 0, i32 13
  %.18 = load %LLVMValueRef.560567* (%CodeGen.560615*, %BooleanExpression.560413*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %BooleanExpression.560413*)** %.17, align 8
  %.20 = bitcast %Expression.560401* %.3 to %BooleanExpression.560413*
  %.21 = tail call %LLVMValueRef.560567* %.18(%CodeGen.560615* %.1, %BooleanExpression.560413* %.20)
  ret %LLVMValueRef.560567* %.21

.5.endif.if:                                      ; preds = %.5
  %.29 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.30 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.29, align 8
  %.31 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.30, i64 0, i32 11
  %.32 = load %LLVMValueRef.560567* (%CodeGen.560615*, %IntExpression.560411*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %IntExpression.560411*)** %.31, align 8
  %.34 = bitcast %Expression.560401* %.3 to %IntExpression.560411*
  %.35 = tail call %LLVMValueRef.560567* %.32(%CodeGen.560615* %.1, %IntExpression.560411* %.34)
  ret %LLVMValueRef.560567* %.35

.5.endif.endif.if:                                ; preds = %.5
  %.43 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.44 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.43, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.44, i64 0, i32 12
  %.46 = load %LLVMValueRef.560567* (%CodeGen.560615*, %FloatExpression.560415*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %FloatExpression.560415*)** %.45, align 8
  %.48 = bitcast %Expression.560401* %.3 to %FloatExpression.560415*
  %.49 = tail call %LLVMValueRef.560567* %.46(%CodeGen.560615* %.1, %FloatExpression.560415* %.48)
  ret %LLVMValueRef.560567* %.49

.5.endif.endif.endif.if:                          ; preds = %.5
  %.57 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.58 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.57, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.58, i64 0, i32 44
  %.60 = load %LLVMValueRef.560567* (%CodeGen.560615*, %NullExpression.560421*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %NullExpression.560421*)** %.59, align 8
  %.62 = bitcast %Expression.560401* %.3 to %NullExpression.560421*
  %.63 = tail call %LLVMValueRef.560567* %.60(%CodeGen.560615* %.1, %NullExpression.560421* %.62)
  ret %LLVMValueRef.560567* %.63

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.71 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.72 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.71, align 8
  %.73 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.72, i64 0, i32 22
  %.74 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %StringExpression.560417*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %StringExpression.560417*)** %.73, align 8
  %.77 = bitcast %Expression.560401* %.3 to %StringExpression.560417*
  %.78 = tail call %LLVMValueRef.560567* %.74(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %StringExpression.560417* %.77)
  ret %LLVMValueRef.560567* %.78

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.86 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.87 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.86, align 8
  %.88 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.87, i64 0, i32 43
  %.89 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarAccessExpression.560453*)** %.88, align 8
  %.92 = bitcast %Expression.560401* %.3 to %VarAccessExpression.560453*
  %.93 = tail call %LLVMValueRef.560567* %.89(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %VarAccessExpression.560453* %.92)
  ret %LLVMValueRef.560567* %.93

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.101 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.102 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.101, align 8
  %.103 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.102, i64 0, i32 40
  %.104 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %BinaryExpression.560425*)** %.103, align 8
  %.107 = bitcast %Expression.560401* %.3 to %BinaryExpression.560425*
  %.108 = tail call %LLVMValueRef.560567* %.104(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %BinaryExpression.560425* %.107)
  ret %LLVMValueRef.560567* %.108

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.116 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.117 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.116, align 8
  %.118 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.117, i64 0, i32 42
  %.119 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %UnaryExpression.560427*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %UnaryExpression.560427*)** %.118, align 8
  %.122 = bitcast %Expression.560401* %.3 to %UnaryExpression.560427*
  %.123 = tail call %LLVMValueRef.560567* %.119(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %UnaryExpression.560427* %.122)
  ret %LLVMValueRef.560567* %.123

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.131 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.132 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.131, align 8
  %.133 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.132, i64 0, i32 46
  %.134 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %CallExpression.560437*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %CallExpression.560437*)** %.133, align 8
  %.137 = bitcast %Expression.560401* %.3 to %CallExpression.560437*
  %.138 = tail call %LLVMValueRef.560567* %.134(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %CallExpression.560437* %.137)
  ret %LLVMValueRef.560567* %.138

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.146 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.147 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.146, align 8
  %.148 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.147, i64 0, i32 47
  %.149 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IndexExpression.560435*)** %.148, align 8
  %.152 = bitcast %Expression.560401* %.3 to %IndexExpression.560435*
  %.153 = tail call %LLVMValueRef.560567* %.149(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IndexExpression.560435* %.152)
  ret %LLVMValueRef.560567* %.153

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.161 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.162 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.161, align 8
  %.163 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.162, i64 0, i32 49
  %.164 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %MemberExpression.560451*, %LLVMValueRef.560567*)** %.163, align 8
  %.167 = bitcast %Expression.560401* %.3 to %MemberExpression.560451*
  %.168 = tail call %LLVMValueRef.560567* %.164(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %MemberExpression.560451* %.167, %LLVMValueRef.560567* null)
  ret %LLVMValueRef.560567* %.168

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5
  %.176 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.177 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.176, align 8
  %.178 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.177, i64 0, i32 48
  %.179 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %NewExpression.560433*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %NewExpression.560433*)** %.178, align 8
  %.182 = bitcast %Expression.560401* %.3 to %NewExpression.560433*
  %.183 = tail call %LLVMValueRef.560567* %.179(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %NewExpression.560433* %.182)
  ret %LLVMValueRef.560567* %.183

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5
  %.191 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.192 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.191, align 8
  %.193 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.192, i64 0, i32 45
  %.194 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TernaryExpression.560429*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TernaryExpression.560429*)** %.193, align 8
  %.197 = bitcast %Expression.560401* %.3 to %TernaryExpression.560429*
  %.198 = tail call %LLVMValueRef.560567* %.194(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %TernaryExpression.560429* %.197)
  ret %LLVMValueRef.560567* %.198

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5
  %.206 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.207 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.206, align 8
  %.208 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.207, i64 0, i32 41
  %.209 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TypeCastExpression.560431*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %TypeCastExpression.560431*)** %.208, align 8
  %.212 = bitcast %Expression.560401* %.3 to %TypeCastExpression.560431*
  %.213 = tail call %LLVMValueRef.560567* %.209(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %TypeCastExpression.560431* %.212)
  ret %LLVMValueRef.560567* %.213

.5.endif.endif.endif.endi...endif.1.if:           ; preds = %.5
  %.221 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.222 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.221, align 8
  %.223 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.222, i64 0, i32 24
  %.224 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ArrayExpression.560423*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ArrayExpression.560423*)** %.223, align 8
  %.227 = bitcast %Expression.560401* %.3 to %ArrayExpression.560423*
  %.228 = tail call %LLVMValueRef.560567* %.224(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ArrayExpression.560423* %.227)
  ret %LLVMValueRef.560567* %.228

.5.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.5
  %.236 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.237 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.236, align 8
  %.238 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.237, i64 0, i32 51
  %.239 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IntrinsicCall.560439*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IntrinsicCall.560439*)** %.238, align 8
  %.242 = bitcast %Expression.560401* %.3 to %IntrinsicCall.560439*
  %.243 = tail call %LLVMValueRef.560567* %.239(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IntrinsicCall.560439* %.242)
  ret %LLVMValueRef.560567* %.243

.5.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.5
  %.245 = tail call %LLVMTypeRef.560566* @LLVMInt32Type()
  %.246 = tail call %LLVMValueRef.560567* @LLVMConstInt(%LLVMTypeRef.560566* %.245, i64 0, i1 false)
  ret %LLVMValueRef.560567* %.246
}

define void @CodeGen_codegen_if_stmt(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IfStatement.560459* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.11, i64 0, i32 52
  %.13 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.12, align 8
  %.16 = getelementptr inbounds %IfStatement.560459, %IfStatement.560459* %.3, i64 0, i32 2
  %.17 = load %Expression.560401*, %Expression.560401** %.16, align 8
  %.18 = tail call %LLVMValueRef.560567* %.13(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.17)
  %.21 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.22 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.21, align 8
  %.24 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 2
  %.25 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.24, align 8
  %.26 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.22, %LLVMValueRef.560567* %.25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.371, i64 0, i64 0))
  %.30 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.21, align 8
  %.33 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.24, align 8
  %.34 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.30, %LLVMValueRef.560567* %.33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.26, i64 0, i64 0))
  %.38 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.21, align 8
  %.41 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.24, align 8
  %.42 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.38, %LLVMValueRef.560567* %.41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.372, i64 0, i64 0))
  %.48 = tail call %LLVMValueRef.560567* @LLVMBuildCondBr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.18, %LLVMBasicBlockRef.560568* %.26, %LLVMBasicBlockRef.560568* %.34)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.26)
  %.54 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.54, i64 0, i32 61
  %.56 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)** %.55, align 8
  %.59 = getelementptr inbounds %IfStatement.560459, %IfStatement.560459* %.3, i64 0, i32 3
  %.60 = load %Block.560455*, %Block.560455** %.59, align 8
  tail call void %.56(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Block.560455* %.60)
  %.64 = load %Block.560455*, %Block.560455** %.59, align 8
  %.65 = tail call i1 @is_terminated(%Block.560455* %.64)
  br i1 %.65, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.72 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.42)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.34)
  %.79 = getelementptr inbounds %IfStatement.560459, %IfStatement.560459* %.3, i64 0, i32 4
  %0 = bitcast %Block.560455** %.79 to i64*
  %.801 = load i64, i64* %0, align 8
  %.81 = trunc i64 %.801 to i32
  %.83.not = icmp eq i32 %.81, 0
  br i1 %.83.not, label %.5.endif.endif.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %1 = inttoptr i64 %.801 to %Block.560455*
  %.87 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.10, align 8
  %.88 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.87, i64 0, i32 61
  %.89 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)** %.88, align 8
  tail call void %.89(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Block.560455* %1)
  %.97 = load %Block.560455*, %Block.560455** %.79, align 8
  %.98 = tail call i1 @is_terminated(%Block.560455* %.97)
  br i1 %.98, label %.5.endif.endif.else, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif, %.5.endif.endif
  %.106 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.42)
  br label %.5.endif.endif.endif

.5.endif.endif.else:                              ; preds = %.5.endif.endif
  br i1 %.65, label %.5.endif.endif.else.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.else, %.5.endif.endif.else.if, %.5.endif.endif.if
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.42)
  ret void

.5.endif.endif.else.if:                           ; preds = %.5.endif.endif.else
  tail call void @LLVMDeleteBasicBlock(%LLVMBasicBlockRef.560568* %.42)
  br label %.5.endif.endif.endif
}

define void @CodeGen_codegen_for_stmt(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ForStatement.560465* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 2
  %.14 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.15 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.11, %LLVMValueRef.560567* %.14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.373, i64 0, i64 0))
  %.19 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.15)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.15)
  %.24 = getelementptr inbounds %ForStatement.560465, %ForStatement.560465* %.3, i64 0, i32 2
  %0 = bitcast %Statement.560393** %.24 to i64*
  %.251 = load i64, i64* %0, align 8
  %.26 = trunc i64 %.251 to i32
  %.28.not = icmp eq i32 %.26, 0
  br i1 %.28.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %1 = inttoptr i64 %.251 to %Statement.560393*
  %.31 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.32 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.31, align 8
  %.33 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.32, i64 0, i32 60
  %.34 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Statement.560393*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Statement.560393*)** %.33, align 8
  tail call void %.34(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Statement.560393* %1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.43 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.46 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.47 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.43, %LLVMValueRef.560567* %.46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.374, i64 0, i64 0))
  %.51 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.54 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.55 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.51, %LLVMValueRef.560567* %.54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.375, i64 0, i64 0))
  %.59 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.62 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.63 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.59, %LLVMValueRef.560567* %.62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.376, i64 0, i64 0))
  %.67 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.70 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.71 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.67, %LLVMValueRef.560567* %.70, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.377, i64 0, i64 0))
  %.74 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 7
  %2 = bitcast %LLVMBasicBlockRef.560568** %.74 to i64*
  %.752 = load i64, i64* %2, align 8
  %.78 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 8
  %3 = bitcast %LLVMBasicBlockRef.560568** %.78 to i64*
  %.793 = load i64, i64* %3, align 8
  %4 = ptrtoint %LLVMBasicBlockRef.560568* %.71 to i64
  store i64 %4, i64* %2, align 8
  %5 = ptrtoint %LLVMBasicBlockRef.560568* %.63 to i64
  store i64 %5, i64* %3, align 8
  %.91 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.47)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.47)
  %.96 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.97 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.96, align 8
  %.98 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.97, i64 0, i32 7
  %.99 = load %LLVMValueRef.560567* (%CodeGen.560615*, i1)*, %LLVMValueRef.560567* (%CodeGen.560615*, i1)** %.98, align 8
  %.100 = tail call %LLVMValueRef.560567* %.99(%CodeGen.560615* nonnull %.1, i1 true)
  %.103 = getelementptr inbounds %ForStatement.560465, %ForStatement.560465* %.3, i64 0, i32 3
  %6 = bitcast %Expression.560401** %.103 to i64*
  %.1046 = load i64, i64* %6, align 8
  %.105 = trunc i64 %.1046 to i32
  %.107.not = icmp eq i32 %.105, 0
  br i1 %.107.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %7 = inttoptr i64 %.1046 to %Expression.560401*
  %.111 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.96, align 8
  %.112 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.111, i64 0, i32 52
  %.113 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.112, align 8
  %.118 = tail call %LLVMValueRef.560567* %.113(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %7)
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif, %.5.endif.if
  %.122 = phi %LLVMValueRef.560567* [ %.100, %.5.endif ], [ %.118, %.5.endif.if ]
  %.125 = tail call %LLVMValueRef.560567* @LLVMBuildCondBr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.122, %LLVMBasicBlockRef.560568* %.55, %LLVMBasicBlockRef.560568* %.71)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.55)
  %.131 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.96, align 8
  %.132 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.131, i64 0, i32 61
  %.133 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)** %.132, align 8
  %.136 = getelementptr inbounds %ForStatement.560465, %ForStatement.560465* %.3, i64 0, i32 5
  %.137 = load %Block.560455*, %Block.560455** %.136, align 8
  tail call void %.133(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Block.560455* %.137)
  %.141 = load %Block.560455*, %Block.560455** %.136, align 8
  %.142 = tail call i1 @is_terminated(%Block.560455* %.141)
  br i1 %.142, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.147 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.63)
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif, %.5.endif.endif.if
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.63)
  %.153 = getelementptr inbounds %ForStatement.560465, %ForStatement.560465* %.3, i64 0, i32 4
  %8 = bitcast %Expression.560401** %.153 to i64*
  %.1547 = load i64, i64* %8, align 8
  %.155 = trunc i64 %.1547 to i32
  %.157.not = icmp eq i32 %.155, 0
  br i1 %.157.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %9 = inttoptr i64 %.1547 to %Expression.560401*
  %.161 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.96, align 8
  %.162 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.161, i64 0, i32 52
  %.163 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.162, align 8
  %.168 = tail call %LLVMValueRef.560567* %.163(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %9)
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif, %.5.endif.endif.endif.if
  %.172 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.47)
  store i64 %.752, i64* %2, align 8
  store i64 %.793, i64* %3, align 8
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.71)
  ret void
}

define void @CodeGen_codegen_while_stmt(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %WhileStatement.560467* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.11 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 2
  %.14 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.15 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.11, %LLVMValueRef.560567* %.14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.378, i64 0, i64 0))
  %.19 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.10, align 8
  %.22 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.13, align 8
  %.23 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.19, %LLVMValueRef.560567* %.22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.379, i64 0, i64 0))
  %.26 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 7
  %0 = bitcast %LLVMBasicBlockRef.560568** %.26 to i64*
  %.271 = load i64, i64* %0, align 8
  %.30 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 8
  %1 = bitcast %LLVMBasicBlockRef.560568** %.30 to i64*
  %.312 = load i64, i64* %1, align 8
  store %LLVMBasicBlockRef.560568* %.23, %LLVMBasicBlockRef.560568** %.26, align 8
  store %LLVMBasicBlockRef.560568* %.15, %LLVMBasicBlockRef.560568** %.30, align 8
  %.42 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.43 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.42, align 8
  %.44 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.43, i64 0, i32 52
  %.45 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.44, align 8
  %.48 = getelementptr inbounds %WhileStatement.560467, %WhileStatement.560467* %.3, i64 0, i32 2
  %.49 = load %Expression.560401*, %Expression.560401** %.48, align 8
  %.50 = tail call %LLVMValueRef.560567* %.45(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.49)
  %.56 = tail call %LLVMValueRef.560567* @LLVMBuildCondBr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.50, %LLVMBasicBlockRef.560568* %.15, %LLVMBasicBlockRef.560568* %.23)
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.15)
  %.62 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.42, align 8
  %.63 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.62, i64 0, i32 61
  %.64 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)** %.63, align 8
  %.67 = getelementptr inbounds %WhileStatement.560467, %WhileStatement.560467* %.3, i64 0, i32 3
  %.68 = load %Block.560455*, %Block.560455** %.67, align 8
  tail call void %.64(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Block.560455* %.68)
  %.72 = load %Block.560455*, %Block.560455** %.67, align 8
  %.73 = tail call i1 @is_terminated(%Block.560455* %.72)
  br i1 %.73, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.78 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.42, align 8
  %.79 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.78, i64 0, i32 52
  %.80 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.79, align 8
  %.84 = load %Expression.560401*, %Expression.560401** %.48, align 8
  %.85 = tail call %LLVMValueRef.560567* %.80(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.84)
  %.91 = tail call %LLVMValueRef.560567* @LLVMBuildCondBr(%LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.85, %LLVMBasicBlockRef.560568* %.15, %LLVMBasicBlockRef.560568* %.23)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.23)
  store i64 %.271, i64* %0, align 8
  store i64 %.312, i64* %1, align 8
  ret void
}

define void @CodeGen_evaluate_expression_list(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %"Array<LLVMValueRef>.560613"* %.3, %"Array<Expression>.560419"* %.4) {
.6:
  %.16 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.4, i64 0, i32 2
  %.172 = load i64, i64* %.16, align 8
  %.183 = icmp sgt i64 %.172, 0
  br i1 %.183, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.22 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.29 = getelementptr inbounds %"Array<Expression>.560419", %"Array<Expression>.560419"* %.4, i64 0, i32 0
  %.35 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.3, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.44, %for.body ]
  %.23 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.23, i64 0, i32 52
  %.25 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.24, align 8
  %.30 = load %"Array<Expression>_vtable_ty.560420"*, %"Array<Expression>_vtable_ty.560420"** %.29, align 8
  %.31 = getelementptr inbounds %"Array<Expression>_vtable_ty.560420", %"Array<Expression>_vtable_ty.560420"* %.30, i64 0, i32 5
  %.32 = load %Expression.560401* (%"Array<Expression>.560419"*, i64)*, %Expression.560401* (%"Array<Expression>.560419"*, i64)** %.31, align 8
  %.33 = tail call %Expression.560401* %.32(%"Array<Expression>.560419"* nonnull %.4, i64 %storemerge4)
  %.34 = tail call %LLVMValueRef.560567* %.25(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.33)
  %.36 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.35, align 8
  %.37 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.36, i64 0, i32 2
  %.38 = load void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, %LLVMValueRef.560567*)** %.37, align 8
  tail call void %.38(%"Array<LLVMValueRef>.560613"* %.3, %LLVMValueRef.560567* %.34)
  %.44 = add nuw nsw i64 %storemerge4, 1
  %.17 = load i64, i64* %.16, align 8
  %.18 = icmp slt i64 %.44, %.17
  br i1 %.18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.6
  ret void
}

define void @CodeGen_build_constructor_call(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ObjectType.560407* nocapture readonly %.3, %"Array<LLVMValueRef>.560613"* nocapture readonly %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.13 = load %Program.560549*, %Program.560549** %.12, align 8
  %.15 = bitcast %ObjectType.560407* %.3 to %Type.560381*
  %.16 = tail call %Class.560513* @get_class_from_type(%Program.560549* %.13, %Type.560381* %.15)
  %.19 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.20 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.21 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.20, i64 0, i32 28
  %.22 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.21, align 8
  %.24 = getelementptr inbounds %ObjectType.560407, %ObjectType.560407* %.3, i64 0, i32 2
  %0 = bitcast %ClassId.560397** %.24 to %TypeId.560395**
  %.251 = load %TypeId.560395*, %TypeId.560395** %0, align 8
  %.27 = tail call %CGClassType.560595* %.22(%CodeGen.560615* %.1, %TypeId.560395* %.251)
  %.28 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.27, i64 0, i32 7
  %.29 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.28, align 8
  %1 = ptrtoint %LLVMValueRef.560567* %.29 to i64
  %.32 = trunc i64 %1 to i32
  %.34.not = icmp eq i32 %.32, 0
  br i1 %.34.not, label %.6.else, label %.6.if

.6.if:                                            ; preds = %.6
  %.38 = tail call %LLVMTypeRef.560566* @LLVM_GetFunctionType(%LLVMValueRef.560567* %.29)
  %.41 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.4, i64 0, i32 1
  %.42 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %.41, align 8
  %.44 = getelementptr inbounds %"Array<LLVMValueRef>.560613", %"Array<LLVMValueRef>.560613"* %.4, i64 0, i32 2
  %.45 = load i64, i64* %.44, align 8
  %.46 = tail call %LLVMValueRef.560567* @LLVMBuildCall2(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.38, %LLVMValueRef.560567* %.29, %LLVMValueRef.560567** %.42, i64 %.45, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  br label %.6.endif

.6.else:                                          ; preds = %.6
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %string.560217*
  %.49.repack = bitcast i8* %.48 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.49.repack, align 8
  %.49.repack2 = getelementptr inbounds i8, i8* %.48, i64 8
  %2 = bitcast i8* %.49.repack2 to i8**
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.380, i64 0, i64 0), i8** %2, align 8
  %.49.repack3 = getelementptr inbounds i8, i8* %.48, i64 16
  %3 = bitcast i8* %.49.repack3 to i64*
  store i64 47, i64* %3, align 8
  %.49.repack4 = getelementptr inbounds i8, i8* %.48, i64 24
  %4 = bitcast i8* %.49.repack4 to i64*
  store i64 47, i64* %4, align 8
  tail call void @panic(%string.560217* %.49)
  br label %.6.endif

.6.endif:                                         ; preds = %.6.else, %.6.if
  ret void
}

define void @CodeGen_codegen_var_declaration(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %VarDeclaration.560461* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.3, i64 0, i32 3
  %.11 = load %VarId.560441*, %VarId.560441** %.10, align 8
  %.14 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.15 = load %Program.560549*, %Program.560549** %.14, align 8
  %.17 = tail call %Var.560505* @get_var(%Program.560549* %.15, %VarId.560441* %.11)
  %.20 = getelementptr inbounds %Var.560505, %Var.560505* %.17, i64 0, i32 3
  %.21 = load %Expression.560401*, %Expression.560401** %.20, align 8
  %.24 = getelementptr inbounds %Var.560505, %Var.560505* %.17, i64 0, i32 1
  %.25 = load %Type.560381*, %Type.560381** %.24, align 8
  %.28 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.29 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.30 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.29, i64 0, i32 9
  %.31 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.30, align 8
  %.33 = tail call %LLVMTypeRef.560566* %.31(%CodeGen.560615* %.1, %Type.560381* %.25, i1 true)
  %.36 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.3, i64 0, i32 2
  %.37 = load %string.560217*, %string.560217** %.36, align 8
  %.38 = getelementptr inbounds %string.560217, %string.560217* %.37, i64 0, i32 0
  %.39 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.39, i64 0, i32 11
  %.41 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.40, align 8
  %.42 = tail call i8* %.41(%string.560217* %.37)
  %.46 = getelementptr inbounds %VarDeclaration.560461, %VarDeclaration.560461* %.3, i64 0, i32 4
  %.47 = load i1, i1* %.46, align 1
  br i1 %.47, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.51 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.52 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.51, i64 0, i32 52
  %.53 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.52, align 8
  %.56 = tail call %LLVMValueRef.560567* %.53(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.21)
  %.59 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.60 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.59, align 8
  %.63 = tail call %LLVMValueRef.560567* @LLVMAddGlobal(%LLVMModuleRef.560565* %.60, %LLVMTypeRef.560566* %.33, i8* %.42)
  tail call void @LLVMSetInitializer(%LLVMValueRef.560567* %.63, %LLVMValueRef.560567* %.56)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.72 = tail call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.33, i8* %.42)
  %0 = ptrtoint %Expression.560401* %.21 to i64
  %.75 = trunc i64 %0 to i32
  %.77.not = icmp eq i32 %.75, 0
  br i1 %.77.not, label %.5.endif, label %.5.else.if

.5.endif:                                         ; preds = %.5.else.if, %.5.else, %.5.if
  %ptr.0 = phi %LLVMValueRef.560567* [ %.63, %.5.if ], [ %.72, %.5.else ], [ %.72, %.5.else.if ]
  %.92 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.93 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.92, i64 0, i32 6
  %.94 = load void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)** %.93, align 8
  tail call void %.94(%CodeGen.560615* nonnull %.1, %VarId.560441* %.11, %LLVMValueRef.560567* %ptr.0)
  ret void

.5.else.if:                                       ; preds = %.5.else
  %.81 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.82 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.81, i64 0, i32 37
  %.83 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)** %.82, align 8
  %.87 = tail call %LLVMValueRef.560567* %.83(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.72, %Expression.560401* %.21)
  br label %.5.endif
}

define void @CodeGen_codegen_const_declaration(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ConstDeclaration.560463* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.3, i64 0, i32 3
  %.11 = load %ConstId.560447*, %ConstId.560447** %.10, align 8
  %.14 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.15 = load %Program.560549*, %Program.560549** %.14, align 8
  %.17 = tail call %Const.560507* @get_const(%Program.560549* %.15, %ConstId.560447* %.11)
  %.18 = getelementptr inbounds %Const.560507, %Const.560507* %.17, i64 0, i32 3
  %.19 = load %Expression.560401*, %Expression.560401** %.18, align 8
  %.22 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.23, i64 0, i32 9
  %.25 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.24, align 8
  %.27 = getelementptr inbounds %Expression.560401, %Expression.560401* %.19, i64 0, i32 4
  %.28 = load %Type.560381*, %Type.560381** %.27, align 8
  %.29 = tail call %LLVMTypeRef.560566* %.25(%CodeGen.560615* %.1, %Type.560381* %.28, i1 true)
  %.32 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.3, i64 0, i32 2
  %.33 = load %string.560217*, %string.560217** %.32, align 8
  %.34 = getelementptr inbounds %string.560217, %string.560217* %.33, i64 0, i32 0
  %.35 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.34, align 8
  %.36 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.35, i64 0, i32 11
  %.37 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.36, align 8
  %.38 = tail call i8* %.37(%string.560217* %.33)
  %.42 = getelementptr inbounds %ConstDeclaration.560463, %ConstDeclaration.560463* %.3, i64 0, i32 4
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.47 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.22, align 8
  %.48 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.47, i64 0, i32 52
  %.49 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.48, align 8
  %.52 = tail call %LLVMValueRef.560567* %.49(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.19)
  %.55 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.56 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.55, align 8
  %.59 = tail call %LLVMValueRef.560567* @LLVMAddGlobal(%LLVMModuleRef.560565* %.56, %LLVMTypeRef.560566* %.29, i8* %.38)
  tail call void @LLVMSetInitializer(%LLVMValueRef.560567* %.59, %LLVMValueRef.560567* %.52)
  tail call void @LLVMSetGlobalConstant(%LLVMValueRef.560567* %.59, i1 true)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.70 = tail call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.2, %LLVMTypeRef.560566* %.29, i8* %.38)
  %.74 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.22, align 8
  %.75 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.74, i64 0, i32 37
  %.76 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %LLVMValueRef.560567*, %Expression.560401*)** %.75, align 8
  %.80 = tail call %LLVMValueRef.560567* %.76(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %LLVMValueRef.560567* %.70, %Expression.560401* %.19)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.if
  %ptr.0 = phi %LLVMValueRef.560567* [ %.59, %.5.if ], [ %.70, %.5.else ]
  %.84 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.22, align 8
  %.85 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.84, i64 0, i32 6
  %.86 = load void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)** %.85, align 8
  %.88 = bitcast %ConstId.560447* %.11 to %VarId.560441*
  tail call void %.86(%CodeGen.560615* nonnull %.1, %VarId.560441* %.88, %LLVMValueRef.560567* %ptr.0)
  ret void
}

define void @CodeGen_codegen_statement(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Statement.560393* %.3) {
.5:
  %.10 = getelementptr inbounds %Statement.560393, %Statement.560393* %.3, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.12 = icmp eq i64 %.11, 0
  br i1 %.12, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.16, i64 0, i32 53
  %.18 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IfStatement.560459*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %IfStatement.560459*)** %.17, align 8
  %.21 = bitcast %Statement.560393* %.3 to %IfStatement.560459*
  tail call void %.18(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %IfStatement.560459* %.21)
  %.26.pr = load i64, i64* %.10, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.26 = phi i64 [ %.26.pr, %.5.if ], [ %.11, %.5 ]
  %.27 = icmp eq i64 %.26, 3
  br i1 %.27, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.30 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.31, i64 0, i32 54
  %.33 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ForStatement.560465*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ForStatement.560465*)** %.32, align 8
  %.36 = bitcast %Statement.560393* %.3 to %ForStatement.560465*
  tail call void %.33(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ForStatement.560465* %.36)
  %.41.pre = load i64, i64* %.10, align 8
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif.if, %.5.endif
  %.41 = phi i64 [ %.41.pre, %.5.endif.if ], [ %.26, %.5.endif ]
  %.42 = icmp eq i64 %.41, 4
  br i1 %.42, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.45 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.45, align 8
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.46, i64 0, i32 55
  %.48 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %WhileStatement.560467*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %WhileStatement.560467*)** %.47, align 8
  %.51 = bitcast %Statement.560393* %.3 to %WhileStatement.560467*
  tail call void %.48(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %WhileStatement.560467* %.51)
  %.56.pr = load i64, i64* %.10, align 8
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.if, %.5.endif.endif
  %.56 = phi i64 [ %.56.pr, %.5.endif.endif.if ], [ %.41, %.5.endif.endif ]
  %.57 = icmp eq i64 %.56, 5
  br i1 %.57, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.61 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 8
  %.62 = load %LLVMBasicBlockRef.560568*, %LLVMBasicBlockRef.560568** %.61, align 8
  %.63 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.62)
  %.67.pre = load i64, i64* %.10, align 8
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.if, %.5.endif.endif.endif
  %.67 = phi i64 [ %.67.pre, %.5.endif.endif.endif.if ], [ %.56, %.5.endif.endif.endif ]
  %.68 = icmp eq i64 %.67, 6
  br i1 %.68, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.72 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 7
  %.73 = load %LLVMBasicBlockRef.560568*, %LLVMBasicBlockRef.560568** %.72, align 8
  %.74 = tail call %LLVMValueRef.560567* @LLVMBuildBr(%LLVMBuilderRef.560572* %.2, %LLVMBasicBlockRef.560568* %.73)
  %.78.pr = load i64, i64* %.10, align 8
  br label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif
  %.78 = phi i64 [ %.78.pr, %.5.endif.endif.endif.endif.if ], [ %.67, %.5.endif.endif.endif.endif ]
  %.79 = icmp eq i64 %.78, 1
  br i1 %.79, label %.5.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  %.82 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.83 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.82, align 8
  %.84 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.83, i64 0, i32 58
  %.85 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %VarDeclaration.560461*)** %.84, align 8
  %.88 = bitcast %Statement.560393* %.3 to %VarDeclaration.560461*
  tail call void %.85(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %VarDeclaration.560461* %.88)
  %.93.pre = load i64, i64* %.10, align 8
  br label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif
  %.93 = phi i64 [ %.93.pre, %.5.endif.endif.endif.endif.endif.if ], [ %.78, %.5.endif.endif.endif.endif.endif ]
  %.94 = icmp eq i64 %.93, 2
  br i1 %.94, label %.5.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5.endif.endif.endif.endif.endif.endif
  %.97 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.98 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.97, align 8
  %.99 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.98, i64 0, i32 59
  %.100 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ConstDeclaration.560463*)** %.99, align 8
  %.103 = bitcast %Statement.560393* %.3 to %ConstDeclaration.560463*
  tail call void %.100(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ConstDeclaration.560463* %.103)
  %.108.pr = load i64, i64* %.10, align 8
  br label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.5.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif
  %.108 = phi i64 [ %.108.pr, %.5.endif.endif.endif.endif.endif.endif.if ], [ %.93, %.5.endif.endif.endif.endif.endif.endif ]
  %.109 = icmp eq i64 %.108, 7
  br i1 %.109, label %.5.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5.endif.endif.endif.endif.endif.endif.endif
  %.112 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.113 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.112, align 8
  %.114 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.113, i64 0, i32 10
  %.115 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ReturnStatement.560469*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %ReturnStatement.560469*)** %.114, align 8
  %.118 = bitcast %Statement.560393* %.3 to %ReturnStatement.560469*
  tail call void %.115(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %ReturnStatement.560469* %.118)
  %.123.pre = load i64, i64* %.10, align 8
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif
  %.123 = phi i64 [ %.123.pre, %.5.endif.endif.endif.endif.endif.endif.endif.if ], [ %.108, %.5.endif.endif.endif.endif.endif.endif.endif ]
  %.124 = icmp eq i64 %.123, 8
  br i1 %.124, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.127 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.128 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.127, align 8
  %.129 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.128, i64 0, i32 52
  %.130 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.129, align 8
  %.133 = bitcast %Statement.560393* %.3 to %Expression.560401*
  %.134 = tail call %LLVMValueRef.560567* %.130(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Expression.560401* %.133)
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif.endif
  ret void
}

define void @CodeGen_codegen_block(%CodeGen.560615* %.1, %LLVMBuilderRef.560572* %.2, %Block.560455* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 10
  %.11 = load i1, i1* %.10, align 1
  store i1 false, i1* %.10, align 1
  %.21 = getelementptr inbounds %Block.560455, %Block.560455* %.3, i64 0, i32 1
  %.222 = load %"Array<Statement>.560457"*, %"Array<Statement>.560457"** %.21, align 8
  %.233 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.222, i64 0, i32 2
  %.244 = load i64, i64* %.233, align 8
  %.255 = icmp sgt i64 %.244, 0
  br i1 %.255, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.28 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.227 = phi %"Array<Statement>.560457"* [ %.222, %for.body.lr.ph ], [ %.22, %for.body ]
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.47, %for.body ]
  %.29 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.28, align 8
  %.30 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.29, i64 0, i32 60
  %.31 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Statement.560393*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Statement.560393*)** %.30, align 8
  %.37 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.227, i64 0, i32 0
  %.38 = load %"Array<Statement>_vtable_ty.560458"*, %"Array<Statement>_vtable_ty.560458"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<Statement>_vtable_ty.560458", %"Array<Statement>_vtable_ty.560458"* %.38, i64 0, i32 5
  %.40 = load %Statement.560393* (%"Array<Statement>.560457"*, i64)*, %Statement.560393* (%"Array<Statement>.560457"*, i64)** %.39, align 8
  %.41 = tail call %Statement.560393* %.40(%"Array<Statement>.560457"* %.227, i64 %storemerge6)
  tail call void %.31(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.2, %Statement.560393* %.41)
  %.47 = add nuw nsw i64 %storemerge6, 1
  %.22 = load %"Array<Statement>.560457"*, %"Array<Statement>.560457"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Statement>.560457", %"Array<Statement>.560457"* %.22, i64 0, i32 2
  %.24 = load i64, i64* %.23, align 8
  %.25 = icmp slt i64 %.47, %.24
  br i1 %.25, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  store i1 %.11, i1* %.10, align 1
  ret void
}

define void @CodeGen_codegen_function(%CodeGen.560615* %.1, %Function.560501* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 2
  %.9 = load %string.560217*, %string.560217** %.8, align 8
  %.10 = getelementptr inbounds %string.560217, %string.560217* %.9, i64 0, i32 0
  %.11 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.10, align 8
  %.12 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.11, i64 0, i32 11
  %.13 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.12, align 8
  %.14 = tail call i8* %.13(%string.560217* %.9)
  %.17 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.18 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.17, align 8
  %.21 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.22 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.21, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.22, i64 0, i32 9
  %.24 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.23, align 8
  %.26 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 5
  %0 = bitcast %FunctionType.560387** %.26 to %Type.560381**
  %.271 = load %Type.560381*, %Type.560381** %0, align 8
  %.29 = tail call %LLVMTypeRef.560566* %.24(%CodeGen.560615* %.1, %Type.560381* %.271, i1 false)
  %.30 = tail call %LLVMValueRef.560567* @LLVMAddFunction(%LLVMModuleRef.560565* %.18, i8* %.14, %LLVMTypeRef.560566* %.29)
  %.34 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.21, align 8
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.34, i64 0, i32 6
  %.36 = load void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)** %.35, align 8
  %.38 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 1
  %.39 = load %VarId.560441*, %VarId.560441** %.38, align 8
  tail call void %.36(%CodeGen.560615* %.1, %VarId.560441* %.39, %LLVMValueRef.560567* %.30)
  %.43 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 7
  %.44 = load i1, i1* %.43, align 1
  br i1 %.44, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  tail call void @LLVMSetLinkage(%LLVMValueRef.560567* %.30, i64 0)
  ret void

.4.endif:                                         ; preds = %.4
  %.50 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.51 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.50, align 8
  %.52 = tail call %LLVMBuilderRef.560572* @LLVMCreateBuilderInContext(%LLVMContextRef.560564* %.51)
  %.57 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.50, align 8
  %.59 = tail call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.57, %LLVMValueRef.560567* %.30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  tail call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.52, %LLVMBasicBlockRef.560568* %.59)
  %.66 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 3
  %.674 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %.66, align 8
  %.685 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.674, i64 0, i32 2
  %.696 = load i64, i64* %.685, align 8
  %.707 = icmp sgt i64 %.696, 0
  br i1 %.707, label %for.body, label %for.end

for.body:                                         ; preds = %.4.endif, %for.body
  %.679 = phi %"Array<FunctionArg>.560503"* [ %.67, %for.body ], [ %.674, %.4.endif ]
  %storemerge8 = phi i64 [ %.124, %for.body ], [ 0, %.4.endif ]
  %.76 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.679, i64 0, i32 0
  %.77 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.76, align 8
  %.78 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.77, i64 0, i32 5
  %.79 = load %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)*, %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)** %.78, align 8
  %.80 = tail call %FunctionArg.560499* %.79(%"Array<FunctionArg>.560503"* %.679, i64 %storemerge8)
  %.84 = tail call %LLVMValueRef.560567* @LLVMGetParam(%LLVMValueRef.560567* %.30, i64 %storemerge8)
  %.89 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.21, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.89, i64 0, i32 9
  %.91 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.90, align 8
  %.93 = getelementptr inbounds %FunctionArg.560499, %FunctionArg.560499* %.80, i64 0, i32 4
  %.94 = load %Type.560381*, %Type.560381** %.93, align 8
  %.95 = tail call %LLVMTypeRef.560566* %.91(%CodeGen.560615* nonnull %.1, %Type.560381* %.94, i1 true)
  %.97 = getelementptr inbounds %FunctionArg.560499, %FunctionArg.560499* %.80, i64 0, i32 6
  %.98 = load %string.560217*, %string.560217** %.97, align 8
  %.99 = getelementptr inbounds %string.560217, %string.560217* %.98, i64 0, i32 0
  %.100 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.99, align 8
  %.101 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.100, i64 0, i32 11
  %.102 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.101, align 8
  %.103 = tail call i8* %.102(%string.560217* %.98)
  %.104 = tail call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.52, %LLVMTypeRef.560566* %.95, i8* %.103)
  %.109 = tail call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.52, %LLVMValueRef.560567* %.84, %LLVMValueRef.560567* %.104)
  %.112 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.21, align 8
  %.113 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.112, i64 0, i32 6
  %.114 = load void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)** %.113, align 8
  %.116 = getelementptr inbounds %FunctionArg.560499, %FunctionArg.560499* %.80, i64 0, i32 5
  %.117 = load %VarId.560441*, %VarId.560441** %.116, align 8
  tail call void %.114(%CodeGen.560615* nonnull %.1, %VarId.560441* %.117, %LLVMValueRef.560567* %.104)
  %.124 = add nuw nsw i64 %storemerge8, 1
  %.67 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %.66, align 8
  %.68 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.67, i64 0, i32 2
  %.69 = load i64, i64* %.68, align 8
  %.70 = icmp slt i64 %.124, %.69
  br i1 %.70, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.endif
  %.128 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 2
  %1 = bitcast %LLVMValueRef.560567** %.128 to i64*
  %.1292 = load i64, i64* %1, align 8
  store %LLVMValueRef.560567* %.30, %LLVMValueRef.560567** %.128, align 8
  %.137 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.21, align 8
  %.138 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.137, i64 0, i32 61
  %.139 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)** %.138, align 8
  %.142 = getelementptr inbounds %Function.560501, %Function.560501* %.2, i64 0, i32 4
  %.143 = load %Block.560455*, %Block.560455** %.142, align 8
  tail call void %.139(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.52, %Block.560455* %.143)
  tail call void @LLVMDisposeBuilder(%LLVMBuilderRef.560572* %.52)
  store i64 %.1292, i64* %1, align 8
  ret void
}

define void @CodeGen_codegen_class(%CodeGen.560615* %.1, %Class.560513* nocapture readonly %.2) {
.4:
  %.12 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 6
  %.1330 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.12, align 8
  %.1431 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.1330, i64 0, i32 2
  %.1532 = load i64, i64* %.1431, align 8
  %.1633 = icmp sgt i64 %.1532, 0
  br i1 %.1633, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.19 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.24 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 1
  %0 = bitcast %ClassId.560397** %.24 to %TypeId.560395**
  %.72 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.75 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.114 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.146 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.207 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 3
  %1 = bitcast %Type.560381** %.207 to i64*
  %.269 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 11
  %.353 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 2
  %2 = bitcast %LLVMValueRef.560567** %.353 to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge34 = phi i64 [ 0, %for.body.lr.ph ], [ %.380, %for.incr ]
  %.20 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.21 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.20, i64 0, i32 2
  %.22 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.21, align 8
  %.251 = load %TypeId.560395*, %TypeId.560395** %0, align 8
  %.27 = call %CGClassType.560595* %.22(%CodeGen.560615* %.1, %TypeId.560395* %.251)
  %.32 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.12, align 8
  %.33 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.32, i64 0, i32 0
  %.34 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.34, i64 0, i32 5
  %.36 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.35, align 8
  %.37 = call %ClassMethod.560511* %.36(%"Array<ClassMethod>.560516"* %.32, i64 %storemerge34)
  %.40 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.37, i64 0, i32 8
  %.41 = load i1, i1* %.40, align 1
  br i1 %.41, label %for.incr, label %for.body.endif

for.incr:                                         ; preds = %for.body, %for.end.1
  %.380 = add nuw nsw i64 %storemerge34, 1
  %.13 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.13, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp slt i64 %.380, %.15
  br i1 %.16, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.4
  ret void

for.body.endif:                                   ; preds = %for.body
  %.45 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.37, i64 0, i32 1
  %.46 = load %PropId.560449*, %PropId.560449** %.45, align 8
  %.47 = call %string.560217* @create_prop_key(%PropId.560449* %.46)
  %.50 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.27, i64 0, i32 4
  %.51 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.50, align 8
  %.52 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.51, i64 0, i32 0
  %.53 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.52, align 8
  %.54 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.53, i64 0, i32 3
  %.55 = load %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)*, %LLVMValueRef.560567* (%"Map<string, LLVMValueRef>.560598"*, %string.560217*)** %.54, align 8
  %.57 = call %LLVMValueRef.560567* %.55(%"Map<string, LLVMValueRef>.560598"* %.51, %string.560217* %.47)
  %.60 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.37, i64 0, i32 4
  %.61 = load %string.560217*, %string.560217** %.60, align 8
  %.62 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.63 = bitcast i8* %.62 to %string.560217*
  %.63.repack = bitcast i8* %.62 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.63.repack, align 8
  %.63.repack2 = getelementptr inbounds i8, i8* %.62, i64 8
  %3 = bitcast i8* %.63.repack2 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.255, i64 0, i64 0), i8** %3, align 8
  %.63.repack3 = getelementptr inbounds i8, i8* %.62, i64 16
  %4 = bitcast i8* %.63.repack3 to i64*
  store i64 11, i64* %4, align 8
  %.63.repack4 = getelementptr inbounds i8, i8* %.62, i64 24
  %5 = bitcast i8* %.63.repack4 to i64*
  store i64 11, i64* %5, align 8
  %.65 = getelementptr inbounds %string.560217, %string.560217* %.61, i64 0, i32 0
  %.66 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.65, align 8
  %.67 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.66, i64 0, i32 4
  %.68 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.67, align 8
  %.69 = call i1 %.68(%string.560217* %.61, %string.560217* %.63)
  %.73 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.72, align 8
  %.76 = load %string.560217*, %string.560217** %.75, align 8
  %.79 = load %string.560217*, %string.560217** %.60, align 8
  %.80 = getelementptr inbounds %string.560217, %string.560217* %.76, i64 0, i32 0
  %.81 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.81, i64 0, i32 11
  %.83 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.82, align 8
  %.84 = call i8* %.83(%string.560217* %.76)
  %.85 = getelementptr inbounds %string.560217, %string.560217* %.79, i64 0, i32 0
  %.86 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.85, align 8
  %.87 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.86, i64 0, i32 11
  %.88 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.87, align 8
  %.89 = call i8* %.88(%string.560217* %.79)
  %.91 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.84, i8* %.89)
  %.92 = add i64 %.91, 1
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.84, i8* %.89)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.560217*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %6 = bitcast i8* %.100 to i8**
  store i8* %.94, i8** %6, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  %7 = bitcast i8* %.102 to i64*
  store i64 %.91, i64* %7, align 8
  %.104 = getelementptr inbounds i8, i8* %.96, i64 24
  %8 = bitcast i8* %.104 to i64*
  store i64 %.91, i64* %8, align 8
  %.109 = load i8* (%string.560217*)*, i8* (%string.560217*)** getelementptr inbounds (%string_vtable_ty.560218, %string_vtable_ty.560218* @string_vtable_data, i64 0, i32 11), align 8
  %.110 = call i8* %.109(%string.560217* %.97)
  %.111 = call %LLVMValueRef.560567* @LLVMGetNamedFunction(%LLVMModuleRef.560565* %.73, i8* %.110)
  %.115 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.114, align 8
  %.117 = call %LLVMBasicBlockRef.560568* @LLVMAppendBasicBlockInContext(%LLVMContextRef.560564* %.115, %LLVMValueRef.560567* %.111, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.121 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.114, align 8
  %.122 = call %LLVMBuilderRef.560572* @LLVMCreateBuilderInContext(%LLVMContextRef.560564* %.121)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.560572* %.122, %LLVMBasicBlockRef.560568* %.117)
  %.129 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.37, i64 0, i32 2
  %.130 = load i1, i1* %.129, align 1
  %9 = ptrtoint %LLVMValueRef.560567* %.111 to i64
  br i1 %.130, label %for.entry.1, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %.134 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.27, i64 0, i32 1
  %.135 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %.134, align 8
  %.136 = call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.135, i64 0)
  %.139 = call %LLVMValueRef.560567* @LLVMGetParam(%LLVMValueRef.560567* %.111, i64 0)
  %.143 = call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.122, %LLVMTypeRef.560566* %.136, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.159, i64 0, i64 0))
  %.147 = load %Program.560549*, %Program.560549** %.146, align 8
  %.149 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.37, i64 0, i32 9
  %.150 = load %ScopeId.560471*, %ScopeId.560471** %.149, align 8
  %.151 = call %Scope.560473* @get_scope(%Program.560549* %.147, %ScopeId.560471* %.150)
  %.152 = getelementptr inbounds %Scope.560473, %Scope.560473* %.151, i64 0, i32 2
  %.153 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.152, align 8
  %.154 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.153, i64 0, i32 0
  %.155 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.154, align 8
  %.156 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.155, i64 0, i32 3
  %.157 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.156, align 8
  %.158 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.159 = bitcast i8* %.158 to %string.560217*
  %.159.repack = bitcast i8* %.158 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.159.repack, align 8
  %.159.repack9 = getelementptr inbounds i8, i8* %.158, i64 8
  %10 = bitcast i8* %.159.repack9 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.159, i64 0, i64 0), i8** %10, align 8
  %.159.repack10 = getelementptr inbounds i8, i8* %.158, i64 16
  %11 = bitcast i8* %.159.repack10 to i64*
  store i64 4, i64* %11, align 8
  %.159.repack11 = getelementptr inbounds i8, i8* %.158, i64 24
  %12 = bitcast i8* %.159.repack11 to i64*
  store i64 4, i64* %12, align 8
  %.161 = call %VarId.560441* %.157(%"Map<string, VarId>.560475"* %.153, %string.560217* %.159)
  %.166 = call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.122, %LLVMValueRef.560567* %.139, %LLVMValueRef.560567* %.143)
  %.169 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.170 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.169, i64 0, i32 6
  %.171 = load void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)** %.170, align 8
  call void %.171(%CodeGen.560615* nonnull %.1, %VarId.560441* %.161, %LLVMValueRef.560567* %.143)
  br i1 %.69, label %for.body.endif.if.if, label %for.entry.1

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.178 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.27, i64 0, i32 5
  %13 = bitcast %LLVMValueRef.560567** %.178 to i64*
  %.17912 = load i64, i64* %13, align 8
  %.180 = trunc i64 %.17912 to i32
  %.182.not = icmp eq i32 %.180, 0
  br i1 %.182.not, label %for.body.endif.if.if.endif, label %for.body.endif.if.if.if

for.body.endif.if.if.if:                          ; preds = %for.body.endif.if.if
  %.186 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.187 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.186, i64 0, i32 8
  %.188 = load %LLVMValueRef.560567* (%CodeGen.560615*, i64)*, %LLVMValueRef.560567* (%CodeGen.560615*, i64)** %.187, align 8
  %.189 = call %LLVMValueRef.560567* %.188(%CodeGen.560615* nonnull %.1, i64 0)
  %index = alloca [1 x %LLVMValueRef.560567*], align 8
  %.190 = getelementptr inbounds [1 x %LLVMValueRef.560567*], [1 x %LLVMValueRef.560567*]* %index, i64 0, i64 0
  store %LLVMValueRef.560567* %.189, %LLVMValueRef.560567** %.190, align 8
  %.197 = call %LLVMValueRef.560567* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.560572* %.122, %LLVMTypeRef.560566* %.136, %LLVMValueRef.560567* %.139, %LLVMValueRef.560567** nonnull %.190, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0))
  %.202 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.178, align 8
  %.204 = call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.122, %LLVMValueRef.560567* %.202, %LLVMValueRef.560567* %.197)
  br label %for.body.endif.if.if.endif

for.body.endif.if.if.endif:                       ; preds = %for.body.endif.if.if, %for.body.endif.if.if.if
  %.2081314 = load i64, i64* %1, align 8
  %.212 = trunc i64 %.2081314 to i32
  %.214.not = icmp eq i32 %.212, 0
  %14 = inttoptr i64 %.2081314 to %ObjectType.560407*
  br i1 %.214.not, label %for.entry.1, label %for.body.endif.if.if.endif.if

for.body.endif.if.if.endif.if:                    ; preds = %for.body.endif.if.if.endif
  %.218 = load %Program.560549*, %Program.560549** %.146, align 8
  %.221 = load %ScopeId.560471*, %ScopeId.560471** %.149, align 8
  %.222 = call %Scope.560473* @get_scope(%Program.560549* %.218, %ScopeId.560471* %.221)
  %.223 = getelementptr inbounds %Scope.560473, %Scope.560473* %.222, i64 0, i32 2
  %.224 = load %"Map<string, VarId>.560475"*, %"Map<string, VarId>.560475"** %.223, align 8
  %.225 = getelementptr inbounds %"Map<string, VarId>.560475", %"Map<string, VarId>.560475"* %.224, i64 0, i32 0
  %.226 = load %"Map<string, VarId>_vtable_ty.560479"*, %"Map<string, VarId>_vtable_ty.560479"** %.225, align 8
  %.227 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.560479", %"Map<string, VarId>_vtable_ty.560479"* %.226, i64 0, i32 3
  %.228 = load %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)*, %VarId.560441* (%"Map<string, VarId>.560475"*, %string.560217*)** %.227, align 8
  %.229 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.230 = bitcast i8* %.229 to %string.560217*
  %.230.repack = bitcast i8* %.229 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.230.repack, align 8
  %.230.repack15 = getelementptr inbounds i8, i8* %.229, i64 8
  %15 = bitcast i8* %.230.repack15 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.259, i64 0, i64 0), i8** %15, align 8
  %.230.repack16 = getelementptr inbounds i8, i8* %.229, i64 16
  %16 = bitcast i8* %.230.repack16 to i64*
  store i64 5, i64* %16, align 8
  %.230.repack17 = getelementptr inbounds i8, i8* %.229, i64 24
  %17 = bitcast i8* %.230.repack17 to i64*
  store i64 5, i64* %17, align 8
  %.232 = call %VarId.560441* %.228(%"Map<string, VarId>.560475"* %.224, %string.560217* %.230)
  %18 = ptrtoint %VarId.560441* %.232 to i64
  %.235 = trunc i64 %18 to i32
  %.237.not = icmp eq i32 %.235, 0
  br i1 %.237.not, label %for.entry.1, label %for.body.endif.if.if.endif.if.if

for.body.endif.if.if.endif.if.if:                 ; preds = %for.body.endif.if.if.endif.if
  %.241 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.242 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.241, i64 0, i32 28
  %.243 = load %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)*, %CGClassType.560595* (%CodeGen.560615*, %TypeId.560395*)** %.242, align 8
  %.245 = getelementptr inbounds %ObjectType.560407, %ObjectType.560407* %14, i64 0, i32 2
  %19 = bitcast %ClassId.560397** %.245 to %TypeId.560395**
  %.24618 = load %TypeId.560395*, %TypeId.560395** %19, align 8
  %.248 = call %CGClassType.560595* %.243(%CodeGen.560615* nonnull %.1, %TypeId.560395* %.24618)
  %.249 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.248, i64 0, i32 7
  %.2501920 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.249, align 8
  %.254 = call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.122, %LLVMTypeRef.560566* %.136, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.259, i64 0, i64 0))
  %.259 = call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.122, %LLVMValueRef.560567* %.2501920, %LLVMValueRef.560567* %.254)
  %.262 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.263 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.262, i64 0, i32 6
  %.264 = load void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)** %.263, align 8
  call void %.264(%CodeGen.560615* nonnull %.1, %VarId.560441* %.232, %LLVMValueRef.560567* %.254)
  %.270 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.269, align 8
  %.271 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.270, i64 0, i32 0
  %.272 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.271, align 8
  %.273 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.272, i64 0, i32 2
  %.274 = load void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)** %.273, align 8
  %.276 = call %string.560217* @create_var_key(%VarId.560441* %.232)
  call void %.274(%"Map<string, LLVMValueRef>.560598"* %.270, %string.560217* %.276, %LLVMValueRef.560567* %.139)
  br label %for.entry.1

for.entry.1:                                      ; preds = %for.body.endif.if, %for.body.endif.if.if.endif, %for.body.endif.if.if.endif.if, %for.body.endif.if.if.endif.if.if, %for.body.endif
  %.307 = phi i64 [ 0, %for.body.endif ], [ 1, %for.body.endif.if.if.endif.if.if ], [ 1, %for.body.endif.if.if.endif.if ], [ 1, %for.body.endif.if.if.endif ], [ 1, %for.body.endif.if ]
  %.28923 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.37, i64 0, i32 7
  %.29024 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %.28923, align 8
  %.29125 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.29024, i64 0, i32 2
  %.29226 = load i64, i64* %.29125, align 8
  %.29327 = icmp sgt i64 %.29226, 0
  br i1 %.29327, label %for.body.1, label %for.end.1

for.body.1:                                       ; preds = %for.entry.1, %for.body.1
  %.29029 = phi %"Array<FunctionArg>.560503"* [ %.290, %for.body.1 ], [ %.29024, %for.entry.1 ]
  %storemerge528 = phi i64 [ %.349, %for.body.1 ], [ 0, %for.entry.1 ]
  %.299 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.29029, i64 0, i32 0
  %.300 = load %"Array<FunctionArg>_vtable_ty.560504"*, %"Array<FunctionArg>_vtable_ty.560504"** %.299, align 8
  %.301 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.560504", %"Array<FunctionArg>_vtable_ty.560504"* %.300, i64 0, i32 5
  %.302 = load %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)*, %FunctionArg.560499* (%"Array<FunctionArg>.560503"*, i64)** %.301, align 8
  %.303 = call %FunctionArg.560499* %.302(%"Array<FunctionArg>.560503"* %.29029, i64 %storemerge528)
  %.308 = add nuw i64 %.307, %storemerge528
  %.309 = call %LLVMValueRef.560567* @LLVMGetParam(%LLVMValueRef.560567* %.111, i64 %.308)
  %.314 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.315 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.314, i64 0, i32 9
  %.316 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.315, align 8
  %.318 = getelementptr inbounds %FunctionArg.560499, %FunctionArg.560499* %.303, i64 0, i32 4
  %.319 = load %Type.560381*, %Type.560381** %.318, align 8
  %.320 = call %LLVMTypeRef.560566* %.316(%CodeGen.560615* nonnull %.1, %Type.560381* %.319, i1 true)
  %.322 = getelementptr inbounds %FunctionArg.560499, %FunctionArg.560499* %.303, i64 0, i32 6
  %.323 = load %string.560217*, %string.560217** %.322, align 8
  %.324 = getelementptr inbounds %string.560217, %string.560217* %.323, i64 0, i32 0
  %.325 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.324, align 8
  %.326 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.325, i64 0, i32 11
  %.327 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.326, align 8
  %.328 = call i8* %.327(%string.560217* %.323)
  %.329 = call %LLVMValueRef.560567* @LLVMBuildAlloca(%LLVMBuilderRef.560572* %.122, %LLVMTypeRef.560566* %.320, i8* %.328)
  %.334 = call %LLVMValueRef.560567* @LLVMBuildStore(%LLVMBuilderRef.560572* %.122, %LLVMValueRef.560567* %.309, %LLVMValueRef.560567* %.329)
  %.337 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.338 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.337, i64 0, i32 6
  %.339 = load void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)*, void (%CodeGen.560615*, %VarId.560441*, %LLVMValueRef.560567*)** %.338, align 8
  %.341 = getelementptr inbounds %FunctionArg.560499, %FunctionArg.560499* %.303, i64 0, i32 5
  %.342 = load %VarId.560441*, %VarId.560441** %.341, align 8
  call void %.339(%CodeGen.560615* nonnull %.1, %VarId.560441* %.342, %LLVMValueRef.560567* %.329)
  %.349 = add nuw nsw i64 %storemerge528, 1
  %.290 = load %"Array<FunctionArg>.560503"*, %"Array<FunctionArg>.560503"** %.28923, align 8
  %.291 = getelementptr inbounds %"Array<FunctionArg>.560503", %"Array<FunctionArg>.560503"* %.290, i64 0, i32 2
  %.292 = load i64, i64* %.291, align 8
  %.293 = icmp slt i64 %.349, %.292
  br i1 %.293, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.entry.1
  %.3546 = load i64, i64* %2, align 8
  store i64 %9, i64* %2, align 8
  %.362 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.19, align 8
  %.363 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.362, i64 0, i32 61
  %.364 = load void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)*, void (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Block.560455*)** %.363, align 8
  %.367 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.37, i64 0, i32 6
  %.368 = load %Block.560455*, %Block.560455** %.367, align 8
  call void %.364(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* %.122, %Block.560455* %.368)
  store i64 %.3546, i64* %2, align 8
  call void @LLVMDisposeBuilder(%LLVMBuilderRef.560572* %.122)
  br label %for.incr
}

define %LLVMValueRef.560567* @CodeGen_declare_method(%CodeGen.560615* nocapture readonly %.1, %string.560217* %.2, %LLVMTypeRef.560566* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.11 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.10, align 8
  %.13 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.14 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.13, align 8
  %.15 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.14, i64 0, i32 11
  %.16 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.15, align 8
  %.17 = tail call i8* %.16(%string.560217* %.2)
  %.19 = tail call %LLVMValueRef.560567* @LLVMAddFunction(%LLVMModuleRef.560565* %.11, i8* %.17, %LLVMTypeRef.560566* %.3)
  ret %LLVMValueRef.560567* %.19
}

define void @CodeGen_declare_static_props(%CodeGen.560615* %.1, %CGClassType.560595* nocapture readonly %.2, %Class.560513* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 8
  %.11 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.13, i64 0, i32 4
  %.15 = load %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)*, %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)** %.14, align 8
  %.16 = tail call %"Array<Bucket<string, PropId>>.560523"* %.15(%"Map<string, PropId>.560517"* %.11)
  %.23 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.16, i64 0, i32 2
  %.245 = load i64, i64* %.23, align 8
  %.256 = icmp sgt i64 %.245, 0
  br i1 %.256, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.16, i64 0, i32 0
  %.41 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.57 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.65 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 2
  %.112 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.132 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 5
  %.148 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.2, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.161, %for.body.endif ]
  %.30 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.29, align 8
  %.31 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.30, i64 0, i32 5
  %.32 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.31, align 8
  %.33 = tail call %"Bucket<string, PropId>.560521"* %.32(%"Array<Bucket<string, PropId>>.560523"* nonnull %.16, i64 %storemerge7)
  %.34 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.33, i64 0, i32 2
  %.35110 = load %PropId.560449*, %PropId.560449** %.34, align 8
  %.38 = tail call %string.560217* @create_prop_key(%PropId.560449* %.35110)
  %.42 = load %Program.560549*, %Program.560549** %.41, align 8
  %.44 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.42, %PropId.560449* %.35110)
  %.49 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.29, align 8
  %.50 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.49, i64 0, i32 5
  %.51 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.50, align 8
  %.52 = tail call %"Bucket<string, PropId>.560521"* %.51(%"Array<Bucket<string, PropId>>.560523"* nonnull %.16, i64 %storemerge7)
  %.53 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.52, i64 0, i32 1
  %.5428 = load %string.560217*, %string.560217** %.53, align 8
  %.58 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.57, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.58, i64 0, i32 9
  %.60 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.59, align 8
  %.62 = tail call %LLVMTypeRef.560566* %.60(%CodeGen.560615* %.1, %Type.560381* %.44, i1 false)
  %.66 = load %string.560217*, %string.560217** %.65, align 8
  %.68 = getelementptr inbounds %string.560217, %string.560217* %.66, i64 0, i32 0
  %.69 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.69, i64 0, i32 11
  %.71 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.70, align 8
  %.72 = tail call i8* %.71(%string.560217* %.66)
  %.73 = getelementptr inbounds %string.560217, %string.560217* %.5428, i64 0, i32 0
  %.74 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.74, i64 0, i32 11
  %.76 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.75, align 8
  %.77 = tail call i8* %.76(%string.560217* %.5428)
  %.79 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.72, i8* %.77)
  %.80 = add i64 %.79, 1
  %.82 = tail call i8* @malloc(i64 %.80)
  %.83 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.72, i8* %.77)
  %.84 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.84 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.86, align 8
  %.88 = getelementptr inbounds i8, i8* %.84, i64 8
  %0 = bitcast i8* %.88 to i8**
  store i8* %.82, i8** %0, align 8
  %.90 = getelementptr inbounds i8, i8* %.84, i64 16
  %1 = bitcast i8* %.90 to i64*
  store i64 %.79, i64* %1, align 8
  %.92 = getelementptr inbounds i8, i8* %.84, i64 24
  %2 = bitcast i8* %.92 to i64*
  store i64 %.79, i64* %2, align 8
  %.97 = getelementptr inbounds %PropId.560449, %PropId.560449* %.35110, i64 0, i32 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp eq i64 %.98, 0
  %3 = bitcast i8* %.84 to %string.560217*
  br i1 %.99, label %for.body.if, label %for.body.else

for.end:                                          ; preds = %for.body.endif, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.103 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.57, align 8
  %.104 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.103, i64 0, i32 64
  %.105 = load %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)** %.104, align 8
  %.108 = tail call %LLVMValueRef.560567* %.105(%CodeGen.560615* nonnull %.1, %string.560217* %3, %LLVMTypeRef.560566* %.62)
  br label %for.body.endif

for.body.else:                                    ; preds = %for.body
  %.113 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.112, align 8
  %.119 = load i8* (%string.560217*)*, i8* (%string.560217*)** getelementptr inbounds (%string_vtable_ty.560218, %string_vtable_ty.560218* @string_vtable_data, i64 0, i32 11), align 8
  %.120 = tail call i8* %.119(%string.560217* %3)
  %.121 = tail call %LLVMValueRef.560567* @LLVMAddGlobal(%LLVMModuleRef.560565* %.113, %LLVMTypeRef.560566* %.62, i8* %.120)
  %.125 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.57, align 8
  %.126 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.125, i64 0, i32 52
  %.127 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.126, align 8
  %.129 = getelementptr inbounds %PropId.560449, %PropId.560449* %.35110, i64 0, i32 3
  %.130 = load i64, i64* %.129, align 8
  %.133 = load %"Array<ClassField>.560515"*, %"Array<ClassField>.560515"** %.132, align 8
  %.134 = getelementptr inbounds %"Array<ClassField>.560515", %"Array<ClassField>.560515"* %.133, i64 0, i32 0
  %.135 = load %"Array<ClassField>_vtable_ty.560518"*, %"Array<ClassField>_vtable_ty.560518"** %.134, align 8
  %.136 = getelementptr inbounds %"Array<ClassField>_vtable_ty.560518", %"Array<ClassField>_vtable_ty.560518"* %.135, i64 0, i32 5
  %.137 = load %ClassField.560509* (%"Array<ClassField>.560515"*, i64)*, %ClassField.560509* (%"Array<ClassField>.560515"*, i64)** %.136, align 8
  %.138 = tail call %ClassField.560509* %.137(%"Array<ClassField>.560515"* %.133, i64 %.130)
  %.139 = getelementptr inbounds %ClassField.560509, %ClassField.560509* %.138, i64 0, i32 6
  %.140 = load %Expression.560401*, %Expression.560401** %.139, align 8
  %.141 = tail call %LLVMValueRef.560567* %.127(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* null, %Expression.560401* %.140)
  tail call void @LLVMSetInitializer(%LLVMValueRef.560567* %.121, %LLVMValueRef.560567* %.141)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.else, %for.body.if
  %.155 = phi %LLVMValueRef.560567* [ %.121, %for.body.else ], [ %.108, %for.body.if ]
  %.149 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.148, align 8
  %.150 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.149, i64 0, i32 0
  %.151 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.150, align 8
  %.152 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.151, i64 0, i32 2
  %.153 = load void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)** %.152, align 8
  tail call void %.153(%"Map<string, LLVMValueRef>.560598"* %.149, %string.560217* %.38, %LLVMValueRef.560567* %.155)
  %.161 = add nuw nsw i64 %storemerge7, 1
  %.24 = load i64, i64* %.23, align 8
  %.25 = icmp slt i64 %.161, %.24
  br i1 %.25, label %for.body, label %for.end
}

define void @CodeGen_declare_class_props(%CodeGen.560615* %.1, %CGClassType.560595* nocapture %.2, %Class.560513* %.3, %"Array<LLVMTypeRef>.560611"* %.4) {
.6:
  %.12 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 7
  %.13 = load %"Map<string, PropId>.560517"*, %"Map<string, PropId>.560517"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, PropId>.560517", %"Map<string, PropId>.560517"* %.13, i64 0, i32 0
  %.15 = load %"Map<string, PropId>_vtable_ty.560520"*, %"Map<string, PropId>_vtable_ty.560520"** %.14, align 8
  %.16 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.560520", %"Map<string, PropId>_vtable_ty.560520"* %.15, i64 0, i32 4
  %.17 = load %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)*, %"Array<Bucket<string, PropId>>.560523"* (%"Map<string, PropId>.560517"*)** %.16, align 8
  %.18 = tail call %"Array<Bucket<string, PropId>>.560523"* %.17(%"Map<string, PropId>.560517"* %.13)
  %.21 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.23 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %"Array<LLVMValueRef>.560613"*
  %.25 = bitcast i8* %.23 to %"Array<LLVMValueRef>_vtable_ty.560614"**
  store %"Array<LLVMValueRef>_vtable_ty.560614"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.560614"** %.25, align 8
  %.27 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.27 to i8**
  store i8* %.21, i8** %0, align 8
  %.29 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.29 to i64*
  store i64 0, i64* %1, align 8
  %.31 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.31 to i64*
  store i64 8, i64* %2, align 8
  %.35 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.37 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %"Array<LLVMTypeRef>.560611"*
  %.39 = bitcast i8* %.37 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.39, align 8
  %.41 = getelementptr inbounds i8, i8* %.37, i64 8
  %3 = bitcast i8* %.41 to i8**
  store i8* %.35, i8** %3, align 8
  %.43 = getelementptr inbounds i8, i8* %.37, i64 16
  %4 = bitcast i8* %.43 to i64*
  store i64 0, i64* %4, align 8
  %.45 = getelementptr inbounds i8, i8* %.37, i64 24
  %5 = bitcast i8* %.45 to i64*
  store i64 8, i64* %5, align 8
  %.49 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.51 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %"Array<LLVMTypeRef>.560611"*
  %.53 = bitcast i8* %.51 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.53, align 8
  %.55 = getelementptr inbounds i8, i8* %.51, i64 8
  %6 = bitcast i8* %.55 to i8**
  store i8* %.49, i8** %6, align 8
  %.57 = getelementptr inbounds i8, i8* %.51, i64 16
  %7 = bitcast i8* %.57 to i64*
  store i64 0, i64* %7, align 8
  %.59 = getelementptr inbounds i8, i8* %.51, i64 24
  %8 = bitcast i8* %.59 to i64*
  store i64 8, i64* %8, align 8
  %.67 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.18, i64 0, i32 2
  %.6828 = load i64, i64* %.67, align 8
  %.6929 = icmp sgt i64 %.6828, 0
  br i1 %.6929, label %for.body.lr.ph, label %for.entry.2

for.body.lr.ph:                                   ; preds = %.6
  %.73 = getelementptr inbounds %"Array<Bucket<string, PropId>>.560523", %"Array<Bucket<string, PropId>>.560523"* %.18, i64 0, i32 0
  %.87 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.152 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 1
  %9 = bitcast %ClassId.560397** %.152 to i64*
  %.307 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.322 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.237 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 6
  %.254 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 2
  %.400 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.2, i64 0, i32 2
  %.295 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.2, i64 0, i32 4
  %.122 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.2, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge30 = phi i64 [ 0, %for.body.lr.ph ], [ %.453, %for.incr ]
  %.74 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.73, align 8
  %.75 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.74, i64 0, i32 5
  %.76 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.75, align 8
  %.77 = tail call %"Bucket<string, PropId>.560521"* %.76(%"Array<Bucket<string, PropId>>.560523"* nonnull %.18, i64 %storemerge30)
  %.78 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.77, i64 0, i32 2
  %.79336 = load %PropId.560449*, %PropId.560449** %.78, align 8
  %.84 = tail call %string.560217* @create_prop_key(%PropId.560449* %.79336)
  %.88 = load %Program.560549*, %Program.560549** %.87, align 8
  %.90 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.88, %PropId.560449* %.79336)
  %.95 = load %"Array<Bucket<string, PropId>>_vtable_ty.560524"*, %"Array<Bucket<string, PropId>>_vtable_ty.560524"** %.73, align 8
  %.96 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.560524", %"Array<Bucket<string, PropId>>_vtable_ty.560524"* %.95, i64 0, i32 5
  %.97 = load %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)*, %"Bucket<string, PropId>.560521"* (%"Array<Bucket<string, PropId>>.560523"*, i64)** %.96, align 8
  %.98 = tail call %"Bucket<string, PropId>.560521"* %.97(%"Array<Bucket<string, PropId>>.560523"* nonnull %.18, i64 %storemerge30)
  %.99 = getelementptr inbounds %"Bucket<string, PropId>.560521", %"Bucket<string, PropId>.560521"* %.98, i64 0, i32 1
  %.100437 = load %string.560217*, %string.560217** %.99, align 8
  %.104 = load %Program.560549*, %Program.560549** %.87, align 8
  %.106 = tail call i64 @get_vtable_index(%Program.560549* %.104, %PropId.560449* %.79336)
  %.109 = getelementptr inbounds %PropId.560449, %PropId.560449* %.79336, i64 0, i32 1
  %.110 = load i64, i64* %.109, align 8
  %.111 = icmp eq i64 %.110, 1
  br i1 %.111, label %for.body.if, label %for.body.else

for.incr:                                         ; preds = %for.body.if, %for.body.else.endif.endif, %for.end.1.endif.if
  %.453 = add nuw nsw i64 %storemerge30, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.453, %.68
  br i1 %.69, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr
  %.458.pre = load i64, i64* %4, align 8
  %.459 = icmp sgt i64 %.458.pre, 0
  br i1 %.459, label %for.end.if, label %for.entry.2

for.body.if:                                      ; preds = %for.body
  %.115 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.307, align 8
  %.116 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.115, i64 0, i32 9
  %.117 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.116, align 8
  %.119 = tail call %LLVMTypeRef.560566* %.117(%CodeGen.560615* nonnull %.1, %Type.560381* %.90, i1 true)
  %.123 = load %"Map<string, int>.560597"*, %"Map<string, int>.560597"** %.122, align 8
  %.124 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.123, i64 0, i32 0
  %.125 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.124, align 8
  %.126 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.125, i64 0, i32 2
  %.127 = load void (%"Map<string, int>.560597"*, %string.560217*, i64)*, void (%"Map<string, int>.560597"*, %string.560217*, i64)** %.126, align 8
  tail call void %.127(%"Map<string, int>.560597"* %.123, %string.560217* %.84, i64 %.106)
  tail call void @resize_type_array(%"Array<LLVMTypeRef>.560611"* %.52, i64 %.106)
  %.138 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.53, align 8
  %.139 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.138, i64 0, i32 3
  %.140 = load void (%"Array<LLVMTypeRef>.560611"*, i64, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, i64, %LLVMTypeRef.560566*)** %.139, align 8
  tail call void %.140(%"Array<LLVMTypeRef>.560611"* %.52, i64 %.106, %LLVMTypeRef.560566* %.119)
  br label %for.incr

for.body.else:                                    ; preds = %for.body
  %.149 = getelementptr inbounds %PropId.560449, %PropId.560449* %.79336, i64 0, i32 2
  %10 = bitcast %TypeId.560395** %.149 to i64*
  %.1507 = load i64, i64* %10, align 8
  %.1538 = load i64, i64* %9, align 8
  %.154 = trunc i64 %.1507 to i32
  %.155 = trunc i64 %.1538 to i32
  %.156 = icmp eq i32 %.154, %.155
  br i1 %.156, label %for.body.else.if, label %for.body.else.else

for.body.else.if:                                 ; preds = %for.body.else
  %11 = inttoptr i64 %.1538 to %ClassId.560397*
  %.159 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.161 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.161 to %"Array<Type>_vtable_ty.560390"**
  store %"Array<Type>_vtable_ty.560390"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.560390"** %.163, align 8
  %.165 = getelementptr inbounds i8, i8* %.161, i64 8
  %12 = bitcast i8* %.165 to i8**
  store i8* %.159, i8** %12, align 8
  %.167 = getelementptr inbounds i8, i8* %.161, i64 16
  %13 = bitcast i8* %.167 to i64*
  store i64 0, i64* %13, align 8
  %.169 = getelementptr inbounds i8, i8* %.161, i64 24
  %14 = bitcast i8* %.169 to i64*
  store i64 8, i64* %14, align 8
  %.172.cast = bitcast i8* %.161 to %"Array<Type>.560389"*
  %.176 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.177 = bitcast i8* %.176 to %ObjectType.560407*
  %.178 = bitcast i8* %.176 to %ObjectType_vtable_ty.560408**
  store %ObjectType_vtable_ty.560408* @ObjectType_vtable_data, %ObjectType_vtable_ty.560408** %.178, align 8
  tail call void @ObjectType_constructor(%ObjectType.560407* %.177, %ClassId.560397* %11)
  %.181 = bitcast i8* %.176 to %Type.560381*
  %.183 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.163, align 8
  %.184 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.183, i64 0, i32 2
  %.185 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.184, align 8
  tail call void %.185(%"Array<Type>.560389"* %.172.cast, %Type.560381* %.181)
  %.19221 = getelementptr inbounds %Type.560381, %Type.560381* %.90, i64 1
  %15 = bitcast %Type.560381* %.19221 to %"Array<Type>.560389"**
  %.19322 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %15, align 8
  %.19423 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.19322, i64 0, i32 2
  %.19524 = load i64, i64* %.19423, align 8
  %.19625 = icmp sgt i64 %.19524, 0
  %16 = ptrtoint i8* %.161 to i64
  br i1 %.19625, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.body.else.if
  %.208 = bitcast i8* %.161 to %"Array<Type>_vtable_ty.560390"**
  br label %for.body.1

for.body.else.else:                               ; preds = %for.body.else
  %.308 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.307, align 8
  %.309 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.308, i64 0, i32 9
  %.310 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.309, align 8
  %.313 = tail call %LLVMTypeRef.560566* %.310(%CodeGen.560615* nonnull %.1, %Type.560381* %.90, i1 false)
  %.317 = load %Program.560549*, %Program.560549** %.87, align 8
  %.319 = tail call %Class.560513* @get_class_from_prop_id(%Program.560549* %.317, %PropId.560449* nonnull %.79336)
  %.323 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.322, align 8
  %.325 = getelementptr inbounds %Class.560513, %Class.560513* %.319, i64 0, i32 2
  %.326 = load %string.560217*, %string.560217** %.325, align 8
  %.328 = getelementptr inbounds %string.560217, %string.560217* %.326, i64 0, i32 0
  %.329 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.328, align 8
  %.330 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.329, i64 0, i32 11
  %.331 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.330, align 8
  %.332 = tail call i8* %.331(%string.560217* %.326)
  %.333 = getelementptr inbounds %string.560217, %string.560217* %.100437, i64 0, i32 0
  %.334 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.333, align 8
  %.335 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.334, i64 0, i32 11
  %.336 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.335, align 8
  %.337 = tail call i8* %.336(%string.560217* %.100437)
  %.339 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.332, i8* %.337)
  %.340 = add i64 %.339, 1
  %.342 = tail call i8* @malloc(i64 %.340)
  %.343 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.342, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.332, i8* %.337)
  %.344 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.345 = bitcast i8* %.344 to %string.560217*
  %.346 = bitcast i8* %.344 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.346, align 8
  %.348 = getelementptr inbounds i8, i8* %.344, i64 8
  %17 = bitcast i8* %.348 to i8**
  store i8* %.342, i8** %17, align 8
  %.350 = getelementptr inbounds i8, i8* %.344, i64 16
  %18 = bitcast i8* %.350 to i64*
  store i64 %.339, i64* %18, align 8
  %.352 = getelementptr inbounds i8, i8* %.344, i64 24
  %19 = bitcast i8* %.352 to i64*
  store i64 %.339, i64* %19, align 8
  %.357 = load i8* (%string.560217*)*, i8* (%string.560217*)** getelementptr inbounds (%string_vtable_ty.560218, %string_vtable_ty.560218* @string_vtable_data, i64 0, i32 11), align 8
  %.358 = tail call i8* %.357(%string.560217* %.345)
  %.359 = tail call %LLVMValueRef.560567* @LLVMGetNamedFunction(%LLVMModuleRef.560565* %.323, i8* %.358)
  %20 = ptrtoint %LLVMValueRef.560567* %.359 to i64
  %.362 = trunc i64 %20 to i32
  %.364 = icmp eq i32 %.362, 0
  br i1 %.364, label %for.body.else.else.if, label %for.body.else.endif

for.body.else.endif:                              ; preds = %for.body.else.else, %for.body.else.else.if, %for.end.1.endif
  %.441 = phi %LLVMTypeRef.560566* [ %.313, %for.body.else.else ], [ %.313, %for.body.else.else.if ], [ %.231, %for.end.1.endif ]
  %.432 = phi %LLVMValueRef.560567* [ %.359, %for.body.else.else ], [ %.359, %for.body.else.else.if ], [ %.302, %for.end.1.endif ]
  %.415 = phi %Class.560513* [ %.319, %for.body.else.else ], [ %.319, %for.body.else.else.if ], [ %.3, %for.end.1.endif ]
  %.401 = load %"Map<string, int>.560597"*, %"Map<string, int>.560597"** %.400, align 8
  %.402 = getelementptr inbounds %"Map<string, int>.560597", %"Map<string, int>.560597"* %.401, i64 0, i32 0
  %.403 = load %"Map<string, int>_vtable_ty.560599"*, %"Map<string, int>_vtable_ty.560599"** %.402, align 8
  %.404 = getelementptr inbounds %"Map<string, int>_vtable_ty.560599", %"Map<string, int>_vtable_ty.560599"* %.403, i64 0, i32 2
  %.405 = load void (%"Map<string, int>.560597"*, %string.560217*, i64)*, void (%"Map<string, int>.560597"*, %string.560217*, i64)** %.404, align 8
  tail call void %.405(%"Map<string, int>.560597"* %.401, %string.560217* %.84, i64 %.106)
  tail call void @resize_type_array(%"Array<LLVMTypeRef>.560611"* %.38, i64 %.106)
  %.413 = getelementptr inbounds %PropId.560449, %PropId.560449* %.79336, i64 0, i32 3
  %.414 = load i64, i64* %.413, align 8
  %.416 = getelementptr inbounds %Class.560513, %Class.560513* %.415, i64 0, i32 6
  %.417 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.416, align 8
  %.418 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.417, i64 0, i32 0
  %.419 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.418, align 8
  %.420 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.419, i64 0, i32 5
  %.421 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.420, align 8
  %.422 = tail call %ClassMethod.560511* %.421(%"Array<ClassMethod>.560516"* %.417, i64 %.414)
  %.423 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.422, i64 0, i32 8
  %.424 = load i1, i1* %.423, align 1
  br i1 %.424, label %for.body.else.endif.endif, label %for.body.else.endif.if

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.19327 = phi %"Array<Type>.560389"* [ %.19322, %for.body.1.lr.ph ], [ %.193, %for.body.1 ]
  %storemerge1026 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.217, %for.body.1 ]
  %.203 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.19327, i64 0, i32 0
  %.204 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.203, align 8
  %.205 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.204, i64 0, i32 5
  %.206 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.205, align 8
  %.207 = tail call %Type.560381* %.206(%"Array<Type>.560389"* %.19327, i64 %storemerge1026)
  %.209 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.208, align 8
  %.210 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.209, i64 0, i32 2
  %.211 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.210, align 8
  tail call void %.211(%"Array<Type>.560389"* %.172.cast, %Type.560381* %.207)
  %.217 = add nuw nsw i64 %storemerge1026, 1
  %.193 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %15, align 8
  %.194 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.193, i64 0, i32 2
  %.195 = load i64, i64* %.194, align 8
  %.196 = icmp slt i64 %.217, %.195
  br i1 %.196, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.body.else.if
  %21 = bitcast %Type.560381* %.19221 to i64*
  store i64 %16, i64* %21, align 8
  %.226 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.307, align 8
  %.227 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.226, i64 0, i32 9
  %.228 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.227, align 8
  %.231 = tail call %LLVMTypeRef.560566* %.228(%CodeGen.560615* %.1, %Type.560381* nonnull %.90, i1 false)
  %.234 = getelementptr inbounds %PropId.560449, %PropId.560449* %.79336, i64 0, i32 3
  %.235 = load i64, i64* %.234, align 8
  %.238 = load %"Array<ClassMethod>.560516"*, %"Array<ClassMethod>.560516"** %.237, align 8
  %.239 = getelementptr inbounds %"Array<ClassMethod>.560516", %"Array<ClassMethod>.560516"* %.238, i64 0, i32 0
  %.240 = load %"Array<ClassMethod>_vtable_ty.560519"*, %"Array<ClassMethod>_vtable_ty.560519"** %.239, align 8
  %.241 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.560519", %"Array<ClassMethod>_vtable_ty.560519"* %.240, i64 0, i32 5
  %.242 = load %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)*, %ClassMethod.560511* (%"Array<ClassMethod>.560516"*, i64)** %.241, align 8
  %.243 = tail call %ClassMethod.560511* %.242(%"Array<ClassMethod>.560516"* %.238, i64 %.235)
  %.244 = getelementptr inbounds %ClassMethod.560511, %ClassMethod.560511* %.243, i64 0, i32 8
  %.245 = load i1, i1* %.244, align 1
  br i1 %.245, label %for.end.1.endif, label %for.end.1.if

for.end.1.if:                                     ; preds = %for.end.1
  %.250 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.307, align 8
  %.251 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.250, i64 0, i32 64
  %.252 = load %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)** %.251, align 8
  %.255 = load %string.560217*, %string.560217** %.254, align 8
  %.257 = getelementptr inbounds %string.560217, %string.560217* %.255, i64 0, i32 0
  %.258 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.257, align 8
  %.259 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.258, i64 0, i32 11
  %.260 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.259, align 8
  %.261 = tail call i8* %.260(%string.560217* %.255)
  %.262 = getelementptr inbounds %string.560217, %string.560217* %.100437, i64 0, i32 0
  %.263 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.262, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.263, i64 0, i32 11
  %.265 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.264, align 8
  %.266 = tail call i8* %.265(%string.560217* %.100437)
  %.268 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.261, i8* %.266)
  %.269 = add i64 %.268, 1
  %.271 = tail call i8* @malloc(i64 %.269)
  %.272 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.271, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.231, i64 0, i64 0), i8* %.261, i8* %.266)
  %.273 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.274 = bitcast i8* %.273 to %string.560217*
  %.275 = bitcast i8* %.273 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.275, align 8
  %.277 = getelementptr inbounds i8, i8* %.273, i64 8
  %22 = bitcast i8* %.277 to i8**
  store i8* %.271, i8** %22, align 8
  %.279 = getelementptr inbounds i8, i8* %.273, i64 16
  %23 = bitcast i8* %.279 to i64*
  store i64 %.268, i64* %23, align 8
  %.281 = getelementptr inbounds i8, i8* %.273, i64 24
  %24 = bitcast i8* %.281 to i64*
  store i64 %.268, i64* %24, align 8
  %.284 = tail call %LLVMValueRef.560567* %.252(%CodeGen.560615* nonnull %.1, %string.560217* %.274, %LLVMTypeRef.560566* %.231)
  br label %for.end.1.endif

for.end.1.endif:                                  ; preds = %for.end.1, %for.end.1.if
  %.302 = phi %LLVMValueRef.560567* [ null, %for.end.1 ], [ %.284, %for.end.1.if ]
  %.289 = load %Program.560549*, %Program.560549** %.87, align 8
  %.291 = tail call i64 @get_class_prop_visibility(%Program.560549* %.289, %PropId.560449* nonnull %.79336)
  %.292 = icmp eq i64 %.291, 1
  br i1 %.292, label %for.end.1.endif.if, label %for.body.else.endif

for.end.1.endif.if:                               ; preds = %for.end.1.endif
  %.296 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %.295, align 8
  %.297 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.296, i64 0, i32 0
  %.298 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.297, align 8
  %.299 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.298, i64 0, i32 2
  %.300 = load void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)** %.299, align 8
  tail call void %.300(%"Map<string, LLVMValueRef>.560598"* %.296, %string.560217* %.84, %LLVMValueRef.560567* %.302)
  br label %for.incr

for.body.else.else.if:                            ; preds = %for.body.else.else
  %.368 = load %string.560217*, %string.560217** %.325, align 8
  %.370 = getelementptr inbounds %string.560217, %string.560217* %.368, i64 0, i32 0
  %.371 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.370, align 8
  %.372 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.371, i64 0, i32 11
  %.373 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.372, align 8
  %.374 = tail call i8* %.373(%string.560217* %.368)
  %.376 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.333, align 8
  %.377 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.376, i64 0, i32 11
  %.378 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.377, align 8
  %.379 = tail call i8* %.378(%string.560217* nonnull %.100437)
  %.381 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.381, i64 0, i64 0), i8* %.374, i8* %.379)
  %.382 = add i64 %.381, 1
  %.384 = tail call i8* @malloc(i64 %.382)
  %.385 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.384, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.381, i64 0, i64 0), i8* %.374, i8* %.379)
  %.386 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.387 = bitcast i8* %.386 to %string.560217*
  %.388 = bitcast i8* %.386 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.388, align 8
  %.390 = getelementptr inbounds i8, i8* %.386, i64 8
  %25 = bitcast i8* %.390 to i8**
  store i8* %.384, i8** %25, align 8
  %.392 = getelementptr inbounds i8, i8* %.386, i64 16
  %26 = bitcast i8* %.392 to i64*
  store i64 %.381, i64* %26, align 8
  %.394 = getelementptr inbounds i8, i8* %.386, i64 24
  %27 = bitcast i8* %.394 to i64*
  store i64 %.381, i64* %27, align 8
  tail call void @panic(%string.560217* %.387)
  br label %for.body.else.endif

for.body.else.endif.if:                           ; preds = %for.body.else.endif
  tail call void @resize_value_array(%"Array<LLVMValueRef>.560613"* %.24, i64 %.106)
  %.434 = load %"Array<LLVMValueRef>_vtable_ty.560614"*, %"Array<LLVMValueRef>_vtable_ty.560614"** %.25, align 8
  %.435 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.560614", %"Array<LLVMValueRef>_vtable_ty.560614"* %.434, i64 0, i32 3
  %.436 = load void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)*, void (%"Array<LLVMValueRef>.560613"*, i64, %LLVMValueRef.560567*)** %.435, align 8
  tail call void %.436(%"Array<LLVMValueRef>.560613"* %.24, i64 %.106, %LLVMValueRef.560567* %.432)
  br label %for.body.else.endif.endif

for.body.else.endif.endif:                        ; preds = %for.body.else.endif, %for.body.else.endif.if
  %.442 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.441, i64 0)
  %.444 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.39, align 8
  %.445 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.444, i64 0, i32 3
  %.446 = load void (%"Array<LLVMTypeRef>.560611"*, i64, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, i64, %LLVMTypeRef.560566*)** %.445, align 8
  tail call void %.446(%"Array<LLVMTypeRef>.560611"* %.38, i64 %.106, %LLVMTypeRef.560566* %.442)
  br label %for.incr

for.end.if:                                       ; preds = %for.end
  %.462 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.463 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.462, align 8
  %28 = bitcast i8* %.41 to %LLVMTypeRef.560566***
  %.466 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %28, align 8
  %.470 = tail call %LLVMTypeRef.560566* @LLVMStructTypeInContext(%LLVMContextRef.560564* %.463, %LLVMTypeRef.560566** %.466, i64 %.458.pre, i1 true)
  %.473 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 11
  %.474 = load i1, i1* %.473, align 1
  %29 = ptrtoint %LLVMTypeRef.560566* %.470 to i64
  br i1 %.474, label %for.end.if.endif, label %for.end.if.if

for.end.if.if:                                    ; preds = %for.end.if
  %.479 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 1
  %.480 = load %LLVMModuleRef.560565*, %LLVMModuleRef.560565** %.479, align 8
  %.483 = getelementptr inbounds %Class.560513, %Class.560513* %.3, i64 0, i32 2
  %.484 = load %string.560217*, %string.560217** %.483, align 8
  %.485 = getelementptr inbounds %string.560217, %string.560217* %.484, i64 0, i32 0
  %.486 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.485, align 8
  %.487 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.486, i64 0, i32 11
  %.488 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.487, align 8
  %.489 = tail call i8* %.488(%string.560217* %.484)
  %.491 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.382, i64 0, i64 0), i8* %.489)
  %.492 = add i64 %.491, 1
  %.494 = tail call i8* @malloc(i64 %.492)
  %.495 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.494, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.382, i64 0, i64 0), i8* %.489)
  %.496 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.497 = bitcast i8* %.496 to %string.560217*
  %.498 = bitcast i8* %.496 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.498, align 8
  %.500 = getelementptr inbounds i8, i8* %.496, i64 8
  %30 = bitcast i8* %.500 to i8**
  store i8* %.494, i8** %30, align 8
  %.502 = getelementptr inbounds i8, i8* %.496, i64 16
  %31 = bitcast i8* %.502 to i64*
  store i64 %.491, i64* %31, align 8
  %.504 = getelementptr inbounds i8, i8* %.496, i64 24
  %32 = bitcast i8* %.504 to i64*
  store i64 %.491, i64* %32, align 8
  %.509 = load i8* (%string.560217*)*, i8* (%string.560217*)** getelementptr inbounds (%string_vtable_ty.560218, %string_vtable_ty.560218* @string_vtable_data, i64 0, i32 11), align 8
  %.510 = tail call i8* %.509(%string.560217* %.497)
  %.511 = tail call %LLVMValueRef.560567* @LLVMAddGlobal(%LLVMModuleRef.560565* %.480, %LLVMTypeRef.560566* %.470, i8* %.510)
  %.512 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.2, i64 0, i32 5
  store %LLVMValueRef.560567* %.511, %LLVMValueRef.560567** %.512, align 8
  %.516 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.462, align 8
  %33 = bitcast i8* %.27 to %LLVMValueRef.560567***
  %.519 = load %LLVMValueRef.560567**, %LLVMValueRef.560567*** %33, align 8
  %.522 = load i64, i64* %1, align 8
  %.523 = tail call %LLVMValueRef.560567* @LLVMConstStructInContext(%LLVMContextRef.560564* %.516, %LLVMValueRef.560567** %.519, i64 %.522, i1 true)
  %.527 = load %LLVMValueRef.560567*, %LLVMValueRef.560567** %.512, align 8
  tail call void @LLVMSetInitializer(%LLVMValueRef.560567* %.527, %LLVMValueRef.560567* %.523)
  br label %for.end.if.endif

for.end.if.endif:                                 ; preds = %for.end.if, %for.end.if.if
  %.533 = getelementptr inbounds %CGClassType.560595, %CGClassType.560595* %.2, i64 0, i32 6
  %34 = bitcast %LLVMTypeRef.560566** %.533 to i64*
  store i64 %29, i64* %34, align 8
  %.537 = tail call %LLVMTypeRef.560566* @LLVMPointerType(%LLVMTypeRef.560566* %.470, i64 0)
  %.538 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.4, i64 0, i32 0
  %.539 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.538, align 8
  %.540 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.539, i64 0, i32 2
  %.541 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.540, align 8
  tail call void %.541(%"Array<LLVMTypeRef>.560611"* %.4, %LLVMTypeRef.560566* %.537)
  br label %for.entry.2

for.entry.2:                                      ; preds = %.6, %for.end, %for.end.if.endif
  %.55017 = load i64, i64* %7, align 8
  %.55118 = icmp sgt i64 %.55017, 0
  br i1 %.55118, label %for.body.2.lr.ph, label %for.end.2

for.body.2.lr.ph:                                 ; preds = %for.entry.2
  %.561 = getelementptr inbounds %"Array<LLVMTypeRef>.560611", %"Array<LLVMTypeRef>.560611"* %.4, i64 0, i32 0
  br label %for.body.2

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %storemerge119 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.570, %for.body.2 ]
  %.557 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.53, align 8
  %.558 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.557, i64 0, i32 5
  %.559 = load %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)*, %LLVMTypeRef.560566* (%"Array<LLVMTypeRef>.560611"*, i64)** %.558, align 8
  %.560 = tail call %LLVMTypeRef.560566* %.559(%"Array<LLVMTypeRef>.560611"* nonnull %.52, i64 %storemerge119)
  %.562 = load %"Array<LLVMTypeRef>_vtable_ty.560612"*, %"Array<LLVMTypeRef>_vtable_ty.560612"** %.561, align 8
  %.563 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.560612", %"Array<LLVMTypeRef>_vtable_ty.560612"* %.562, i64 0, i32 2
  %.564 = load void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)*, void (%"Array<LLVMTypeRef>.560611"*, %LLVMTypeRef.560566*)** %.563, align 8
  tail call void %.564(%"Array<LLVMTypeRef>.560611"* %.4, %LLVMTypeRef.560566* %.560)
  %.570 = add nuw nsw i64 %storemerge119, 1
  %.550 = load i64, i64* %7, align 8
  %.551 = icmp slt i64 %.570, %.550
  br i1 %.551, label %for.body.2, label %for.end.2

for.end.2:                                        ; preds = %for.body.2, %for.entry.2
  ret void
}

define void @CodeGen_declare_class(%CodeGen.560615* %.1, %Class.560513* %.2) {
.4:
  %.7 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = bitcast i8* %.7 to %CGClassType.560595*
  %.9 = bitcast i8* %.7 to %CGClassType_vtable_ty.560596**
  store %CGClassType_vtable_ty.560596* @CGClassType_vtable_data, %CGClassType_vtable_ty.560596** %.9, align 8
  tail call void @CGClassType_constructor(%CGClassType.560595* %.8)
  %.15 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.16 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.15, align 8
  %.18 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 2
  %.19 = load %string.560217*, %string.560217** %.18, align 8
  %.20 = getelementptr inbounds %string.560217, %string.560217* %.19, i64 0, i32 0
  %.21 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.20, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.21, i64 0, i32 11
  %.23 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.22, align 8
  %.24 = tail call i8* %.23(%string.560217* %.19)
  %.25 = tail call %LLVMTypeRef.560566* @LLVMStructCreateNamed(%LLVMContextRef.560564* %.16, i8* %.24)
  %.26 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.26 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.25, %LLVMTypeRef.560566** %0, align 8
  %.29 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.30 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.29, align 8
  %.31 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.30, i64 0, i32 4
  %.32 = load void (%CodeGen.560615*, %TypeId.560395*, %CGClassType.560595*)*, void (%CodeGen.560615*, %TypeId.560395*, %CGClassType.560595*)** %.31, align 8
  %.34 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 1
  %1 = bitcast %ClassId.560397** %.34 to %TypeId.560395**
  %.351 = load %TypeId.560395*, %TypeId.560395** %1, align 8
  tail call void %.32(%CodeGen.560615* %.1, %TypeId.560395* %.351, %CGClassType.560595* %.8)
  %.40 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.42 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.42 to %"Array<LLVMTypeRef>.560611"*
  %.44 = bitcast i8* %.42 to %"Array<LLVMTypeRef>_vtable_ty.560612"**
  store %"Array<LLVMTypeRef>_vtable_ty.560612"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.560612"** %.44, align 8
  %.46 = getelementptr inbounds i8, i8* %.42, i64 8
  %2 = bitcast i8* %.46 to i8**
  store i8* %.40, i8** %2, align 8
  %.48 = getelementptr inbounds i8, i8* %.42, i64 16
  %3 = bitcast i8* %.48 to i64*
  store i64 0, i64* %3, align 8
  %.50 = getelementptr inbounds i8, i8* %.42, i64 24
  %4 = bitcast i8* %.50 to i64*
  store i64 8, i64* %4, align 8
  %.55 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.29, align 8
  %.56 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.55, i64 0, i32 65
  %.57 = load void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*)*, void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*)** %.56, align 8
  tail call void %.57(%CodeGen.560615* %.1, %CGClassType.560595* %.8, %Class.560513* %.2)
  %.63 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.29, align 8
  %.64 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.63, i64 0, i32 66
  %.65 = load void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*, %"Array<LLVMTypeRef>.560611"*)*, void (%CodeGen.560615*, %CGClassType.560595*, %Class.560513*, %"Array<LLVMTypeRef>.560611"*)** %.64, align 8
  tail call void %.65(%CodeGen.560615* %.1, %CGClassType.560595* %.8, %Class.560513* %.2, %"Array<LLVMTypeRef>.560611"* %.43)
  %.72 = load %LLVMTypeRef.560566*, %LLVMTypeRef.560566** %0, align 8
  %5 = bitcast i8* %.46 to %LLVMTypeRef.560566***
  %.75 = load %LLVMTypeRef.560566**, %LLVMTypeRef.560566*** %5, align 8
  %.78 = load i64, i64* %3, align 8
  tail call void @LLVMStructSetBody(%LLVMTypeRef.560566* %.72, %LLVMTypeRef.560566** %.75, i64 %.78, i1 true)
  %.81 = getelementptr inbounds %Class.560513, %Class.560513* %.2, i64 0, i32 4
  %6 = bitcast %PropId.560449** %.81 to i64*
  %.822 = load i64, i64* %6, align 8
  %.83 = trunc i64 %.822 to i32
  %.85.not = icmp eq i32 %.83, 0
  br i1 %.85.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %7 = inttoptr i64 %.822 to %PropId.560449*
  %.88 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 9
  %.89 = load %Program.560549*, %Program.560549** %.88, align 8
  %.93 = tail call %Type.560381* @get_class_prop_type(%Program.560549* %.89, %PropId.560449* %7)
  %.97 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.99 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.101 = bitcast i8* %.99 to %"Array<Type>_vtable_ty.560390"**
  store %"Array<Type>_vtable_ty.560390"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.560390"** %.101, align 8
  %.103 = getelementptr inbounds i8, i8* %.99, i64 8
  %8 = bitcast i8* %.103 to i8**
  store i8* %.97, i8** %8, align 8
  %.105 = getelementptr inbounds i8, i8* %.99, i64 16
  %9 = bitcast i8* %.105 to i64*
  store i64 0, i64* %9, align 8
  %.107 = getelementptr inbounds i8, i8* %.99, i64 24
  %10 = bitcast i8* %.107 to i64*
  store i64 8, i64* %10, align 8
  %.110.cast = bitcast i8* %.99 to %"Array<Type>.560389"*
  %.113 = load %ClassId.560397*, %ClassId.560397** %.34, align 8
  %.114 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.115 = bitcast i8* %.114 to %ObjectType.560407*
  %.116 = bitcast i8* %.114 to %ObjectType_vtable_ty.560408**
  store %ObjectType_vtable_ty.560408* @ObjectType_vtable_data, %ObjectType_vtable_ty.560408** %.116, align 8
  tail call void @ObjectType_constructor(%ObjectType.560407* %.115, %ClassId.560397* %.113)
  %.119 = bitcast i8* %.114 to %Type.560381*
  %.121 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.101, align 8
  %.122 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.121, i64 0, i32 2
  %.123 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.122, align 8
  tail call void %.123(%"Array<Type>.560389"* %.110.cast, %Type.560381* %.119)
  %.1306 = getelementptr inbounds %Type.560381, %Type.560381* %.93, i64 1
  %11 = bitcast %Type.560381* %.1306 to %"Array<Type>.560389"**
  %.1317 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %11, align 8
  %.1328 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.1317, i64 0, i32 2
  %.1339 = load i64, i64* %.1328, align 8
  %.13410 = icmp sgt i64 %.1339, 0
  %12 = ptrtoint i8* %.99 to i64
  br i1 %.13410, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.if
  %.146 = bitcast i8* %.99 to %"Array<Type>_vtable_ty.560390"**
  br label %for.body

.4.endif:                                         ; preds = %.4, %for.end
  %.202.sink = phi %LLVMValueRef.560567* [ %.202, %for.end ], [ null, %.4 ]
  %.203 = getelementptr inbounds i8, i8* %.7, i64 56
  %13 = bitcast i8* %.203 to %LLVMValueRef.560567**
  store %LLVMValueRef.560567* %.202.sink, %LLVMValueRef.560567** %13, align 8
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.13112 = phi %"Array<Type>.560389"* [ %.1317, %for.body.lr.ph ], [ %.131, %for.body ]
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.155, %for.body ]
  %.141 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.13112, i64 0, i32 0
  %.142 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.141, align 8
  %.143 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.142, i64 0, i32 5
  %.144 = load %Type.560381* (%"Array<Type>.560389"*, i64)*, %Type.560381* (%"Array<Type>.560389"*, i64)** %.143, align 8
  %.145 = tail call %Type.560381* %.144(%"Array<Type>.560389"* %.13112, i64 %storemerge11)
  %.147 = load %"Array<Type>_vtable_ty.560390"*, %"Array<Type>_vtable_ty.560390"** %.146, align 8
  %.148 = getelementptr inbounds %"Array<Type>_vtable_ty.560390", %"Array<Type>_vtable_ty.560390"* %.147, i64 0, i32 2
  %.149 = load void (%"Array<Type>.560389"*, %Type.560381*)*, void (%"Array<Type>.560389"*, %Type.560381*)** %.148, align 8
  tail call void %.149(%"Array<Type>.560389"* %.110.cast, %Type.560381* %.145)
  %.155 = add nuw nsw i64 %storemerge11, 1
  %.131 = load %"Array<Type>.560389"*, %"Array<Type>.560389"** %11, align 8
  %.132 = getelementptr inbounds %"Array<Type>.560389", %"Array<Type>.560389"* %.131, i64 0, i32 2
  %.133 = load i64, i64* %.132, align 8
  %.134 = icmp slt i64 %.155, %.133
  br i1 %.134, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.if
  %14 = bitcast %Type.560381* %.1306 to i64*
  store i64 %12, i64* %14, align 8
  %.164 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.29, align 8
  %.165 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.164, i64 0, i32 9
  %.166 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.165, align 8
  %.169 = tail call %LLVMTypeRef.560566* %.166(%CodeGen.560615* %.1, %Type.560381* %.93, i1 false)
  %.174 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.29, align 8
  %.175 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.174, i64 0, i32 64
  %.176 = load %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %string.560217*, %LLVMTypeRef.560566*)** %.175, align 8
  %.179 = load %string.560217*, %string.560217** %.18, align 8
  %.180 = getelementptr inbounds %string.560217, %string.560217* %.179, i64 0, i32 0
  %.181 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.180, align 8
  %.182 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.181, i64 0, i32 11
  %.183 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.182, align 8
  %.184 = tail call i8* %.183(%string.560217* %.179)
  %.186 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.383, i64 0, i64 0), i8* %.184)
  %.187 = add i64 %.186, 1
  %.189 = tail call i8* @malloc(i64 %.187)
  %.190 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.189, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.383, i64 0, i64 0), i8* %.184)
  %.191 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.192 = bitcast i8* %.191 to %string.560217*
  %.193 = bitcast i8* %.191 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.193, align 8
  %.195 = getelementptr inbounds i8, i8* %.191, i64 8
  %15 = bitcast i8* %.195 to i8**
  store i8* %.189, i8** %15, align 8
  %.197 = getelementptr inbounds i8, i8* %.191, i64 16
  %16 = bitcast i8* %.197 to i64*
  store i64 %.186, i64* %16, align 8
  %.199 = getelementptr inbounds i8, i8* %.191, i64 24
  %17 = bitcast i8* %.199 to i64*
  store i64 %.186, i64* %17, align 8
  %.202 = tail call %LLVMValueRef.560567* %.176(%CodeGen.560615* %.1, %string.560217* %.192, %LLVMTypeRef.560566* %.169)
  br label %.4.endif
}

define void @CodeGen_declare_enum(%CodeGen.560615* %.1, %Enum.560527* nocapture readonly %.2) {
.4:
  %.7 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.8 = bitcast i8* %.7 to %CGEnumType.560609*
  %.9 = bitcast i8* %.7 to %CGEnumType_vtable_ty.560610**
  store %CGEnumType_vtable_ty.560610* @CGEnumType_vtable_data, %CGEnumType_vtable_ty.560610** %.9, align 8
  tail call void @CGEnumType_constructor(%CGEnumType.560609* %.8)
  %.14 = getelementptr inbounds %Enum.560527, %Enum.560527* %.2, i64 0, i32 3
  %.15 = load %"Array<EnumField>.560529"*, %"Array<EnumField>.560529"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.15, i64 0, i32 2
  %.17 = load i64, i64* %.16, align 8
  %.18 = icmp sgt i64 %.17, 0
  br i1 %.18, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.23, i64 0, i32 9
  %.25 = load %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)*, %LLVMTypeRef.560566* (%CodeGen.560615*, %Type.560381*, i1)** %.24, align 8
  %.29 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.15, i64 0, i32 0
  %.30 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.29, align 8
  %.31 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.30, i64 0, i32 5
  %.32 = load %EnumField.560525* (%"Array<EnumField>.560529"*, i64)*, %EnumField.560525* (%"Array<EnumField>.560529"*, i64)** %.31, align 8
  %.33 = tail call %EnumField.560525* %.32(%"Array<EnumField>.560529"* %.15, i64 0)
  %.34 = getelementptr inbounds %EnumField.560525, %EnumField.560525* %.33, i64 0, i32 3
  %.35 = load %Expression.560401*, %Expression.560401** %.34, align 8
  %.36 = getelementptr inbounds %Expression.560401, %Expression.560401* %.35, i64 0, i32 4
  %.37 = load %Type.560381*, %Type.560381** %.36, align 8
  %.38 = tail call %LLVMTypeRef.560566* %.25(%CodeGen.560615* %.1, %Type.560381* %.37, i1 true)
  br label %for.entry

.4.else:                                          ; preds = %.4
  %.44 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 12
  %.45 = load %LLVMContextRef.560564*, %LLVMContextRef.560564** %.44, align 8
  %.46 = tail call %LLVMTypeRef.560566* @LLVMIntTypeInContext(%LLVMContextRef.560564* %.45, i64 64)
  br label %for.entry

for.entry:                                        ; preds = %.4.if, %.4.else
  %.38.sink = phi %LLVMTypeRef.560566* [ %.38, %.4.if ], [ %.46, %.4.else ]
  %.39 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.39 to %LLVMTypeRef.560566**
  store %LLVMTypeRef.560566* %.38.sink, %LLVMTypeRef.560566** %0, align 8
  %.563 = load %"Array<EnumField>.560529"*, %"Array<EnumField>.560529"** %.14, align 8
  %.574 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.563, i64 0, i32 2
  %.585 = load i64, i64* %.574, align 8
  %.596 = icmp sgt i64 %.585, 0
  br i1 %.596, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %.76 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.76 to %"Map<string, LLVMValueRef>.560598"**
  %.85 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.568 = phi %"Array<EnumField>.560529"* [ %.563, %for.body.lr.ph ], [ %.56, %for.body ]
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.98, %for.body ]
  %.65 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.568, i64 0, i32 0
  %.66 = load %"Array<EnumField>_vtable_ty.560530"*, %"Array<EnumField>_vtable_ty.560530"** %.65, align 8
  %.67 = getelementptr inbounds %"Array<EnumField>_vtable_ty.560530", %"Array<EnumField>_vtable_ty.560530"* %.66, i64 0, i32 5
  %.68 = load %EnumField.560525* (%"Array<EnumField>.560529"*, i64)*, %EnumField.560525* (%"Array<EnumField>.560529"*, i64)** %.67, align 8
  %.69 = tail call %EnumField.560525* %.68(%"Array<EnumField>.560529"* %.568, i64 %storemerge7)
  %.72 = getelementptr inbounds %EnumField.560525, %EnumField.560525* %.69, i64 0, i32 1
  %.7329 = load %PropId.560449*, %PropId.560449** %.72, align 8
  %.77 = load %"Map<string, LLVMValueRef>.560598"*, %"Map<string, LLVMValueRef>.560598"** %1, align 8
  %.78 = getelementptr inbounds %"Map<string, LLVMValueRef>.560598", %"Map<string, LLVMValueRef>.560598"* %.77, i64 0, i32 0
  %.79 = load %"Map<string, LLVMValueRef>_vtable_ty.560604"*, %"Map<string, LLVMValueRef>_vtable_ty.560604"** %.78, align 8
  %.80 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.560604", %"Map<string, LLVMValueRef>_vtable_ty.560604"* %.79, i64 0, i32 2
  %.81 = load void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)*, void (%"Map<string, LLVMValueRef>.560598"*, %string.560217*, %LLVMValueRef.560567*)** %.80, align 8
  %.83 = tail call %string.560217* @create_prop_key(%PropId.560449* %.7329)
  %.86 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.85, align 8
  %.87 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.86, i64 0, i32 52
  %.88 = load %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)*, %LLVMValueRef.560567* (%CodeGen.560615*, %LLVMBuilderRef.560572*, %Expression.560401*)** %.87, align 8
  %.90 = getelementptr inbounds %EnumField.560525, %EnumField.560525* %.69, i64 0, i32 3
  %.91 = load %Expression.560401*, %Expression.560401** %.90, align 8
  %.92 = tail call %LLVMValueRef.560567* %.88(%CodeGen.560615* nonnull %.1, %LLVMBuilderRef.560572* null, %Expression.560401* %.91)
  tail call void %.81(%"Map<string, LLVMValueRef>.560598"* %.77, %string.560217* %.83, %LLVMValueRef.560567* %.92)
  %.98 = add nuw nsw i64 %storemerge7, 1
  %.56 = load %"Array<EnumField>.560529"*, %"Array<EnumField>.560529"** %.14, align 8
  %.57 = getelementptr inbounds %"Array<EnumField>.560529", %"Array<EnumField>.560529"* %.56, i64 0, i32 2
  %.58 = load i64, i64* %.57, align 8
  %.59 = icmp slt i64 %.98, %.58
  br i1 %.59, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %.102 = getelementptr inbounds %CodeGen.560615, %CodeGen.560615* %.1, i64 0, i32 0
  %.103 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.102, align 8
  %.104 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.103, i64 0, i32 5
  %.105 = load void (%CodeGen.560615*, %TypeId.560395*, %CGEnumType.560609*)*, void (%CodeGen.560615*, %TypeId.560395*, %CGEnumType.560609*)** %.104, align 8
  %.107 = getelementptr inbounds %Enum.560527, %Enum.560527* %.2, i64 0, i32 1
  %2 = bitcast %EnumId.560399** %.107 to %TypeId.560395**
  %.1081 = load %TypeId.560395*, %TypeId.560395** %2, align 8
  tail call void %.105(%CodeGen.560615* nonnull %.1, %TypeId.560395* %.1081, %CGEnumType.560609* nonnull %.8)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Arraymain.flo_constructor"(%"Arraymain.flo.560629"* nocapture %.1, i64 %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = tail call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 1
  %0 = bitcast %string.560217*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Arraymain.flo_resize"(%"Arraymain.flo.560629"* nocapture %.1) #3 {
.3:
  %.7 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 1
  %0 = bitcast %string.560217*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = tail call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Arraymain.flo_swap"(%"Arraymain.flo.560629"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.560221*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = tail call i1 %.41(%Range.560221* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 1
  %.48 = load %string.560217**, %string.560217*** %.47, align 8
  %.49 = getelementptr inbounds %string.560217*, %string.560217** %.48, i64 %.2
  %4 = bitcast %string.560217** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %string.560217*, %string.560217** %.48, i64 %.3
  %5 = bitcast %string.560217** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %string.560217**, %string.560217*** %.47, align 8
  %.69 = getelementptr inbounds %string.560217*, %string.560217** %.67, i64 %.3
  %6 = bitcast %string.560217** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Arraymain.flo___sl__"(%"Arraymain.flo.560629"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 0
  %.17 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.16, align 8
  %.18 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.17, i64 0, i32 0
  %.19 = load void (%"Arraymain.flo.560629"*)*, void (%"Arraymain.flo.560629"*)** %.18, align 8
  tail call void %.19(%"Arraymain.flo.560629"* nonnull %.1)
  %.24.pre = load i64, i64* %.8, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = phi i64 [ %.9, %.4 ], [ %.24.pre, %.4.if ]
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 1
  %.31 = load %string.560217**, %string.560217*** %.30, align 8
  %.33 = getelementptr inbounds %string.560217*, %string.560217** %.31, i64 %.24
  store %string.560217* %.2, %string.560217** %.33, align 8
  ret void
}

define void @"Arraymain.flo___setitem__"(%"Arraymain.flo.560629"* nocapture readonly %.1, i64 %.2, %string.560217* %.3) {
.5:
  %.11 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.560221*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = tail call i1 %.24(%Range.560221* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 1
  %.30 = load %string.560217**, %string.560217*** %.29, align 8
  %.32 = getelementptr inbounds %string.560217*, %string.560217** %.30, i64 %.2
  store %string.560217* %.3, %string.560217** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Arraymain.flo_append"(%"Arraymain.flo.560629"* %.1, %string.560217* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 0
  %.9 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.8, align 8
  %.10 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.9, i64 0, i32 2
  %.11 = load void (%"Arraymain.flo.560629"*, %string.560217*)*, void (%"Arraymain.flo.560629"*, %string.560217*)** %.10, align 8
  tail call void %.11(%"Arraymain.flo.560629"* %.1, %string.560217* %.2)
  ret void
}

define %string.560217* @"Arraymain.flo___getitem__"(%"Arraymain.flo.560629"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = tail call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.560221*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.560222**
  store %Range_vtable_ty.560222* @Range_vtable_data, %Range_vtable_ty.560222** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.560221*, i64)*, i1 (%Range.560221*, i64)** getelementptr inbounds (%Range_vtable_ty.560222, %Range_vtable_ty.560222* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = tail call i1 %.22(%Range.560221* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 1
  %.28 = load %string.560217**, %string.560217*** %.27, align 8
  %.29 = getelementptr inbounds %string.560217*, %string.560217** %.28, i64 %.2
  %.30 = load %string.560217*, %string.560217** %.29, align 8
  ret %string.560217* %.30

.4.endif:                                         ; preds = %.4
  ret %string.560217* null
}

define i1 @"Arraymain.flo___eq__"(%"Arraymain.flo.560629"* %.1, %"Arraymain.flo.560629"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.232 = icmp sgt i64 %.9, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.27 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 0
  %.34 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ true, %for.cond ], [ false, %for.body ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.51, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.51, %for.cond ]
  %.28 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.27, align 8
  %.29 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.28, i64 0, i32 5
  %.30 = load %string.560217* (%"Arraymain.flo.560629"*, i64)*, %string.560217* (%"Arraymain.flo.560629"*, i64)** %.29, align 8
  %.31 = tail call %string.560217* %.30(%"Arraymain.flo.560629"* nonnull %.1, i64 %storemerge3)
  %.35 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.34, align 8
  %.36 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.35, i64 0, i32 5
  %.37 = load %string.560217* (%"Arraymain.flo.560629"*, i64)*, %string.560217* (%"Arraymain.flo.560629"*, i64)** %.36, align 8
  %.38 = tail call %string.560217* %.37(%"Arraymain.flo.560629"* nonnull %.2, i64 %storemerge3)
  %.39 = getelementptr inbounds %string.560217, %string.560217* %.31, i64 0, i32 0
  %.40 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.39, align 8
  %.41 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.40, i64 0, i32 4
  %.42 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.41, align 8
  %.43 = tail call i1 %.42(%string.560217* %.31, %string.560217* %.38)
  %.51 = add nuw nsw i64 %storemerge3, 1
  br i1 %.43, label %for.cond, label %.4.if
}

define i1 @"Arraymain.flo___in__"(%"Arraymain.flo.560629"* %.1, %string.560217* %.2) {
.4:
  %.12 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 0
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.cond ]
  %.19 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.18, align 8
  %.20 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.19, i64 0, i32 5
  %.21 = load %string.560217* (%"Arraymain.flo.560629"*, i64)*, %string.560217* (%"Arraymain.flo.560629"*, i64)** %.20, align 8
  %.22 = tail call %string.560217* %.21(%"Arraymain.flo.560629"* nonnull %.1, i64 %storemerge4)
  %.24 = getelementptr inbounds %string.560217, %string.560217* %.22, i64 0, i32 0
  %.25 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.24, align 8
  %.26 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.25, i64 0, i32 4
  %.27 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.26, align 8
  %.28 = tail call i1 %.27(%string.560217* %.22, %string.560217* %.2)
  %.35 = add nuw nsw i64 %storemerge4, 1
  br i1 %.28, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.body ], [ false, %for.cond ]
  ret i1 %merge
}

define i64 @"Arraymain.flo_find"(%"Arraymain.flo.560629"* nocapture readonly %.1, %string.560217* %.2) {
.4:
  %.12 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body.endif ]
  %.19 = load %string.560217**, %string.560217*** %.18, align 8
  %.20 = getelementptr inbounds %string.560217*, %string.560217** %.19, i64 %storemerge4
  %.21 = load %string.560217*, %string.560217** %.20, align 8
  %.23 = getelementptr inbounds %string.560217, %string.560217* %.21, i64 0, i32 0
  %.24 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.23, align 8
  %.25 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.24, i64 0, i32 4
  %.26 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.25, align 8
  %.27 = tail call i1 %.26(%string.560217* %.21, %string.560217* %.2)
  br i1 %.27, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ %storemerge4, %for.body ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %"Arraymain.flo.560629"* @parse_args(i64 %.1, i8** nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.10 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %"Arraymain.flo.560629"*
  %.12 = bitcast i8* %.10 to %"Arraymain.flo_vtable_ty.560630"**
  store %"Arraymain.flo_vtable_ty.560630"* @"Arraymain.flo_vtable_data", %"Arraymain.flo_vtable_ty.560630"** %.12, align 8
  %.14 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.14 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.16 to i64*
  store i64 0, i64* %1, align 8
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.18 to i64*
  store i64 8, i64* %2, align 8
  %.262 = icmp sgt i64 %.1, 0
  br i1 %.262, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %storemerge3 = phi i64 [ %.43, %for.body ], [ 0, %.4 ]
  %.31 = getelementptr inbounds i8*, i8** %.2, i64 %storemerge3
  %.32 = load i8*, i8** %.31, align 8
  %.33 = tail call %string.560217* @string_from_cstring(i8* %.32)
  %.35 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.12, align 8
  %.36 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.35, i64 0, i32 2
  %.37 = load void (%"Arraymain.flo.560629"*, %string.560217*)*, void (%"Arraymain.flo.560629"*, %string.560217*)** %.36, align 8
  tail call void %.37(%"Arraymain.flo.560629"* %.11, %string.560217* %.33)
  %.43 = add nuw nsw i64 %storemerge3, 1
  %exitcond.not = icmp eq i64 %.43, %.1
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret %"Arraymain.flo.560629"* %.11
}

define void @help(%string.560217* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.560217, %string.560217* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.7, i64 0, i32 11
  %.9 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.8, align 8
  %.10 = tail call i8* %.9(%string.560217* %.1)
  %.12 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.384, i64 0, i64 0), i8* %.10)
  %.13 = add i64 %.12, 1
  %.15 = tail call i8* @malloc(i64 %.13)
  %.16 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.384, i64 0, i64 0), i8* %.10)
  %.17 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.560217*
  %.19 = bitcast i8* %.17 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.19, align 8
  %.21 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.21 to i8**
  store i8* %.15, i8** %0, align 8
  %.23 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.23 to i64*
  store i64 %.12, i64* %1, align 8
  %.25 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.25 to i64*
  store i64 %.12, i64* %2, align 8
  tail call void @println(%string.560217* %.18)
  %.28 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.560217*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.29.repack, align 8
  %.29.repack1 = getelementptr inbounds i8, i8* %.28, i64 8
  %3 = bitcast i8* %.29.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.385, i64 0, i64 0), i8** %3, align 8
  %.29.repack2 = getelementptr inbounds i8, i8* %.28, i64 16
  %4 = bitcast i8* %.29.repack2 to i64*
  store i64 8, i64* %4, align 8
  %.29.repack3 = getelementptr inbounds i8, i8* %.28, i64 24
  %5 = bitcast i8* %.29.repack3 to i64*
  store i64 8, i64* %5, align 8
  tail call void @println(%string.560217* %.29)
  %.32 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %string.560217*
  %.33.repack = bitcast i8* %.32 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.33.repack, align 8
  %.33.repack4 = getelementptr inbounds i8, i8* %.32, i64 8
  %6 = bitcast i8* %.33.repack4 to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.386, i64 0, i64 0), i8** %6, align 8
  %.33.repack5 = getelementptr inbounds i8, i8* %.32, i64 16
  %7 = bitcast i8* %.33.repack5 to i64*
  store i64 37, i64* %7, align 8
  %.33.repack6 = getelementptr inbounds i8, i8* %.32, i64 24
  %8 = bitcast i8* %.33.repack6 to i64*
  store i64 37, i64* %8, align 8
  tail call void @println(%string.560217* %.33)
  %.36 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.560217*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.37.repack, align 8
  %.37.repack7 = getelementptr inbounds i8, i8* %.36, i64 8
  %9 = bitcast i8* %.37.repack7 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.387, i64 0, i64 0), i8** %9, align 8
  %.37.repack8 = getelementptr inbounds i8, i8* %.36, i64 16
  %10 = bitcast i8* %.37.repack8 to i64*
  store i64 40, i64* %10, align 8
  %.37.repack9 = getelementptr inbounds i8, i8* %.36, i64 24
  %11 = bitcast i8* %.37.repack9 to i64*
  store i64 40, i64* %11, align 8
  tail call void @println(%string.560217* %.37)
  %.40 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %string.560217*
  %.41.repack = bitcast i8* %.40 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.41.repack, align 8
  %.41.repack10 = getelementptr inbounds i8, i8* %.40, i64 8
  %12 = bitcast i8* %.41.repack10 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.388, i64 0, i64 0), i8** %12, align 8
  %.41.repack11 = getelementptr inbounds i8, i8* %.40, i64 16
  %13 = bitcast i8* %.41.repack11 to i64*
  store i64 35, i64* %13, align 8
  %.41.repack12 = getelementptr inbounds i8, i8* %.40, i64 24
  %14 = bitcast i8* %.41.repack12 to i64*
  store i64 35, i64* %14, align 8
  tail call void @println(%string.560217* %.41)
  %.44 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %string.560217*
  %.45.repack = bitcast i8* %.44 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.45.repack, align 8
  %.45.repack13 = getelementptr inbounds i8, i8* %.44, i64 8
  %15 = bitcast i8* %.45.repack13 to i8**
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.389, i64 0, i64 0), i8** %15, align 8
  %.45.repack14 = getelementptr inbounds i8, i8* %.44, i64 16
  %16 = bitcast i8* %.45.repack14 to i64*
  store i64 39, i64* %16, align 8
  %.45.repack15 = getelementptr inbounds i8, i8* %.44, i64 24
  %17 = bitcast i8* %.45.repack15 to i64*
  store i64 39, i64* %17, align 8
  tail call void @println(%string.560217* %.45)
  %.48 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %string.560217*
  %.49.repack = bitcast i8* %.48 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.49.repack, align 8
  %.49.repack16 = getelementptr inbounds i8, i8* %.48, i64 8
  %18 = bitcast i8* %.49.repack16 to i8**
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @str.390, i64 0, i64 0), i8** %18, align 8
  %.49.repack17 = getelementptr inbounds i8, i8* %.48, i64 16
  %19 = bitcast i8* %.49.repack17 to i64*
  store i64 42, i64* %19, align 8
  %.49.repack18 = getelementptr inbounds i8, i8* %.48, i64 24
  %20 = bitcast i8* %.49.repack18 to i64*
  store i64 42, i64* %20, align 8
  tail call void @println(%string.560217* %.49)
  %.52 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.53 = bitcast i8* %.52 to %string.560217*
  %.53.repack = bitcast i8* %.52 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.53.repack, align 8
  %.53.repack19 = getelementptr inbounds i8, i8* %.52, i64 8
  %21 = bitcast i8* %.53.repack19 to i8**
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.391, i64 0, i64 0), i8** %21, align 8
  %.53.repack20 = getelementptr inbounds i8, i8* %.52, i64 16
  %22 = bitcast i8* %.53.repack20 to i64*
  store i64 45, i64* %22, align 8
  %.53.repack21 = getelementptr inbounds i8, i8* %.52, i64 24
  %23 = bitcast i8* %.53.repack21 to i64*
  store i64 45, i64* %23, align 8
  tail call void @println(%string.560217* %.53)
  %.56 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.57 = bitcast i8* %.56 to %string.560217*
  %.57.repack = bitcast i8* %.56 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.57.repack, align 8
  %.57.repack22 = getelementptr inbounds i8, i8* %.56, i64 8
  %24 = bitcast i8* %.57.repack22 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.392, i64 0, i64 0), i8** %24, align 8
  %.57.repack23 = getelementptr inbounds i8, i8* %.56, i64 16
  %25 = bitcast i8* %.57.repack23 to i64*
  store i64 32, i64* %25, align 8
  %.57.repack24 = getelementptr inbounds i8, i8* %.56, i64 24
  %26 = bitcast i8* %.57.repack24 to i64*
  store i64 32, i64* %26, align 8
  tail call void @println(%string.560217* %.57)
  %.60 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.61 = bitcast i8* %.60 to %string.560217*
  %.61.repack = bitcast i8* %.60 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.61.repack, align 8
  %.61.repack25 = getelementptr inbounds i8, i8* %.60, i64 8
  %27 = bitcast i8* %.61.repack25 to i8**
  store i8* getelementptr inbounds ([93 x i8], [93 x i8]* @str.393, i64 0, i64 0), i8** %27, align 8
  %.61.repack26 = getelementptr inbounds i8, i8* %.60, i64 16
  %28 = bitcast i8* %.61.repack26 to i64*
  store i64 92, i64* %28, align 8
  %.61.repack27 = getelementptr inbounds i8, i8* %.60, i64 24
  %29 = bitcast i8* %.61.repack27 to i64*
  store i64 92, i64* %29, align 8
  tail call void @println(%string.560217* %.61)
  %.64 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.560217*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.65.repack, align 8
  %.65.repack28 = getelementptr inbounds i8, i8* %.64, i64 8
  %30 = bitcast i8* %.65.repack28 to i8**
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str.394, i64 0, i64 0), i8** %30, align 8
  %.65.repack29 = getelementptr inbounds i8, i8* %.64, i64 16
  %31 = bitcast i8* %.65.repack29 to i64*
  store i64 30, i64* %31, align 8
  %.65.repack30 = getelementptr inbounds i8, i8* %.64, i64 24
  %32 = bitcast i8* %.65.repack30 to i64*
  store i64 30, i64* %32, align 8
  tail call void @println(%string.560217* %.65)
  ret void
}

define i1 @flag(%"Arraymain.flo.560629"* %.1, %string.560217* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 0
  %.10 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.9, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.10, i64 0, i32 7
  %.12 = load i1 (%"Arraymain.flo.560629"*, %string.560217*)*, i1 (%"Arraymain.flo.560629"*, %string.560217*)** %.11, align 8
  %.13 = tail call i1 %.12(%"Arraymain.flo.560629"* %.1, %string.560217* %.2)
  ret i1 %.13
}

define %string.560217* @flag_value_or(%"Arraymain.flo.560629"* %.1, %string.560217* %.2, %string.560217* readnone %.3) local_unnamed_addr {
.5:
  %.10 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 0
  %.11 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.10, align 8
  %.12 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.11, i64 0, i32 8
  %.13 = load i64 (%"Arraymain.flo.560629"*, %string.560217*)*, i64 (%"Arraymain.flo.560629"*, %string.560217*)** %.12, align 8
  %.15 = tail call i64 %.13(%"Arraymain.flo.560629"* %.1, %string.560217* %.2)
  %.19.not = icmp eq i64 %.15, -1
  br i1 %.19.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.22 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.1, i64 0, i32 2
  %.23 = load i64, i64* %.22, align 8
  %.25 = add nuw i64 %.15, 1
  %.29 = icmp sgt i64 %.23, %.25
  br i1 %.29, label %.5.if.if, label %.5.if.else

.5.endif:                                         ; preds = %.5, %.5.if.else
  ret %string.560217* %.3

.5.if.if:                                         ; preds = %.5.if
  %.34 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.10, align 8
  %.35 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.34, i64 0, i32 5
  %.36 = load %string.560217* (%"Arraymain.flo.560629"*, i64)*, %string.560217* (%"Arraymain.flo.560629"*, i64)** %.35, align 8
  %.37 = tail call %string.560217* %.36(%"Arraymain.flo.560629"* nonnull %.1, i64 %.25)
  ret %string.560217* %.37

.5.if.else:                                       ; preds = %.5.if
  %.40 = getelementptr inbounds %string.560217, %string.560217* %.2, i64 0, i32 0
  %.41 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.40, align 8
  %.42 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.41, i64 0, i32 11
  %.43 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.42, align 8
  %.44 = tail call i8* %.43(%string.560217* %.2)
  %.46 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.395, i64 0, i64 0), i8* %.44)
  %.47 = add i64 %.46, 1
  %.49 = tail call i8* @malloc(i64 %.47)
  %.50 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.49, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.395, i64 0, i64 0), i8* %.44)
  %.51 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %string.560217*
  %.53 = bitcast i8* %.51 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.53, align 8
  %.55 = getelementptr inbounds i8, i8* %.51, i64 8
  %0 = bitcast i8* %.55 to i8**
  store i8* %.49, i8** %0, align 8
  %.57 = getelementptr inbounds i8, i8* %.51, i64 16
  %1 = bitcast i8* %.57 to i64*
  store i64 %.46, i64* %1, align 8
  %.59 = getelementptr inbounds i8, i8* %.51, i64 24
  %2 = bitcast i8* %.59 to i64*
  store i64 %.46, i64* %2, align 8
  tail call void @print_message_error(i64 4, %string.560217* %.52)
  br label %.5.endif
}

define i64 @main(i64 %.1, i8** nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = icmp sgt i64 %.1, 1
  br i1 %.9, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.13 = tail call %"Arraymain.flo.560629"* @parse_args(i64 %.1, i8** %.2)
  %.16 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %string.560217*
  %.17.repack = bitcast i8* %.16 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.17.repack, align 8
  %.17.repack4 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.17.repack4 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.396, i64 0, i64 0), i8** %0, align 8
  %.17.repack5 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.17.repack5 to i64*
  store i64 2, i64* %1, align 8
  %.17.repack6 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.17.repack6 to i64*
  store i64 2, i64* %2, align 8
  %.19 = tail call i1 @flag(%"Arraymain.flo.560629"* %.13, %string.560217* %.17)
  %.21 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %string.560217*
  %.22.repack = bitcast i8* %.21 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.22.repack, align 8
  %.22.repack7 = getelementptr inbounds i8, i8* %.21, i64 8
  %3 = bitcast i8* %.22.repack7 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.397, i64 0, i64 0), i8** %3, align 8
  %.22.repack8 = getelementptr inbounds i8, i8* %.21, i64 16
  %4 = bitcast i8* %.22.repack8 to i64*
  store i64 9, i64* %4, align 8
  %.22.repack9 = getelementptr inbounds i8, i8* %.21, i64 24
  %5 = bitcast i8* %.22.repack9 to i64*
  store i64 9, i64* %5, align 8
  %.24 = tail call i1 @flag(%"Arraymain.flo.560629"* %.13, %string.560217* %.22)
  %.25 = or i1 %.19, %.24
  %.27 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.28 = bitcast i8* %.27 to %string.560217*
  %.28.repack = bitcast i8* %.27 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.28.repack, align 8
  %.28.repack46 = getelementptr inbounds i8, i8* %.27, i64 8
  %6 = bitcast i8* %.28.repack46 to i8**
  br i1 %.25, label %.4.if.if, label %.4.if.endif

.4.else:                                          ; preds = %.4
  %.343 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.344 = bitcast i8* %.343 to %string.560217*
  %.344.repack = bitcast i8* %.343 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.344.repack, align 8
  %.344.repack1 = getelementptr inbounds i8, i8* %.343, i64 8
  %7 = bitcast i8* %.344.repack1 to i8**
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.409, i64 0, i64 0), i8** %7, align 8
  %.344.repack2 = getelementptr inbounds i8, i8* %.343, i64 16
  %8 = bitcast i8* %.344.repack2 to i64*
  store i64 24, i64* %8, align 8
  %.344.repack3 = getelementptr inbounds i8, i8* %.343, i64 24
  %9 = bitcast i8* %.344.repack3 to i64*
  store i64 24, i64* %9, align 8
  tail call void @print_message_error(i64 4, %string.560217* %.344)
  ret i64 1

.4.endif:                                         ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif, %.4.if.endif.endif.endif.endif.endif.endif, %.4.if.endif.endif.endif.endif, %.4.if.endif.endif.endif.e...endif
  %merge = phi i64 [ %code.0, %.4.if.endif.endif.endif.e...endif ], [ 1, %.4.if.endif.endif.endif.endif ], [ 1, %.4.if.endif.endif.endif.endif.endif.endif ], [ 1, %.4.if.endif.endif.endif.endif.endif.endif.endif ]
  ret i64 %merge

.4.if.if:                                         ; preds = %.4.if
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.398, i64 0, i64 0), i8** %6, align 8
  %.28.repack47 = getelementptr inbounds i8, i8* %.27, i64 16
  %10 = bitcast i8* %.28.repack47 to i64*
  store i64 19, i64* %10, align 8
  %.28.repack48 = getelementptr inbounds i8, i8* %.27, i64 24
  %11 = bitcast i8* %.28.repack48 to i64*
  store i64 19, i64* %11, align 8
  tail call void @println(%string.560217* %.28)
  ret i64 0

.4.if.endif:                                      ; preds = %.4.if
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.399, i64 0, i64 0), i8** %6, align 8
  %.34.repack11 = getelementptr inbounds i8, i8* %.27, i64 16
  %12 = bitcast i8* %.34.repack11 to i64*
  store i64 2, i64* %12, align 8
  %.34.repack12 = getelementptr inbounds i8, i8* %.27, i64 24
  %13 = bitcast i8* %.34.repack12 to i64*
  store i64 2, i64* %13, align 8
  %.36 = tail call i1 @flag(%"Arraymain.flo.560629"* %.13, %string.560217* %.28)
  %.38 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.560217*
  %.39.repack = bitcast i8* %.38 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.39.repack, align 8
  %.39.repack13 = getelementptr inbounds i8, i8* %.38, i64 8
  %14 = bitcast i8* %.39.repack13 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.400, i64 0, i64 0), i8** %14, align 8
  %.39.repack14 = getelementptr inbounds i8, i8* %.38, i64 16
  %15 = bitcast i8* %.39.repack14 to i64*
  store i64 6, i64* %15, align 8
  %.39.repack15 = getelementptr inbounds i8, i8* %.38, i64 24
  %16 = bitcast i8* %.39.repack15 to i64*
  store i64 6, i64* %16, align 8
  %.41 = tail call i1 @flag(%"Arraymain.flo.560629"* %.13, %string.560217* %.39)
  %.42 = or i1 %.36, %.41
  %.45 = getelementptr inbounds %"Arraymain.flo.560629", %"Arraymain.flo.560629"* %.13, i64 0, i32 0
  %.46 = load %"Arraymain.flo_vtable_ty.560630"*, %"Arraymain.flo_vtable_ty.560630"** %.45, align 8
  %.47 = getelementptr inbounds %"Arraymain.flo_vtable_ty.560630", %"Arraymain.flo_vtable_ty.560630"* %.46, i64 0, i32 5
  %.48 = load %string.560217* (%"Arraymain.flo.560629"*, i64)*, %string.560217* (%"Arraymain.flo.560629"*, i64)** %.47, align 8
  br i1 %.42, label %.4.if.endif.if, label %.4.if.endif.endif

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.49 = tail call %string.560217* %.48(%"Arraymain.flo.560629"* nonnull %.13, i64 0)
  tail call void @help(%string.560217* %.49)
  ret i64 0

.4.if.endif.endif:                                ; preds = %.4.if.endif
  %.57 = tail call %string.560217* %.48(%"Arraymain.flo.560629"* nonnull %.13, i64 1)
  %.59 = tail call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.60 = bitcast i8* %.59 to %Compiler.560235*
  %.61 = bitcast i8* %.59 to %Compiler_vtable_ty.560236**
  store %Compiler_vtable_ty.560236* @Compiler_vtable_data, %Compiler_vtable_ty.560236** %.61, align 8
  tail call void @Compiler_constructor(%Compiler.560235* %.60)
  %.66 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.67 = bitcast i8* %.66 to %string.560217*
  %.67.repack = bitcast i8* %.66 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.67.repack, align 8
  %.67.repack16 = getelementptr inbounds i8, i8* %.66, i64 8
  %17 = bitcast i8* %.67.repack16 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.401, i64 0, i64 0), i8** %17, align 8
  %.67.repack17 = getelementptr inbounds i8, i8* %.66, i64 16
  %18 = bitcast i8* %.67.repack17 to i64*
  store i64 2, i64* %18, align 8
  %.67.repack18 = getelementptr inbounds i8, i8* %.66, i64 24
  %19 = bitcast i8* %.67.repack18 to i64*
  store i64 2, i64* %19, align 8
  %.69 = tail call i1 @flag(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.67)
  br i1 %.69, label %.4.if.endif.endif.if, label %.4.if.endif.endif.endif

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.72 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.560217*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.73.repack, align 8
  %.73.repack43 = getelementptr inbounds i8, i8* %.72, i64 8
  %20 = bitcast i8* %.73.repack43 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.401, i64 0, i64 0), i8** %20, align 8
  %.73.repack44 = getelementptr inbounds i8, i8* %.72, i64 16
  %21 = bitcast i8* %.73.repack44 to i64*
  store i64 2, i64* %21, align 8
  %.73.repack45 = getelementptr inbounds i8, i8* %.72, i64 24
  %22 = bitcast i8* %.73.repack45 to i64*
  store i64 2, i64* %22, align 8
  %.75 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.76 = bitcast i8* %.75 to %string.560217*
  %.77 = bitcast i8* %.75 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.77, align 8
  %.79 = getelementptr inbounds i8, i8* %.75, i64 8
  %23 = bitcast i8* %.79 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %23, align 8
  %.81 = getelementptr inbounds i8, i8* %.75, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.81, i8 0, i64 16, i1 false)
  %.85 = tail call %string.560217* @flag_value_or(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.73, %string.560217* %.76)
  %.88 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.89 = bitcast i8* %.88 to %string.560217*
  %.90 = bitcast i8* %.88 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.90, align 8
  %.92 = getelementptr inbounds i8, i8* %.88, i64 8
  %24 = bitcast i8* %.92 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %24, align 8
  %.94 = getelementptr inbounds i8, i8* %.88, i64 16
  %.98 = getelementptr inbounds %string.560217, %string.560217* %.85, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.94, i8 0, i64 16, i1 false)
  %.99 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.98, align 8
  %.100 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.99, i64 0, i32 4
  %.101 = load i1 (%string.560217*, %string.560217*)*, i1 (%string.560217*, %string.560217*)** %.100, align 8
  %.102 = tail call i1 %.101(%string.560217* %.85, %string.560217* %.89)
  br i1 %.102, label %.4.if.endif.endif.endif, label %.4.if.endif.endif.if.if

.4.if.endif.endif.endif:                          ; preds = %.4.if.endif.endif.if.if, %.4.if.endif.endif.if, %.4.if.endif.endif
  %.115 = bitcast i8* %.59 to %Compiler_vtable_ty.560236**
  %.116 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.115, align 8
  %.117 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.116, i64 0, i32 2
  %.118 = load %FileId.560231* (%Compiler.560235*, %string.560217*)*, %FileId.560231* (%Compiler.560235*, %string.560217*)** %.117, align 8
  %.120 = tail call %FileId.560231* %.118(%Compiler.560235* %.60, %string.560217* %.57)
  %.124 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.115, align 8
  %.125 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.124, i64 0, i32 3
  %.126 = load i1 (%Compiler.560235*, %FileId.560231*)*, i1 (%Compiler.560235*, %FileId.560231*)** %.125, align 8
  %.128 = tail call i1 %.126(%Compiler.560235* %.60, %FileId.560231* %.120)
  br i1 %.128, label %.4.if.endif.endif.endif.endif, label %.4.if.endif.endif.endif.if

.4.if.endif.endif.if.if:                          ; preds = %.4.if.endif.endif.if
  %.106 = bitcast i8* %.59 to %Compiler_vtable_ty.560236**
  %.107 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.106, align 8
  %.108 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.107, i64 0, i32 0
  %.109 = load void (%Compiler.560235*, %string.560217*)*, void (%Compiler.560235*, %string.560217*)** %.108, align 8
  tail call void %.109(%Compiler.560235* %.60, %string.560217* %.85)
  br label %.4.if.endif.endif.endif

.4.if.endif.endif.endif.if:                       ; preds = %.4.if.endif.endif.endif
  %.132 = getelementptr inbounds %string.560217, %string.560217* %.57, i64 0, i32 0
  %.133 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.132, align 8
  %.134 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.133, i64 0, i32 11
  %.135 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.134, align 8
  %.136 = tail call i8* %.135(%string.560217* %.57)
  %.138 = tail call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.237, i64 0, i64 0), i8* %.136)
  %.139 = add i64 %.138, 1
  %.141 = tail call i8* @malloc(i64 %.139)
  %.142 = tail call i64 (i8*, i8*, ...) @sprintf(i8* %.141, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.237, i64 0, i64 0), i8* %.136)
  %.143 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.144 = bitcast i8* %.143 to %string.560217*
  %.145 = bitcast i8* %.143 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.145, align 8
  %.147 = getelementptr inbounds i8, i8* %.143, i64 8
  %25 = bitcast i8* %.147 to i8**
  store i8* %.141, i8** %25, align 8
  %.149 = getelementptr inbounds i8, i8* %.143, i64 16
  %26 = bitcast i8* %.149 to i64*
  store i64 %.138, i64* %26, align 8
  %.151 = getelementptr inbounds i8, i8* %.143, i64 24
  %27 = bitcast i8* %.151 to i64*
  store i64 %.138, i64* %27, align 8
  tail call void @print_message_error(i64 3, %string.560217* %.144)
  ret i64 1

.4.if.endif.endif.endif.endif:                    ; preds = %.4.if.endif.endif.endif
  %.155 = tail call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.156 = bitcast i8* %.155 to %Lexer.560265*
  %.157 = bitcast i8* %.155 to %Lexer_vtable_ty.560266**
  store %Lexer_vtable_ty.560266* @Lexer_vtable_data, %Lexer_vtable_ty.560266** %.157, align 8
  tail call void @Lexer_constructor(%Lexer.560265* %.156)
  %.163 = load %Lexer_vtable_ty.560266*, %Lexer_vtable_ty.560266** %.157, align 8
  %.164 = getelementptr inbounds %Lexer_vtable_ty.560266, %Lexer_vtable_ty.560266* %.163, i64 0, i32 22
  %.165 = load %"Array<Token>.560259"* (%Lexer.560265*, %string.560217*, %"Array<FloError>.560238"*)*, %"Array<Token>.560259"* (%Lexer.560265*, %string.560217*, %"Array<FloError>.560238"*)** %.164, align 8
  %.167 = getelementptr inbounds i8, i8* %.59, i64 24
  %28 = bitcast i8* %.167 to %string.560217**
  %.168 = load %string.560217*, %string.560217** %28, align 8
  %.170 = getelementptr inbounds i8, i8* %.59, i64 48
  %29 = bitcast i8* %.170 to %"Array<FloError>.560238"**
  %.171 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %29, align 8
  %.172 = tail call %"Array<Token>.560259"* %.165(%Lexer.560265* %.156, %string.560217* %.168, %"Array<FloError>.560238"* %.171)
  %.176 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.115, align 8
  %.177 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.176, i64 0, i32 4
  %.178 = load i1 (%Compiler.560235*)*, i1 (%Compiler.560235*)** %.177, align 8
  %.179 = tail call i1 %.178(%Compiler.560235* nonnull %.60)
  br i1 %.179, label %.4.endif, label %.4.if.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif:              ; preds = %.4.if.endif.endif.endif.endif
  %.183 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.184 = bitcast i8* %.183 to %string.560217*
  %.184.repack = bitcast i8* %.183 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.184.repack, align 8
  %.184.repack19 = getelementptr inbounds i8, i8* %.183, i64 8
  %30 = bitcast i8* %.184.repack19 to i8**
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.402, i64 0, i64 0), i8** %30, align 8
  %.184.repack20 = getelementptr inbounds i8, i8* %.183, i64 16
  %31 = bitcast i8* %.184.repack20 to i64*
  store i64 14, i64* %31, align 8
  %.184.repack21 = getelementptr inbounds i8, i8* %.183, i64 24
  %32 = bitcast i8* %.184.repack21 to i64*
  store i64 14, i64* %32, align 8
  %.186 = tail call i1 @flag(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.184)
  br i1 %.186, label %.4.if.endif.endif.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.if:           ; preds = %.4.if.endif.endif.endif.endif.endif
  %.191 = load %string.560217*, %string.560217** %28, align 8
  tail call void @print_tokens(%"Array<Token>.560259"* %.172, %string.560217* %.191)
  br label %.4.if.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif:        ; preds = %.4.if.endif.endif.endif.endif.endif.if, %.4.if.endif.endif.endif.endif.endif
  %.194 = tail call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.195 = bitcast i8* %.194 to %Parser.560379*
  %.196 = bitcast i8* %.194 to %Parser_vtable_ty.560380**
  store %Parser_vtable_ty.560380* @Parser_vtable_data, %Parser_vtable_ty.560380** %.196, align 8
  tail call void @Parser_constructor(%Parser.560379* %.195)
  %.202 = load %Parser_vtable_ty.560380*, %Parser_vtable_ty.560380** %.196, align 8
  %.203 = getelementptr inbounds %Parser_vtable_ty.560380, %Parser_vtable_ty.560380* %.202, i64 0, i32 57
  %.204 = load %ModuleAST.560363* (%Parser.560379*, %"Array<Token>.560259"*, %"Array<FloError>.560238"*)*, %ModuleAST.560363* (%Parser.560379*, %"Array<Token>.560259"*, %"Array<FloError>.560238"*)** %.203, align 8
  %.208 = load %"Array<FloError>.560238"*, %"Array<FloError>.560238"** %29, align 8
  %.209 = tail call %ModuleAST.560363* %.204(%Parser.560379* %.195, %"Array<Token>.560259"* %.172, %"Array<FloError>.560238"* %.208)
  %.213 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.115, align 8
  %.214 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.213, i64 0, i32 4
  %.215 = load i1 (%Compiler.560235*)*, i1 (%Compiler.560235*)** %.214, align 8
  %.216 = tail call i1 %.215(%Compiler.560235* nonnull %.60)
  br i1 %.216, label %.4.endif, label %.4.if.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.endif:  ; preds = %.4.if.endif.endif.endif.endif.endif.endif
  %.219 = tail call dereferenceable_or_null(80) i8* @malloc(i64 80)
  %.220 = bitcast i8* %.219 to %TypeChecker.560555*
  %.221 = bitcast i8* %.219 to %TypeChecker_vtable_ty.560556**
  store %TypeChecker_vtable_ty.560556* @TypeChecker_vtable_data, %TypeChecker_vtable_ty.560556** %.221, align 8
  tail call void @TypeChecker_constructor(%TypeChecker.560555* %.220)
  %.227 = load %TypeChecker_vtable_ty.560556*, %TypeChecker_vtable_ty.560556** %.221, align 8
  %.228 = getelementptr inbounds %TypeChecker_vtable_ty.560556, %TypeChecker_vtable_ty.560556* %.227, i64 0, i32 18
  %.229 = load %Program.560549* (%TypeChecker.560555*, %ModuleAST.560363*, %Compiler.560235*, %string.560217*)*, %Program.560549* (%TypeChecker.560555*, %ModuleAST.560363*, %Compiler.560235*, %string.560217*)** %.228, align 8
  %.233 = tail call %Program.560549* %.229(%TypeChecker.560555* %.220, %ModuleAST.560363* %.209, %Compiler.560235* nonnull %.60, %string.560217* %.57)
  %.237 = load %Compiler_vtable_ty.560236*, %Compiler_vtable_ty.560236** %.115, align 8
  %.238 = getelementptr inbounds %Compiler_vtable_ty.560236, %Compiler_vtable_ty.560236* %.237, i64 0, i32 4
  %.239 = load i1 (%Compiler.560235*)*, i1 (%Compiler.560235*)** %.238, align 8
  %.240 = tail call i1 %.239(%Compiler.560235* nonnull %.60)
  br i1 %.240, label %.4.endif, label %.4.if.endif.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif
  %.243 = tail call dereferenceable_or_null(104) i8* @malloc(i64 104)
  %.244 = bitcast i8* %.243 to %CodeGen.560615*
  %.245 = bitcast i8* %.243 to %CodeGen_vtable_ty.560616**
  store %CodeGen_vtable_ty.560616* @CodeGen_vtable_data, %CodeGen_vtable_ty.560616** %.245, align 8
  tail call void @CodeGen_constructor(%CodeGen.560615* %.244)
  %.251 = load %CodeGen_vtable_ty.560616*, %CodeGen_vtable_ty.560616** %.245, align 8
  %.252 = getelementptr inbounds %CodeGen_vtable_ty.560616, %CodeGen_vtable_ty.560616* %.251, i64 0, i32 0
  %.253 = load %GeneratedModule.560591* (%CodeGen.560615*, %Program.560549*)*, %GeneratedModule.560591* (%CodeGen.560615*, %Program.560549*)** %.252, align 8
  %.255 = tail call %GeneratedModule.560591* %.253(%CodeGen.560615* %.244, %Program.560549* %.233)
  %.258 = getelementptr inbounds %GeneratedModule.560591, %GeneratedModule.560591* %.255, i64 0, i32 0
  %.259 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.258, align 8
  %.260 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.259, i64 0, i32 1
  %.261 = load void (%GeneratedModule.560591*, i64)*, void (%GeneratedModule.560591*, i64)** %.260, align 8
  %.263 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.264 = bitcast i8* %.263 to %string.560217*
  %.264.repack = bitcast i8* %.263 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.264.repack, align 8
  %.264.repack22 = getelementptr inbounds i8, i8* %.263, i64 8
  %33 = bitcast i8* %.264.repack22 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.403, i64 0, i64 0), i8** %33, align 8
  %.264.repack23 = getelementptr inbounds i8, i8* %.263, i64 16
  %34 = bitcast i8* %.264.repack23 to i64*
  store i64 2, i64* %34, align 8
  %.264.repack24 = getelementptr inbounds i8, i8* %.263, i64 24
  %35 = bitcast i8* %.264.repack24 to i64*
  store i64 2, i64* %35, align 8
  %.266 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.267 = bitcast i8* %.266 to %string.560217*
  %.267.repack = bitcast i8* %.266 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.267.repack, align 8
  %.267.repack25 = getelementptr inbounds i8, i8* %.266, i64 8
  %36 = bitcast i8* %.267.repack25 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.404, i64 0, i64 0), i8** %36, align 8
  %.267.repack26 = getelementptr inbounds i8, i8* %.266, i64 16
  %37 = bitcast i8* %.267.repack26 to i64*
  store i64 1, i64* %37, align 8
  %.267.repack27 = getelementptr inbounds i8, i8* %.266, i64 24
  %38 = bitcast i8* %.267.repack27 to i64*
  store i64 1, i64* %38, align 8
  %.269 = tail call %string.560217* @flag_value_or(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.264, %string.560217* %.267)
  %.270 = getelementptr inbounds %string.560217, %string.560217* %.269, i64 0, i32 0
  %.271 = load %string_vtable_ty.560218*, %string_vtable_ty.560218** %.270, align 8
  %.272 = getelementptr inbounds %string_vtable_ty.560218, %string_vtable_ty.560218* %.271, i64 0, i32 11
  %.273 = load i8* (%string.560217*)*, i8* (%string.560217*)** %.272, align 8
  %.274 = tail call i8* %.273(%string.560217* %.269)
  %.275 = tail call i32 @atoi(i8* %.274)
  %.276 = zext i32 %.275 to i64
  tail call void %.261(%GeneratedModule.560591* %.255, i64 %.276)
  %.279 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.280 = bitcast i8* %.279 to %string.560217*
  %.280.repack = bitcast i8* %.279 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.280.repack, align 8
  %.280.repack28 = getelementptr inbounds i8, i8* %.279, i64 8
  %39 = bitcast i8* %.280.repack28 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.405, i64 0, i64 0), i8** %39, align 8
  %.280.repack29 = getelementptr inbounds i8, i8* %.279, i64 16
  %40 = bitcast i8* %.280.repack29 to i64*
  store i64 11, i64* %40, align 8
  %.280.repack30 = getelementptr inbounds i8, i8* %.279, i64 24
  %41 = bitcast i8* %.280.repack30 to i64*
  store i64 11, i64* %41, align 8
  %.282 = tail call i1 @flag(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.280)
  br i1 %.282, label %.4.if.endif.endif.endif.e...if, label %.4.if.endif.endif.endif.e...else

.4.if.endif.endif.endif.e...if:                   ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.endif
  %.286 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.258, align 8
  %.287 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.286, i64 0, i32 5
  %.288 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.287, align 8
  tail call void %.288(%GeneratedModule.560591* %.255)
  br label %.4.if.endif.endif.endif.e...endif

.4.if.endif.endif.endif.e...else:                 ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.endif
  %.292 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.560217*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.293.repack, align 8
  %.293.repack31 = getelementptr inbounds i8, i8* %.292, i64 8
  %42 = bitcast i8* %.293.repack31 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.406, i64 0, i64 0), i8** %42, align 8
  %.293.repack32 = getelementptr inbounds i8, i8* %.292, i64 16
  %43 = bitcast i8* %.293.repack32 to i64*
  store i64 2, i64* %43, align 8
  %.293.repack33 = getelementptr inbounds i8, i8* %.292, i64 24
  %44 = bitcast i8* %.293.repack33 to i64*
  store i64 2, i64* %44, align 8
  %.295 = tail call i1 @flag(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.293)
  %.299 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.258, align 8
  br i1 %.295, label %.4.if.endif.endif.endif.e...else.if, label %.4.if.endif.endif.endif.e...else.else

.4.if.endif.endif.endif.e...endif:                ; preds = %.4.if.endif.endif.endif.e...else.if, %.4.if.endif.endif.endif.e...else.else, %.4.if.endif.endif.endif.e...if
  %code.0 = phi i64 [ 0, %.4.if.endif.endif.endif.e...if ], [ 0, %.4.if.endif.endif.endif.e...else.if ], [ %.332, %.4.if.endif.endif.endif.e...else.else ]
  %.338 = load %GeneratedModule_vtable_ty.560592*, %GeneratedModule_vtable_ty.560592** %.258, align 8
  %.339 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.338, i64 0, i32 6
  %.340 = load void (%GeneratedModule.560591*)*, void (%GeneratedModule.560591*)** %.339, align 8
  tail call void %.340(%GeneratedModule.560591* nonnull %.255)
  br label %.4.endif

.4.if.endif.endif.endif.e...else.if:              ; preds = %.4.if.endif.endif.endif.e...else
  %.300 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.299, i64 0, i32 4
  %.301 = load void (%GeneratedModule.560591*, %string.560217*, %string.560217*)*, void (%GeneratedModule.560591*, %string.560217*, %string.560217*)** %.300, align 8
  %.303 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.560217*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.304.repack, align 8
  %.304.repack34 = getelementptr inbounds i8, i8* %.303, i64 8
  %45 = bitcast i8* %.304.repack34 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.406, i64 0, i64 0), i8** %45, align 8
  %.304.repack35 = getelementptr inbounds i8, i8* %.303, i64 16
  %46 = bitcast i8* %.304.repack35 to i64*
  store i64 2, i64* %46, align 8
  %.304.repack36 = getelementptr inbounds i8, i8* %.303, i64 24
  %47 = bitcast i8* %.304.repack36 to i64*
  store i64 2, i64* %47, align 8
  %.306 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.307 = bitcast i8* %.306 to %string.560217*
  %.307.repack = bitcast i8* %.306 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.307.repack, align 8
  %.307.repack37 = getelementptr inbounds i8, i8* %.306, i64 8
  %48 = bitcast i8* %.307.repack37 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.407, i64 0, i64 0), i8** %48, align 8
  %.307.repack38 = getelementptr inbounds i8, i8* %.306, i64 16
  %49 = bitcast i8* %.307.repack38 to i64*
  store i64 3, i64* %49, align 8
  %.307.repack39 = getelementptr inbounds i8, i8* %.306, i64 24
  %50 = bitcast i8* %.307.repack39 to i64*
  store i64 3, i64* %50, align 8
  %.309 = tail call %string.560217* @flag_value_or(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.304, %string.560217* %.307)
  %.311 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.312 = bitcast i8* %.311 to %string.560217*
  %.312.repack = bitcast i8* %.311 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.312.repack, align 8
  %.312.repack40 = getelementptr inbounds i8, i8* %.311, i64 8
  %51 = bitcast i8* %.312.repack40 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.408, i64 0, i64 0), i8** %51, align 8
  %.312.repack41 = getelementptr inbounds i8, i8* %.311, i64 16
  %52 = bitcast i8* %.312.repack41 to i64*
  store i64 7, i64* %52, align 8
  %.312.repack42 = getelementptr inbounds i8, i8* %.311, i64 24
  %53 = bitcast i8* %.312.repack42 to i64*
  store i64 7, i64* %53, align 8
  %.314 = tail call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.315 = bitcast i8* %.314 to %string.560217*
  %.316 = bitcast i8* %.314 to %string_vtable_ty.560218**
  store %string_vtable_ty.560218* @string_vtable_data, %string_vtable_ty.560218** %.316, align 8
  %.318 = getelementptr inbounds i8, i8* %.314, i64 8
  %54 = bitcast i8* %.318 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.135, i64 0, i64 0), i8** %54, align 8
  %.320 = getelementptr inbounds i8, i8* %.314, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.320, i8 0, i64 16, i1 false)
  %.324 = tail call %string.560217* @flag_value_or(%"Arraymain.flo.560629"* nonnull %.13, %string.560217* %.312, %string.560217* %.315)
  tail call void %.301(%GeneratedModule.560591* nonnull %.255, %string.560217* %.309, %string.560217* %.324)
  br label %.4.if.endif.endif.endif.e...endif

.4.if.endif.endif.endif.e...else.else:            ; preds = %.4.if.endif.endif.endif.e...else
  %.330 = getelementptr inbounds %GeneratedModule_vtable_ty.560592, %GeneratedModule_vtable_ty.560592* %.299, i64 0, i32 2
  %.331 = load i64 (%GeneratedModule.560591*)*, i64 (%GeneratedModule.560591*)** %.330, align 8
  %.332 = tail call i64 %.331(%GeneratedModule.560591* nonnull %.255)
  br label %.4.if.endif.endif.endif.e...endif
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

attributes #0 = { argmemonly nofree nounwind readonly }
attributes #1 = { nofree }
attributes #2 = { nofree norecurse nounwind writeonly }
attributes #3 = { nounwind }
attributes #4 = { nofree nounwind }
attributes #5 = { norecurse nounwind readonly }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { norecurse nounwind readnone }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nofree norecurse nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { argmemonly nounwind willreturn writeonly }
