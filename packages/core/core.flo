import STDOUT, STDIN, STDERR, nanosleep, write, read, _exit in "@flo/sys"
fnc input(): string {
    size = -1
    buffer = new i8[1]
    while (buffer[size] != '\n'){
        buffer = realloc(buffer, (++size)+1)
        read(STDIN, buffer+size, 1)
    }
    return new string(buffer, size)
}
fnc error(message: string){
    write(STDERR, message.get_bytes(), message.length)
}
fnc exit(message: string = "", code : int = 1){
    error(message)
    _exit(code)
}
fnc sleep(secs: int, nanosecs: int){
    req = [secs, nanosecs]
    rem = [0, 0]
    req_struct = &req[0] as i8*
    rem_struct = &rem[0] as i8* 
    while nanosleep(req_struct, rem_struct) > 0 1
}