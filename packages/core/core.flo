import malloc, realloc, sleep, usleep, write, read, _exit from "../sys"
import "../collection"
import "./string.flo"
const stdin = 0
const stdout = 1
fnc print(str: string){
    write(stdout, str as byte*, str.length)
}
fnc println(str: string){
    print(str)
    print("\n")
}

fnc input(): string {
    size = -1
    buffer = malloc(1)
    while (buffer[size] != '\n'){
        buffer = realloc(buffer, (++size)+1)
        read(stdin, buffer+size, 1)
    }
    buffer[size] = '\0'
    return new string(buffer, size)
}
fnc exit(message: string = "", code : int = 1){
    print(message)
    _exit(code)
}