inputs = split(readFile("input4.txt"), "\n\n")
callNums = split(inputs[0], ",")
fnc stripArray(arr: str []): str [][] => {
    resultArray: str [][] = []
    foreach line in arr {
        lineArray: str []  = []
        elms = split(line, " ")
        foreach elm in elms {
            if elm != "" lineArray+=[elm]
        }
        resultArray+=[lineArray]
    }
    return resultArray
}
boards: str [][][] = []
for i = 1; i < len(inputs); i++ {
    boards+=[stripArray(split(inputs[i], "\n"))]
}
values: bool [][][] = [[([false]*len(boards[0][0]))]*len(boards[0])]*len(boards)
fnc hasWon(board: str[][], val: bool [][]): bool => {
    for i = 0; i < len(board); i++ {
        hasWonRow = true
        hasWonCol = true
        for j = 0; ((j < len(val[i])) and hasWonRow); j++ {
            hasWonRow = (hasWonRow and (val[i][j]))
        }
        if hasWonRow return true
        for j = 0; ((j < len(val[i])) and hasWonCol); j++ {
            hasWonCol = (hasWonCol and val[j][i])
        }
        if  hasWonCol return true
    }
    return false
}
fnc calcScore(board: str[][], val: bool [][], lastCalled: str): num => {
    score = 0
    for i = 0; i< len(board); i++{
        for j = 0; j< len(board); j++ if (val[i][j] == false) score+=toNum(board[i][j])
    }
    return (score * toNum(lastCalled))
}
won = [false]*len(boards)
firstScore = 0
lastScore = 0
foreach n in callNums {
    for x = 0; x < len(boards); x++ {
        if won[x] continue
        for i = 0; i < len(boards[x]); i++{
            for j = 0; j < len(boards[x][i]); j++{
                if n == boards[x][i][j] values[x][i][j] = true
                if hasWon(boards[x], values[x]) {
                    won[x] = true
                    if firstScore == 0 firstScore = calcScore(boards[x], values[x], boards[x][i][j])
                    else lastScore = calcScore(boards[x], values[x], boards[x][i][j])
                    break
                }
            }
            if won[x] break
        }
    }
}

println("part 1: " +  firstScore)
println("part 2: " +  lastScore)
