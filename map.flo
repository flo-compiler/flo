fnc map<T, U>(x: T[], fn: (T) -> U): U[] {
    let mapped: U[] = []
    mapped.ensure_capacity(x.length)
    for elem in x {
        mapped << fn(elem)
    }
    return mapped
}
fnc stringify(x: uint): String {
    return x as String
}
fnc add_two(x: uint): uint {
    return x + 2
}
fnc main(){
    let x = [1, 2, 3, 4, 5]
    let mapped: String[] = map(x, stringify)
    let mapped2 = map(x, add_two)
    for n in mapped {
        println(n as String)
    }
    for n in mapped2 {
        println(n as String)
    }
}