enum LLVMDWARFSourceLanguage{
  LLVMDWARFSourceLanguageC89
  LLVMDWARFSourceLanguageC
  LLVMDWARFSourceLanguageAda83
  LLVMDWARFSourceLanguageC_plus_plus
  LLVMDWARFSourceLanguageCobol74
  LLVMDWARFSourceLanguageCobol85
  LLVMDWARFSourceLanguageFortran77
  LLVMDWARFSourceLanguageFortran90
  LLVMDWARFSourceLanguagePascal83
  LLVMDWARFSourceLanguageModula2
  // New in DWARF v3:
  LLVMDWARFSourceLanguageJava
  LLVMDWARFSourceLanguageC99
  LLVMDWARFSourceLanguageAda95
  LLVMDWARFSourceLanguageFortran95
  LLVMDWARFSourceLanguagePLI
  LLVMDWARFSourceLanguageObjC
  LLVMDWARFSourceLanguageObjC_plus_plus
  LLVMDWARFSourceLanguageUPC
  LLVMDWARFSourceLanguageD
  // New in DWARF v4:
  LLVMDWARFSourceLanguagePython
  // New in DWARF v5:
  LLVMDWARFSourceLanguageOpenCL
  LLVMDWARFSourceLanguageGo
  LLVMDWARFSourceLanguageModula3
  LLVMDWARFSourceLanguageHaskell
  LLVMDWARFSourceLanguageC_plus_plus_03
  LLVMDWARFSourceLanguageC_plus_plus_11
  LLVMDWARFSourceLanguageOCaml
  LLVMDWARFSourceLanguageRust
  LLVMDWARFSourceLanguageC11
  LLVMDWARFSourceLanguageSwift
  LLVMDWARFSourceLanguageJulia
  LLVMDWARFSourceLanguageDylan
  LLVMDWARFSourceLanguageC_plus_plus_14
  LLVMDWARFSourceLanguageFortran03
  LLVMDWARFSourceLanguageFortran08
  LLVMDWARFSourceLanguageRenderScript
  LLVMDWARFSourceLanguageBLISS
  // Vendor extensions:
  LLVMDWARFSourceLanguageMips_Assembler
  LLVMDWARFSourceLanguageGOOGLE_RenderScript
  LLVMDWARFSourceLanguageBORLAND_Delphi
  // Added one more language:
  LLVMDWarfSourceLanguageFlo
}
enum LLVMDWARFEmissionKind{
    LLVMDWARFEmissionNone
    LLVMDWARFEmissionFull
    LLVMDWARFEmissionLineTablesOnly
}
type LLVMDWARFTypeEncoding = int
type LLVMDIFlags = int
fnc LLVMCreateDIBuilder(M: LLVMModuleRef): LLVMDIBuilderRef
fnc LLVMDIBuilderCreateFile(Builder: LLVMDIBuilderRef, Filename: i8*, FilenameLen: int, Directory: i8*, DirectoryLen: int): LLVMMetadataRef
fnc LLVMDIBuilderCreateCompileUnit(Builder: LLVMDIBuilderRef, Lang: LLVMDWARFSourceLanguage, FileRef: LLVMMetadataRef, Producer: i8*, ProducerLen: int, isOptimized: LLVMBool, Flags: i8*, FlagsLen: int, RuntimeVer: int, SplitName: i8*, SplitNameLen: int, Kind: LLVMDWARFEmissionKind, DWOId: int, SplitDebugInlining: LLVMBool, DebugInfoForProfiling: LLVMBool, SysRoot: i8*, SysRootLen: int, SDK: i8*, SDKLen: int): LLVMMetadataRef
fnc LLVMDIBuilderFinalize(Builder: LLVMDIBuilderRef)
/* See https://github.com/hdoc/llvm-project/blob/release/14.x/llvm/include/llvm-c/DebugInfo.h#L34 for flags */
fnc LLVMDIBuilderCreateBasicType(Builder: LLVMDIBuilderRef, Name: i8*, NameLen: int, SizeInBits: int, Encoding: LLVMDWARFTypeEncoding, Flags: int): LLVMMetadataRef

fnc LLVMDIBuilderCreateFunction(Builder: LLVMDIBuilderRef, Scope: LLVMMetadataRef, Name: i8*, NameLen: int, LinkageName: i8*, LinkageNameLen: int, File: LLVMMetadataRef, LineNo: int, Ty: LLVMMetadataRef, IsLocalToUnit: LLVMBool, IsDefinition: LLVMBool, ScopeLine: int, Flags: LLVMDIFlags, IsOptimized: LLVMBool): LLVMMetadataRef