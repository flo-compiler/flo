import "types.flo"
fnc LLVMInitializeAMDGPUTargetInfo()
fnc LLVMInitializeAMDGPUTarget()
fnc LLVMInitializeAMDGPUTargetMC()
fnc LLVMInitializeAMDGPUAsmPrinter()
fnc LLVMInitializeAMDGPUAsmParser()
// Dissass?

fnc LLVMInitializeSystemZTargetInfo()
fnc LLVMInitializeSystemZTarget()
fnc LLVMInitializeSystemZTargetMC()
fnc LLVMInitializeSystemZAsmPrinter()
fnc LLVMInitializeSystemZAsmParser()
fnc LLVMInitializeSystemZDisassembler()

fnc LLVMInitializeHexagonTargetInfo()
fnc LLVMInitializeHexagonTarget()
fnc LLVMInitializeHexagonTargetMC()
fnc LLVMInitializeHexagonAsmPrinter()
// Parser?
fnc LLVMInitializeHexagonDisassembler()

fnc LLVMInitializeNVPTXTargetInfo()
fnc LLVMInitializeNVPTXTarget()
fnc LLVMInitializeNVPTXTargetMC()
fnc LLVMInitializeNVPTXAsmPrinter()
// Parser?

fnc LLVMInitializeMSP430TargetInfo()
fnc LLVMInitializeMSP430Target()
fnc LLVMInitializeMSP430TargetMC()
fnc LLVMInitializeMSP430AsmPrinter()
// Parser?

fnc LLVMInitializeXCoreTargetInfo()
fnc LLVMInitializeXCoreTarget()
fnc LLVMInitializeXCoreTargetMC()
fnc LLVMInitializeXCoreAsmPrinter()
// Parser?
fnc LLVMInitializeXCoreDisassembler()

fnc LLVMInitializeMipsTargetInfo()
fnc LLVMInitializeMipsTarget()
fnc LLVMInitializeMipsTargetMC()
fnc LLVMInitializeMipsAsmPrinter()
fnc LLVMInitializeMipsAsmParser()
fnc LLVMInitializeMipsDisassembler()

fnc LLVMInitializeAArch64TargetInfo()
fnc LLVMInitializeAArch64Target()
fnc LLVMInitializeAArch64TargetMC()
fnc LLVMInitializeAArch64AsmPrinter()
fnc LLVMInitializeAArch64AsmParser()
fnc LLVMInitializeAArch64Disassembler()

fnc LLVMInitializeARMTargetInfo()
fnc LLVMInitializeARMTarget()
fnc LLVMInitializeARMTargetMC()
fnc LLVMInitializeARMAsmPrinter()
fnc LLVMInitializeARMAsmParser()
fnc LLVMInitializeARMDisassembler()

fnc LLVMInitializePowerPCTargetInfo()
fnc LLVMInitializePowerPCTarget()
fnc LLVMInitializePowerPCTargetMC()
fnc LLVMInitializePowerPCAsmPrinter()
fnc LLVMInitializePowerPCAsmParser()
fnc LLVMInitializePowerPCDisassembler()

fnc LLVMInitializeSparcTargetInfo()
fnc LLVMInitializeSparcTarget()
fnc LLVMInitializeSparcTargetMC()
fnc LLVMInitializeSparcAsmPrinter()
fnc LLVMInitializeSparcAsmParser()
fnc LLVMInitializeSparcDisassembler()

fnc LLVMInitializeX86TargetInfo()
fnc LLVMInitializeX86Target()
fnc LLVMInitializeX86TargetMC()
fnc LLVMInitializeX86AsmPrinter()
fnc LLVMInitializeX86AsmParser()
fnc LLVMInitializeX86Disassembler()

fnc LLVMInitializeBPFTargetInfo()
fnc LLVMInitializeBPFTarget()
fnc LLVMInitializeBPFTargetMC()
fnc LLVMInitializeBPFAsmPrinter()
// Parser?
fnc LLVMInitializeBPFDisassembler()

fnc LLVMInitializeLanaiTargetInfo()
fnc LLVMInitializeLanaiTarget()
fnc LLVMInitializeLanaiTargetMC()
fnc LLVMInitializeLanaiAsmPrinter()
fnc LLVMInitializeLanaiAsmParser()
fnc LLVMInitializeLanaiDisassembler()

fnc LLVMInitializeRISCVTargetInfo()
fnc LLVMInitializeRISCVTarget()
fnc LLVMInitializeRISCVTargetMC()
fnc LLVMInitializeRISCVAsmPrinter()
fnc LLVMInitializeRISCVAsmParser()
fnc LLVMInitializeRISCVDisassembler()

fnc LLVMInitializeWebAssemblyTargetInfo()
fnc LLVMInitializeWebAssemblyTarget()
fnc LLVMInitializeWebAssemblyTargetMC()
fnc LLVMInitializeWebAssemblyAsmPrinter()
fnc LLVMInitializeWebAssemblyAsmParser()
fnc LLVMInitializeWebAssemblyDisassembler()

/** Linked with TargetIntializationMacros.c */
fnc LLVM_InitializeNativeTarget(): bool
fnc LLVM_InitializeNativeAsmParser(): bool
fnc LLVM_InitializeNativeAsmPrinter(): bool 
fnc LLVM_InitializeNativeDisassembler(): bool


fnc LLVM_InitializeAllTargetInfos()
fnc LLVM_InitializeAllTargets() 
fnc LLVM_InitializeAllTargetMCs()
fnc LLVM_InitializeAllAsmPrinters()
fnc LLVM_InitializeAllAsmParsers()
fnc LLVM_InitializeAllDisassemblers()

/*===-- Target ------------------------------------------------------------===*/

fnc LLVMGetModuleDataLayout(M: LLVMModuleRef): LLVMTargetDataRef
fnc LLVMCreateTargetData(StringRep: u8*): LLVMTargetDataRef
fnc LLVMStoreSizeOfType(TD: LLVMTargetDataRef, Ty: LLVMTypeRef): u64
fnc LLVMABISizeOfType(TD: LLVMTargetDataRef, Ty: LLVMTypeRef): u64
fnc LLVMABIAlignmentOfType(TD: LLVMTargetDataRef, Ty: LLVMTypeRef): u32
