type LLVMErrorRef = {}*

/**
 * Error type identifier.
 */
type LLVMErrorTypeId = u8*

/**
 * Returns the type id for the given error instance, which must be a failure
 * value (i.e. non-null).
 */
fnc LLVMGetErrorTypeId(Err: LLVMErrorRef): LLVMErrorTypeId

/**
 * Dispose of the given error without handling it. This operation consumes the
 * error, and the given LLVMErrorRef value is not usable once this call returns.
 * Note: This method *only* needs to be called if the error is not being passed
 * to some other consuming operation, e.g. LLVMGetErrorMessage.
 */
fnc LLVMConsumeError(Err: LLVMErrorRef)

/**
 * Returns the given string's error message. This operation consumes the error,
 * and the given LLVMErrorRef value is not usable once this call returns.
 * The caller is responsible for disposing of the string by calling
 * LLVMDisposeErrorMessage.
 */
fnc LLVMGetErrorMessage(Err: LLVMErrorRef): u8*

/**
 * Dispose of the given error message.
 */
fnc LLVMDisposeErrorMessage(ErrMsg: u8*)

/**
 * Returns the type id for llvm StringError.
 */
fnc LLVMGetStringErrorTypeId(): LLVMErrorTypeId

/**
 * Create a StringError.
 */
fnc LLVMCreateStringError(ErrMsg: u8*): LLVMErrorRef