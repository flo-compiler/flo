enum TokType {
    ILLEGAL
    COL
    SEMICOL
    COMMA
    MULT
    MINUS
    PLUS
    DIV
    AND_KW
    OR_KW
    MOD
    POW
    MULT_EQ
    MINUS_EQ
    PLUS_EQ
    DIV_EQ
    MOD_EQ
    POW_EQ
    AND_EQ
    OR_EQ
    XOR_EQ
    SR_EQ
    SL_EQ
    PLUS_PLUS
    MINUS_MINUS
    LPAR
    RPAR
    LBRACE
    RBRACE
    LBRACKET
    RBRACKET
    INT
    FLOAT
    LN
    STR
    CHAR
    QUES
    AMP
    EQ
    EEQ
    NEQ
    GT
    LT
    LTE
    GTE
    ARROW
    EOF
    NOT
    SL
    SR
    DOT
    XOR
    DOT_DOT
    DOT_DOT_DOT
    IDENTIFER
    CONST_KW
    LET_KW
    IF_KW
    ELSE_KW
    BOOL_KW
    I4_KW
    I8_KW
    I16_KW
    I32_KW
    I64_KW
    I128_KW
    INT_KW
    F32_KW
    F64_KW
    VOID_KW
    FOR_KW
    WHILE_KW
    FNC_KW
    BREAK_KW
    CONTINUE_KW
    RETURN_KW
    IMPORT_KW
    PRIVATE_KW
    PUBLIC_KW
    PROTECTED_KW
    IN_KW
    CLASS_KW
    ENUM_KW
    NEW_KW
    DEL_KW
    AS_KW
}
enum TypeKind {
    BOOL
    I4
    I8
    I16
    I32
    I64
    INT
    I128
    F32
    F64
    VOID
    OBJECT
    ENUM
    PTR
    ARRAY
    FNC
    RECORD
    MODULE
    GENERIC_TEMPLATE
    RESOLVED_GENERIC
    UNKNOWN
}
enum StatementKind {
    IF
    VAR
    CONST
    FOR
    WHILE
    CONTINUE
    BREAK
    RETURN
    EXPRESSION
}
enum ForKind {
    DEF
    IN
}
enum ExpressionKind {
    INT
    FLOAT
    STRING
    CHAR
    BOOL
    NULL
    ARRAY
    ACCESS
    BIN
    UNARY
    CAST
    NEW
    MEMBER
    INDEX
    CALL
    TERNARY
    INTRINSIC
}
enum PropIdKind {
    METHOD
    FIELD
}
enum VarIdKind {
    FNC
    VAR
    CONST
    CLASS
    ENUM
    MODULE
}
enum TypeIdKind {
    CLASS
    ENUM
}
enum BinaryOp {
    UNDEF
    ADD
    SUB
    MUL
    DIV
    MOD
    POW
    GT
    GTE
    LT
    LTE
    EEQ
    NEQ
    SL
    SR
    OR
    AND
    XOR
    IN
    ASSIGN
    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    DIV_ASSIGN
    MOD_ASSIGN
    POW_ASSIGN
    AND_ASSIGN
    OR_ASSIGN
    XOR_ASSIGN
    SL_ASSIGN
    SR_ASSIGN
    RANGE
}
enum UnaryOp {
    UNDEF
    DEL
    PREINCR
    PREDECR
    POSTINCR
    POSTDECR
    NEG
    NOT
    ADDROF
}
enum ACCESS_ATTR {
    UNDEF
    PRIVATE
    PUBLIC
    PROTECTED
}
enum Intrinsics {
    STR_TO_F
    STR_TO_I
    STR_TO_L
    MEMCPY
    MEMMOVE
    MEMSET
    MEMRESIZE
    MEMCMP
}