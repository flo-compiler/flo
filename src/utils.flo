class FloRange {
    start: int
    end: uint
    col: uint
    line: uint
    constructor(this, start: int, end: uint, col: uint, line: uint){
        this.start = start
        this.end = end
        this.col = col
        this.line = line
    }
    merge(r1: FloRange, r2: FloRange): FloRange {
        return new FloRange(r1.start, r2.end, r1.col, r2.line)
    }
}
enum COLORS {
    RED
    RESET
}
fnc flo_println(msg: string){
    println(msg)
    del msg
}
fnc flo_print(msg: string){
    println(msg)
    del msg
}
fnc change_print_color(color: COLORS) {
    flo_print(color == COLORS.RED ? "\033[1;31m" : "\033[0m")
}
fnc exit(code: int)
fnc panic(message: string){
    flo_print("Panic: ")
    flo_println(message)
    exit(-1)
}