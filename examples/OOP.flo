/* This file reflects my vision for OOP in flo */
enum Shapes {
    SQUARE,
    CIRCLE,
    TRIANGLE,
    RECTANGLE,
}
interface Style {
    color: str
    shape: Shapes
}
interface NewStyle extends Style {

} 
class Cloth extends NewStyle {
    priv name: str
    constructor(this.name, this.color, this.Shapes)
    pub fnc get_name(): str {
        return this.name
    }
    get name(): str {
        return this.name
    }
}
cap: MyStyle = {color: "red", shape: Shapes.CIRCLE}
new_jacket: Jacket = new Clock("Jacket", "grey", Shapes.SQURE)
println(new_jacket.get_name())
println(new_jacket.name)
print(cap.color)