fnc partition(start: int, end: int, array: int []): int {
    pivot_index = start
    pivot = array[pivot_index]
    while start < end {
        while start < array.length and array[start] <= pivot
            start += 1
        while array[end] > pivot
            end -= 1
        if start < end
            array.swap(start, end)
    }
    array.swap(end, pivot_index)
    return end
}
            
// The main function that implements QuickSort
fnc quick_sort(start: int, end: int, array: int []) {
    if start < end {
        p = partition(start, end, array)
        quick_sort(start, p - 1, array)
        quick_sort(p + 1, end, array)
    }
}

// Driver code
fnc main() {
    array: int [] = [10, 7, 8, 9, 1, 5]
    quick_sort(0, array.length - 1, array)
    println(array as string)
}